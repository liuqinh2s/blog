<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ÊàëÁöÑ‰∫íËÅîÁΩëÁîüÊ¥ª]]></title>
    <url>%2Fblog%2F2025%2F06%2F23%2F%E6%88%91%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E7%94%9F%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[ÁªèÂ∏∏ÊâìÂºÄÊâãÊú∫Êº´Êó†ÁõÆÁöÑÁöÑÂà∑ÁùÄÁÆóÊ≥ïÊé®ËçêÁöÑ‰∏úË•øÔºåÊúâÁöÑÊó∂ÂÄôËßâÂæóÂ§™ËøáÊó†ËÅäÁ≤ó‰øó„ÄÇËøòÊòØÂæóËÆ§ÁúüÂÆ°ËßÜ‰∏Ä‰∏ãËá™Â∑±ÁöÑ‰ø°ÊÅØÊ∫ê„ÄÇÂè¶Â§ñÂ∞±ÊòØÂçöÂÆ¢ÔºåÂ∞§ÂÖ∂ÊòØ‰∏™‰∫∫ÂçöÂÆ¢ÁöÑÊµÅÈáèÂÆûÂú®Â§™‰Ωé‰∫ÜÔºåÁ∫¶Á≠â‰∫é 0ÔºåÊàëÊâìÁÆóËøòÊòØÊääÊØèÂ§©ÂÜôÁöÑ‰∏úË•øÂêåÊ≠•Âà∞ÊµÅÈáèÂ§ßÁöÑÂπ≥Âè∞„ÄÇ ÂõΩÂÜÖ‰∫îÂ§ßÂπ≥Âè∞Ôºö ÊäñÈü≥ ÂæÆÂçö B Á´ô Â∞èÁ∫¢‰π¶ Áü•‰πé ÂõΩÂ§ñÂπ≥Âè∞Ôºö Êé®ÁâπÔºàÁé∞Âú®ÊîπÂêçÂè´Ôºö XÔºâ Ins redit facebook youtube tiktok ‰∏çËÉΩÂú®ÂÅö‰∏Ä‰∏™‰∫íËÅîÁΩëÈÄèÊòé‰∫∫‰∫ÜÔºåËøôÂè•ËØùÊàë‰ªéÂçÅÂ§öÂπ¥ÂâçÂ∞±ÂºÄÂßãËØ¥Ôºå‰ΩÜÁé∞Âú®‰∫∫‰ª¨Âú®‰∫íËÅîÁΩë‰∏äÁöÑÁîüÊ¥ªÊó∂Èó¥ÈÉΩÂø´Ë∂ÖËøáÁé∞ÂÆû‰∏ñÁïå‰∫ÜÔºåÊàë‰æùÊóßÊòØ‰∏Ä‰∏™‰∫íËÅîÁΩëÈÄèÊòé‰∫∫„ÄÇ ‰ª•‰∏ãÊòØÊàëËßâÂæó‰∏çÈîôÁöÑ‰ø°ÊÅØÊ∫êÔºåÊàëÂú® github ‰∏ä‰∏ìÈó®Áª¥Êä§‰∫Ü‰∏Ä‰∏™È°πÁõÆÔºåÊ¨¢ËøéÂ§ßÂÆ∂ÊäïÁ®øÔºöcool ËÆ¢ÈòÖÂÖ≥Ê≥®ÁßëÊäÄË°å‰∏ö ÈòÆ‰∏ÄÂ≥∞ÁßëÊäÄÂë®Âàä Èõ∂Â∫¶Ëß£ËØ¥ tombkeeper Ivony ÂßöÂÜ¨ Âê¥ÂÜõ Evan YouÔºöÂ∞§Èõ®Ê∫™ÔºåVue ‰ΩúËÄÖ Â∞ëÊï∞Ê¥æ ‚Äã Êñ∞ÈóªË°å‰∏ö ÁéãÂ±ÄÊãçÊ°à Ëá™Â™í‰Ωì ÊßΩËæπÂæÄ‰∫ã ÊßΩËæπÂæÄ‰∫ã(ÊóßÁâà) ËÄÅÂ∏àÂ•ΩÊàëÂè´‰ΩïÂêåÂ≠¶ Á°¨Ê†∏ÁöÑÂçä‰Ωõ‰ªô‰∫∫ ÊòØÊôØÂ≤ÅÂïä Â§©ÊâçÂ∞èÁÜäÁå´ Ê±üÈ£éÊúâËÄ≥ ÁôΩÂ´ñÁîüÊ¥ªÊåáÂçó ÁΩóÊåØÂÆá Â∞èÊùé student Á¨¨‰∫åÂ§ßËÑëËÆ°Âàí ÈôàÈπ§ÁöãÔºàÊûÅÂç±Êó∂ÂàªÂèçÂáªÊúØÔºâ ÂÖ≠ËßíÁé≤Èæô ÂÇ®ÊÆ∑ÊïôÊéà ÂàòÂ∫∏Âπ≤ÂáÄÂèàÂç´Áîü Âº†ÂõΩ‰ºü_ÂõΩÂÆ∂‰ºüÂ§ß Âº†ÂêåÂ≠¶. ÂäûÂÖ¨ÂÆ§Â∞èÈáé Êú±‰∏ÄÊó¶ÁöÑÊûØÁá•ÁîüÊ¥ª ‰πùËæπ Ê±üÂçìÂ∞î ÊÄùÁª¥ÂÆûÈ™åÂÆ§ Â∞èÈ∏°ËØçÂÖ∏ ‰∏ÄÂ∏≠Á≤æÈÄâ ÊàëÂè´Â≠ôÁÅ´Êó∫ ËÄøÂêåÂ≠¶ËÆ≤ÊïÖ‰∫ã È©¨‰Ω≥ PopMatta Ê±§Ë¥®ÁúãÊú¨Ë¥® Áõ¥Êí≠Â∏¶Ë¥ß ÁñÜÂüüÈòøÂäõÊú®ÔºöÂú®Êñ∞ÁñÜÂçñËúÇËúú ÈùûÈÅó ÂçóÁøî‰∏çÁà±ÂêÉÈ•≠ Ê±üÂØªÂçÉÔºà‰πùÊúàÔºâ ÂΩ≠‰º†Êòé ÁæéÈ£ü Ê∞¥ÊûúÁåé‰∫∫Êù®ÊôìÊ¥ã ËµõÂçöÈ£üÂΩï ÈòøËî°ÁæéÈ£üÊïôÂ≠¶ ÁéãÂøóÂÇ≤ ÂêÉÈ•≠ÁöÑÂêÉ Ê≥¢‰ªîÁÇíÁ≤â ÁßëÊôÆ ÊØïÂØº Nov ÂßêÂßê matrix67ÔºöÊï∞Â≠¶ Êó†Á©∑Â∞è‰∫ÆÁöÑÁßëÊôÆÊó•Â∏∏ ÁéãÈòøÂçéÁöÑËß£ÂøßÂπ≥Ë°åÂÆáÂÆô ÂøÉÊ≤≥ÊëÜÊ∏° Âè§Ëë£Êî∂Ëóè Âê¨Ê≥âÈâ¥ÂÆù ÈáëËûç ËÉ°‰æÉ‰æÉ ËÄÅÈôå Áì¶ËÇØË¥¢Áªè ËµÑÊú¨ËÆ∫ Â∞è Lin ËØ¥ ÂºÇÂõΩÂ©öÊÅã Âè´ÊàëËÉñÂ§ßÊòüÂÖàÁîü:ÔºàÁî∑‰∏≠ÂõΩÔºåÂ•≥Ë∂äÂçóÔºâ ‰øÑÁΩóÊñØÁèäÁèäÂíåÈòøÂ∫∑Ôºö(Áî∑‰∏≠ÂõΩÔºåÂ•≥‰øÑÁΩóÊñØ) ÊÅãÁà± Á´•Èî¶Á®ã 798„ÄÇ ‰πîÂ¶πÊù•‰∫Ü ‰∫≤Â≠ê ‰∏É‰∏™‰Ω©Â•áÁà∏Áà∏ ÂõæÂõæÂ¶àÂ¶à ÊÅ≠ÂñúÁà∏Áà∏ ËÇ≤Â©¥ ËÇ≤Â©¥Â∏àÈôàÈôàÂßêÂßê Èü≥‰πê ËÄÅÂê¥ÁÇπÂî±Êú∫ Á≤æÈÄâÈü≥‰πêÂ∫ì ÁéãÂ§ßÊØõÂëÄ üíìÔºöÂéüÂàõ ÂéªÂπ¥Â§èÂ§© ‰∏ÄÂè£Áîú^ ÂÜú‰∫ßÂìÅ ‰∏Ä‰∏™ÂçñÂúüË±ÜÁöÑËÉñÂ≠êÔºö‰π∞Ëèú Êµ∑È≤úÂ§ßÊ≥ïÂ∏àÔºöÊµ∑È≤ú Ëâ∫ÊúØ ‰ΩïËÄÅÂ∏àÂú®ÂèëÂëÜ Â¶ÇËé±Â§ß boss Â∞èÁîªËÆ∞ ÂßóÁ¨ôÊâãÁªò ÂêπÂè£Áê¥ÁöÑÂ∞èÂõ≠Âõ≠ AI Êûó‰∫¶ LYi Á©∫‰∏ÄÂáâÔºöAI Áîª‰∫∫ÂΩ¢Â∞èÁå´ ÂÜ¨ÂáåËçâÂëÄÔºöAI ÁîªÂä®Êº´Â§¥ÂÉè ÊïôËÇ≤ Êö¥ÂèîËÆ≤ÁïôÂ≠¶ Âº†Èõ™Â≥∞ËÄÅÂ∏à YJangoÔºöÊ∏êÊûÑ Modevol ÊïôÂ≠¶Èù©ÂëΩ ÊùéÊ∞∏‰πêËÄÅÂ∏à ÂÅ•Ë∫´ &amp;&amp; ÂÖªÁîü Ëá™Âæã‰∏ÄÂè™Áå´ Â∏Ö soserious Ë•øÂ•á i ÂÅ•Ë∫´ ÈôàÊöñÂ§Æ ÁæéÁå™ üêΩ ÂàòÁïäÂÆè Ë°óÂÅ•Â§ßÂ±± ÂÆ∂Â±Ö Á¥¢Ëè≤‰∫öÂÆòÊñπÊï¥ÂÆ∂ÂÆöÂà∂ ÊëÑÂΩ± DandyÔºöÁøÅÂ§©‰ø° ÂΩ±ËßÜÈ£ìÈ£é Âú∞ÁêÜ &amp;&amp; ÊóÖÊ∏∏ ‰∏≠ÂõΩÂõΩÂÆ∂Âú∞ÁêÜ ÁîµÂΩ±Ëß£ËØ¥ &amp;&amp; ÁîµÂΩ±Ââ™Ëæë ‰∫ëÊô®ÁîµÂΩ± Âë®ÊâíÁâá Áî∞Âõ≠ ÊΩáÊ¥í‰ªüÂì• Á¶ÖÊÑèÁîüÊ¥ªÁæéÂ≠¶ Âì©Âì©‰∏Ω ÊùéÂ≠êÊüí ÁæéËâ≤ Á®ã Yooooo ÁéãÂæ∑Ëäô ÂøÉÁ¢éÂ∞èÁîú. ÈÄçÈ£û Ê∞¥ÂÖµÊúàÈáéÂÖîÂÖî Âàò‰Ω≥‰ª™ Â•∂Áì∂‰∏çÁîú ü´ß ‰∫∫È±ºÁ∫øÁöÑ pdd ÂèØ‰∫∫Áà±ÂñùËå∂ Ëä±Á¢éËä± ËçîÂè™Âè™ Â∞πÈ∏Ω- ÊùÄÁå™È•≤Êñô ÂÆ†Áâ© È∫ªËñØÂ∞èÂç∑ ÈáéÁîüÂä®Áâ© Â§ßÁå´È•≤ÂÖªÂëò Â≠¶‰π† ElenaLin_ÈùíÈùí Êà∑Â§ñ Â∞èÁÜä. ÊºîÂëò ÊØõÊôìÂΩ§ ÁæéÂ¶Ü ÊîæÁ©∫È¨ºÈ©¨ ËΩ¶ ËôæÂì•ËΩ¶‰∏ñÁïå ËôéÂì•ËØ¥ËΩ¶ Ê∏∏Êàè ÊΩúËâá‰ºü‰ºüËø∑ Ê∏∏Á†îÁ§æ]]></content>
      <tags>
        <tag>Êó•ËÆ∞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÈáçÊñ∞Êï¥ÁêÜÂçöÂÆ¢]]></title>
    <url>%2Fblog%2F2024%2F11%2F12%2F%E9%87%8D%E6%96%B0%E6%95%B4%E7%90%86%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[ËÆ∞ÂΩï‰ø°ÊÅØÊúÄÂ•ΩÁöÑÊñπÂºèËøòÊòØÊó•ÂøóÔºåÂ∞±ÊòØÊåâÊó∂Èó¥ÁºñÊéíÁöÑÊÑèÊÄù„ÄÇÊ£ÄÁ¥¢ÁöÑÊúÄÂ•ΩÊñπÂºèÊòØÊêúÁ¥¢ÔºåÁªüËÆ°ÂΩíÁ∫≥ÊúÄÂ•ΩÁöÑÊñπÂºèÊòØÊ†áÁ≠æÔºàÁõÆÂΩïÊòØÊ†ëÁä∂ÔºåËÄåÊ†áÁ≠æÊòØÁΩëÁä∂Ôºâ„ÄÇ ÈáçÊñ∞Êï¥ÁêÜÂçöÂÆ¢‰πãÂâçÊàëÊñ∞ÂºÄ‰∏ÄÁØáÊñáÁ´†‰ºöÈùûÂ∏∏ÁöÑÊÖéÈáçÔºåÂõ†‰∏∫ÊääÊñáÁ´†ÂÆö‰Ωç‰∏∫ÊØîËæÉÊàêÁÜüÁöÑ‰ΩúÂìÅÔºå‰ΩÜÁé∞Âú®ÊÉ≥Êù•Ëøô‰∏™ÂÆö‰ΩçÂ∫îËØ•ÊòØÈîôÁöÑÔºåÂÖàÂ§öËæìÂá∫ÔºåË∞à‰ΩúÂìÅËøò‰∏∫Êó∂Â∞öÊó©„ÄÇ Ê≠§Ê¨°ÔºåÊàë‰ºöÊääÊâÄÊúâÁöÑÊ†èÁõÆÈÉΩÂÖ≥Èó≠Ôºå‰∏Ä‰∏™ÂéüÂõ†ÊòØÊêúÁ¥¢ÁöÑÊó∂ÂÄôÔºå‰∏ç‰ºöÊêúÊ†èÁõÆ‰∏≠ÁöÑÂÜÖÂÆπÔºåÂè¶‰∏Ä‰∏™ÊòØÊ†èÁõÆËøáÂ§öÔºåÁúãÁùÄ‰πü‰∏çÂ§üÁÆÄÊ¥ÅÔºåÂæàÊùÇ‰π±„ÄÇËøòÊúâÂ∞±ÊòØÊúâ‰∫õÊ†èÁõÆÔºåÊàëÂπ∂Ê≤°Êúâ‰∏ÄÁõ¥Êõ¥Êñ∞‰∏ãÂéª„ÄÇ‰ª•ÂâçËÆ∞ÂΩïÁöÑ‰∏úË•øÔºå‰πüÊúâ‰∏çÂ∞ëÊúâ‰ª∑ÂÄºÁöÑÔºåÂêéÈù¢‰ºöÊÖ¢ÊÖ¢Êê¨ËøÅÂà∞Âá†ÁØáÊñ∞ÁöÑÊó•Âøó‰∏≠ÂéªÔºåÊñπ‰æøÊú™Êù•Ê£ÄÁ¥¢„ÄÇ ÊúÄÂ∞èÂåñÁîüÊ¥ªÊ®°ÂûãÁîüÊ¥ª‰∏≠ÊúâÈùûÂ∏∏Â§öÁöÑ‰∫ãÊÉÖÔºåÂ∫îËØ•Ë¶Å‰∏ìÊ≥®‰∫éËá™Â∑±ÁúüÊ≠£ÊÉ≥ÂÅöÔºåÂÄºÂæóÂÅöÁöÑ‰∫ãÊÉÖ‰∏äÔºåÈÅøÂºÄÁêê‰∫ãÔºåÈÅøÂºÄËØ±ÊÉë„ÄÇÊâìÈÄ†‰∏Ä‰∏™ÊúÄÂ∞èÂåñÁîüÊ¥ªÊ®°Âûã„ÄÇ ‰∏ãÈù¢ÊàëÂ∞ùËØïÊÉ≥Âá∫ÔºåÊàëÂà∞Â∫ïË¶Å‰∏ìÊ≥®‰∫é‰ªÄ‰πà„ÄÇ Ë∫´‰ΩìÂÅ•Â∫∑ ÈáëÈí±ÔºåÂú∞‰ΩçÔºåÊùÉÂäõÔºåÁ§æ‰ºöÂΩ±ÂìçÂäõ ‰∫≤ÊúãÂ•ΩÂèãÁöÑÊîØÊåÅÔºåÂøóÂêåÈÅìÂêàÁöÑ‰∫∫ÁöÑÊîØÊåÅ„ÄÇÂõ¢ÁªìÂë®Âõ¥ÁöÑ‰∫∫ Êõ¥Â§öÁöÑ‰∏™‰∫∫ÊäÄËÉΩÔºåÊØîÂ¶ÇËã±ËØ≠ËÉΩÂäõÔºåÁºñÁ®ãËÉΩÂäõ ‰ª•‰∏äÈÉΩÊØîËæÉÊäΩË±°ÔºåÈ´òÂ±ãÂª∫Áì¥„ÄÇËêΩÂÆûÂà∞ÂÖ∑‰Ωì‰∫ãÊÉÖ‰∏äÈù¢ÔºåËØ•Â¶Ç‰ΩïÂë¢Ôºü‰∏ãÈù¢ÂàóÂá∫ÂÖ∑‰ΩìÁõ∏ÂÖ≥‰∫ãÈ°πÔºö Ë∫´‰ΩìÂÅ•Â∫∑‰πãÂâçÂÜôËøá‰∏ÄÁØáÈîªÁÇºË∫´‰ΩìÁõ∏ÂÖ≥ÁöÑÊñáÁ´†Ôºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647ÈïøÊúü‰∏çËøêÂä®ÁöÑÂç±ÂÆ≥Ôºö1. Á≠ãËÜúÁ≤òËøûÔºåËÇåËÇâÊ¥ªÂä®ÂèóÈôêÔºåÂÖ≥ËäÇÊ¥ªÂä®ÂèóÈôê2. ÊãÆÊäóËÇåËÇâÂ§±Ë°°ÔºåËÇåËÇâËÄÅÊçüÂíåÈÄÄÂåñÔºåÂêÑÂ§ÑÈÖ∏Áóõ3. Ê≤°Êúâ‰ΩìËÉΩÂíåÂäõÈáè4. ÂæàÂÆπÊòìÁñ≤ÊÉ´ÔºåÁ≤æÁ•ûËêéÈù°ÂàÜ‰∏â‰∏™ÊñπÈù¢Ôºö1. ‰ΩìËÉΩÔºàÊúâÊ∞ßÔºöË∑ëÊ≠•ÔºåË∑≥Áª≥Ôºâ2. Ë∫´‰ΩìÁÅµÊ¥ªÂ∫¶ÔºåÊüîÈüßÊÄßÔºàÊãâ‰º∏Ôºâ3. ÂäõÈáè# ÂÅ•Ë∫´‰π¶Á±ç- ÂõöÂæíÂÅ•Ë∫´&gt; Â∏åÊúõËÉΩÊâæÂà∞‰∏Ä‰∏™Ëá™Â∑±Êãâ‰º∏ÁöÑÂ•ΩÊñπÊ≥ïÔºåÊØîÂ¶ÇË∫´‰ΩìÁöÑÊØè‰∏™ÈÉ®‰ΩçÔºåÂ¶Ç‰ΩïÊúÄÂ∞ëÂô®Ê¢∞ÁöÑÊãâ‰º∏# Â∑≤Â≠¶‰ºö## 0 Âô®Ê¢∞Ôºå‰∏çÈúÄË¶ÅÂπ≤ÂáÄÂú∞Èù¢1. ÂºìÊ≠•ÔºöÊãâ‰º∏Â§ßËÖøÂ§ñÂ±Ç2. ÊâãÊéåÊåâÊë©ÔºåÊúâÂà©‰∫éÊùæËß£ÊâãÊéåÁ≠ãËÜúÔºå‰∏∫ÁªÉÊäìÊè°ÂÅöÂáÜÂ§áÔºàÂ∑¶Âè≥Êâã‰∫íÁõ∏ÊåâÔºâ3. Âû´ËÑöÂ∞ñËπ≤ÔºöÂ¢ûÂº∫ËÑöÊéåÊäìÊè°Âäõ4. Ê∑±Ëπ≤ÔºöËáÄ+Â§ßËÖø5. Ê≤âËÇ©ÔºöÁºìËß£ÊñúÊñπËÇå6. Á´ôÂºè‰ΩìÂâçÂ±àÔºöÊãâ‰º∏ÂêéËÖøÔºåË¶ÅÂ§öÁªÉÔºåÊàëÂêéËÖøÁª∑ÁöÑÁâπÂà´Á¥ß## 0 Âô®Ê¢∞Ôºå‰ΩÜÈúÄË¶ÅÁëú‰ºΩÂû´ÊàñËÄÖÂ∫ä1. ‰æßË∫∫ËÉ∏Â±ïÔºöÂ¢ûÂä†ËÉ∏Ê§éÁÅµÊ¥ªÂ∫¶ÔºàÁëú‰ºΩÂû´ or Â∫äÔºâ2. ÈùíËõôË∂¥ÔºöÊãâ‰º∏ËÉØÔºåÈ´ãÂÖ≥ËäÇÔºàÁëú‰ºΩÂû´ or Â∫äÔºâ3. ‰ª∞ÂçßÂ§¥ÈÉ® 0 ÊîØÊíëÔºöÂèØ‰ª•Â¢ûÂº∫È¢àÈÉ®ÂâçÈù¢ËÇåËÇâÁöÑÂäõÈáèÔºåÊ†πÊ≤ªÈ¢àÊ§éÈóÆÈ¢òÔºàÈúÄË¶ÅÂ∫äÔºâ4. Âç∑ËÖπÔºöËÖπÈÉ®ËÆ≠ÁªÉ5. ‰øØÂçßÊíëÔºöËÉ∏+ËÇ©6. Âπ≥ÊùøÊîØÊíëÔºöËÖπÈÉ®Á®≥ÂÆöÊÄß7. ËÖπÂºèÂëºÂê∏ËÆ≠ÁªÉÔºöÂ¢ûÂº∫ËÖπÊ®™ËÇåÔºåÊ≤ªÁñóËÇãÈ™®Â§ñÁøªÔºåÁºìËß£ËÇ©È¢àËÇåËÇâ## 0 Âô®Ê¢∞ÔºåÈúÄË¶ÅÊ§ÖÂ≠ê1. È´òÈÄüÊä¨ÂâçËÑöÊéåÔºöÁªÉ‰π†Â∞èËÖøÂâç‰æßËÇåËÇâÔºåÂ¶ÇÊûúÂπ≥Â∏∏Ëµ∞Ë∑ØËÑöÊéåÊä¨‰∏çËµ∑Êù•ÔºåÂ∞èËÖøÂêé‰æßÂæàÂÆπÊòìËøáÂ∫¶ÂèëÂäõÔºåË¶ÅÂ§öÁªÉ## ÁÆÄÂçïÂô®Ê¢∞1. Â∞èÊú®Ê£ç+Áëú‰ºΩÂû´ÔºåË∏©‰∏äÂéªÔºåÊåâÊë©Ë∂≥Â∫ïÔºåÂèØ‰ª•Ê≤ªÁñóË∂≥ÂºìÂ°åÈô∑ÔºåË∂≥Â∫ïÊäìÊè°ÂäõÔºåÈáçÂøÉÂú®ËÑöÂêéË∑üÁ≠âÈóÆÈ¢ò ÈáëÈí±ÔºåÁ§æ‰ºöÂΩ±ÂìçÂäõ‰Ωú‰∏∫‰∏Ä‰∏™ÊôÆÊôÆÈÄöÈÄöÁöÑÁ§æ‰ºöÈΩøËΩÆÔºåËÆ≤ÈáëÈí±ÂíåÁ§æ‰ºöÂΩ±ÂìçÂäõÔºåÊòæÁÑ∂ÊúâÁÇπÂõ∞Èöæ„ÄÇÁõÆÂâçÊàëÂú®ÈáëÈí±ÊñπÈù¢ÁöÑËøúÂ§ßËÆ°ÂàíÔºå‰∏ªË¶ÅÊòØÊäïÊú∫ÔºåËÄåÊäïÊú∫Âú®ÂÆûÁé∞ÈáëÈí±Ëá™Áî±ÊñπÈù¢‰πüÁ°ÆÂÆûÊòØ‰∏ÄÊù°ÁªèÂÖ∏ÁöÑË∑ØÂ≠ê„ÄÇ‰ΩÜÂÆûÁé∞Á§æ‰ºöÂΩ±ÂìçÂäõÔºåÊäïÊú∫ÂàôÂ§©ÁÑ∂‰∏çÂÖ∑Â§áÔºåÂõ†‰∏∫‰∏ªÊµÅ‰ª∑ÂÄºËßÇ‰∏çÂºòÊâ¨ÔºåÈô§ÈùûÂÅöÂà∞ÈùûÂ∏∏ÈùûÂ∏∏Âá∫ÂêçÔºåËØ¥‰∏çÂÆöËøòÊòØ‰ºöÊúâ‰∫õÂΩ±ÂìçÂäõ„ÄÇÊàëÁöÑÊäïÊú∫ËÉΩÂäõ‰∏ªË¶ÅÊòØÈù† 7 Âπ¥ÁöÑÂ∏ÅÂúàÁªèÂéÜÈÄ†Â∞±ÁöÑ„ÄÇ ‰ΩÜÊúâ‰∏ÄÊ†∑‰∏úË•øÔºåÂ§©ÁÑ∂ÁöÑÂ∞±‰ºöÂ∏¶Êù•Á§æ‰ºöÂΩ±ÂìçÂäõÔºåÈÇ£Â∞±ÊòØÂú®Á§æ‰∫§Â™í‰Ωì‰∏äËæìÂá∫ÂÜÖÂÆπÔºåÂÜô‰ΩúÔºåÂâ™ËßÜÈ¢ëÔºåÂÅöÊí≠ÂÆ¢Ôºå‰∫§ÂèãÔºåÁõ¥Êí≠ÔºåËøûÈ∫¶„ÄÇÁõÆÂâçÊàëÂú®ËøôÊñπÈù¢Â∞ö‰∏çÁßØÊûÅÔºåÁâπÂà´ÊòØÂâ™ËßÜÈ¢ëÊ†πÊú¨Ê≤°ÊúâÂü∫Á°Ä„ÄÇ Âõ¢ÁªìÂë®Âõ¥ÁöÑ‰∫∫ËøôÊñπÈù¢ÁöÑËÉΩÂäõÔºå‰∏çÈ´ò‰∏ç‰ΩéÔºåËØ¥‰∏çÈ´òÔºåÊòØÂõ†‰∏∫ÊàëÁà∂ÊØçÂØπÊàëÁöÑÊîØÊåÅ‰∏ÄËà¨„ÄÇÂú®Â∏ÅÂúàÁöÑÂ§¥Âá†Âπ¥ÔºåÊàëÁà∂ÊØçÂßãÁªà‰∏çÊÑøÁúüÊ≠£Áõ∏‰ø°ÊàëÔºåËøòÊääÁªôÊàëÊäïËµÑÂ∏ÅÂúàÁöÑÈí±‰π∞‰∫ÜÊàø„ÄÇÂú®ÂÆ∂‰∏≠Âú∞‰ΩçÊØîËæÉ‰ΩéÔºå‰ΩÜÂÆ∂Â∫≠ÈùûÂ∏∏ÂíåÁù¶Ôºå‰πüÁÆóÂ∫ïÂ≠ê‰∏çÈîô„ÄÇÁ≠âÂêéÈù¢ÊàëÁªèÊµéËÉΩÂäõË∂ÖËøáÁà∂ÊØçÔºå‰º∞ËÆ°‰ºöÊõ¥Áõ∏‰ø°Êàë‰∏Ä‰∫õ„ÄÇ Âõ¢ÁªìÊúãÂèãËøôÊñπÈù¢ÔºåÊàëÊúâÊØîËæÉË¶ÅÂ•ΩÁöÑÊúãÂèãÔºå‰ΩÜ‰ªçÁÆó‰∏ç‰∏äËá≥‰∫§„ÄÇ‰∏é‰∫∫ÁöÑÂÖ≥Á≥ªÂßãÁªàÂÅúÁïôÂú®Áï•Á≤óÊµÖÁöÑÊ∞¥Âπ≥ÔºåÂèØËÉΩÊòØÊàëÈïøÊúüÁªôÊúãÂèãÁÅåËæìÁãºÊÄßÊÄùÁª¥ÁöÑÂéüÂõ†ÊâÄËá¥ÔºàÊòØÁãºÂ∞±ÂæóÂêÉËÇâÂæó‰º§‰∫∫ÔºâÔºåÂæÄÂêéÊàëÂèØ‰ª•‰∏çÂÜçËÆ≤ÔºåÂÖ∂ÂÆûÊàë‰∏ÄÁõ¥ËÆ≤ÁªôÊúãÂèãÂê¨ÔºåÂÆûÈôÖ‰∏äÊòØËÆ≤ÁªôËá™Â∑±Âê¨ÔºåËÆ≤ÁªôÊàëËøô‰∏™ÂÅö‰∫ÜÂá†ÂçÅÂπ¥Ê∏©È°∫ÁªµÁæäÁöÑ‰∫∫Âê¨„ÄÇ ‰∏éËÄÅÂ©ÜÂÖ≥Á≥ªÊå∫Â•ΩÔºåÂ∞öÊó†Â≠êÂ•≥„ÄÇ ‰∏é‰∫≤ÊàöÂÖ≥Á≥ªÊ∑°„ÄÇ ‰∏™‰∫∫ÊäÄËÉΩÁõÆÂâçÁºñÁ®ãËÉΩÂäõÂ∞öÂèØÔºå‰æùÈù†ÁºñÁ®ãÊù•ÂÖªÊ¥ªËá™Â∑±„ÄÇËã±ËØ≠ËÉΩÂäõÂæàÁÉÇÔºåÂç¥ÂßãÁªà‰∏çÊÑøÂùöÊåÅËøûÁª≠ÊÄßÊúâËßÑÂàíÁöÑÂàªÊÑèÁªÉ‰π†„ÄÇ‰πüÊ≤°ÊúâÂÖ∂‰ªñÁöÑÊäÄËÉΩÁâπÈïø‰∫ÜÔºå‰∏ö‰ΩôÊó∂Èó¥Âü∫Êú¨ÂÖ®Âú®ÁúãÁé©Ê∏∏ÊàèÔºåÁé©Ê∏∏ÊàèÁöÑÁ©∫Èó≤ÂèàÂú®ÁúãÁü≠ËßÜÈ¢ëÔºåÁúãÁü≠ËßÜÈ¢ëÁöÑÁ©∫Èó≤ÂèàÂú®ÁúãÁàΩÂâßÂä®Êº´„ÄÇ ÁêÜÊÄßËÑëÊÄªÁªìÂá∫Êù•‰∏äÈù¢Ëøô‰∫õ‰∏úË•øÔºåËÉΩËêΩÂú∞ÁöÑËßÑÂàíÔºåÁõÆÂâçËøòÊ≤°ÊÉ≥Âà∞„ÄÇ]]></content>
      <tags>
        <tag>ÊñπÊ≥ïËÆ∫</tag>
        <tag>ËßÇÁÇπ</tag>
        <tag>ÂÅöÁ¨îËÆ∞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂõöÂæíÂÅ•Ë∫´ÂÆûË∑µ]]></title>
    <url>%2Fblog%2F2024%2F11%2F11%2F%E5%9B%9A%E5%BE%92%E5%81%A5%E8%BA%AB%E5%AE%9E%E8%B7%B5%2F</url>
    <content type="text"><![CDATA[ÈïøÊúü‰∏çËøêÂä®ÁöÑÂç±ÂÆ≥Ôºö Á≠ãËÜúÁ≤òËøûÔºåËÇåËÇâÊ¥ªÂä®ÂèóÈôêÔºåÂÖ≥ËäÇÊ¥ªÂä®ÂèóÈôê ÊãÆÊäóËÇåËÇâÂ§±Ë°°ÔºåËÇåËÇâËÄÅÊçüÂíåÈÄÄÂåñÔºåÂêÑÂ§ÑÈÖ∏Áóõ Ê≤°Êúâ‰ΩìËÉΩÂíåÂäõÈáè ÂæàÂÆπÊòìÁñ≤ÊÉ´ÔºåÁ≤æÁ•ûËêéÈù° ÂàÜ‰∏â‰∏™ÊñπÈù¢Ôºö ‰ΩìËÉΩÔºàÊúâÊ∞ßÔºöË∑ëÊ≠•ÔºåË∑≥Áª≥Ôºâ Ë∫´‰ΩìÁÅµÊ¥ªÂ∫¶ÔºåÊüîÈüßÊÄßÔºàÊãâ‰º∏Ôºâ ÂäõÈáè ÂÅ•Ë∫´‰π¶Á±ç ÂõöÂæíÂÅ•Ë∫´ Â∏åÊúõËÉΩÊâæÂà∞‰∏Ä‰∏™Ëá™Â∑±Êãâ‰º∏ÁöÑÂ•ΩÊñπÊ≥ïÔºåÊØîÂ¶ÇË∫´‰ΩìÁöÑÊØè‰∏™ÈÉ®‰ΩçÔºåÂ¶Ç‰ΩïÊúÄÂ∞ëÂô®Ê¢∞ÁöÑÊãâ‰º∏ Â∑≤Â≠¶‰ºö0 Âô®Ê¢∞Ôºå‰∏çÈúÄË¶ÅÂπ≤ÂáÄÂú∞Èù¢ ÂºìÊ≠•ÔºöÊãâ‰º∏Â§ßËÖøÂ§ñÂ±Ç ÊâãÊéåÊåâÊë©ÔºåÊúâÂà©‰∫éÊùæËß£ÊâãÊéåÁ≠ãËÜúÔºå‰∏∫ÁªÉÊäìÊè°ÂÅöÂáÜÂ§áÔºàÂ∑¶Âè≥Êâã‰∫íÁõ∏ÊåâÔºâ Âû´ËÑöÂ∞ñËπ≤ÔºöÂ¢ûÂº∫ËÑöÊéåÊäìÊè°Âäõ Ê∑±Ëπ≤ÔºöËáÄ+Â§ßËÖø Ê≤âËÇ©ÔºöÁºìËß£ÊñúÊñπËÇå Á´ôÂºè‰ΩìÂâçÂ±àÔºöÊãâ‰º∏ÂêéËÖøÔºåË¶ÅÂ§öÁªÉÔºåÊàëÂêéËÖøÁª∑ÁöÑÁâπÂà´Á¥ß 0 Âô®Ê¢∞Ôºå‰ΩÜÈúÄË¶ÅÁëú‰ºΩÂû´ÊàñËÄÖÂ∫ä ‰æßË∫∫ËÉ∏Â±ïÔºöÂ¢ûÂä†ËÉ∏Ê§éÁÅµÊ¥ªÂ∫¶ÔºàÁëú‰ºΩÂû´ or Â∫äÔºâ ÈùíËõôË∂¥ÔºöÊãâ‰º∏ËÉØÔºåÈ´ãÂÖ≥ËäÇÔºàÁëú‰ºΩÂû´ or Â∫äÔºâ ‰ª∞ÂçßÂ§¥ÈÉ® 0 ÊîØÊíëÔºöÂèØ‰ª•Â¢ûÂº∫È¢àÈÉ®ÂâçÈù¢ËÇåËÇâÁöÑÂäõÈáèÔºåÊ†πÊ≤ªÈ¢àÊ§éÈóÆÈ¢òÔºàÈúÄË¶ÅÂ∫äÔºâ Âç∑ËÖπÔºöËÖπÈÉ®ËÆ≠ÁªÉ ‰øØÂçßÊíëÔºöËÉ∏+ËÇ© Âπ≥ÊùøÊîØÊíëÔºöËÖπÈÉ®Á®≥ÂÆöÊÄß ËÖπÂºèÂëºÂê∏ËÆ≠ÁªÉÔºöÂ¢ûÂº∫ËÖπÊ®™ËÇåÔºåÊ≤ªÁñóËÇãÈ™®Â§ñÁøªÔºåÁºìËß£ËÇ©È¢àËÇåËÇâ 0 Âô®Ê¢∞ÔºåÈúÄË¶ÅÊ§ÖÂ≠ê È´òÈÄüÊä¨ÂâçËÑöÊéåÔºöÁªÉ‰π†Â∞èËÖøÂâç‰æßËÇåËÇâÔºåÂ¶ÇÊûúÂπ≥Â∏∏Ëµ∞Ë∑ØËÑöÊéåÊä¨‰∏çËµ∑Êù•ÔºåÂ∞èËÖøÂêé‰æßÂæàÂÆπÊòìËøáÂ∫¶ÂèëÂäõÔºåË¶ÅÂ§öÁªÉ ÁÆÄÂçïÂô®Ê¢∞ Â∞èÊú®Ê£ç+Áëú‰ºΩÂû´ÔºåË∏©‰∏äÂéªÔºåÊåâÊë©Ë∂≥Â∫ïÔºåÂèØ‰ª•Ê≤ªÁñóË∂≥ÂºìÂ°åÈô∑ÔºåË∂≥Â∫ïÊäìÊè°ÂäõÔºåÈáçÂøÉÂú®ËÑöÂêéË∑üÁ≠âÈóÆÈ¢ò]]></content>
      <tags>
        <tag>ÂÅ•Ë∫´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊàëÂØπËØª‰π¶ÁöÑÁúãÊ≥ï]]></title>
    <url>%2Fblog%2F2024%2F08%2F26%2F%E6%88%91%E5%AF%B9%E8%AF%BB%E4%B9%A6%E7%9A%84%E7%9C%8B%E6%B3%95%2F</url>
    <content type="text"><![CDATA[‰∏ÄÁõ¥‰ª•Êù•Á°ÆÂÆûÊúâÁÇπËØª‰π¶ËØªÂÇª‰∫ÜÔºåÂ¶ÇÊûúÊàëÊúâÂ∞èÂ≠©ÔºåÊàëÂ∏åÊúõ‰ªñ‰ª∑ÂÄºËßÇ‰∏çË¶ÅÂá∫ÈóÆÈ¢ò„ÄÇÂ≠¶Ê†°ÁöÑ‰ª∑ÂÄºËßÇÂ§™ÊúâÈóÆÈ¢ò‰∫Ü„ÄÇ Ê∏ÖÂçéÂΩïÂèñÈÄöÁü•‰π¶Âíå‰∏Ä‰∏™‰∫øÔºåÂ∞èÊúãÂèãÂ¶Ç‰ΩïÈÄâÔºü È´òËÄÉÂ§±Ë¥•=‰∫∫ÁîüÂÆåËõãÔºüÂ§çËØªËÄÉ‰∏ä‰∫§Â§ßÔºåËøõÂÖ•Á§æ‰ºöÊâçÂèëÁé∞Â≠¶ÂéÜÂè™ÊòØ‰∏ÄÂº†Á∫∏Ôºå985 Ê†πÊú¨ÈÖç‰∏ç‰∏äÂ≠¶ÁîüÁöÑ‰ºòÁßÄ Èí±ÔºåË¥¢ÂØåÈÇ£‰∏çÊòØËÇÆËÑèÁöÑ‰∏úË•ø„ÄÇËßÜÈáëÈí±Â¶ÇÁ≤™ÊòØÈîôÁöÑ ‰ªÅ‰πâÁ§ºÊô∫‰ø°ÔºåÂú®Ë¥µÊóèË∫´‰∏äÔºåÈÇ£ÊòØÂ§ßÂä†Êàê„ÄÇÂú®Á©∑‰∫∫Ë∫´‰∏äÔºåÈÇ£ÊòØÂ§ßÊû∑ÈîÅ„ÄÇÂ∫ïÂ±Ç‰∫∫Êï¢ÈóØÊï¢Êãº‰ΩéÈÅìÂæ∑ÂéöËÑ∏ÁöÆÊòØÂ§ßÂä†Êàê„ÄÇ Á§æ‰ºöÊòØ‰∫∫Ë∑ü‰∫∫ÁöÑÁ§æ‰ºö„ÄÇ‰∫∫ÈôÖÂÖ≥Á≥ªÔºåÊØî‰ªÄ‰πàÈÉΩÈáçË¶Å„ÄÇÁé©Âà∞ÊûÅËá¥ÔºåÂ∞±ÊòØÊîøÊ≤ª Âà©ÁõäÂÜ≥ÂÆöËÑëË¢ã„ÄÇ‰πüÂè´Â±ÅËÇ°ÂÜ≥ÂÆöËÑëË¢ã„ÄÇÂà´‰∫∫ËØ¥‰ªÄ‰πàÈÉΩÊòØÁ´ôÂú®Ëá™Â∑±ÁöÑÂà©ÁõäÔºàÊàñËÄÖÂøóÂêëÔºâÁ´ãÂú∫‰∏äËØ¥ËØùÁöÑ„ÄÇ È´òËÄÉÊòØÁïôÁªôÊúÄÂ∫ïÂ±ÇÂ≠©Â≠êÁöÑÈÄöÈÅì„ÄÇÊúâÂÆûÂäõÁöÑÂà´ÂéªÂç∑ÔºåÊàñËÄÖËä±Ê†∑Âç∑„ÄÇÂ•∂Ëå∂Â¶πÂ¶πÔºàÂàòÂº∫‰∏úËÄÅÂ©ÜÁ´†Ê≥ΩÂ§©ÔºâÂÅ•ÁæéÊìç‰∏äÊ∏ÖÂçéÔºåÈ°æÊ£ÆÔºàmatrix67Ôºâ‰ø°ÊÅØÁ´ûËµõÈì∂Áâå‰∏äÂåóÂ§ßÔºåÂì™ÊÄïÂ≠ôÂâ≤ÔºàÂ≠ôÂÆáÊô®Ôºâ‰πüÊòØËá™‰∏ªÊãõÁîüÂä†‰∫ÜÂàÜÔºàËôΩÁÑ∂Â≠ôÂâ≤ÂàÜÊï∞Âπ∂‰∏ç‰ΩéÔºåÁ¶ªÂåóÂ§ßÂàÜÊï∞Á∫øËøòÂ∑ÆÂá†ÂàÜÔºâ„ÄÇ ËØª‰π¶ÁöÑ‰ΩúÁî® ÊâìÊõ¥È´òÁ∫ßÁöÑÂ∑•ÔºåÂ§ßÂ≠¶ÊØï‰∏ö‰∏ÄËà¨ËÉΩÊØîÂàùÈ´ò‰∏≠ÊØï‰∏öÁöÑÊâìÊõ¥È´òÁ∫ßÁöÑÂ∑•ÔºåÂçöÂ£´Á†îÁ©∂Áîü‰∏ÄËà¨ËÉΩÊØîÂ§ßÂ≠¶ÊØï‰∏öÊâìÊõ¥È´òÁ∫ßÁöÑÂ∑• ÂèØËÉΩÂ≠òÂú®Êüê‰∫õÊú∫ÈÅáÔºåÂæÆ‰πéÂÖ∂ÂæÆ ÊèêÈ´òËá™Ë∫´Á¥†Ë¥®ÔºåÈò≤ËØàÈ™óËÉΩÂäõÊèêÈ´ò ËØª‰π¶ÁöÑÂç±ÂÆ≥ ÈúÄË¶ÅËä±ÂæàÂ§öÂπ¥Êó∂Èó¥ÔºåÊó∂Èó¥ÊàêÊú¨ÂæàÈ´ò Êúç‰ªéÊÄßËÆ≠ÁªÉÔºåËØª‰π¶ÊúüÈó¥ÂÖÖÊñ•‰∫ÜÂ§™Â§öÁöÑÊúç‰ªéËÆ≠ÁªÉÔºåÁîöËá≥‰º†ÊéàÁü•ËØÜÊú¨Ë∫´‰πüÊòØÁî®Êúç‰ªéËÆ≠ÁªÉÂÆåÊàê„ÄÇ‰ºöÂØºËá¥‰∫∫ÂèòÂæóÈùûÂ∏∏Êúç‰ªéÔºå‰∏çÂä†ÊÄùËÄÉËø∑‰ø°ÊùÉÂ®ÅÔºåÊúç‰ªéÈ¢ÜÂØºÔºåÊ≤°Êúâ‰∏ªËßÅÔºå‰∏çÁà±ÊÄùËÄÉÔºå‰∏çÂ§üËá™Âæã„ÄÇ ‰∏çÁü•ÈÅìËá™Â∑±Ë¶ÅÂÅö‰ªÄ‰πàÔºå‰ªÄ‰πàÈÉΩË¢´ÂÆâÊéíÔºåËØª‰π¶ÁöÑÁªàÊûÅÁõÆÊ†áÂ∞±ÊòØÊâìÂ∑•ÔºåËØª‰∫ÜÂá†ÂçÅÂπ¥‰∏çÁü•ÈÅìËá™Â∑±Ë¶ÅÊâì‰ªÄ‰πàÂ∑• ‰ª∑ÂÄº‰ΩìÁ≥ªÂ¥©ÂùèÔºå‰∏çÁü•ÈÅìÈí±ÊùÉËøúÊØîËØª‰π¶ÊúâÁî® ÊàëÂØπÊúâ‰∫ßÁöÑÂÆö‰πâÂÖ®ÂÆ∂ÂèØ‰ª•ËÑ±‰∫ßÔºåÊôÆÈÄöÂÆ∂Â∫≠‰∏ÄÂπ¥Ëä±ÈîÄÂ§ßÊ¶Ç 10 ‰∏áÂà∞ 20 ‰∏áÔºåÂπ¥Âåñ 2%ÁöÑËØùÔºåÈúÄË¶Å 500 ‰∏áÂà∞ 1000 ‰∏áËµÑ‰∫ßÔºå‰πüÂ∞±ÊòØËØ¥ 500 ‰∏áÊòØÂØåÂÜúÂà∞Âú∞‰∏ªÁöÑ‰∏Ä‰∏™Èó®Êßõ„ÄÇ Â¶ÇÊûúÊúâÁêÜÊÉ≥ÔºåÂÖ®ÂÆ∂‰∫∫‰∏ÄËµ∑Â•îÁùÄÊúâ‰∫ßÂéªÊêû ÊàëÂØπÂ≠êÂ•≥ÊïôËÇ≤ÈóÆÈ¢òÁöÑÁúãÊ≥ï ‰ª∑ÂÄº‰ΩìÁ≥ªË¶ÅÂØπÔºå‰∏ÄËà¨Êù•ËØ¥ËØª‰π¶Âá∫Êù•Â∞±ÊòØÊâìÂ∑•ÔºåÈí±ËøúÊØîËØª‰π¶ÈáçË¶ÅÔºå‰ªéÂ∞èÂüπÂÖªÈáëÈí±ËßÇÂøµÔºå‰ªéÂ∞èËØïÂõæËá™Â∑±ËµöÈí± Â¶ÇÊûúÊ≥®ÂÆöË¶ÅÊâìÂ∑•ÔºåËØªÂçÅÂ§öÂπ¥Âá∫Êù•ÔºåË¶ÅÁü•ÈÅìËá™Â∑±ËÉΩÊâì‰ªÄ‰πàÂ∑• Â≠¶ÂéÜËøòÊòØË¶ÅÈ´òÁÇπÔºåÁ¥†Ë¥®È´òÔºåÈò≤Âæó‰ΩèËØàÈ™óÔºåÂÆàÂæó‰ΩèË¥¢]]></content>
      <tags>
        <tag>ËßÇÁÇπ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊäïËµÑÊÄªÁªì]]></title>
    <url>%2Fblog%2F2024%2F08%2F14%2F%E6%8A%95%E8%B5%84%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[ÊäïËµÑË¶ÅÂÅöÁöÑÊòØ‰∏§ÊñπÈù¢ÁöÑÂ∑•‰ΩúÔºö ‰ª∑Ê†º‰Ωé Ë¥®ÈáèÂ•Ω Â¶ÇÊûú‰Ω†ÁöÑÊäïËµÑÊ†áÁöÑÔºåÂÖ∑Â§á‰ª•‰∏ä‰∏§‰∏™ÁâπÂæÅÔºåÈÇ£Â∞±ÂèØ‰ª•ËµöÂà∞Èí±„ÄÇËøô‰∏§‰∏™ÈÉΩÂÅöÂ•Ω‰∫Ü‰ºö‰∏ç‰ºö‰∫èÈí±Ôºå‰πü‰ºöÔºåÂõ†‰∏∫ÂæàÂ§ö‰∫∫‰ºöÂèóÂ∏ÇÂú∫Ê≥¢Âä®ÁöÑÂΩ±ÂìçÔºåËÆ§‰∏∫Ëá™Â∑±Âà§Êñ≠Èîô‰∫ÜÔºå‰ªéËÄåÂâ≤ËÇâÁ¶ªÂú∫„ÄÇÊâÄ‰ª•‰ºòÁßÄÁöÑÊäïËµÑ‰∫∫‰∏çÂÖâË¶ÅÂ≠¶‰π†Âü∫Êú¨ÁöÑÂ∏ÇÂú∫ÁªèÊµéÁü•ËØÜÔºåËøòË¶ÅÊúâË∞ÉÊü•Á≤æÁ•ûÔºåËøòË¶ÅÊúâËá™‰ø°„ÄÇ ÁÇíÂ∏ÅÁü•ËØÜ ÊØîÁâπÂ∏ÅÁõ∏ÂØπÂÖ∂‰ªñÂ∏ÅÊù•ËØ¥Êõ¥Á®≥ÔºåÊ≥¢Âä®Êõ¥Â∞è ‰∏ãË∑å‰ºöÂæàËøÖÈÄüÔºåÂΩìÂ§©Â∞±‰ºöË∑åÂà∞‰Ωç ‰∏ãË∑åÂêéÂèçÂºπËµöÈí±ÁâπÂà´Âø´ÔºåËÄå‰∏îÂèçÂºπÂÖàÂá∫ÔºåÁâπÂà´Á®≥ÔºåÂèØ‰ª•Â∫îÂØπ‰ªª‰ΩïÊÉÖÂÜµ ‰∏ÄÊÆµÊó∂Èó¥ÂÜÖÊ∂®Â§™Â§öÊàñË∑åÂ§™Â§öÈÉΩ‰ºöÂèçËΩ¨‰∏Ä‰∏ãÔºåÂõ†‰∏∫Êú™Âπ≥‰ªìÂêàÁ∫¶ÂæàÂ§öÔºå‰∏ãË∑åÂæàËøÖÈÄü‰πüÊòØ‰∏∫‰∫ÜÁàÜÊéâËøô‰∫õÊú™Âπ≥‰ªìÂêàÁ∫¶„ÄÇ ‰∏äÊ∂®ËøáÁ®ãÊòØÁ≠πÁ†ÅÂàÜÊï£ÁöÑËøáÁ®ãÔºå‰∏ãË∑åËøáÁ®ãÊòØÁ≠πÁ†ÅÈõÜ‰∏≠ÁöÑËøáÁ®ã„ÄÇËøôÈáåÈù¢ÊòØ‰æõÈúÄÂÖ≥Á≥ªÂÜ≥ÂÆöÁöÑ„ÄÇ Â∏ÇÂú∫Ê∞∏Ëøú‰∏çÁº∫ÁÉ≠ÁÇπÔºå‰∏çËÆ∫ÊòØÁâõÂ∏ÇËøòÊòØÁÜäÂ∏Ç„ÄÇ Â•ΩÁöÑÊäïÊú∫Ê†áÁöÑÊòØÁºìÊ∂®ÊÄ•Ë∑åÔºå‰∏çÂ•ΩÁöÑÊäïÊú∫Ê†áÁöÑÊòØÁºìË∑åÁåõÊãâ ÂùáÁ∫øÁ≤òÂêàÂíåÂ∏ÉÊûóÁ∫øÊî∂Á™ÑÊòØÂèòÁõòÁöÑÂâçÊèêÔºàË∂ãÂäøË°åÊÉÖÂºÄÂêØÁöÑÂâçÊèêÔºâ Áº©Èáè‰ª£Ë°®Ê≤°ÊúâÂàÜÊ≠ßÔºåÊîæÈáè‰ª£Ë°®ÊúâÂàÜÊ≠ßÔºåÁº©Èáè‰∏äÊ∂®Ëøò‰ºöÊ∂®ÔºåÁº©Èáè‰∏ãË∑åËøò‰ºöË∑å„ÄÇ ‰ª•‰∏äÊòØ 2021 Âπ¥ÊØîÁâπÂ∏ÅÁâõÂ∏ÇÁöÑÊÄªÁªì ÊÄªÁªìÂéüÂàôÁØá ‰∏çÂÅöÁ©∫ ‰∏çÂä†Êù†ÊùÜ ‰∏çÊãøÂÖ®‰ªìÁé©Êàê‰∫§ÈáèÂ∞èÁöÑÂûÉÂúæÂ∏Å(‰∫èÊçüË¶ÅÂú®‰∏ÄÂÆöËåÉÂõ¥ÔºåÂõ†‰∏∫ÂèØËÉΩÂΩíÈõ∂) ÁõÆÊ†áÁØá Êàê‰∫§ÈáèÂíåÂ∏ÇÂÄº(Âçï‰∏™Â∏ÅÂà§Êñ≠‰æùÊçÆ) ÈôçÊÅØ(Êï¥‰∏™Â∏ÇÂú∫ÁöÑÂà§Êñ≠‰æùÊçÆÔºåÂÖ∂Êú¨Ë¥®‰æùÊóßÊòØËµÑÈáëÈáèÔºåÊàê‰∫§Èáè) È£éÈô©ÁØá ÊåëÈÄâÂá∫ËÉΩÊâøËΩΩÊï¥‰∏™Êú¨ÈáëÁöÑÊ†áÁöÑ Â¶ÇÊûú 1 Êó†Ê≥ïÂÆûÁé∞ÔºåÂ∞±ÂáèÂ∞è‰ªì‰ΩçÂØªÊâæÁõÆÊ†á Á≠ñÁï•ÁØá ÈæôÂ§¥ÊàòÊ≥ï„ÄÇÊúâÈæôÂ§¥ÁöÑÊó∂ÂÄôÂè™‰π∞ÈæôÂ§¥„ÄÇÊ≤°ÊúâÈæôÂ§¥Â∞±‰ºëÊÅØ„ÄÇÔºàÈÄÇÂêàÂ≠òÈáèËµÑÈáëÂ∏ÇÂú∫‰∏äÁöÑÊêèÊùÄÔºâ Â§¥ËÑëÊ∏ÖÊô∞ÁöÑÊÄùËÄÉËøáÁ®ãÊúâ È¶ñÂÖàÁúãÈ£éÈô©ÊÄªÈáè(ÂÜ≥ÂÆöÊäïÂÖ•Â§öÂ∞ëÊú¨Èáë) ÂÖ∂Ê¨°ÁúãÈ£éÈô©Êî∂ÁõäÊØî(È¢ÑËÆ°Â§ßÊ¶ÇËÉΩËµöÂ§öÂ∞ë) Ëµ∞Á∫øÔºå‰ª∑Ê†ºÈÉΩÊòØË°®Ë±°ÔºåÂîØÊúâÊàê‰∫§ÈáèÊòØÁúüÂÆûÔºåÂ∏ÇÂú∫Ê∑±Â∫¶ÂÜ≥ÂÆöÁúüÂÆû‰ª∑Ê†º Êàê‰∫§ÈáèÊòØÂùöÂÆûÁöÑÂü∫Á°ÄÔºåËÄåÂ∏ÇÂÄºÊòØÊ≥°Ê≤´Âê´ÈáèÁöÑÂ§öÂ∞ë„ÄÇÂ∑¶ÊâãÊàê‰∫§ÈáèÂè≥ÊâãÂ∏ÇÂÄºÔºåÂÖ∂‰ªñÈÉΩ‰∏çÁúã ÂÆûÊàòÁªìÊûúÂàÜÊûê ÊìÖÈïøÂÅöË∂ãÂäøË°åÊÉÖÔºåÂñúÊ¨¢ÂÅöÂè≥‰æßËøΩÈ´ò ‰∏çÈÄÇÂêàÊäÑÂ∫ï ÂÅöÊ≥¢ÊÆµ‰πüËøòË°å]]></content>
      <tags>
        <tag>ÊäïËµÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖçË¥πÊï∞Â≠óËµÑÊ∫ê]]></title>
    <url>%2Fblog%2F2024%2F08%2F13%2Ffree-resource%2F</url>
    <content type="text"><![CDATA[‰∫íËÅîÁΩëÊó∂‰ª£ÂèëÂ±ïÂà∞Áé∞Âú®Ôºå‰ªÄ‰πàÈÉΩË¶ÅÊî∂Ë¥π‰∫ÜÔºåËÄå‰∏î‰∏çÂÖâË¶ÅÊî∂Ë¥πÔºå‰ΩøÁî®‰ΩìÈ™åËøòË∂äÊù•Ë∂äÂ∑Æ„ÄÇÊØîÂ¶ÇÂê¨Ê≠åÔºåÁúãËßÜÈ¢ëÔºåÂæÄÂæÄÈÉΩË¶Å‰∏ãËΩΩÂ•ΩÂá†‰∏™ APPÔºåÂú®Â•ΩÂá†‰∏™Âπ≥Âè∞ÂÖÖ‰ºöÂëò„ÄÇÊúâÊ≤°Êúâ‰ªÄ‰πàÂäûÊ≥ïÂèØ‰ª•ÂÖçË¥πËé∑ÂæóËøô‰∫õËµÑÊ∫êÂë¢ÔºüÊúâÁöÑÔºå‰∏ãÈù¢ÂàÜ‰∫´‰∏Ä‰∏ãÊàëÁöÑÁªèÈ™å„ÄÇ ÁøªÂ¢ôÁøªÂ¢ôÊòØÊâÄÊúâ‰ø°ÊÅØÂ∑ÆÁöÑÁ¨¨‰∏ÄÊ≠•Ôºö Êú∫Âú∫ÊúçÂä°Ë¥≠‰π∞Ôºö20 ÁæéÂÖÉ‰∏ÄÂπ¥ ÁøªÂ¢ôËΩØ‰ª∂ Âê¨Ê≠å‰Ω†ÊúâÊ≤°ÊúâÊÉ≥ËøáÂèØ‰ª•Âú®‰∏Ä‰∏™ app ‰∏äÂÖçË¥πÂê¨ÊâÄÊúâÈü≥‰πêÂπ≥Âè∞ÁöÑ VIP Ê≠åÊõ≤Âë¢„ÄÇ Ê¥õÈõ™Èü≥‰πêÔºöÊîØÊåÅ windows, Mac OS, linux, Android„ÄÇ‰ΩÜÊòØÊ¥õÈõ™Èü≥‰πêÂÆòÊñπÁöÑÈü≥Ê∫êÂ∑≤ÁªèÂ§±Êïà‰∫ÜÔºåÁé∞Âú®ÈúÄË¶ÅËá™Â∑±ÊâæÈü≥Ê∫ê‰∫Ü„ÄÇ Âú® github ‰∏äÂèëÁé∞Êúâ‰∫∫ÂàÜ‰∫´‰∫ÜÔºöËá™Â∑±Êî∂ÈõÜÁöÑÂá†‰∏™ÂèØÁî®Ê∫ê https://wwp.lanzouq.com/b02fq9w8dÂØÜÁ†ÅÔºölxmusic ‰πüÂèØ‰ª•ÁÇπËøôÈáåÁõ¥Êé•‰∏ãËΩΩÔºöflower-v1.js Ëá≥‰∫éÊÄé‰πàÂØºÂÖ•Èü≥Ê∫êÂà∞Ê¥õÈõ™Èü≥‰πê appÔºåÂèØ‰ª•Ëá™Â∑±‰∏äÁΩëÊü•„ÄÇ Áúã‰π¶ ÂÖ®ÁêÉÊúÄÂ§ßÁöÑÁîµÂ≠êÂõæ‰π¶È¶ÜÔºöZLibrary PDF ÊúÄÂÖ®ÁöÑÁΩëÁ´ôÔºöPDF ‰πãÂÆ∂ Âê¨‰π¶ È£ûÈ∏üÂê¨‰π¶„ÄÇÁõÆÂâçÂè™ÊúâÂÆâÂçìÁâàÔºåIOSÁî®Êà∑ÁôΩÂ´ñ‰∏ç‰∫Ü„ÄÇ ÊàëÂê¨ËøáÁöÑÂâßÊúâÔºö Áº•Áºà‰πãÊóÖ ÂêûÂô¨ÊòüÁ©∫ ÈÄÜÂ§©ÈÇ™Á•û ÈÅÆÂ§© ‰ªôÈÄÜ ÊñóÁ†¥ËãçÁ©π ÁúãËßÜÈ¢ëÊàë‰∏ÄÁõ¥ÊúâÁúãÊñóÁ†¥ËãçÁ©πÂíåÊñóÁΩóÂ§ßÈôÜÁöÑ‰π†ÊÉØÔºåÊØèÂë®ÂÖ≠ÈÉΩ‰ºöÊî∂Áúã„ÄÇ‰ΩÜÊòØÂèà‰∏çÊÉ≥ÂÖÖËÖæËÆØËßÜÈ¢ëÁöÑ‰ºöÂëòÔºåÊçÆËØ¥Áé∞Âú®Â•ΩÂÉèÊúâ‰ºöÂëò‰πüÁúã‰∏ç‰∫ÜÊúÄÊñ∞‰∏ÄÈõÜÔºåË¶Å‰ªòË¥πÊâçË°åÔºåÁúüÊòØË∂äÊù•Ë∂äÁãó‰∫Ü„ÄÇÂàöÂàöÂéªÁúã‰∫Ü‰∏Ä‰∏ãÔºåÊòØÊñóÁ†¥ËãçÁ©πÂπ¥Áï™ÂøÖÈ°ªË¶ÅSVIPÊâçËÉΩÁúãÔºåVIPÁúã‰∏ç‰∫ÜÊúÄÊñ∞‰∏ÄÈõÜ„ÄÇÊàë‰∏ÄÁõ¥ËßâÂæóËøôÁßçÁßüËµÅÁöÑÊ®°ÂºèÊåÅÁª≠‰∏ç‰∫ÜÂ§™Â§öÂπ¥‰∫ÜÔºåÂπ≥Âè∞‰πüÊçû‰∏çÂà∞Â•ΩÔºåÁî®Êà∑‰πüÊçû‰∏çÂà∞Â•ΩÔºàÈÇ£‰πàË∞ÅÊçûÂà∞Â•ΩÔºüÊàëËßâÂæóÂ∫îËØ•ÊòØÈÇ£‰∫õÁÉÇ‰ΩúÂìÅÊçûÂà∞‰∫ÜÂ•ΩÔºâ„ÄÇË®ÄÂΩíÊ≠£‰º†Ôºå‰ªäÂ§©ÊàëÊÉ≥ÂàÜ‰∫´ÁöÑÊòØÂ¶Ç‰ΩïÂÖçË¥πÁúãËßÜÈ¢ëÔºåÊàëÈÄöÂ∏∏ÊòØËøôÂá†‰∏™Âú∞ÊñπÔºö ÊäñÈü≥ÔºåÊüê‰∫õ‰∏™‰∫∫Ë¥¶Âè∑ÂàÜ‰∫´ÁöÑÔºå‰∏Ä‰∏çÊòØÂæàÊ∏ÖÊô∞Ôºå‰∫åÁîöËá≥ÊòØÂØπÁùÄÊâãÊú∫ÊãçÁöÑÔºåÁîªÈù¢ÂæàÂ∞è„ÄÇÂè¶Â§ñÂ∞±ÊòØÊó∂ÊïàÊÄßÔºå‰ºöÂú®ÊØîËæÉÁü≠ÁöÑÊó∂Èó¥ÂÜÖ‰∏ãÊû∂Ôºà‰∏∫‰∫ÜÈÅøÂÖçÂêÉÂÆòÂè∏Ôºâ Âä™Âä™ËßÜÈ¢ëÔºåËÆ∏Â§öÈìæË∑Ø‰ºöÂ§±ÊïàÔºåÁÑ∂ÂêéÈÄüÂ∫¶‰∏çÊòØÂæàÂø´ÔºåÂæàÂÆπÊòìÂç°ÔºåÂç°Âæó‰∫∫Ê≤°ÂøÉÊÉÖÁúã‰∫ÜÈÉΩ„ÄÇ‰ºòÁÇπÊòØÊâÄÊúâËßÜÈ¢ëÂÖçË¥π ËâæÊó¶ËßÜÈ¢ëÔºåÈÉ®ÂàÜÂÜÖÂÆπÊòØË¶Å‰ªòË¥πÁöÑÔºàË≤å‰ººÂ∞èÈªÑÁâáÊâçÈúÄË¶Å‰ªòË¥πÔºâÔºå‰ΩÜËßÜÈ¢ëËµÑÊ∫êÊûÅÂÖ∂‰∏∞ÂØå„ÄÇÁº∫ÁÇπ‰πüÊòØÂú®Á∫øÁúãÊúâÁÇπÂç°Ôºå‰ΩÜÊîØÊåÅ‰∏ãËΩΩÔºå‰∏ãËΩΩÁúã‰ΩìÈ™å‰∏çÈîô„ÄÇ ÈáèÂ≠êËµÑÊ∫êÁΩëÔºåÂÜÖÂÆπ‰πüÊòØÁõ∏ÂΩì‰∏∞ÂØåÔºåËÄå‰∏îÊí≠ÊîæÈùûÂ∏∏ÊµÅÁïÖÔºåÂº∫ÁÉàÊé®Ëçê„ÄÇ ÂõßÊ¨°ÂÖÉappÔºåÁúãÂä®Êº´‰∏ìÁî®ÔºåÂèØ‰ª•ÁúãËìùÂÖâË¥®ÈáèÁöÑËßÜÈ¢ëÔºåÁº∫ÁÇπÊòØÊúâÂπøÂëä„ÄÇ ÁîµÊä•ÊûÅÊêúÊêúÁ¥¢ÂºïÊìéÔºåÊµ∑ÈáèËµÑÊ∫ê Êµ∑ÂÖîÂΩ±Èô¢ÔºåÈÄüÂ∫¶ÊûÅÂø´ÔºåÁîªË¥®‰πüÈùûÂ∏∏Ê∏ÖÊô∞„ÄÇ ‰ΩÜÊàë‰ªäÂ§©ÂèëÁé∞IINAÂ±ÖÁÑ∂ÂèØ‰ª•Áõ¥Êé•Áî®ÊâìÂºÄURLÁöÑÊñπÂºèÁúãËâæÊó¶ËßÜÈ¢ëÁöÑ‰∏ãËΩΩÈìæÊé•ÔºåÁúüÁöÑÊòØÈùûÂ∏∏‰∏çÈîôÁöÑ‰ΩìÈ™å„ÄÇÔºàÂéüÂõ†ÊâæÂà∞‰∫ÜÔºåËâæÊó¶ËßÜÈ¢ëÂíåÈáèÂ≠êËµÑÊ∫êÁöÑÊñóÁ†¥ËãçÁ©π108ÈõÜÈÉΩÊòØÂêå‰∏Ä‰∏™ÈìæÊé•ÔºåÊòØ‰∏Ä‰∏™mp4ËµÑÊ∫êÔºåÊâÄ‰ª•ÊâçÂèØ‰ª•Áõ¥Êé•Áî®IINAÊâìÂºÄÔºâ IINAÊòØmac os‰∏äÁã¨ÊúâÁöÑËßÜÈ¢ëÊí≠ÊîæÂô®ÔºåÈùûÂ∏∏Ê£íÁöÑÊí≠ÊîæÂô® ÂÜôÂú®ÊúÄÂêéÊâÄÊúâÁæéÂ•ΩÁöÑ‰∫ãÁâ©ÁªàÂ∞ÜÊï£ÂéªÔºåÂîØÊúâË∂ÅÂÆÉËøòÂú®ÁöÑÊó∂ÂÄôÂ•ΩÂ•ΩÁèçÊÉú„ÄÇËá¥ÔºöÊâÄÊúâÈÇ£‰∫õÂπ¥Êî∂ËóèÂç¥‰∏çÁúãÁöÑÂ•Ω‰∏úË•ø„ÄÇ]]></content>
      <tags>
        <tag>‰ø°ÊÅØÂ∑Æ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰ΩúÂìÅÁâàÊùÉËØÅÂà∏Âåñ]]></title>
    <url>%2Fblog%2F2024%2F08%2F03%2F%E4%BD%9C%E5%93%81%E7%89%88%E6%9D%83%E8%AF%81%E5%88%B8%E5%8C%96%2F</url>
    <content type="text"><![CDATA[ÁÆÄÂçïÊèèËø∞ÁóõÁÇπÊèèËø∞ÔºöÊüê‰∫∫‰∏∫‰∫ÜÂê¨ÊüêÈ¶ñÂñúÁà±ÁöÑÊ≠åÊàñËßÇÁúãÂñúÁà±ÁöÑËßÜÈ¢ëÔºåÁªôÈü≥‰πêÔºåËßÜÈ¢ëÂπ≥Âè∞ÂÖÖ‰∫ÜÊúà‰ºöÂëòÔºå‰∏Ä‰∏™ÊúàÂêéÂç¥Âê¨‰∏ç‰∫ÜÊ≠åÔºåÁîöËá≥Êúâ‰∫õÊ≠åÂç≥‰æø‰∏ãËΩΩ‰∫ÜËøò‰∏çËÆ©Âê¨„ÄÇÂ¶ÇÊûúÊç¢ÂÅö‰∏ÄÊú¨Á∫∏Ë¥®‰π¶ÔºåÊàë‰π∞‰∫ÜÔºåÂ∞±ÊòØÊàëÁöÑÔºåÁîöËá≥ÊàëËøòÂèØ‰ª•ÂÄüÁªôÂà´‰∫∫ÁúãÔºåÊâÄÊúâÊùÉÊòéÊòéÁôΩÁôΩÔºåÊàë‰∏çÊòØÊÉ≥Âê¨Âπ≥Âè∞ÈÇ£‰πàÂ§öÊ≠åÔºåÊàëÂ∞±ÊòØÊÉ≥Âê¨ÊàëÁà±Âê¨ÁöÑËÄåÂ∑≤ÔºåÂæàÂ∞ëÁöÑÂá†È¶ñ„ÄÇÊâÄ‰ª•ËÉΩ‰∏çËÉΩÂà´ÂÜçÁî®ÁßüËµÅÁöÑÂΩ¢ÂºèÂê¨Ê≠å‰∫ÜÔºÅËÄå‰∏îÂπ≥Âè∞ÈÇ£‰πàÂ§öÔºåÊàëÁîöËá≥Ë¶ÅÂÖÖÂ•ΩÂá†‰∏™Âπ≥Âè∞ÔºåÊâçËÉΩÂáëÈΩêËøô‰∫õÊ≠å„ÄÇ Êää‰ΩúÂìÅÁöÑÁâàÊùÉ‰∏äÂ∏ÇËØÅÂà∏ÂåñÔºå‰∏æ‰æãÔºöÂë®Êù∞‰º¶ÁöÑ‰∏ÄÈ¶ñÊñ∞Ê≠åÔºå‰º∞ÂÄº 500 ‰∏áÔºå‰∏äÂ∏ÇÂàÜÊàê 500 ‰∏áËÇ°ÔºåÊØè‰∏ÄËÇ° 1 ÂùóÈí±Ôºå‰ΩÜÂá°ÊåÅÊúâ‰∏ÄËÇ°ÔºåÂç≥ÂèØÂê¨Ê≠åÔºàËßÇÁúãÊùÉÔºâÔºå‰ΩÜÊ≤°ÊúâÊâÄÊúâÊùÉÔºàÊãøËøôÈ¶ñÊ≠å‰º†Êí≠ÁõàÂà©Ôºâ„ÄÇÊâÄÊúâÊåÅÊúâËÄÖÂÖ±Âêå‰∫´ÂèóËøôÈ¶ñÊ≠åÁöÑÊî∂Áõä„ÄÇÊØîÂ¶ÇÊüê‰∏™ËßÜÈ¢ëÂºïÁî®ÊãøËøôÈ¶ñÊ≠åÂÅö BGMÔºåÁîµËßÜÂâßÊãøËøôÈ¶ñÊ≠åÂÅöÁâáÂ§¥Êõ≤Á≠âÁ≠âÔºå‰∫ßÁîüÁöÑÊî∂ÁõäÊåâÊØî‰æãÂàÜÁ∫¢ÁªôÊâÄÊúâÊåÅÊúâËÄÖ„ÄÇÂª∫Á´ã‰∏Ä‰∏™Âπ≥Âè∞ÔºåÂèØ‰ª•‰∏äÊû∂‰∫§ÊòìÔºåÂπ≥Âè∞‰∏çÈù†ÁΩëÊòì‰∫ëÈü≥‰πêÁ≠âÊî∂‰ºöÂëòÂê¨Ê≠åÁöÑÊ®°ÂºèÔºåËÄåÊòØÈù†‰∫§ÊòìÊâãÁª≠Ë¥πÔºàÊØîÂ¶ÇÂçÉÂàÜ‰πã‰∫åÁöÑÊâãÁª≠Ë¥πÔºâ„ÄÇ ÂõõËµ¢Ôºö ÂÆ¢Êà∑Ëµ¢ÔºåÂÆ¢Êà∑Áªà‰∫éÂèØ‰ª•‰ª•Êã•ÊúâÁöÑÂΩ¢ÂºèÔºåËÄåÈùûÁßüËµÅÁöÑÂΩ¢ÂºèÔºåÊù•Êî∂ËóèËá™Â∑±ÂñúÁà±ÁöÑ‰ΩúÂìÅÔºåÂì™ÊÄï‰ªñÊ≤°Ê≥ïÂÖ®Ê¨æ‰π∞‰∏ãÔºà‰π∞‰∏ãÊï¥‰∏™ÁâàÊùÉÔºâ Âàõ‰ΩúËÄÖËµ¢ÔºåÂ•ΩÁöÑ‰ΩúÂìÅËØÅÂà∏ÂåñÂêéÔºåÊàë‰∏çÁü•ÈÅì‰ª∑Ê†ºËÉΩÁÇíÂà∞Â§öÈ´ò Âπ≥Âè∞Ëµ¢ÔºåÊñ∞ÁöÑÂπ≥Âè∞ÈÄöËøáÊâãÁª≠Ë¥πËÉΩËµöÂæàÂ§öÈí± ÁâàÊùÉÊîøÊ≤ªÊ≠£Á°ÆËµ¢ÔºåÂ§ßÂÆ∂ÈÉΩÊòØËÇ°‰∏úÔºåÁúãÂà∞Ëá™ÂÆ∂‰ΩúÂìÅË¢´ÂºïÁî®ÔºåÁ´ãÂç≥Êü•‰ªñÁâàÊùÉÔºåÁõóÁâàÂøÖÁ©∂„ÄÇ ËæìÁöÑÂØπË±°Ôºö‰º†Áªü‰ΩúÂìÅÁßüËµÅÂπ≥Âè∞„ÄÇ Êó∂‰ª£ËΩ¶ËΩÆÊªöÊªöÂêëÂâçÔºåÂπ∂ÈùûÂè™ÊúâÂÆû‰ΩìÁöÑ‰ΩúÂìÅÊâçËÉΩËµ∞Êã•ÊúâË∑ØÁ∫øÔºåÁîµÂ≠ê‰ΩúÂìÅÁöÑÁßüËµÅÂèØ‰ª•ÁªßÁª≠Â≠òÂú®Ôºå‰ΩÜ‰∏çËÉΩÂ¶®Á¢çÂ§ß‰ºó‰ª¨Êã•ÊúâÊ∞∏‰πÖÊùÉÂäõÔºå‰∏çÊòØÊâÄÊúâ‰∫∫ÈÉΩÊÉ≥‰∏ÄÁõ¥ËøáÁßüÊù•ÁöÑÁîüÊ¥ªÔºÅ ÊÄªÁªìÔºöÂÅöËøô‰∏™ÁâàÊùÉÊñπÈù¢ÁöÑÈ°πÁõÆÔºåÂêØÂä®ËµÑÈáëËá≥Â∞ëË¶ÅÂá†‰∫ø]]></content>
      <tags>
        <tag>ÊÄùËÄÉ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊòüÈú≤Ë∞∑Áâ©ËØ≠]]></title>
    <url>%2Fblog%2F2024%2F08%2F03%2F%E6%98%9F%E9%9C%B2%E8%B0%B7%E7%89%A9%E8%AF%AD%2F</url>
    <content type="text"><![CDATA[ÊúÄËøë‰∏§Âπ¥Ê∑±Â∫¶‰ΩìÈ™å‰∫Ü‰∏ÄÊääÊòüÈú≤Ë∞∑Áâ©ËØ≠Ôºå‰∏ÄÁõ¥Áé©ÁöÑÊòØÂÆâÂçìÁâàÁõóÁâàÁöÑÊòüÈú≤Ë∞∑Ôºå‰∏äÂë®Êú´Ê≤°Âøç‰ΩèÔºåÁªà‰∫éËøòÊòØ‰π∞‰∫Ü steam ‰∏äÁöÑÊ≠£ÁâàÊòüÈú≤Ë∞∑Áâ©ËØ≠Ôºå‰πüÁÆóÊòØÂêë‰ΩúËÄÖËá¥Êï¨ÔºåÊîØÊåÅ‰∫Ü‰∏Ä‰∏ã‰ΩúËÄÖ„ÄÇ ÂçïÊú∫Ê∏∏ÊàèÁé©ÈÄöÂÖ≥‰∫ÜÂü∫Êú¨‰∏äÂ∞±‰∏ç‰ºöÂÜçÊÉ≥Áé©‰∫ÜÔºåÊòüÈú≤Ë∞∑‰πü‰∏ÄÊ†∑„ÄÇ‰ΩÜÁé©‰∏ãÊù•‰πãÂêéÂèëÁé∞ÔºåÂÖ∂ÂÆûÊòüÈú≤Ë∞∑Áâ©ËØ≠ÊòØ‰∏™ÂΩ©ËõãÁ±ªÊ∏∏ÊàèÔºåÂΩ©ËõãÂÆûÂú®ÊòØÂ§™Â§ö‰∫ÜÔºåÁ≠âÂæÖÁé©ÂÆ∂ÂéªÊåñÊéò„ÄÇ ÊàëÊòØ‰∏ÄËæπÁúãÊîªÁï•‰∏ÄËæπÁé©ÁöÑÔºåÂü∫Êú¨‰∏äÂè™ÊúâÁ¨¨‰∏ÄÂπ¥Á¥Ø‰∏ÄÁÇπÔºåÁ¨¨‰∏ÄÂπ¥Ë¥¢ÂØåËá™Áî±‰πãÂêéÔºåÂêéÈù¢Â∞±ÊòØÂºÄÂßãÊêûÂêÑÁßç‰π±‰∏ÉÂÖ´Á≥üÁöÑÊé¢Á¥¢‰∫Ü„ÄÇÊàëÊòØÁî®‰∏äÂè§Ê∞¥ÊûúÈÖøÈÖíÂÆûÁé∞Ë¥¢ÂØåËá™Áî±ÁöÑÔºåËøô‰πüÊòØËøô‰∏™Ê∏∏ÊàèÊúÄÊé®ËçêÁöÑËµöÈí±ÊµÅÊ¥æ„ÄÇ ‰∏ãÈù¢ÊåâÁÖßÊàëËá™Â∑±ÁöÑÁêÜËß£ÂÜô‰∏Ä‰∏ãËøô‰∏™Ê∏∏ÊàèÁöÑÊîªÁï•Ôºö ÊîªÁï•‰∏∫‰∫ÜÁé©Ê∏∏Êàè‰∏çÂèóÈôêÔºåÈ¶ñÂÖàË¶ÅÂÆûÁé∞ÁªèÊµé‰∏äÁöÑËá™Áî±ÔºàÂÖ∂ÂÆû‰∫∫Áîü‰πüÊòØÂ¶ÇÊ≠§Ôºâ„ÄÇÊâÄ‰ª•Êàë‰ª¨‰ª• Êé¢Á¥¢Ê∏∏Êàè‰∏ñÁïå‰∏∫ÁªàÊûÅÁõÆÁöÑÔºåË¥¢ÂØåËá™Áî±‰∏∫‰∏ªÁ∫øÔºåÊù•Áé©Ëøô‰∏™Ê∏∏Êàè„ÄÇ Á¨¨‰∏ÄÂπ¥Êò•Â§©ÔºåÁñØÁãÇÊîíÈí±ÔºåÂè™‰∏∫Â§çÊ¥ªËäÇÁöÑËçâËéìÁßçÂ≠ê„ÄÇÁßçËçâËéìÊòØÊàë‰ª¨ÁöÑÁ¨¨‰∏ÄÊ°∂ÈáëÔºåÈÇ£‰πàÂ¶Ç‰ΩïÂ≠òÂ§ü‰π∞ËçâËéìÁßçÂ≠êÁöÑÈí±Âë¢ÔºüÊé®ËçêÁßçÂúüË±Ü„ÄÇ ÁÑ∂ÂêéÂ∞±ÊòØÂáÜÂ§á‰∏äÂè§Ê∞¥ÊûúÔºåÊ¥íÊ∞¥Âô®ÔºåÂ∞èÊ°∂ÔºåÂ∞èÊ°∂ÁöÑÂéüÊùêÊñôÊòØÔºöÈìúÈî≠ÔºåÈìÅÈî≠ÔºåÊú®ÊùêÔºåÊ©°Ê†ëÊ†ëËÑÇ„ÄÇÊâÄ‰ª•Ë¶ÅÁßçÊ©°Ê†ëÔºåÊ†ëÊ∂≤Êî∂ÈõÜË¶ÅÁî®Ê†ëÊ∂≤ÈááÈõÜÂô®ÔºåÂÖ∂ÂéüÊùêÊñôÊòØÊú®ÊùêÔºåÈìúÈî≠„ÄÇ‰∏äÂè§Ê∞¥ÊûúÊâ©Âº†ÈúÄË¶ÅÁßçÂ≠êÁîü‰∫ßÂô®ÔºåÂÖ∂ÂéüÊùêÊñôÊòØÊú®ÊùêÔºåÈáëÈî≠ÔºåÁÖ§ÁÇ≠„ÄÇÁÇºÂà∂ÈáëÂ±ûÈúÄË¶ÅÁÜîÁÇâÔºåÂéüÊùêÊñôÔºöÁü≥Â§¥ÔºåÈìúÁüøÁü≥ Ë¶ÅÈò≤Ê≠¢‰πåÈ∏¶ÂÅ∑ÂÆ∂ÔºåÂà∂‰ΩúÁ®ªËçâ‰∫∫ÂêßÔºåÂÖ∂ÂéüÊùêÊñôÊòØÔºöÊú®ÊùêÔºåÁÖ§ÁÇ≠ÔºåÁ∫§Áª¥ ÊÄªÁªìÂá∫ÔºåÂÖ≥ÈîÆÊùêÊñôÔºö Êú®ÊùêÔºåÁü≥Â§¥ÔºåÊ©°Ê†ëÔºåÁ∫§Áª¥ ÁüøÔºöÈìúÔºåÈìÅÔºåÈáëÔºåÁÖ§ ‰ΩúÁâ©ÔºöÂúüË±ÜÔºåËçâËéìÔºå‰∏äÂè§Ê∞¥Êûú ËøôÈáåÈù¢Ê¥íÊ∞¥Âô®ÊòØËá≥ÂÖ≥ÈáçË¶ÅÁöÑÔºåÊ≤°ÊúâÊ¥íÊ∞¥Âô®ËøôÁßçËá™Âä®ÂåñË£ÖÁΩÆÔºåËµöÈí±Ë¶ÅÁ¥ØÊ≠ª„ÄÇÊâ©Â±ïËÉåÂåÖÊ†ºÂ≠ê‰πüÊòØËá≥ÂÖ≥ÈáçË¶ÅÁöÑÔºå‰∏çÁÑ∂Êî∂ÈõÜÊ¥ªÂä®Â§™ÂèóÈôêÂà∂‰∫ÜÔºåÊØïÁ´üËøô‰∏™Ê∏∏ÊàèÊú¨Ë¥®‰∏äÊòØ‰∏™Êî∂ÈõÜÊ∏∏Êàè„ÄÇ‰∏ãÁüøÊúÄÈáçË¶ÅÁöÑÊòØÊ≠¶Âô®ÂíåËøêÊ∞î„ÄÇ‰∏§‰ª∂Á•ûÂô®Ëá≥ÂÖ≥ÈáçË¶ÅÔºöÈì∂Ê≤≥ÂâëÔºåÂπ∏ËøêÊàíÊåá„ÄÇ ‰ª•‰∏äÂÆåÊàêË¥¢ÂØåÁöÑÂéüÂßãÁßØÁ¥ØÁöÑÂêåÊó∂ÔºåÈ°∫Â∏¶ÊääËá™Ë∫´Ë£ÖÂ§áÊêûÂ•Ω„ÄÇÊé•‰∏ãÊù•Êàë‰ª¨ÈáçÁÇπËøΩÈÄêÁöÑ‰∏úË•øÂ∞±ÊòØ‰∫§ÈÄö‰∫ÜÔºåÂõûÁ®ãÈ≠îÊùñÂíåÊ≤ôÊº†ÔºåÂßúÂ≤õ‰∏§Â§ßÂõæËÖæÊòØÊúÄ‰ºòÂÖàË¶ÅÂÅöÂá∫Êù•ÁöÑ„ÄÇ ‰ª•‰∏äÈÉΩÂÅöÂÆåÔºåÂ∞±ÂºÄÂßãÊé¢Á¥¢Ëøô‰∏™Ê∏∏ÊàèÁöÑÂÖ®ÈÉ®ÂÜÖÂÆπ„ÄÇ Â∞èÊäÄÂ∑ß &amp; ÂΩ©Ëõã]]></content>
      <tags>
        <tag>Ê∏∏Êàè</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScriptÂ¶Ç‰ΩïÂÆûÁé∞ËäÇÊµÅÂíåÈò≤ÊäñÂáΩÊï∞]]></title>
    <url>%2Fblog%2F2023%2F12%2F05%2FJavaScript%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[ËäÇÊµÅÔºöthrottleÈò≤ÊäñÔºödebounce Ëøô‰∏§‰∏™ÊòØ JavaScript ÂºÄÂèë‰∏≠‰∏§‰∏™ÁªèÂ∏∏ÈúÄË¶ÅÁî®Âà∞ÁöÑÂ∑•ÂÖ∑ÂáΩÊï∞Ôºå‰∏ªË¶ÅÁî®‰∫éËß£ÂÜ≥ÊÄßËÉΩÈóÆÈ¢ò„ÄÇËäÇÊµÅÁöÑÊÑèÊÄùÊòØÈíàÂØπÊüêÂáΩÊï∞ÁöÑËøûÁª≠Ë∞ÉÁî®ÔºåÂú®‰∏ÄÂÆöÊó∂Èó¥ÂÜÖÊØèÈöî‰∏ÄÂ∞èÊÆµÊó∂Èó¥Ë∞ÉÁî®‰∏ÄÊ¨°ÁõÆÊ†áÂáΩÊï∞ÔºõÈò≤ÊäñÁöÑÊÑèÊÄùÊòØÈíàÂØπÊüêÂáΩÊï∞ÁöÑËøûÁª≠Ë∞ÉÁî®ÔºåÂè™Âú®‰∏ÄÂ∞èÊÆµÊó∂Èó¥Èó¥ÈöîÂêéÊâßË°åÊúÄÂêé‰∏ÄÊ¨°Ë∞ÉÁî®„ÄÇ Â∏∏Áî®ÁöÑÂú∫ÊôØÊúâÔºöÊµèËßàÂô®È´òÈ¢ë DOM ‰∫ã‰ª∂ÁöÑÂõûË∞ÉÂáΩÊï∞ÔºåÊØîÂ¶Ç scrollÔºåmousemoveÔºåresize Á≠â throttleÊó∂Èó¥Êà≥ÂÆûÁé∞Ôºö 123456789function throttle(fn, delay) &#123; let timer = Date.now(); return function (args) &#123; if (new Date().getTime() - timer &gt;= delay) &#123; timer = new Date().getTime(); return fn.apply(null, args); &#125; &#125;;&#125; ÂÆöÊó∂Âô®ÂÆûÁé∞Ôºö 1234567891011121314function throttle(fn, delay) &#123; let timer; return function (args) &#123; if (timer) &#123; return; &#125; let res; timer = setTimeout(() =&gt; &#123; timer = null; res = fn.apply(null, args); &#125;, delay); return res; &#125;;&#125; ÂÖ∂ÂÆûËøòÊúâÂæàÂ§öÁªÜËäÇÂèØ‰ª•ËßÑÂÆöÔºåÊØîÂ¶ÇÔºåÊòØÂê¶Ë¶ÅÁ´ãÂç≥ÊâßË°å‰∏ÄÊ¨°ÔºåÂ¶ÇÊûúÊØèÊ¨°ÁöÑÊâßË°åÁªìÊûú‰∏ç‰∏ÄÊ†∑ÔºåÊåáÂÆö‰∫ÜË¶ÅÊúÄÊñ∞ÁöÑÊâßË°åÁªìÊûúËøòÊòØÊúÄÊóßÁöÑÊâßË°åÁªìÊûú„ÄÇ debounce123456789function debounce(fn, delay) &#123; let timer; return function (args) &#123; clearTimeout(timer); timer = setTimeout(() =&gt; &#123; fn.apply(null, args); &#125;, delay); &#125;;&#125; debounce ‰πüÂèØ‰ª•ËßÑÂÆöÂæàÂ§öÁªÜËäÇÔºåÊØîÂ¶ÇÔºåÂ¶ÇÊûúÊØèÊ¨°ÁöÑÊâßË°åÁªìÊûú‰∏ç‰∏ÄÊ†∑ÔºåÊåáÂÆö‰∫ÜË¶ÅÊúÄÊñ∞ÁöÑÊâßË°åÁªìÊûúËøòÊòØÊúÄÊóßÁöÑÊâßË°åÁªìÊûú„ÄÇÂ¶ÇÊûúË¶ÅÊ±ÇÁ´ãÂç≥ËøîÂõûÁ¨¨‰∏ÄÊ¨°ÊâßË°åÁªìÊûúÔºåÊäõÂºÉ‰πãÂêéÁöÑËøûÁª≠Ë∞ÉÁî®ÔºåÊÄé‰πàÂÜôÔºü]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScriptÁöÑvar,let,constÁöÑÂå∫Âà´]]></title>
    <url>%2Fblog%2F2023%2F11%2F23%2FJavaScript%E7%9A%84var%2Clet%2Cconst%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[È¶ñÂÖàvar,let,constÈÉΩÊòØÁî®‰∫éÂÆö‰πâÂèòÈáèÔºåËøôÊòØÂÆÉ‰ª¨ÁöÑÂÖ±ÂêåÁÇπÔºåÈÇ£‰πàÂÆÉ‰ª¨ÁöÑÂå∫Âà´Âë¢Ôºü ÂÖ∂ÂÆûËøòÂèØ‰ª•‰ªÄ‰πàÈÉΩ‰∏çÁî®ÔºåÁõ¥Êé•ÁªôÂèòÈáèËµãÂÄºÔºåËøôÊ†∑ÁöÑËØùÔºåÂ∞±ÊòØËµãÂÄºÁªô‰∫ÜÂÖ®Â±ÄÂØπË±°ÔºàÂú®ÊµèËßàÂô®‰∏äÂ∞±ÊòØ window ÂØπË±°Ôºâ: 12a = 1;console.log(window.a); var ÂèØ‰ª•ÊèêÂçá‰ΩúÁî®ÂüüÔºåvar ÁöÑ‰ΩúÁî®ÂüüÂú®Èó≠ÂåÖÂÜÖ‰∏Ä‰∏ã‰ª£Á†Å‰∏ç‰ºöÊä•ÈîôÔºåÂç≥‰æøÂ£∞Êòé a Âú®Áî®Âà∞ a ÂêéÈù¢Ôºö 1234console.log(a, b, c);var a; // Âç≥‰æøÂ£∞ÊòéÂú®‰ΩøÁî®‰πãÂêéÔºå‰πü‰∏ç‰ºöÊä•ÈîôÔºåÂõ†‰∏∫varÂèòÈáèÂ£∞ÊòéÂíåÂáΩÊï∞Â£∞Êòé‰ºöÊèêÂçáÂà∞ÊúÄÂâçÈù¢ÊâßË°ålet b;const c; Âä†‰∏Ä‰∏™ÂùóÁ∫ß‰ΩúÁî®ÂüüÔºåvar ‰æùÊóß‰∏ç‰ºöÊä•ÈîôÔºö 123456console.log(a, b, c);&#123; var a; let b; const c;&#125; ËÄå‰∏î let Âíå const ÊòØÂùóÁ∫ß‰ΩúÁî®ÂüüÔºåÂÜôÊàêËøôÊ†∑‰πü‰ºöÊä•ÈîôÔºö 12345&#123; let a; const b;&#125;console.log(a, b); var Êó†Ê≥ïË∑®Èó≠ÂåÖÔºåÊä•ÈîôÔºö 1234567function a() &#123; function b() &#123; var a; &#125; console.log(a);&#125;a(); ÈÄöËøá var Â£∞ÊòéÁöÑÊâÄÊúâÂÖ®Â±ÄÂèòÈáèÂíåÂáΩÊï∞ÈÉΩ‰ºöÂèòÊàê window ÂØπË±°ÁöÑÂ±ûÊÄßÂíåÊñπÊ≥ïÔºåËÄå let Âíå const ‰∏ç‰ºö123456789var a = 1;var b = function () &#123; console.log("b");&#125;;// Áî®functionÂ£∞ÊòéÁöÑ‰πü‰ºöÂèòÊàêÂÖ®Â±ÄÂØπË±°ÁöÑÊñπÊ≥ïfunction c() &#123; console.log("c");&#125;console.log(window.a, window.b, window.c); ‰∏Ä‰∏™ÁªèÂÖ∏ÁöÑÂùë12345for (var i = 0; i &lt; 6; i++) &#123; setTimeout(() =&gt; &#123; console.log(i); // ËæìÂá∫ÂÖ®ÈÉ®ÊòØ6 &#125;);&#125; ‰ΩøÁî® let ÂèØ‰ª•ÈÅøÂÖçÊ≠§ÈóÆÈ¢òÔºö 12345for (let i = 0; i &lt; 6; i++) &#123; setTimeout(() =&gt; &#123; console.log(i); // ËæìÂá∫ÂÖ®ÈÉ®ÊòØ6 &#125;);&#125; ‰πüÂèØ‰ª•Áî®Èó≠ÂåÖÊù•Ëß£ÂÜ≥Ê≠§ÈóÆÈ¢òÔºålet ÊòØ es6 ÂºïËøõÁöÑÔºåÂÆûÈôÖ‰∏äÂú® es5 ‰∏ÄËà¨Â∞±ÊòØÁî®Èó≠ÂåÖÊù•Ëß£ÂÜ≥ÈóÆÈ¢òÔºö 12345678function fn(i) &#123; setTimeout(() =&gt; &#123; console.log(i); &#125;);&#125;for (let i = 0; i &lt; 6; i++) &#123; fn(i);&#125; È°∫Â∏¶ËØ¥‰∏Ä‰∏ã js ÊÄé‰πàÂÆûÁé∞ sleepÔºåÁî® setTimeout Âíå Promise ÂèØ‰ª•ÂÆûÁé∞ 123456789101112function sleep(time) &#123; return new Promise((resolve, reject) =&gt; &#123; setTimeout(() =&gt; &#123; resolve(true); &#125;, time); &#125;);&#125;for (let i = 0; i &lt; 6; i++) &#123; await sleep(1000); console.log(i);&#125; ‰∏çËøá setTimeout ÂÖ∂ÂÆûÁöÑ sleep ÁßíÊï∞‰∏çÂ§™ÂáÜÁ°ÆÔºåÂÆÉË¶ÅÁ≠âÊâÄÊúâÁöÑÂæÆ‰ªªÂä°ÈÉΩÂÅöÂÆåÔºåÂ¶ÇÊûúÂæÆ‰ªªÂä°ÂæàÈïøÁöÑËØùÔºåÂ∞±Ë¶ÅÂ§öÁ≠â‰∏Ä‰ºöÂÑø‰∫Ü„ÄÇ 123456789101112131415161718192021222324function costManyTime() &#123; let count = 0; for (let i = 0; i &lt; 1000; i++) &#123; for (let j = 0; j &lt; 100_0000; j++) &#123; count = Math.random(); &#125; &#125;&#125;function sleep(time) &#123; return new Promise((resolve, reject) =&gt; &#123; setTimeout(() =&gt; &#123; resolve(true); &#125;, time); &#125;);&#125;for (let i = 0; i &lt; 6; i++) &#123; await sleep(1000); console.log(i, new Date()); console.time("costManyTime"); costManyTime(); console.timeEnd("costManyTime");&#125;]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ê®°ÊãüÂÆûÁé∞JavaScriptÁöÑbindÊñπÊ≥ï]]></title>
    <url>%2Fblog%2F2023%2F11%2F22%2F%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84bind%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[bind ÂáΩÊï∞Êàë‰ª¨ÁªèÂ∏∏Áî®Âà∞Ôºå‰∏ªË¶ÅÁî®‰∫éÊç¢Áªë this„ÄÇÂÖ∂ËøîÂõûÂÄºÊòØ‰∏Ä‰∏™ÊñπÊ≥ï„ÄÇÊ≠§Â§ñÊàë‰ª¨ËøòÂèØ‰ª•Êää‰∏Ä‰∫õÂèÇÊï∞Âõ∫ÂÆö‰∏ãÊù•ÔºåÁõ∏ÂΩì‰∫éÂ∞ÅË£Ö‰∫Ü‰∏Ä‰∏™ÁÆÄÊòìÂáΩÊï∞„ÄÇ Êç¢Áªë this:123456789101112const obj = &#123; bbb: "hello", sayHi,&#125;;function sayHi() &#123; console.log("Hi", this.bbb);&#125;sayHi();const a = sayHi.bind(obj);a(); ÂáèÂ∞ëÂèÇÊï∞Ôºö123456789101112const obj = &#123; bbb: "hello", sayHi,&#125;;function sayHi(a, b) &#123; console.log("Hi", this.bbb, a, b);&#125;sayHi();const a = sayHi.bind(obj, "jjjj");a("123"); ‰∏çËøáÂ¶ÇÊûú bind ËøîÂõûÁöÑÊñπÊ≥ïÁî®‰ΩúÊûÑÈÄ†ÂáΩÊï∞ÁöÑËØùÔºåÁªëÂÆö this Âä®‰ΩúÂ∞±Â§±Êïà‰∫ÜÔºå‰∏î‰ºöËøîÂõûÂéüÊñπÊ≥ïÊûÑÈÄ†Âá∫ÁöÑÊñ∞ÂØπË±°„ÄÇ Áî®‰ΩúÊûÑÈÄ†ÂáΩÊï∞Ôºö12345678910111213const obj = &#123; bbb: "hello", sayHi,&#125;;function sayHi(a, b) &#123; console.log(this, this.bbb);&#125;const a = sayHi.bind(obj, "jjjj");a();const b = new a();console.log(b); Âü∫‰∫éËøô‰∫õÁâπÊÄßÊàë‰ª¨Ëá™Â∑±Ê®°ÊãüÂÆûÁé∞‰∏Ä‰∏™ bind ÊñπÊ≥ïÔºö 1234567891011121314151617Function.prototype.bindFn = function bind(thisArg) &#123; if (typeof this !== "function") &#123; throw TypeError(this + "is not a function"); &#125; const self = this; const bindArgs = [].slice.call(arguments, 1); function bound() &#123; const boundArgs = [].slice.call(arguments); const finalArgs = bindArgs.concat(boundArgs); if (new.target === bound) &#123; return new self(); &#125; else &#123; return self.apply(thisArg, finalArgs); &#125; &#125; return bound;&#125;; ÂáΩÊï∞ÁöÑ.nameÂíå.lengthÂ±ûÊÄßÊ≠§Â§ñÂáΩÊï∞ËøòÊúâ‰∏Ä‰∫õÈªòËÆ§Ë°å‰∏∫ÔºåÊØîÂ¶Ç.nameÊâìÂç∞ÂáΩÊï∞ÂêçÂíå.lengthÊâìÂç∞ÂΩ¢ÂèÇ‰∏™Êï∞„ÄÇÂ¶ÇÊûúÊòØ bind ÂáΩÊï∞ËøîÂõûÁöÑËØùÔºå‰ºöÂú®ÂâçÈù¢Âä†‰∏™bound 12345678910111213141516console.log(Function.prototype.bind.name); // bindconsole.log(Function.prototype.bind().name); // boundconst obj = &#123; bbb: "hello", sayHi,&#125;;function sayHi(a, b, c) &#123; console.log(this, this.bbb, b, c);&#125;console.log(sayHi.name, sayHi.length); // sayHi 3const a = sayHi.bind(obj, "jjjj");console.log(a.name, a.length); // bound sayHi 2console.log(function () &#123;&#125;.bind().name); // 'bound ' Êàë‰ª¨ÊûÑÂª∫ÁöÑ bind Âú®Ëøô‰∏™ÊñπÈù¢‰æùÊóßË∑üÂéüÁîü bind ÁöÑË°®Áé∞‰∏ç‰∏ÄÊ†∑Ôºö 12345678910111213141516171819202122232425262728293031Function.prototype.bindFn = function bind(thisArg) &#123; if (typeof this !== "function") &#123; throw TypeError(this + "is not a function"); &#125; const self = this; const bindArgs = [].slice.call(arguments, 1); function bound() &#123; const boundArgs = [].slice.call(arguments); const finalArgs = bindArgs.concat(boundArgs); if (new.target === bound) &#123; return new self(); &#125; else &#123; return self.apply(thisArg, finalArgs); &#125; &#125; return bound;&#125;;const obj = &#123; bbb: "hello", sayHi,&#125;;function sayHi(a, b, c) &#123; console.log(this, this.bbb);&#125;const a = sayHi.bindFn(obj, "jjjj");console.log(a.name, a.length); // bound 0const b = sayHi.bind(obj, "jjjjj");console.log(b.name, b.length); // bound sayHi 2 ÂáΩÊï∞ÁöÑ.nameÂíå.lengthÂ±ûÊÄßÊòØÊó†Ê≥ï‰øÆÊîπÁöÑÔºö 1234var aa = function () &#123;&#125;;aa.name = "ccc";aa.length = 4;console.log(aa.name, aa.length); ÂéüÂõ†ÊòØwritable: falseÔºå‰ΩÜÂèØ‰ª•Ëá™Â∑±ÈÖçÁΩÆÔºö 12345var a = () =&gt; &#123;&#125;;console.log(a.name);Object.getOwnPropertyDescriptor(a, "name"); // ËæìÂá∫Ôºö&#123;configurable: true, enumerable: false, value: 'a', writable: false&#125;Object.defineProperty(a, "name", &#123; writable: true, value: "bb" &#125;);console.log(a.name); new.targetÁöÑÁî®Â§ÑÂ¶ÇÊûúÁî®this instanceof boundÊù•Êõø‰ª£new.target === bound‰ºöÊúâÂ¶Ç‰∏ãÈóÆÈ¢òÔºö 1234567891011function Student(name) &#123; if (this instanceof Student) &#123; this.name = name; console.log("name", name); &#125; else &#123; throw new Error("ÂøÖÈ°ªÈÄöËøánewÂÖ≥ÈîÆÂ≠óÊù•Ë∞ÉÁî®Student„ÄÇ"); &#125;&#125;var student = new Student("Ëã•");var notAStudent = Student.call(student, "Â∑ù"); // ‰∏çÊäõÂá∫ÈîôËØØÔºå‰∏îÊâßË°å‰∫Ü„ÄÇconsole.log(student, "student", notAStudent, "notAStudent"); ÂèØËßÅÂπ∂ÈùûÊòØÂÆû‰æãÂ∞±ÂèØ‰ª•ÔºåËÄåÂøÖÈ°ªÊòØÁî® new Ë∞ÉÁî®ÊâçÊòØÊûÑÈÄ†ÂáΩÊï∞ ÊúÄÁªàÁâàÊú¨1234567891011121314151617181920212223Function.prototype.bindFn = function bind(thisArg) &#123; if (typeof this !== "function") &#123; throw TypeError(this + "is not a function"); &#125; const self = this; const bindArgs = [].slice.call(arguments, 1); function bound() &#123; const boundArgs = [].slice.call(arguments); const finalArgs = bindArgs.concat(boundArgs); if (new.target === bound) &#123; return new self(); &#125; else &#123; return self.apply(thisArg, finalArgs); &#125; &#125; const fnName = bound.name + " " + self.name; Object.defineProperty(bound, "name", &#123; writable: true, value: fnName &#125;); Object.defineProperty(bound, "name", &#123; writable: false &#125;); const fnLength = self.length - bindArgs.length; Object.defineProperty(bound, "length", &#123; writable: true, value: fnLength &#125;); Object.defineProperty(bound, "length", &#123; writable: false &#125;); return bound;&#125;; ÂèÇËÄÉ Èù¢ËØïÂÆòÈóÆÔºöËÉΩÂê¶Ê®°ÊãüÂÆûÁé∞ JS ÁöÑ bind ÊñπÊ≥ï - ÊéòÈáë]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ê®°ÊãüÂÆûÁé∞JavaScriptÁöÑapplyÂíåcallÊñπÊ≥ï]]></title>
    <url>%2Fblog%2F2023%2F11%2F21%2F%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84apply%E5%92%8Ccall%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[apply Âíå call ÁöÑÁõ∏ÂêåÁÇπÊòØÔºö ÈÉΩÁî±‰∏Ä‰∏™ÂáΩÊï∞Ë∞ÉÁî® Á¨¨‰∏Ä‰∏™ÂèÇÊï∞ÈÉΩÊòØÂéüÂáΩÊï∞ÁöÑÊâßË°åÁéØÂ¢É this ‰∏çÂêåÁÇπÊòØÔºö apply ÁöÑÁ¨¨‰∫å‰∏™ÂèÇÊï∞Êé•Êî∂ÂéüÂáΩÊï∞ÁöÑÊâÄÊúâÂèÇÊï∞ÔºåËÄå call ‰ªéÁ¨¨‰∫å‰∏™ÂèÇÊï∞ÂºÄÂßãË∑üÂéüÂáΩÊï∞‰∏ÄÊ†∑ÊòØÊâìÊï£ÁöÑ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123F(arg1, arg2, ...)&#123;&#125;F.apply(thisArg, [arg1, arg2, ...]);F.call(thisArg, arg1, arg2, ...); ÈúÄË¶ÅÁâπÂà´Ê≥®ÊÑèÁöÑÊòØÔºåÂ¶ÇÊûúÊòØÂú®Èùû‰∏•Ê†ºÊ®°Âºè‰∏ãÔºåthisArg Â¶ÇÊûú‰∏∫ null Êàñ undefinedÔºåÂ∞±‰ºöË¢´ÊõøÊç¢ÊàêÂÖ®Â±ÄÂØπË±°ÔºàÂú®ÊµèËßàÂô®‰∏≠ÊòØ windowÔºâÔºõÂ¶ÇÊûú‰∏∫ÂéüÂßãÂÄºÔºåÂ∞±‰ºöË¢´ÊõøÊç¢ÊàêÂéüÂßãÂÄºÁöÑÁöÑËá™Âä®ÂåÖË£ÖÂØπË±°„ÄÇ ‰∏•Ê†ºÊ®°Âºè‰∏ãÔºåthisArg ‰º†‰ªÄ‰πàÂ∞±ÊòØ‰ªÄ‰πà„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546function getGlobalObject() &#123; return this;&#125;function generateFunctionCode(argsLength) &#123; let res = "return arguments[0][arguments[1]]("; for (let i = 0; i &lt; argsLength; i++) &#123; if (i &gt; 0) &#123; res += ","; &#125; res += "arguments[2][" + i + "]"; &#125; res += ")"; // Áõ∏ÂΩì‰∫é return 'arguments[0][arguments[1]](arguments[2][0], arguments[2][1], arguments[2][2]...)'; return res;&#125;Function.prototype.applyFn = function apply(thisArg, argsArray) &#123; // Ë∞ÉÁî®ÊñπÂøÖÈ°ªÊòØÂáΩÊï∞ if (typeof this !== "function") &#123; throw new TypeError(this + "is not a function"); &#125; // Èùû‰∏•Ê†ºÊ®°Âºè‰∏ãÔºåthisArg Â¶ÇÊûú‰∏∫ null Êàñ undefinedÔºåÂ∞±‰ºöË¢´ÊõøÊç¢ÊàêÂÖ®Â±ÄÂØπË±° if (thisArg === null || thisArg === void 0) &#123; thisArg = getGlobalObject(); &#125; // Èùû‰∏•Ê†ºÊ®°Âºè‰∏ãÔºåthisArg Â¶ÇÊûú‰∏∫ÂéüÂßãÂÄºÔºåÂ∞±‰ºöË¢´ÊõøÊç¢ÊàêÂéüÂßãÂÄºÁöÑÁöÑËá™Âä®ÂåÖË£ÖÂØπË±° thisArg = new Object(thisArg); if (argsArray === null || argsArray === void 0) &#123; argsArray = []; &#125; if (argsArray !== new Object(argsArray)) &#123; throw new TypeError("The second parameter must be an array like object."); &#125; const hasOriginVal = thisArg.hasOwnProperty("fn"); const originVal = thisArg["fn"]; thisArg["fn"] = this; const code = generateFunctionCode(argsArray.length); const result = new Function(code)(thisArg, "fn", argsArray); if (hasOriginVal) &#123; thisArg["fn"] = originVal; &#125; else &#123; delete thisArg["fn"]; &#125; return result;&#125;; ‰ª•‰∏ä‰ª£Á†ÅÊ∂âÂèäÂà∞‰∫ÜÊå∫Â§öÁü•ËØÜÁÇπÁöÑÔºö Èò≤Âæ°ÂºèÁºñÁ®ãÔºåÂØπÂèÇÊï∞ËøõË°åÊ†°È™åÔºöthis, thisArg, argsArray ÁªÜÂøÉÔºå‰∏∫‰∫ÜÈò≤Ê≠¢ÊîπÂà∞ fnÔºåÂÅö‰∫ÜÊöÇÂ≠ò ES3 ÂºÄÂßãÔºåÈùû‰∏•Ê†ºÊ®°Âºè‰∏ãÔºåthisArg ÁöÑÁâπÊÆäÂ§ÑÁêÜ Â¶ÇÊûú‰∏çËÆ©Áî® ES6 ÁöÑÊâ©Â±ïËøêÁÆóÁ¨¶...ÔºåÂ∞±Ë¶ÅÂà©Áî®new Function()Ëá™Â∑±ÊûÑÈÄ†Êñ∞ÁöÑÂáΩÊï∞Ë∞ÉÁî®ËØ≠Âè•„ÄÇapply ÊòØ es5 ÁöÑÔºåÊâÄ‰ª•‰∏çËÆ©Áî® es6 ÁöÑËØ≠Ê≥ïÂæàÊ≠£Â∏∏„ÄÇ Âú® ES3„ÄÅES5 ‰∏≠ undefined ÊòØËÉΩ‰øÆÊîπÁöÑ ÂÄüÂä©‰ª•‰∏äÁªìÊûúÔºåÊ®°ÊãüÂÆûÁé∞ call ÊñπÊ≥ïÁöÑËØùÔºåÂ¶Ç‰∏ãÔºö 123Function.prototype.callFn = function call(thisArg) &#123; return this.applyFn(thisArg, [].slice.applyFn(arguments, [1]));&#125;; ÊµãËØïÁî®‰æãÔºö 1234567891011const a = &#123; name: "1", h,&#125;;function h(arg1) &#123; console.log(arg1, this.name);&#125;h.applyFn(a, ["7"]);h.callFn(a, "8"); Âú® ES3„ÄÅES5 ‰∏≠ undefined ÊòØËÉΩ‰øÆÊîπÁöÑÂèØËÉΩÂ§ßÈÉ®ÂàÜ‰∫∫‰∏çÁü•ÈÅì„ÄÇES5 ‰∏≠ËôΩÁÑ∂Âú®ÂÖ®Â±Ä‰ΩúÁî®Âüü‰∏ã‰∏çËÉΩ‰øÆÊîπÔºå‰ΩÜÂú®Â±ÄÈÉ®‰ΩúÁî®Âüü‰∏≠‰πüÊòØËÉΩ‰øÆÊîπÁöÑÔºå‰∏ç‰ø°ÂèØ‰ª•Â§çÂà∂‰ª•‰∏ãÊµãËØï‰ª£Á†ÅÂú®ÊéßÂà∂Âè∞ÊâßË°å‰∏ã„ÄÇËôΩÁÑ∂‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÊòØ‰∏ç‰ºöÁöÑÂéª‰øÆÊîπÂÆÉ„ÄÇ 12345function test() &#123; var undefined = 3; console.log(undefined); // chrome‰∏ã‰πüÊòØ 3&#125;test(); ÊâÄ‰ª•Âà§Êñ≠‰∏Ä‰∏™ÂèòÈáè a ÊòØ‰∏çÊòØ undefinedÔºåÊõ¥‰∏•Ë∞®ÁöÑÊñπÊ°àÊòØ typeof a === &#39;undefined&#39;ÊàñËÄÖ a === void 0;ËøôÈáåÈù¢Áî®ÁöÑÊòØ voidÔºåvoid ÁöÑ‰ΩúÁî®ÊòØËÆ°ÁÆóË°®ËææÂºèÔºåÂßãÁªàËøîÂõû undefinedÔºå‰πüÂèØ‰ª•ËøôÊ†∑ÂÜô void(0)„ÄÇ ÂèÇËÄÉ Function() constructor - JavaScript | MDN void ËøêÁÆóÁ¨¶ - JavaScript | MDN ‰∏∫‰ªÄ‰πàÁî®„Äåvoid 0„Äç‰ª£Êõø„Äåundefined„Äç undefined - JavaScript | MDN Èù¢ËØïÂÆòÈóÆÔºöËÉΩÂê¶Ê®°ÊãüÂÆûÁé∞ JS ÁöÑ call Âíå apply ÊñπÊ≥ï - ÊéòÈáë]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScriptÂØπË±°ÁöÑÁªßÊâøÊúâÂì™Âá†Áßç]]></title>
    <url>%2Fblog%2F2023%2F11%2F20%2FJavaScript%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%BB%A7%E6%89%BF%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%2F</url>
    <content type="text"><![CDATA[javascript È´òÁ∫ßÁ®ãÂ∫èËÆæËÆ°‰∏≠ÊúâÂÜôÔºåÂØπË±°ÁöÑÁªßÊâøÊÄªÂÖ±ÊúâÂÖ≠Áßç: ÂéüÂûãÈìæÁªßÊâøÔºåÂ≠êÂéüÂûãÊòØÁà∂ÂéüÂûãÁöÑ‰∏Ä‰∏™ÂÆû‰æã ÂÄüÁî®ÊûÑÈÄ†ÂáΩÊï∞ÁªßÊâøÔºåÂ≠êÊûÑÈÄ†ÂáΩÊï∞Ë∞ÉÁî®Áà∂ÊûÑÈÄ†ÂáΩÊï∞ ÁªÑÂêàÂºèÁªßÊâø(ÁªÑÂêà 1 Âíå 2) ÂéüÂûãÂºèÁªßÊâø ÂØÑÁîüÂºèÁªßÊâø ÂØÑÁîüÂºèÁªÑÂêàÁªßÊâøÔºàÁªÑÂêà 3 Âíå 5Ôºâ ÂéüÂûãÈìæÁªßÊâø1234567891011121314151617181920212223function Parent() &#123; // Parent ÁöÑÈùûÂºïÁî®Â±ûÊÄß this.a = 1; // Parent ÁöÑÂºïÁî®Â±ûÊÄß this.array = [1, 2, 3];&#125;// Parent ÁöÑÈùôÊÄÅÊñπÊ≥ïParent.prototype.func1 = () =&gt; &#123; console.log("func1");&#125;;function Child() &#123; this.b = 2;&#125;Child.prototype = new Parent(); // Â≠êÂéüÂûãÊòØÁà∂ÂéüÂûãÁöÑ‰∏Ä‰∏™ÂÆû‰æãChild.prototype.func2 = () =&gt; &#123; console.log("func2");&#125;;const child1 = new Child();const child2 = new Child();child1.a = 3;child1.array.push(4);console.log(child2.a); // 1console.log(child2.array); // [1, 2, 3, 4] Áº∫ÁÇπÊòØÔºöÁî±‰∫éÂ≠êÂéüÂûãÊòØÁà∂ÂéüÂûãÁöÑ‰∏Ä‰∏™ÂÆû‰æãÔºåÊâÄ‰ª•Áà∂Á±ªÂ±ûÊÄßÂú®Â≠êÁ±ªÁöÑÂéüÂûã‰∏äÔºåËÄå‰∏çÂú®ÊØè‰∏™Â≠êÁ±ªÁöÑÂÆû‰æã‰∏äÔºåÊâÄ‰ª•Â¶ÇÊûúÂ±ûÊÄßÊòØÂºïÁî®Á±ªÂûãÊó∂‰ºö‰∫íÁõ∏ÂΩ±Âìç„ÄÇ ÂÄüÁî®ÊûÑÈÄ†ÂáΩÊï∞ÁªßÊâø1234567891011121314151617181920212223function Parent() &#123; // Parent ÁöÑÈùûÂºïÁî®Â±ûÊÄß this.a = 1; // Parent ÁöÑÂºïÁî®Â±ûÊÄß this.array = [1, 2, 3];&#125;// Parent ÁöÑÈùôÊÄÅÊñπÊ≥ïParent.prototype.func1 = () =&gt; &#123; console.log("func1");&#125;;function Child() &#123; // ÊääÁà∂Á∫ßÂ±ûÊÄßÁªëÂÆöÂà∞Â≠êÂÆû‰æãÈáåÈù¢ Parent.call(this); this.b = 2;&#125;Child.prototype.func2 = () =&gt; &#123; console.log("func2");&#125;;const child1 = new Child();const child2 = new Child();child1.array.push(4);console.log(child2.array); // [1, 2, 3]console.log(child1.func1); // undefined Ëß£ÂÜ≥‰∫ÜÂéüÂûãÈìæÁªßÊâø‰∏≠ÔºåÂ±ûÊÄßÊ≤°ÁªëÂÆöÂà∞Â≠êÂÆû‰æãÈáåÈù¢ÁöÑÈóÆÈ¢òÔºå‰ΩÜÂ¶ÇÊûú‰ªÖËøôÊ†∑ÁªßÊâøÁöÑËØùÔºåÁà∂ÂéüÂûã‰∏äÁöÑÂ±ûÊÄßÊ≤°ÊúâË¢´ÁªßÊâø ÁªÑÂêàÂºèÁªßÊâøÁªºÂêà‰∫Ü‰ª•‰∏ä‰∏§ÁßçÁªßÊâøÊñπÂºèÔºåÂèØ‰ª•Êó¢ÁªßÊâøÂéüÂûãÔºåÂèàÊääÂ±ûÊÄßÁªëÂÆöÂà∞‰∫ÜÂ≠êÂÆû‰æãÔºà‰ªéËÄåË¶ÜÁõñÂéüÂûãÁöÑÂ±ûÊÄßÔºâ 123456789101112131415161718192021222324function Parent() &#123; // Parent ÁöÑÈùûÂºïÁî®Â±ûÊÄß this.a = 1; // Parent ÁöÑÂºïÁî®Â±ûÊÄß this.array = [1, 2, 3];&#125;// Parent ÁöÑÈùôÊÄÅÊñπÊ≥ïParent.prototype.func1 = () =&gt; &#123; console.log("func1");&#125;;function Child() &#123; // ÊääÁà∂Á±ªÂ±ûÊÄßÁªëÂÆöÂà∞Â≠êÂÆû‰æãÈáåÈù¢ÔºåÊ≠§Â§ÑÁ¨¨‰∫åÊ¨°Ë∞ÉÁî®Áà∂ÊûÑÈÄ†ÂáΩÊï∞ Parent.call(this); this.b = 2;&#125;Child.prototype = new Parent(); // Â≠êÂéüÂûãÊòØÁà∂ÂéüÂûãÁöÑ‰∏Ä‰∏™ÂÆû‰æãÔºåÊ≠§Â§ÑÁ¨¨‰∏ÄÊ¨°Ë∞ÉÁî®Áà∂ÊûÑÈÄ†ÂáΩÊï∞Child.prototype.func2 = () =&gt; &#123; console.log("func2");&#125;;const child1 = new Child();const child2 = new Child();child1.array.push(4);console.log(child2.array); // [1, 2, 3]console.log(child1.func1); // func1 ÁªÑÂêàÂºèÁªßÊâøÊïàÊûúÊòØÂ∑≤ÁªèËææÂà∞‰∫ÜÔºåÊó¢ÊääÁà∂Á±ªÁöÑÂÆû‰æãÂ±ûÊÄßÁªëÂÆöÂà∞‰∫ÜÂ≠êÁ±ªÂÆû‰æã‰∏≠ÔºåÂèàÊääÁà∂Á±ªÈùôÊÄÅÊñπÊ≥ïÁªëÂÆöÂà∞‰∫ÜÂ≠êÁ±ªÂéüÂûã‰∏ä„ÄÇ Áº∫ÁÇπÊòØÔºö Áà∂ÊûÑÈÄ†ÂáΩÊï∞ÊâßË°å‰∫Ü‰∏§Ê¨° Áà∂ÂÆû‰æã‰∏äÂ≠òÂÇ®‰∫ÜÂ§ö‰ΩôÁöÑÂ±ûÊÄßÔºàÂéãÊ†πÁî®‰∏çÂà∞ÔºâÔºåÊµ™Ë¥πÂÜÖÂ≠ò ÂéüÂûãÂºèÁªßÊâøÂàõÂª∫‰∏Ä‰∏™‰∏¥Êó∂ÁöÑÊûÑÈÄ†ÂáΩÊï∞ÔºåÂπ∂ÊääËøô‰∏™‰∏¥Êó∂ÁöÑÊûÑÈÄ†ÂáΩÊï∞ÁöÑ prototype ÊåáÂêëÁà∂ÂéüÂûã 12345function myObject(ParentPrototype) &#123; function F() &#123;&#125; F.prototype = ParentPrototype; return new F();&#125; ËøôÊ†∑Â∞±ÈÅøÂÖç‰∫ÜÂàõÂª∫Áà∂Á±ªÁöÑÂÆû‰æãÔºåÂèØ‰ª•Âè™‰ΩøÁî®Áà∂Á±ªÁöÑÂéüÂûã Áõ∏ÂΩì‰∫éObject.create()ÔºåECMAScript 5 ÈÄöËøáÂ¢ûÂä† Object.create()ÊñπÊ≥ïÂ∞ÜÂéüÂûãÂºèÁªßÊâøÁöÑÊ¶ÇÂøµËßÑËåÉÂåñ‰∫Ü„ÄÇËøô‰∏™ÊñπÊ≥ïÊé•Êî∂‰∏§‰∏™ÂèÇÊï∞Ôºö‰Ωú‰∏∫Êñ∞ÂØπË±°ÂéüÂûãÁöÑÂØπË±°Ôºå‰ª•ÂèäÁªôÊñ∞ÂØπË±°ÂÆö‰πâÈ¢ùÂ§ñÂ±ûÊÄßÁöÑÂØπË±°ÔºàÁ¨¨‰∫å‰∏™ÂèØÈÄâÔºâ„ÄÇÂú®Âè™Êúâ‰∏Ä‰∏™ÂèÇÊï∞Êó∂ÔºåObject.create()‰∏éËøôÈáåÁöÑ myObject()ÊñπÊ≥ïÊïàÊûúÁõ∏Âêå ÂØÑÁîüÂºèÁªßÊâøÂú®ÂéüÂûãÂºèÁªßÊâøÁöÑÂü∫Á°Ä‰∏äÔºåÂÅö‰∫Ü‰∏Ä‰∏™Â∞ÅË£ÖÔºö 123456function inheritPrototype(Child, Parent) &#123; // Êã∑Ë¥ù‰∫Ü‰∏Ä‰ªΩÁà∂Á∫ßÁöÑÂéüÂûãÔºåËÄåÈùûÁîüÊàêÁà∂Á∫ßÁöÑÂÆû‰æãÔºåÊâÄ‰ª•‰∏äÈù¢Ê≤°ÊúâÁà∂Á∫ßÁöÑÂÆû‰æãÁöÑÂ±ûÊÄß const p = myObject(Parent.prototype); p.constructor = Child; Child.prototype = p;&#125; ÂØÑÁîüÂºèÁªÑÂêàÁªßÊâøÁªºÂêà‰∫ÜÂØÑÁîüÂºèÁªßÊâøÂíåÁªÑÂêàÂºèÁªßÊâøÔºåÂπ∂ÂÖãÊúç‰∫ÜÁªÑÂêàÂºèÁªßÊâøÁöÑÁº∫ÁÇπ 1234567891011121314151617181920212223242526272829303132333435function myObject(Parent) &#123; function F() &#123;&#125; F.prototype = Parent; return new F();&#125;function inheritPrototype(Child, Parent) &#123; // Êã∑Ë¥ù‰∫Ü‰∏Ä‰ªΩÁà∂Á∫ßÁöÑÂéüÂûãÔºåËÄåÈùûÁîüÊàêÁà∂Á∫ßÁöÑÂÆû‰æãÔºåÊâÄ‰ª•‰∏äÈù¢Ê≤°ÊúâÁà∂Á∫ßÁöÑÂÆû‰æãÁöÑÂ±ûÊÄß const p = myObject(Parent.prototype); p.constructor = Child; Child.prototype = p;&#125;function Parent() &#123; // Parent ÁöÑÈùûÂºïÁî®Â±ûÊÄß this.a = 1; // Parent ÁöÑÂºïÁî®Â±ûÊÄß this.array = [1, 2, 3];&#125;// Parent ÁöÑÈùôÊÄÅÊñπÊ≥ïParent.prototype.func1 = () =&gt; &#123; console.log("func1");&#125;;function Child() &#123; // ÊääÁà∂Á±ªÂ±ûÊÄßÁªëÂÆöÂà∞Â≠êÂÆû‰æãÈáåÈù¢ Parent.call(this); this.b = 2;&#125;inheritPrototype(Child, Parent);Child.prototype.func2 = () =&gt; &#123; console.log("func2");&#125;;const child1 = new Child();const child2 = new Child();child1.array.push(4);console.log(child2.array); // [1, 2, 3]console.log(child1.func1); // func1 ES6 ÁöÑ class ËØ≠Ê≥ïÁ≥ñÔºåÂ∞±ÊòØÂØÑÁîüÂºèÁªÑÂêàÁªßÊâø ÂèÇËÄÉ JavaScript È´òÁ∫ßÁ®ãÂ∫èËÆæËÆ°ÔºàÁ¨¨ 4 ÁâàÔºâ ‰∏ÄÊñáÁúãÊáÇ JS ÁöÑÁªßÊâø]]></content>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ê®°ÊãüÂÆûÁé∞JavaScriptÁöÑnewÊìç‰ΩúÁ¨¶]]></title>
    <url>%2Fblog%2F2023%2F11%2F20%2F%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84new%E6%93%8D%E4%BD%9C%E7%AC%A6%2F</url>
    <content type="text"><![CDATA[JavaScript ÁöÑ new Êìç‰ΩúÁ¨¶ÔºåÊìç‰ΩúÂØπË±°ÊòØ‰∏Ä‰∏™ÂáΩÊï∞ÔºàÁÆ≠Â§¥ÂáΩÊï∞Ôºåasync ÂáΩÊï∞Èô§Â§ñÔºâÔºå‰∏ÄËà¨Êù•ËØ¥Ê≠§ÂáΩÊï∞Êàë‰ª¨‰∏çËá™Â∑±ÂÜô returnÔºåÊ≠§Êó∂ËøîÂõûÁöÑÊòØ‰∏™ÈªòËÆ§ÁöÑÂØπË±° this„ÄÇ Â¶ÇÊûúËá™Â∑±ÂÜô‰∫ÜËøîÂõûÔºåÈÇ£‰πàÂàÜ‰∏§ÁßçÊÉÖÂÜµÔºö ËøîÂõûÁöÑÊòØÂØπË±°ÊàñËÄÖÊñπÊ≥ïÔºåÂ∞±ËøîÂõûÊàë‰ª¨Ëá™Â∑±ÂÜôÁöÑËøîÂõûÂÜÖÂÆπ Âê¶ÂàôËøîÂõûÈªòËÆ§ÂØπË±° this 12345678910111213141516171819202122function A() &#123; this.aa = "6"; // 7ÁßçÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÔºåÈÉΩ‰∏çËÉΩ‰Ωú‰∏∫ÊûÑÈÄ†ÂáΩÊï∞ÁöÑËøîÂõûÂÄºÔºåÊÑèÊÄùÂ∞±ÊòØ‰ºöË¢´ÂΩìÂÅöÊó†ÊïàËØ≠Âè•ÂøΩÁï•Êéâ„ÄÇËøîÂõûÁöÑ‰æùÊóßÊòØÈªòËÆ§ÂØπË±°thisÔºåËÄåÈùûÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûã // return 1; // Number // return false; // Boolean // return "1"; // String // return Symbol(); // Symbol // return BigInt(1); // BigInt ‰πüÂèØ‰ª•Ëøô‰πàÂÜô return 1n; // return undefined; // Undefined // return null; // Null // 5ÁßçÂ∏∏ËßÅÂØπË±°ÔºåÈÉΩÂèØ‰ª•‰Ωú‰∏∫ÊûÑÈÄ†ÂáΩÊï∞ÁöÑËøîÂõûÂÄº // return &#123;&#125;; // Object // return []; // Array // return new Date(); // Date // return /a/; // RegExp // return new Error(); // Error // ÂáΩÊï∞ÔºåÂèØ‰ª•‰Ωú‰∏∫ÊûÑÈÄ†ÂáΩÊï∞ÁöÑËøîÂõûÂÄº // return function()&#123;&#125;; // Function&#125;const a = new A();console.log(a, a.aa); new Êìç‰ΩúÁ¨¶ÁöÑÊ®°ÊãüÂÆûÁé∞Ôºö 123456789101112131415function newOperator(C) &#123; if (typeof C !== "function") &#123; throw "newOperator function the first param must be a function"; &#125; // ES6 new.target ÊåáÂêëÊûÑÈÄ†ÂáΩÊï∞ÔºåÂèØ‰ª•Áî®Êù•Ê†áËØÜÂáΩÊï∞ÊòØÂê¶Ë¢´Áî®ÂÅöÊûÑÈÄ†ÂáΩÊï∞ newOperator.target = C; const obj = Object.create(C.prototype); const args = [].slice.call(arguments, 1); // argumentsÊú¨Ë∫´Ê≤°ÊúâsliceÊñπÊ≥ïÔºåÈô§‰∫ÜËøôÁßçÂÜôÊ≥ïÔºåËøòÂèØ‰ª•ËøôÊ†∑Ôºö[...arguments].slice(1);ÊàñËÄÖArray.from(arguments).slice(1); const res = C.apply(obj, args); // typeof null ÁöÑÁªìÊûúÊòØ'object'ÔºåÊâÄ‰ª•ËøôÈáåË¶ÅÊéíÈô§Êéâ if ((typeof res === "object" &amp;&amp; res !== null) || typeof res === "function") &#123; return res; &#125; return obj;&#125; ÂèÇËÄÉ Â¶Ç‰ΩïÊ®°ÊãüÂÆûÁé∞ JS ÁöÑ new Êìç‰ΩúÁ¨¶ new.target - JavaScript | MDN]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Á≠ñÂàí‰∏ÄÊ¨æÊ∏∏Êàè]]></title>
    <url>%2Fblog%2F2023%2F11%2F06%2F%E7%AD%96%E5%88%92%E4%B8%80%E6%AC%BE%E6%B8%B8%E6%88%8F%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÁé©‰∫Ü BeecarbonizeÔºå‰∏ÄÊ¨æÊ¨ßÁõüËµÑÂä©ÁöÑÂáèÁ¢≥ÊéíÊîæÂ∞èÊ∏∏Êàè„ÄÇÂ±û‰∫éÂÖ¨ÁõäÁ±ªÔºåÊïôËÇ≤Á±ªÁöÑÊ∏∏Êàè„ÄÇÈùûÂ∏∏ÁöÑÁÆÄÂçïÊúâË∂£„ÄÇÈÅÇËêåÁîü‰∫ÜËá™Â∑±‰πüÂÅö‰∏ÄÊ¨æÁ±ª‰ººÁöÑÊ∏∏ÊàèÔºåÊâìÁÆóÊ®°‰ªøËøô‰∏™Áé©Ê≥ïÔºåÊç¢‰∏Ä‰∏™‰∏ªÈ¢ò„ÄÇ ËØ•Ê∏∏ÊàèÁöÑË¶ÅÁ¥†ÊúâÔºö Âç°Áâå ‰∫ã‰ª∂Áâå]]></content>
      <tags>
        <tag>Ê∏∏ÊàèÁ≠ñÂàí</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÆûÁé∞‰∏Ä‰∏™È´òÊïàÁöÑdeepClone]]></title>
    <url>%2Fblog%2F2023%2F11%2F01%2F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84deepClone%2F</url>
    <content type="text"><![CDATA[ÂÖàÊù•ÂÆûÁé∞‰∏Ä‰∏™ÊúÄÁÆÄÁâàÁöÑ deepClone1234567891011121314151617181920212223function deepClone(obj) &#123; if ( obj == null || typeof obj == "string" || typeof obj == "boolean" || typeof obj == "number" ) &#123; return obj; &#125; if (Array.isArray(obj)) &#123; let temp = []; for (let i = 0; i &lt; obj.length; i++) &#123; temp[i] = deepClone(obj[i]); &#125; return temp; &#125; else if (typeof obj == "object") &#123; let temp = &#123;&#125;; for (let k of Object.keys(obj)) &#123; temp[k] = deepClone(obj[k]); &#125; return temp; &#125;&#125; Ëø≠‰ª£ÁâàÊú¨ÁöÑ deepCloneÊúÄËøë EDA È°πÁõÆÂú®Ëß£ÂÜ≥‰∏Ä‰∫õÊÄßËÉΩ‰∏äÁöÑÈóÆÈ¢òÔºåÈ¶ñÂΩìÂÖ∂ÂÜ≤ÁöÑÂ∞±ÊòØ deepCloneÔºåÂêÑÁßçÂú∞ÊñπÈÉΩÂú®Áî®Ôºå‰∏îÂçÅÂàÜÂç°ÊÄßËÉΩ„ÄÇÂ¶Ç‰ΩïËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÂë¢Ôºü Áî±‰∫éÊàë‰ª¨È°πÁõÆ‰∏≠ÁöÑ deepClone ÊòØ‰∏Ä‰∏™ÈÄíÂΩíÁâàÊú¨ÁöÑ deepCloneÔºåÊâÄ‰ª•Â∫îËØ•ÂèØ‰ª•ÈÄöËøáÊääÂÆÉÊîπÊàêËø≠‰ª£ÁâàÁöÑ deepClone Êù•ÊèêÈÄü„ÄÇ Áî®Ê†àÊù•ÂÆûÁé∞Ëø≠‰ª£„ÄÇÂáΩÊï∞Ë∞ÉÁî®Ê†àÊú¨Ë∫´‰πüÊòØÊ†àÔºå‰ΩÜÂºÄÈîÄËÇØÂÆöÊØîËá™Â∑±ÂÜôÁöÑÊ†àË¶ÅÂ§ß‰∏Ä‰∫õ„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394function toString(a) &#123; return Object.prototype.toString.call(a).slice(8, -1);&#125;function isObj(a) &#123; return toString(a) === "Object";&#125;function isNum(a) &#123; return toString(a) === "Number";&#125;function isStr(a) &#123; return toString(a) === "String";&#125;function isBool(a) &#123; return toString(a) === "Boolean";&#125;function isSymbol(a) &#123; return toString(a) === "Symbol";&#125;function isBigInt(a) &#123; return toString(a) === "BigInt";&#125;function isFunction(a) &#123; return toString(a) === "Function";&#125;function isRegExp(a) &#123; return toString(a) === "RegExp";&#125;function isDate() &#123; return toString(a) === "Date";&#125;function isError() &#123; return toString(a) === "Error";&#125;functionfunction isPrim(a) &#123; return ( isNum(a) || isStr(a) || isBool(a) || isSymbol(a) || isBigInt(a) || isFunction(a) || a === null || a === void 0 );&#125;function deepCloneStack(obj) &#123; if (isPrim(obj)) &#123; return obj; &#125; const root = Array.isArray(obj) ? [] : &#123;&#125;; const stack = [[&#123; root &#125;, obj, "root"]]; while (stack.length &gt; 0) &#123; let [target, obj, key] = stack.pop(); if (Array.isArray(obj)) &#123; if (!target[key]) &#123; target[key] = new Array(obj.length); &#125; for (let k = 0; k &lt; obj.length; k++) &#123; if (isPrim(obj[k])) &#123; target[key][k] = obj[k]; &#125; else &#123; stack.push([target[key], obj[k], k]); &#125; &#125; &#125; else &#123; if (!target[key]) &#123; target[key] = &#123;&#125;; &#125; for (let k in obj) &#123; if (isPrim(obj[k])) &#123; target[key][k] = obj[k]; &#125; else &#123; stack.push([target[key], obj[k], k]); &#125; &#125; &#125; &#125; return root;&#125; Âú®Á∫øËøêË°åÂú∞ÂùÄ ‰∏çËøáÂæàÈÅóÊÜæÁöÑÊòØËø≠‰ª£ÁâàÊú¨ÈÄüÂ∫¶ÊØîÈÄíÂΩíËøòË¶ÅÊÖ¢Ôºå‰º∞ËÆ°ÊòØÂõ†‰∏∫ js ÁöÑÊï∞ÁªÑÊÄßËÉΩÂ§™Â∑ÆÂØºËá¥ÁöÑ„ÄÇ]]></content>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∏ÄÁßçÈÄüÁÆó]]></title>
    <url>%2Fblog%2F2023%2F10%2F30%2F%E4%B8%80%E7%A7%8D%E9%80%9F%E7%AE%97%2F</url>
    <content type="text"><![CDATA[‰ª• 5 ÁªìÂ∞æÁöÑÊï∞ÁöÑÂπ≥ÊñπÔºåÈÉΩÊúâ‰∏Ä‰∏™ÂæàÂ•ΩËÆ∞ÁöÑÈÄüÁÆóÊñπÂºèÔºåÂ∞±ÊòØÂâçÈù¢ÁöÑÊï∞‰πò‰ª•ÊØîÂÆÉÂ§ß‰∏ÄÁöÑÊï∞ÁÑ∂ÂêéÂÜçÊãºÊé•‰∏ä 25ÔºåÊØîÂ¶Ç $25\times 25$ÔºåÂ∞±ÊòØ $2\times 3$ Á≠â‰∫é 6ÔºåÂÜçÊãºÊé•‰∏ä 25ÔºåÁ≠â‰∫é 625„ÄÇ $65\times 65$ÔºåÂ∞±ÊòØ $6\times 7$ Á≠â‰∫é 42ÔºåÂÜçÊãºÊé•‰∏ä 25ÔºåÁ≠â‰∫é 4225„ÄÇ Â¶Ç‰ΩïËØÅÊòéËøô‰∏™ÈÄüÁÆóÊòØÊ≠£Á°ÆÁöÑÂë¢ÔºüÊàë‰ª¨ËøòÊòØÁî®Á¨¶Âè∑Á≥ªÁªüÊù•ÊääËøô‰∏™ËÆ°ÁÆóËøáÁ®ãÊäΩË±°ÂåñÔºåËÆæÊï∞Â≠ó‰∏∫Ôºö$(a\times 10+5)$ $$\begin{align}(a\times 10+5)\times(a\times 10+5)&amp;= 100\times a^2+100\times a+25 \newline&amp;= 100\times a(a+1)+25 \newline\end{align}$$ ËØÅÊòéÂÆåÊØï Ëøô‰∏™ÈÄüÁÆóÊñπÊ≥ïÊòØÊàëÂ∞èËàÖËàÖÊïô‰ºöÊàëÁöÑÔºåÂèØÊÉú‰ªñËã±Âπ¥Êó©ÈÄù‰∫Ü„ÄÇÊ≠§ÊñáÁî®‰ª•Á∫™Âøµ‰ªñ]]></content>
      <tags>
        <tag>Êï∞Â≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÈáçÂ∫ÜÊóÖÊ∏∏ÊîªÁï•]]></title>
    <url>%2Fblog%2F2023%2F10%2F12%2F%E9%87%8D%E5%BA%86%E6%97%85%E6%B8%B8%E6%94%BB%E7%95%A5%2F</url>
    <content type="text"><![CDATA[ÊôØÁÇπÊé®ËçêÊ∏∏Áé©Êó∂Èó¥Ôºö 3 Êúà-5 Êúà‰ª•Âèä 9 Êúà~11 ÊúàÔºàÂ§©Ê∞îÂáâÁàΩÂÆú‰∫∫Ôºâ Êé®ËçêË∑ØÁ∫øÂèäÊôØÁÇπÔºö Day1ÔºöËß£ÊîæÁ¢ë‚ÄîÈïøÊ±üÁ¥¢ÈÅì-Ê¥™Â¥ñÊ¥û Day2ÔºöÁ£ÅÂô®Âè£‚ÄîÈ©¨ÊàøÊπæ 66 Âè∑Ê±üÊπñËèú-ÂõõÂ∑ùÁæéÊúØÂ≠¶Èô¢‚ÄîÂçóÊª®Ë∑Ø Day3ÔºöÊùéÂ≠êÂùù‚ÄîÈπÖÂ≤≠‰∫åÂéÇ‚ÄîÂçóÂ±±‰∏ÄÊ£µÊ†ë ‰ΩèÊé®Ëçê‰ΩèËß£ÊîæÁ¢ëÊ¥™Â¥ñÊ¥ûÈôÑËøë ÊôØÁÇπÊ¥™Â¥ñÊ¥ûÂª∫ËÆÆ‰∏ãÂçà 4 ÁÇπÂéªÔºåÁôΩÂ§©ÂíåÊôö‰∏äÁöÑÊôØËâ≤ÈÉΩËÉΩÁúãÁöÑÂà∞„ÄÇÊôö‰∏äÂ§úÊôØÂæàÊºÇ‰∫ÆÔºåÂª∫ËÆÆ‰∏çË¶ÅÈîôËøá„ÄÇÁôΩÂ§©‰∫∫Â∞ëÔºåÊôö‰∏ä‰∫∫Â§ö„ÄÇÂ§úÊôöÁöÑÊ¥™Â¥ñÊ¥ûÔºåÂ∫îËØ•ËøúËßÇÔºå‰ªéÊõ¥È´òÂ§ÑÊãç‰∏ãÂÆÉÁöÑÂÖ®Ë≤åÔºõÁôΩÂ§©ÁöÑÊ¥™Â¥ñÊ¥ûÔºåÂèØ‰ª•ËÆ©‰∫∫‰ª•Êõ¥ËøëÁöÑË∑ùÁ¶ªÊù•Êé•Ëß¶Ôºå‰ΩìÈ™åËøá‰∏§Áßç‰∏çÂêåÂú∫ÊôØ‰∏ãÁöÑÂÆÉÔºåÊâç‰ºöÊòØÂÆåÊï¥ÁöÑ„ÄÇ Â±±ÂüéÊ≠•ÈÅìÂ±±ÂüéÊ≠•ÈÅìÂõ†‰∏∫‰ªé‰Ω†ÁöÑÂÖ®‰∏ñÁïåË∑ØËøáËÄåÈóªÂêç„ÄÇËøôÈáåÊòØËÄÅÈáçÂ∫ÜÁöÑÂç∞ËÆ∞ÔºåÊº´Ê≠•Áü≥ÊùøË∑ØÁöÑÂ∞èÂ∑∑ÔºåÊòØ‰ΩìÈ™åÂ±±ÂüéÈüµÂë≥ÁöÑÊúÄ‰Ω≥ÊñπÂºè‰πã‰∏Ä„ÄÇÂØπÈù¢‰æøÊòØÊªöÊªöÈïøÊ±üÔºåÂÆûÊòØ‰∏ÄÂ§ÑËßÇÊ±üÊôØÁöÑÂ•ΩÂéªÂ§Ñ„ÄÇ Ê≠•ÈÅì‰ªéÂ±±ÂüéÂ∑∑Âà∞ÈÄöËøúÈó®ÔºåÂÖ®Á®ã 3 ÂÖ¨ÈáåÔºåÊÖ¢Ë°å 1-2 Â∞èÊó∂„ÄÇ ÂçóÂ±±‰∏ÄÊ£µÊ†ëËßÇÊôØÂè∞ÈáçÂ∫ÜÁöÑÂçóÂ±±‰∏ÄÊ£µÊ†ëÔºåÂèØ‰ª•ÁúãÂà∞Â™≤ÁæéÈ¶ôÊ∏ØÁöÑÂ§úÊôØÔºå‰∏ÄÁúºÊúõÂéªÔºåÁæéËΩÆÁæéÂ•Ç Á£ÅÂô®Âè£Âè§Èïá‚Äî‚ÄîÂ∞èÈáçÂ∫ÜËß£ÊîæÁ¢ë‚Äî‚ÄîÂ∞èÈ¶ôÊ∏ØÈïøÊ±üÁ¥¢ÈÅì‚Äî‚Äî‰ΩìÈ™åÁ©∫‰∏≠Ëµ∞ÂªäÁöáÂÜ†Â§ßÊâ∂Ê¢ØËøûÊé•‰∫Ü‰∏§Ë∑ØÂè£ÂíåÈáçÂ∫ÜÁÅ´ËΩ¶ËèúÂõ≠ÂùùÁ´ôÔºåÈáçÂ∫ÜÁöÑÁâπËâ≤‰∫§ÈÄö‰πã‰∏ÄÔºåÊòØ‰∫öÊ¥≤Á¨¨‰∫åÈïøÁöÑ‰∏ÄÁ∫ßÊèêÂçáÂù°Âú∞Â§ßÊâ∂Ê¢Ø„ÄÇ Êâ∂Ê¢ØÁöÑÈÄüÂ∫¶ÊØî‰∏ÄËà¨Êâ∂Ê¢ØÂø´ÂæàÂ§öÔºåÊâ∂Ê¢ØÂûÇÁõ¥È´òÂ∫¶ 64 Á±≥ÔºåÊâ∂Ê¢ØÈïøÂ∫¶ 150 Á±≥Ôºå30 Â∫¶ÂÄæÊñúËßíÂ∫¶ÔºåÂú®ËßÜËßâ‰∏äÈùûÂ∏∏Âà∫ÊøÄ„ÄÇÈÖçÂ•óËÆæÊñΩÊØîËæÉËÄÅÊóßÔºå‰ΩÜÂÄºÂæó‰∏ÄËØï„ÄÇ ‰ΩçÁΩÆÔºö‰πòÂùêÂú∞ÈìÅ 1„ÄÅ3 Âè∑Á∫øÂà∞‰∏§Ë∑ØÂè£ÂæÄËèúÂõ≠ÂùùÊñπÂêë‰∏ãË°å Èó®Á•®ÔºöÂçïÁ®ã 2 ÂÖÉ/‰∫∫ ÂºÄÊîæÊó∂Èó¥Ôºö07:00-22:00 ÊùéÂ≠êÂùùËΩªËΩ®Á´ôÈπÖÂ≤≠Ë¥∞ÂéÇÁΩóÊ±âÂØ∫Âú®ÈóπÂ∏ÇÂå∫ÈáçÈáçÈ´òÊ•ºÂåÖÂõ¥‰∏ãÔºåÈ¶ôÁÅ´Êó∫ÁõõÁöÑÂè§ÂàπÔºå‰πüÊòØ„ÄäÁñØÁãÇÁöÑÁü≥Â§¥„ÄãÊãçÊëÑÂú∞ ÊπñÂπø‰ºöÈ¶ÜÊπñÂπø‰ºöÈ¶ÜÂª∫‰∫éÊ∏ÖÊúùÔºåÂú®ÈáçÂ∫ÜÁé∞‰ª£ÂåñÁöÑÂª∫Á≠ë‰∏≠ÊòæÂæóÁ™ÅÂÖÄ‰ΩÜÊòØÂèàÂà´ÂÖ∑‰∏ÄÊ†ºÔºåÂæàÂñúÊ¨¢ÈáåÈù¢ÁöÑÂª∫Á≠ëÔºåÂ§ßÂ§ö‰ΩøÁî®Êú®ÊùêÂª∫ÈÄ†ÁöÑÔºåÊµÆÈõïÈÉΩÈõïÂàªÂæóÂæàÁ≤æÁæéÔºåÂú®ËøôÈáåÁªèÂ∏∏‰ºöÈÅáËßÅÂæàÂ§öÊãçÂ©öÁ∫±ÁÖßÁöÑÂ§´Â¶ªÂìàÂìà~ Âú∞ÂùÄÔºöÈáçÂ∫ÜÂ∏ÇÊ∏ù‰∏≠Âå∫Ëä≠ËïâÂõ≠ 1 Âè∑ÈáçÂ∫ÜÊπñÂπø‰ºöÈ¶Ü ‰∏≠Â±±ÂõõË∑ØÁî±‰∫éÊòØ‰∏≠ÂÖ±ÈáçÂ∫ÜÂ∏ÇÂßî„ÄÅÈáçÂ∫ÜÂ∏ÇÊîøÂ∫úÊâÄÂú®Âú∞ÔºåÊâÄ‰ª•ÊµÅÈú≤Âá∫‰∏Ä‰ªΩÊ≤âÈáçÁöÑÂÆÅÈùôÔºåËøôÊù°Ë∑Ø‰∏ä‰∫∫ÊµÅ‰πüÊØîËæÉÂ∞ëÔºåÂª∫ËÆÆÂâçÂæÄ„ÄÇËøôÊù°Ë°ó‰∏äÂéÜÂè≤ÈÅóËøπÈô§‰∫Ü‰∏≠ÂõΩÊ∞ë‰∏ªÂÖöÊ¥æÂçöÁâ©È¶ÜÁöÑÁâπÂõ≠Â§ñÔºåËøòÊúâÊ°ÇÂõ≠„ÄÅÂë®ÂÖ¨È¶Ü„ÄÅÊà¥ÂÖ¨È¶Ü„ÄÅÂº†È™ßÂÖ¨È¶Ü„ÄÅÂõΩÊ∞ëÊîøÂ∫úÊÄªÁªüÂ∫úÊóßÂùÄÁ≠â„ÄÇÈô§‰∫ÜÂè§Êú¥ÁöÑÂª∫Á≠ëÔºå‰∏≠Â±±ÂõõË∑ØÊúÄËÆ©‰∫∫ËµèÂøÉÊÇ¶ÁõÆÁöÑËøòÊúâ‰∏§ÂàóÊûùÂè∂ÁπÅËåÇÁöÑÈªÑËëõÊ†ëÔºåÂ§èÂ§©Êù•Ê≠§ÂáâÁàΩÂèàÊ∏ÖÊñ∞„ÄÇ Â∑ùÁæéÊ∂ÇÈ∏¶Ë°óËôΩÁÑ∂Ê∂ÇÈ∏¶ÊØîËæÉËÄÅÊóß‰∫ÜÔºå‰ΩÜÊ≠§Âú∞‰∫∫Â∞ëÂÆâÈùôÔºåÂèØ‰ª•Èöè‰æøÂáπÈÄ†ÂûãÊãçÁÖß„ÄÇÊãçÂá∫Êù•ÁöÑÁÖßÁâáÈÉΩË∂ÖÁ∫ßÂ•ΩÁúãÔºåËÄå‰∏îËøô‰∏™Âú∞ÊñπÁâπÂà´ÊúâÊñáËâ∫Ê∞îÊÅØÔºÅ ÈáëÂàöÁ¢ëËÄÅË°óÁ∫¢Ëâ≤ÊóÖÊ∏∏ÊôØÁÇπÔºöÁôΩÂÖ¨È¶ÜÔºåÊ∏£ÊªìÊ¥ûÊñáÂàõÂå∫ÔºöÂñµÂÑøÁü≥ÊñáÂàõÂõ≠ÂñµÂÑøÁü≥ÂàõËâ∫ÁâπÂå∫ÂâçË∫´‰∏∫‰∏ä‰∏ñÁ∫™ 70 Âπ¥‰ª£ÁöÑÁôΩÁå´Êó•ÂåñËÄÅÂéÇÔºåÂéÇÂå∫ÂÖ∑Êúâ‰∏∞ÂéöÁöÑÂéÜÂè≤Â∫ïËï¥ÔºåÊõæÈ£éÈù°ÈáçÂ∫ÜÁöÑÁôΩÁå´„ÄÅËúÄÁßÄ„ÄÅÈπÖÁâåÊ¥óÊ∂§Áî®ÂìÅÈÉΩÂá∫Ëá™Êú¨ÂéÇ„ÄÇ 2010 Âπ¥ÈáçÂ∫ÜÊú™Êù•‰πãÂÆ∂ÁΩÆ‰∏öÊúâÈôêÂÖ¨Âè∏‰ªéÈ¶ôÊ∏ØÂíåËÆ∞ÈªÑÂüîÊâãÈáåÊî∂Ë¥≠‰∫ÜÁôΩÁå´Êó•ÂåñËÄÅÂéÇÔºåËÅòËØ∑‰∫Ü‰∏ñÁïåÂçÅÂ§ßÂàõÊñ∞ËÆæËÆ°‰∫ãÂä°ÊâÄ‰πã‰∏Ä‚Äî‚ÄîËç∑ÂÖ∞ËëóÂêçÁöÑ MVRDV Âª∫Á≠ëËÆæËÆ°‰∫ãÂä°ÊâÄÔºåÂú®Â∞äÈáçÂéüÊúâÂª∫Á≠ëÁªìÊûÑÁöÑÂü∫Á°Ä‰∏äÂØπÂª∫Á≠ëÂ§ñËßÇËøõË°åÂçáÁ∫ßÊîπÈÄ†ÔºåÊó¢‰øùÁïô‰∫ÜËÄÅÂéÇÂå∫ÁöÑÂéÜÂè≤Â∫ïËï¥ÂèàÊ≥®ÂÖ•‰∫ÜÊñ∞ÁöÑÊ¥ªÂäõ„ÄÇ ÂçéÁîüÂõ≠ÈáëËâ≤ËõãÁ≥ïÊ¢¶ÂπªÁéãÂõΩÁæéÈ£üÈáçÂ∫ÜÁÅ´ÈîÖÔºàÂçóÂù™ÊàñËÄÖËæÉÂú∫Âè£ÔºâÔºåÈáçÂ∫ÜÂ∞èÈù¢ÔºåÈáçÂ∫ÜÈÖ∏Ëæ£Á≤âÔºåÊ£íÊ£íÈ∏°ÔºåÊØõË°ÄÊó∫ÔºåÂ±±ÂüéÂ∞èÊ±§ÂúÜÔºåÈáçÂ∫ÜÁÉ§È±ºÔºåÈ∏°ÊùÇÔºåËæ£Â≠êÈ∏°ÔºåÊäÑÊâãÔºåË±ÜËä±ÔºàÂê¥ËÆ∞Ë±ÜËä±Èù¢ÔºåÂçóÂù™‰∏áÂØøË∑Ø‰∏≠Áôæ‰ªìÂÇ®ÔºâÔºåÊùøÂá≥Èù¢ÔºàÊ∏ùÂåóÂå∫ÊùæÁü≥ÊîØË∑Ø 108 Âè∑ÔºâÔºåËäùÈ∫ªÂ∞èÁ≥çÁ≤ëÔºåÁÉ§ËÑëËä± È©¨ÊàøÊπæ 66 Âè∑Ê±üÊπñËèúÈáçÂ∫ÜÂøÖÂêÉÁæéÈ£üÈô§‰∫ÜÁÅ´ÈîÖÔºåÂ∞èÈù¢ËøòÊúâÊ±üÊπñËèúÔºåËøô‰∏™Âú∞ÊñπÁâπÂà´ÊúâÊÑèÊÄùÔºå‰ΩçÁΩÆÂú®ÂçäÂ±±ËÖ∞‰∏äÔºåÊúâÂ±±ÂüéÁâπËâ≤ÔºåÂ∫óÂÜÖÊòØ‰∏ÉÂÖ´ÂçÅÂπ¥‰ª£ÁöÑÈ£éÊ†ºÔºåÊòØ‰∏Ä‰∏™ÊãçÁÖßÊâìÂç°ÁöÑÂ•ΩÂú∞ÊñπÔºåÂΩìÁÑ∂Âë≥ÈÅì‰πüÊòØÈùûÂ∏∏Ê£íÁöÑ„ÄÅÂ§©‰∏ãÁ¨¨‰∏ÄËí∏ÈáåÈù¢ÊòØÁ≤âËí∏ÁöÑ‰∏âÁ∫øËÇâ„ÄÅËÇ•ËÇ†„ÄÅÊéíÈ™®Ëí∏ÂæóÈùûÂ∏∏ËΩØÁ≥ØÔºåÂû´Â∫ïÁöÑÁ∫¢ËãïÁîúÁîúÁöÑ‰πüÂæàÂ•ΩÂêÉ„ÄÅËæ£Â≠êÈ∏°„ÄÅÊ∞¥ÁÖÆÈ±ºÈ∫ªËæ£È≤úÈ¶ôÔºå‰∏ãÈÖíÂèà‰∏ãÈ•≠ÔºåÂë≥ÈÅìÂèØ‰ª•ËØ¥ÊòØÂæàÊ≠£ÂÆóÁöÑÂï¶ÔºÅ Âêõ‰πãËñáÁÅ´ÈîÖÂú®È©¨ÊàøÊπæ 66 Âè∑Ê±üÊπñËèúÊóÅËæπÁöÑÁÅ´ÈîÖÂ∫óÔºå‰∏äËøáËàåÂ∞ñ‰∏äÁöÑ‰∏≠ÂõΩÁ¨¨‰∏ÄÂ≠£Ôºå21 Âπ¥ÁöÑËÄÅÂìÅÁâåÔºåËøòÊòØËÄÅÂë≥ÈÅì„ÄÅÈáçÁÇπÊòØÊÄß‰ª∑ÊØîËøòÂæàÈ´òÔºåËøô‰∏™Âπ¥Â§¥Ëøò‰øùÊåÅÂá†ÂùóÈí±‰∏Ä‰ªΩÁöÑËèú‰πüÊòØÂæàÂ∞ë‰∫Ü„ÄÇ ‰πüÊòØÊàëÁªèÂ∏∏ÂéªÂêÉÁöÑ‰∏ÄÂÆ∂ÁÅ´ÈîÖ„ÄÇ Âú∞ÂùÄÔºöÊ≤ôÂù™ÂùùÂå∫Êù®ÂÖ¨Ê°•Âú∞ÈìÅÁ´ô 1B Âá∫Âè£ÊóÅÁöÑÂçäÂù°‰∏ä Ë¥πÁî®Êú∫Á•®‰ªéÈïøÊ≤ôÈ£ûÈáçÂ∫Ü677*2(Âê´‰∫Ü‰øùÈô©30*2Âùó)ÔºåÈ´òÈìÅÁ•®Ê†™Ê¥≤Ë•øÂà∞ÈïøÊ≤ôÂçó 49 + ÈáçÂ∫ÜË•øÂà∞Ê∑±Âú≥Âåó 554.5 + ÈáçÂ∫ÜÂà∞Ê†™Ê¥≤È´òÈìÅ 448.5+24.5Ôºå‰ΩèÂÆøË¥π‰∏âÊôö 850„ÄÇË∑ØË¥π+‰ΩèÂÆøË¥πÊÄªÂÖ± 3280.5]]></content>
      <tags>
        <tag>ÊîªÁï•</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊâãÂÜô‰ºòÂÖàÈòüÂàó]]></title>
    <url>%2Fblog%2F2023%2F10%2F09%2F%E6%89%8B%E5%86%99%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[‰ºòÂÖàÈòüÂàó‰∏ÄËà¨ÊòØÁî®Â†ÜÊù•ÂÆûÁé∞ÁöÑÔºåÊü•ËØ¢Â§çÊùÇÂ∫¶ÊòØ O(1)ÔºåÊèíÂÖ•ÂíåÂà†Èô§ÁöÑÂ§çÊùÇÂ∫¶ÊòØ O(logN)„ÄÇÂ†ÜÁªìÊûÑÂ∞±ÊòØ‰∏Ä‰∏™ÂÆåÂÖ®‰∫åÂèâÊ†ëÔºåÂÆåÂÖ®‰∫åÂèâÊ†ëÂèØ‰ª•Áî®Êï∞ÁªÑÂÆûÁé∞„ÄÇ ÊµãËØïÂú∫ÊôØÔºö215. Êï∞ÁªÑ‰∏≠ÁöÑÁ¨¨ K ‰∏™ÊúÄÂ§ßÂÖÉÁ¥† 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576class PriorityQueue1&lt;T&gt; &#123; arr: T[]; compare: (a: T, b: T) =&gt; number; constructor(props: &#123; compare: (a: T, b: T) =&gt; number &#125;) &#123; const &#123; compare &#125; = props; this.compare = compare; this.arr = []; &#125; swap(arr, index1, index2) &#123; const temp = arr[index1]; arr[index1] = arr[index2]; arr[index2] = temp; &#125; enqueue(a) &#123; this.arr.push(a); this.bubbleUp(this.arr.length - 1); &#125; dequeue() &#123; this.delete(0); &#125; bubbleUp(index) &#123; if (this.arr.length &lt;= 1 || index &lt;= 0) &#123; return; &#125; const pre = Math.floor((index - 1) / 2); if (this.compare(this.arr[index], this.arr[pre]) &gt; 0) &#123; this.swap(this.arr, pre, index); this.bubbleUp(pre); &#125; &#125; delete(index) &#123; this.swap(this.arr, index, this.arr.length - 1); this.arr.pop(); this.sinkDown(index); &#125; sinkDown(index) &#123; if (this.arr.length &lt;= 1 || index &gt;= this.arr.length - 1) &#123; return; &#125; if ( (index * 2 + 1 &lt; this.arr.length &amp;&amp; this.compare(this.arr[index], this.arr[index * 2 + 1]) &lt; 0) || (index * 2 + 2 &lt; this.arr.length &amp;&amp; this.compare(this.arr[index], this.arr[index * 2 + 2]) &lt; 0) ) &#123; if ( index * 2 + 2 &gt;= this.arr.length || this.compare(this.arr[index * 2 + 1], this.arr[index * 2 + 2]) &gt; 0 ) &#123; this.swap(this.arr, index, index * 2 + 1); this.sinkDown(index * 2 + 1); &#125; else &#123; this.swap(this.arr, index, index * 2 + 2); this.sinkDown(index * 2 + 2); &#125; &#125; &#125; front() &#123; return this.arr[0]; &#125; size() &#123; return this.arr.length; &#125;&#125;function findKthLargest(nums: number[], k: number): number &#123; // PriorityQueue1 const pq = new PriorityQueue1(&#123; compare: (a: number, b: number) =&gt; a - b &#125;); for (let i = 0; i &lt; nums.length; i++) &#123; pq.enqueue(nums[i]); &#125; for (let i = k - 1; i &gt;= 1; i--) &#123; pq.dequeue(); &#125; return pq.front();&#125; ÊµãËØïÂú∫ÊôØ 2Ôºö2034. ËÇ°Á•®‰ª∑Ê†ºÊ≥¢Âä® 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123class PriorityQueue1&lt;T&gt; &#123; arr: T[]; compare: (a: T, b: T) =&gt; number; constructor(props: &#123; compare: (a: T, b: T) =&gt; number &#125;) &#123; const &#123; compare &#125; = props; this.compare = compare; this.arr = []; &#125; swap(arr, index1, index2) &#123; const temp = arr[index1]; arr[index1] = arr[index2]; arr[index2] = temp; &#125; enqueue(a) &#123; this.arr.push(a); this.bubbleUp(this.arr.length - 1); &#125; dequeue() &#123; this.delete(0); &#125; bubbleUp(index) &#123; if (this.arr.length &lt;= 1 || index &lt;= 0) &#123; return; &#125; const pre = Math.floor((index - 1) / 2); if (this.compare(this.arr[index], this.arr[pre]) &gt; 0) &#123; this.swap(this.arr, pre, index); this.bubbleUp(pre); &#125; &#125; delete(index) &#123; this.swap(this.arr, index, this.arr.length - 1); this.arr.pop(); this.sinkDown(index); &#125; sinkDown(index) &#123; if (this.arr.length &lt;= 1 || index &gt;= this.arr.length - 1) &#123; return; &#125; if ( (index * 2 + 1 &lt; this.arr.length &amp;&amp; this.compare(this.arr[index], this.arr[index * 2 + 1]) &lt; 0) || (index * 2 + 2 &lt; this.arr.length &amp;&amp; this.compare(this.arr[index], this.arr[index * 2 + 2]) &lt; 0) ) &#123; if ( index * 2 + 2 &gt;= this.arr.length || this.compare(this.arr[index * 2 + 1], this.arr[index * 2 + 2]) &gt; 0 ) &#123; this.swap(this.arr, index, index * 2 + 1); this.sinkDown(index * 2 + 1); &#125; else &#123; this.swap(this.arr, index, index * 2 + 2); this.sinkDown(index * 2 + 2); &#125; &#125; &#125; front() &#123; return this.arr[0]; &#125; size() &#123; return this.arr.length; &#125;&#125;interface Data &#123; index: number; value: number;&#125;class StockPrice &#123; priceArr: number[]; maxPriorityQueue: PriorityQueue1&lt;&#123; index: number; value: number &#125;&gt;; minPriorityQueue: PriorityQueue1&lt;&#123; index: number; value: number &#125;&gt;; constructor() &#123; this.priceArr = []; this.maxPriorityQueue = new PriorityQueue1(&#123; compare: (a: Data, b: Data) =&gt; a.value - b.value, &#125;); this.minPriorityQueue = new PriorityQueue1(&#123; compare: (a: Data, b: Data) =&gt; b.value - a.value, &#125;); &#125; update(timestamp: number, price: number): void &#123; this.priceArr[timestamp] = price; this.maxPriorityQueue.enqueue(&#123; index: timestamp, value: price &#125;); this.minPriorityQueue.enqueue(&#123; index: timestamp, value: price &#125;); &#125; current(): number &#123; return this.priceArr[this.priceArr.length - 1]; &#125; maximum(): number &#123; while ( this.maxPriorityQueue.front().value !== this.priceArr[this.maxPriorityQueue.front().index] ) &#123; this.maxPriorityQueue.dequeue(); &#125; return this.maxPriorityQueue.front().value; &#125; minimum(): number &#123; while ( this.minPriorityQueue.front().value !== this.priceArr[this.minPriorityQueue.front().index] ) &#123; this.minPriorityQueue.dequeue(); &#125; return this.minPriorityQueue.front().value; &#125;&#125;/** * Your StockPrice object will be instantiated and called as such: * var obj = new StockPrice() * obj.update(timestamp,price) * var param_2 = obj.current() * var param_3 = obj.maximum() * var param_4 = obj.minimum() */]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PromiseËØ¶Ëß£]]></title>
    <url>%2Fblog%2F2023%2F07%2F19%2FPromise%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[ÂÆòÊñπÊñáÊ°£Promise A+ ËßÑËåÉasync ÂáΩÊï∞ Â∏∏ËßÅÈóÆÈ¢ò ÂºÇÊ≠•ÂáΩÊï∞‰∏ç‰∏ÄÂÆöÂ∞±‰ºöÂºÇÊ≠•ÊâßË°åÔºå‰∏ªË¶ÅÁúãÈáåÈù¢ÊúâÊ≤°ÊúâÂºÇÊ≠•ÁöÑÂú∞ÊñπÔºåÊØîÂ¶Ç setTimeoutÔºåÊØîÂ¶Ç http ËØ∑Ê±ÇÔºåÊØîÂ¶Ç indexedDB ËØ∑Ê±Ç ÂáΩÊï∞ËøîÂõû Promise ÂØπË±°Ôºå‰∏ç‰∏ÄÂÆöÂ∞±Ë¶ÅÂÜô asyncÔºåÈô§ÈùûÈáåÈù¢Áî®‰∫Ü await async ÊòØ Promise ÁöÑÁ≠â‰ª∑ÁÆÄÂÜôÔºå‰∏çÂøÖÂÜçÂ§öÂÜô‰∏Ä‰∏™return new Promise 12345678910111213141516function resolveAfter2Seconds() &#123; return new Promise((resolve) =&gt; &#123; setTimeout(() =&gt; &#123; resolve("resolved"); &#125;, 2000); &#125;);&#125;async function asyncCall() &#123; console.log("calling"); const result = await resolveAfter2Seconds(); console.log(result); // Expected output: "resolved"&#125;asyncCall();]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux‰ΩøÁî®ÊâãÂÜå]]></title>
    <url>%2Fblog%2F2023%2F06%2F07%2Flinux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C%2F</url>
    <content type="text"><![CDATA[ÊúÄËøë‰π∞‰∫Ü‰∏ÄÂè∞ÊúçÂä°Âô®ÔºåÂ§™Â§ö linux ÂëΩ‰ª§Ë¶Å‰∏äÁΩëÊü•ËØ¢‰∫ÜÔºåÂ∑≤Áªè‰∏çÈÄÇÂêàËÆ∞Âú®Êú≠ËÆ∞ÈáåÈù¢ÔºàÊú≠ËÆ∞ÈáåÈù¢‰∏ÄËà¨ÊòØËÆ∞ÂΩïÊØîËæÉÊùÇÁöÑ‰∏úË•øÔºåÁØáÂπÖÂ∞ö‰∏çËÉΩÂΩ¢ÊàêÊñáÁ´†ÔºâÔºåÊâÄ‰ª•‰∏ìÈó®ÂºÄ‰∫Ü‰∏ÄÁØáÊñáÁ´†Êù•ËÆ≤ÊàëÂú®‰ΩøÁî® linux ÊúçÂä°Âô®ÈÅáÂà∞ÁöÑÈóÆÈ¢òÔºå‰ª•ÂèäËß£ÂÜ≥ÂäûÊ≥ï„ÄÇ È¶ñÂÖàË¶ÅË∞àÁöÑÊòØÊúçÂä°Âô®ÂÆâÂÖ®ÈóÆÈ¢ò ‰ª•ÂâçÊê≠ wordpress ÂçöÂÆ¢ÁöÑÊó∂ÂÄôÔºåË¢´ÁõóËøá‰∏§Ê¨°ÔºåË∑üÂêå‰∫ãËÆ®ËÆ∫‰∫Ü‰πãÂêéÔºåÂèëÁé∞ÂèØËÉΩÊòØÂõ†‰∏∫Êàë‰ΩøÁî®‰∫Ü root Ë¥¶Âè∑ËøúÁ®ãÁôªÂΩïÔºåË¶ÅËÆ∫ÂÆâÂÖ®ÊÄßÁöÑËØùÔºåÊúÄÂ•ΩÁöÑÊñπÂºèÊòØÔºö Á¶ÅÊ≠¢ root Ë¥¶Âè∑ËøúÁ®ãÁôªÂΩïÔºàÈÇ£‰πàÂà´‰∫∫ÊÉ≥Ë¶ÅÁôªÂΩïÔºåÂ∞±Âè™ËÉΩÁåú‰Ω†ÁöÑË¥¶Âè∑Âêç+ÂØÜÁ†ÅÔºåÂ¶ÇÊûú‰Ω†ÂºÄÊîæ‰∫Ü root ÁôªÂΩïÔºåÂà´‰∫∫Â∞±Âè™ÈúÄË¶ÅÁåú root ÂØÜÁ†ÅÔºâ Êää ssh Á´ØÂè£Êîπ‰∏∫Èùû 22 Á´ØÂè£ÔºåÈÇ£ÈªëÂÆ¢ÊÉ≥Ë¶ÅÁ†¥Ëß£ÔºåÂ∞±ÈúÄË¶ÅÁåúÁ´ØÂè£ ÊôÆÈÄöË¥¶Âè∑‰∏çÁªô root ÊùÉÈôêÔºåËøôÊ†∑Âç≥‰æøÊôÆÈÄöË¥¶Âè∑Ë¢´ÁõóÔºåÊÉÖÂÜµ‰πü‰∏çÁÆó‰∏•Èáç ËÆæÁΩÆ‰∏Ä‰∏™Âº∫ÁöÑ root ÂØÜÁ†Å ËøôÊ†∑‰∏ÄÂ•óÁªÑÂêàÊã≥Êâì‰∏ãÊù•ÔºåÈªëÂÆ¢ÊÉ≥Ë¶ÅËé∑Âèñ‰Ω†ÊúçÂä°Âô®ÁöÑÊúÄÈ´òÊùÉÈôêÔºåÈ¶ñÂÖàË¶ÅÁü•ÈÅì‰Ω†ÁöÑ ssh Á´ØÂè£ÔºåÁÑ∂ÂêéË¶ÅÁü•ÈÅì‰∏ÄÂØπÊôÆÈÄöË¥¶Âè∑ÂØÜÁ†ÅÔºåÊúÄÂêéË¶ÅÁü•ÈÅì root ÁöÑÂØÜÁ†ÅÔºåÊâçËÉΩÊúÄÁªàËé∑ÂæóÊúÄÈ´òÊùÉÈôê„ÄÇÁõ∏ÊØî‰∫éÂè™Èù† root ÂØÜÁ†ÅÁöÑÂº∫Â∫¶ÔºåÂÆâÂÖ®‰∫ÜËÆ∏Â§öËÆ∏Â§ö„ÄÇ ÂèëÁé∞‰∏Ä‰∏™ÈóÆÈ¢òÊòØ FinalShell ‰∏çËÉΩÁõ¥Êé•ÁºñËæëÂπ∂‰øùÂ≠òÊñá‰ª∂‰∫ÜÔºåÂ∫îËØ•ÊòØÊùÉÈôêÁöÑÈóÆÈ¢ò„ÄÇ ‰ª•‰∏ãÊòØÈúÄË¶ÅÁî®Âà∞ÁöÑ linux ÂëΩ‰ª§Ôºö Êñ∞Âª∫Áî®Êà∑Ôºöuseradd &lt;yourname&gt; ‰øÆÊîπÁî®Êà∑ÂØÜÁ†ÅÔºöpasswd &lt;yourname&gt; ‰øÆÊîπ ssh Á´ØÂè£Âè∑ÔºöÁºñËæë/etc/ssh/sshd_configÊñá‰ª∂Ôºå‰øÆÊîπ#Port 22‰∏∫ÔºöPort xxxx Á¶ÅÊ≠¢ root Ë¥¶Âè∑ËøúÁ®ãÁôªÂΩïÔºöÁºñËæë/etc/ssh/sshd_configÊñá‰ª∂Ôºå‰øÆÊîπ#PermitRootLogin yes‰∏∫ÔºöPermitRootLogin no ‰øÆÊîπÂÆå/etc/ssh/sshd_configÊñá‰ª∂ÂêéÔºåÈúÄË¶ÅÈáçÂêØ‰∏Ä‰∏ãÊúçÂä°Ôºö 12setenforce 0sudo service sshd restart ‰øÆÊîπÂÆåÁ´ØÂè£ÔºåËøòË¶ÅËÆ©Èò≤ÁÅ´Â¢ôÊîæË°åÊ≠§Á´ØÂè£Ôºö 123456// ÊîæË°åÊåáÂÆöÁ´ØÂè£firewall-cmd --zone=public --add-port=xxxx/tcp --permanent// ÈáçÂêØÈò≤ÁÅ´Â¢ôsystemctl restart firewalld.service// ÈáçÊñ∞ËΩΩÂÖ•ÈÖçÁΩÆfirewall-cmd --reload ÂâçÂõ†‰π∞‰∫ÜÂõΩÂ§ñÁöÑÂüüÂêçÂíåÊúçÂä°Âô®ÔºåËøôÊ†∑Â∞±ÂèØ‰ª•ÈÅøÂÖçÂõΩÂÜÖÁâπÂà´È∫ªÁÉ¶ÁöÑÂ§áÊ°à‰∫ÜÔºåËØùËØ¥ÂõΩÂ§ñÁöÑÂüüÂêçÂíåÊúçÂä°Âô®ÁúüÊòØ‰æøÂÆúÂïäÔºö ÊúçÂä°Âô®ÔºàVPSÔºâÔºöracknerd.com ÂüüÂêçÔºöname.com ÊúçÂä°Âô®Ë¥≠‰π∞ÂèÇËÄÉ‰∫Ü‰∏ÄÁØáÊñáÁ´†Ôºöhttps://p3terx.com/archives/cheap-vps-racknerd.htmlÔºåÂ§ö‰∫èËøôÁØáÊñáÁ´†Êâç‰π∞Âà∞‰∫Ü‰æøÂÆúÁöÑ„ÄÇ Windows Âπ≥Âè∞Â•ΩÁî®ÁöÑËøúÁ®ã shell Â∑•ÂÖ∑ÔºöWindTermMac OS Âπ≥Âè∞Â•ΩÁî®ÁöÑËøúÁ®ã shell Â∑•ÂÖ∑ÔºöFinalShell Áé∞Âú® Windows Âπ≥Âè∞‰πüÊúâ FinalShell ‰∫ÜÔºå‰ΩìÈ™åÁªà‰∫éÂèàÁªü‰∏ÄËµ∑Êù•‰∫Ü centos ÂÆâË£Ö nginxyum install Ê≤°ÊúâÂèØÁî®ËΩØ‰ª∂ÂåÖ nginx„ÄÇ 12345678Â∑≤Âä†ËΩΩÊèí‰ª∂ÔºöfastestmirrorLoading mirror speeds from cached hostfile * base: mirror.lzu.edu.cn * extras: mirror.lzu.edu.cn * updates: mirror.lzu.edu.cnÊ≤°ÊúâÂèØÁî®ËΩØ‰ª∂ÂåÖ nginx„ÄÇÈîôËØØÔºöÊó†È°ª‰ªª‰ΩïÂ§ÑÁêÜ ÂéüÂõ†ÊòØ nginx ‰Ωç‰∫éÁ¨¨‰∏âÊñπÁöÑ yum Ê∫êÈáåÈù¢ÔºåËÄå‰∏çÂú® centos ÂÆòÊñπ yum Ê∫êÈáåÈù¢ Ëß£ÂÜ≥ÊñπÊ≥ïÔºö ÂÆâË£Ö 1sudo yum install epel-release Êõ¥Êñ∞ 1yum update ÈáçÊñ∞ËØï‰∏Ä‰∏ãÔºö 1yum install -y nginx nginxnginx ÁöÑÈÖçÁΩÆ‰ΩçÁΩÆÔºö/etc/nginx‰∏≠ÔºåÂú®ËØ•ÁõÆÂΩï‰∏ãÔºå‰∏ªË¶ÅÁöÑÈÖçÁΩÆÊñá‰ª∂ÊòØ nginx.conf Â∏∏ËßÅÈúÄÊ±ÇÂíåËß£ÂÜ≥ÂäûÊ≥ïÔºö ssl ËØÅ‰π¶ÊÄé‰πàÊêûÔºöLet&#39;s Encrypt Êèê‰æõÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåÊåâÁÖßËøô‰∏™Êìç‰ΩúÔºöcertbot instructions nginx ÈÖçÁΩÆÂüüÂêçÔºö‰øÆÊîπ nginx.conf ÈáåÈù¢ÁöÑ server_name Â≠óÊÆµ HTTP Ë∑≥ËΩ¨Âà∞ HTTPSÔºö‰ΩøÁî® 301 ÈáçÂÆöÂêëÁöÑÊñπÂºèÂ∞Ü http ÁöÑËØ∑Ê±ÇÈáçÂÆöÂêëÂà∞ https ‰∏ä 123456789server &#123; listen 80; #Â°´ÂÜôÁªëÂÆöËØÅ‰π¶ÁöÑÂüüÂêç server_name www.xxx.com; #ÊäähttpÁöÑÂüüÂêçËØ∑Ê±ÇËΩ¨Êàêhttps return 301 https://$host$request_uri;&#125; nginx ÈÖçÁΩÆÂçïÈ°µÂ∫îÁî®1234location / &#123; try_files $uri $uri/ /index.html?$args; index index.html;&#125; Shadowsocks Êê≠Âª∫1234567891011pip install https://github.com/shadowsocks/shadowsocks/archive/master.zip -Uvim /etc/shadowsocks.json&#123;"server":"0.0.0.0","server_port":"Á´ØÂè£","local_port":1080,"password":"ÂØÜÁ†Å","timeout":300,"method":"aes-256-gcm"&#125;ssserver -c /etc/shadowsocks.json -d start Èò≤ÁÅ´Â¢ôÊü•ÁúãÈò≤ÁÅ´Â¢ôÂºÄÊîæÁöÑÁ´ØÂè£Ôºöfirewall-cmd --list-ports ÊääÂ∏∏Áî®ÁöÑÁ®ãÂ∫èÂÅöÊàêÊúçÂä°ÔºåÂπ∂ÂºÄÊú∫ÂêØÂä®Êñ∞Âª∫ÊúçÂä°ËÑöÊú¨Ôºö/etc/systemd/system/shadowsocks.service 1234567891011[Unit]Description=Shadowsocks Server ServiceAfter=network.target[Service]Type=simpleUser=rootExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json[Install]WantedBy=multi-user.target Â∏∏Áî®ÂëΩ‰ª§ ÂàõÂª∫Áî®Êà∑Ôºöuseradd &lt;Áî®Êà∑Âêç&gt;ÔºåÂà†Èô§Áî®Êà∑Ôºöuserdel &lt;Áî®Êà∑Âêç&gt; ‰øÆÊîπÂØÜÁ†ÅÔºöpasswd &lt;Áî®Êà∑Âêç&gt; ÂàõÂª∫Áî®Êà∑ÁªÑÔºögroupadd &lt;Áî®Êà∑ÁªÑÂêç&gt;ÔºåÂà†Èô§Áî®Êà∑ÁªÑÔºögroupdel &lt;Áî®Êà∑ÁªÑÂêç&gt;ÔºåÊü•ÁúãÊâÄÊúâÁªÑÔºögroups Êü•ÁúãÁ´ØÂè£Âç†Áî® lsof -i :&lt;Á´ØÂè£Âè∑&gt; Êü•ÁúãÊüê‰∫õÂ∫îÁî®ÁöÑÁ´ØÂè£Âç†Áî®ÊÉÖÂÜµÔºåÊØîÂ¶Ç ssh ÁöÑÁ´ØÂè£Âè∑Ôºönetstat -anp |grep ssh ÁªôÁî®Êà∑Êüê‰∏™Êñá‰ª∂Â§πÊùÉÈôêÔºöchown -R liuhai:liuhai /opt # Â∞ÜÁõÆÂΩï/opt ÂèäÂÖ∂‰∏ãÈù¢ÁöÑÊâÄÊúâÊñá‰ª∂„ÄÅÂ≠êÁõÆÂΩïÁöÑÊñá‰ª∂‰∏ªÊîπÊàê liuhai Â∏∏ËßÅÊñá‰ª∂‰ΩçÁΩÆ hosts Êñá‰ª∂‰ΩçÁΩÆÔºö/etc/hosts nginx ÈÖçÁΩÆ‰ΩçÁΩÆÔºö/etc/nginx/nginx.conf vim ÁºñËæëÂ∏∏Áî®ÊäÄÂ∑ßÂéªÈô§Â§öË°åÊ≥®ÈáäÔºö Êåâ ctrl+v ËøõÂÖ• visual block Ê®°Âºè Êåâ‰∏ä‰∏ãÊñπÂêëÈîÆÈÄâÊã©Â§öË°å Êåâ d ÂéªÊéâ# linux Âü∫Á°ÄÁü•ËØÜls Â±ïÁ§∫ÁöÑÊùÉÈôêÁöÑÂê´‰πâÔºö linux drwxr-xr-xÁ¨¨‰∏Ä‰ΩçË°®Á§∫Êñá‰ª∂Á±ªÂûã„ÄÇd ÊòØÁõÆÂΩïÊñá‰ª∂Ôºål ÊòØÈìæÊé•Êñá‰ª∂Ôºå-ÊòØÊôÆÈÄöÊñá‰ª∂Ôºåp ÊòØÁÆ°ÈÅìÁ¨¨ 2-4 ‰ΩçË°®Á§∫Ëøô‰∏™Êñá‰ª∂ÁöÑÂ±û‰∏ªÊã•ÊúâÁöÑÊùÉÈôêÔºår ÊòØËØªÔºåw ÊòØÂÜôÔºåx ÊòØÊâßË°å„ÄÇÁ¨¨ 5-7 ‰ΩçË°®Á§∫ÂíåËøô‰∏™Êñá‰ª∂Â±û‰∏ªÊâÄÂú®Âêå‰∏Ä‰∏™ÁªÑÁöÑÁî®Êà∑ÊâÄÂÖ∑ÊúâÁöÑÊùÉÈôê„ÄÇÁ¨¨ 8-10 ‰ΩçË°®Á§∫ÂÖ∂‰ªñÁî®Êà∑ÊâÄÂÖ∑ÊúâÁöÑÊùÉÈôê„ÄÇ]]></content>
      <tags>
        <tag>ÊúçÂä°Âô®ËøêÁª¥</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AwesomeWebÈ°πÁõÆ]]></title>
    <url>%2Fblog%2F2023%2F05%2F22%2FAwesomeWeb%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[github ‰ªìÂ∫ìÔºöliuqinh2s/AwesomeWebÈ°πÁõÆÂ±ïÁ§∫Ôºöreplit - AwesomeWebÈ°πÁõÆ‰∏äÁ∫øÂú∞ÂùÄÔºöjujuxi ÊúÄËøëÊÉ≥ÂÉèÊ¥õÈõ™Èü≥‰πê‰∏ÄÊ†∑ÂÅö‰∏Ä‰∏™ÂÖçË¥πÁöÑËßÜÈ¢ë appÔºå‰∏ªË¶ÅÂ≠¶‰π†ÂØπË±°ÊòØÂä™Âä™ËßÜÈ¢ëÔºåËØ¥Âπ≤Â∞±Âπ≤ÔºåÂÖàÁúãÁúãÂä™Âä™Áî®‰∫ÜÂì™‰∫õÁ¨¨‰∏âÊñπ js Â∫ìÔºåÊâìÂºÄÂä™Âä™ËßÜÈ¢ëÁΩëÁ´ôÔºönunuyy5.orgÔºåÁÑ∂ÂêéÊâìÂºÄÂºÄÂèëËÄÖÂ∑•ÂÖ∑ÔºåÂèØ‰ª•ÁúãÂà∞Áî®‰∫ÜËøô‰∫õÔºö hls.js jquery.js p2p-media-loader-core.min.js Âíå p2p-media-loader-hlsjs.min.js Áî®hls.jsÂ∞±ÂèØ‰ª•Êí≠Êîæ m3u8 ËßÜÈ¢ë‰∫ÜÔºå‰ΩÜÊòØË¶ÅÊÄé‰πà‰∏ãËΩΩËßÜÈ¢ëÂë¢ÔºåÂú®ÁΩë‰∏äÊêú‰∫Ü‰∏Ä‰∏ãÔºåÊâæÂà∞‰∫Ü‰∏Ä‰∏™‰∏ãËΩΩÂô®ÔºöMomo707577045/m3u8-downloader ‰ªñÁöÑÊ∫êÁ†ÅËøòÊòØÂÄºÂæóÂ≠¶‰π†ÁöÑ ÁîµÂ≠ê‰π¶ÈòÖËØªÂô®epubjsÂÆòÊñπÊñáÊ°£ ÂÆòÊñπÁÆÄÂçï demo epub.js Ê†∏ÂøÉÁ±ª Book ÈòÖËØªÂô®Ëß£ÊûêRendition ÈòÖËØªÂô®Ê∏≤ÊüìLocations ÈòÖËØªÂô®ÂÆö‰ΩçNavigation Â≠òÂÇ®ÁõÆÂΩï‰ø°ÊÅØView Manager ÈòÖËØªÂô®Ê∏≤ÊüìÂá∫Êù•ÁöÑËßÜÂõæÁÆ°ÁêÜEpubCFI Âà©Áî® EpubCFI Ê†áÂáÜËøõË°åÊñáÂ≠óÁ∫ßÂà´ÂÆö‰ΩçÔºàÂèØ‰ª•ÂÆö‰ΩçÂà∞ÁîµÂ≠ê‰π¶‰∏≠‰ªªÊÑè‰∏Ä‰∏™Â≠óÁ¨¶ÔºâTheme ÁÆ°ÁêÜÂú∫ÊôØÂàáÊç¢Spine ÊåáÂÆöÈòÖËØªÈ°∫Â∫èÂíåÁÆ°ÁêÜ SectionSection ÊåáÂêëÂÖ∑‰ΩìÁ´†ËäÇÔºàÂÖ®ÊñáÊ£ÄÁ¥¢„ÄÅÁ´†ËäÇÂàáÊç¢ÔºâContents ÁÆ°ÁêÜÁ´†ËäÇËµÑÊ∫êÂÜÖÂÆπÔºà‰∏∫ÊüêÁ´†ËäÇÊ∑ªÂä†Ëá™ÂÆö‰πâÂ≠ó‰ΩìÔºâHook ÂÆö‰πâÈí©Â≠êÂáΩÊï∞„ÄÅÁÆ°ÁêÜÁ±ªÁöÑÁîüÂëΩÂë®ÊúüAnnotations ÁÆ°ÁêÜÊ†áÁ≠æÔºàÊñáÂ≠óÈ´ò‰∫ÆÊòæÁ§∫Ôºâ ËøôÊòØÊàëÊúãÂèãÂÅöÁöÑ‰∏Ä‰∏™Âü∫‰∫é epubjs ÁöÑÁîµÂ≠ê‰π¶ÈòÖËØªÂô®:http://118.190.10.34/epub-z/#/ Áî±‰∫é epubjs Âú® react ‰∏≠Â§™Èöæ‰ΩøÁî®ÔºåÁøªÈ°µÈÉΩÊ≤°ÂÆûÁé∞ÊàêÂäü„ÄÇÊúÄÁªàËøòÊòØÈááÁî®‰∫ÜÊõ¥‰∏∫ÁÆÄÂçïÁöÑÂ∫ìÔºöReact Reader - an easy way to embed a ePub into your webapp]]></content>
      <tags>
        <tag>È°πÁõÆ</tag>
        <tag>ÂâçÁ´Ø</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ê∞¥Ë¥ù‰π∞ÈªÑÈáëÊîªÁï•]]></title>
    <url>%2Fblog%2F2023%2F04%2F07%2F%E6%B0%B4%E8%B4%9D%E4%B9%B0%E9%BB%84%E9%87%91%E6%94%BB%E7%95%A5%2F</url>
    <content type="text"><![CDATA[‰ΩçÁΩÆÔºöÂùêÂú∞ÈìÅ‰ªéÁî∞Ë¥ùÁ´ôÂá∫Êù•Ôºå‰∏çË¶Å‰ªéÊ∞¥Ë¥ùÁ´ôÂá∫Êù•ÔºåÁî∞Ë¥ùÁ´ô F Âè£Âá∫Êù•Â∞±ÊòØÊ∞¥Ë¥ù‰∏áÂ±± Â∫óÔºöÈõ∂ÂîÆÂ∫óÂíåÊâπÂèëÂ±ïÂéÖÔºå‰∫∫Ê∞îÊúÄÊó∫ÈáëÂ±ïË¥ü‰∏ÄÊ•ºÔºåÂÆùÂàÄ‰∏çËÄÅÊ∞¥Ë¥ù‰∏áÂ±±Ôºå‰ª∑Ê†ºÊúÄ‰æøÂÆú‰∏ΩÈìÇÈ£ûÔºà‰πüÂè´Êñ∞‰∏Ä‰Ω≥Ôºâ Ë¥≠Áâ©Âú∞ÁÇπÊ∑±Âú≥Ê∞¥Ë¥ùÁè†ÂÆù‰∏ªË¶Å‰ª•ÊâπÂèë‰∏∫‰∏ªÔºåÊâÄ‰ª•ÂæàÂ§öÂ±ïÂéÖÊòØ‰∏çÊé•ÂæÖÈõ∂ÂîÆÂÆ¢Êà∑ÁöÑ„ÄÇÊâÄ‰ª•Â¶ÇÊûúÊÇ®Ë¶ÅÊù•ÈÄâË¥≠Áè†ÂÆù‰∏ÄÂÆöË¶ÅËÆ§ÂáÜ‰ª•‰∏ãÂá†‰∏™Âú∞Êñπ„ÄÇ ÈáëÂ±ïÁè†ÂÆùÂπøÂú∫Ë¥ü‰∏ÄÂ±ÇÔºöÈªÑÈáë„ÄÅK Èáë„ÄÅÈìÇÈáë„ÄÅÈíªÁü≥Á≠âÈÉΩÊúâÔºåËøôÈáå‰∏ªË¶ÅÊòØÈíàÂØπÂæÆÂïÜÔºåÊâÄÊúâÂ∫óÈì∫ÈÉΩÊîØÊåÅ‰∏Ä‰ª∂‰ª£Âèë„ÄÇÊúÄËøëÁΩë‰∏äË¢´ÁÇíÁöÑÂæàÁÅ´ÔºåÊâÄ‰ª•ÈÇ£ËæπÁöÑÊüúÂè∞‰ª∑Ê†ºË∂äÊù•Ë∂äÈ´òÔºåËøûÂêåË°å‰ª∑ÈÉΩÂæàÈ´òÔºå‰ª∑Ê†º‰∏çÊòØÂæàÂ•Ω„ÄÇ Ê∞¥Ë¥ù‰∏áÂ±±Ôºö ÂÖ®ÂìÅÁ±ªÊâπÂèëÁÇπ‰ª•ÊâπÂèë‰∏∫‰∏ªÔºåÂàÜ A„ÄÅB„ÄÅC ‰∏âÂ∫ß„ÄÅA„ÄÅB Â∫ß 1 Ê•ºÂü∫Êú¨ÊòØ 18K Èáë„ÄÅÈíªÊàíÁ≠â‰∏úË•øÔºõ2 Ê•º‰∏ªË¶ÅÊòØÁø°Áø†Á±ªÔºö3 Ê•º‰∏ªË¶ÅÊòØÈì∂È•∞ÔºõC Ê†ã 1~3 Ê•ºÂü∫Êú¨ÈÉΩÊòØÂçñÂΩ©ÂÆùÁöÑ‰∏çËøá‰∏Ä‰∫õÂ∫óÈì∫ÊòØÂè™ÂÅöÊâπÂèë‰∏çÈõ∂ÂîÆÁöÑÔºåË¶ÅÂÖàÊ∂àË¥π‰∏ÄÂÆöÈáëÈ¢ù‚ÄúÂºÄÊà∑‚ÄùÊâçËÉΩÊãøË¥ßÔºåÊØîÂ¶ÇÊüêÈªÑÈáëÂ∫óÔºåË¶ÅÊ∂àË¥πÊª° 50GÔºàÂ§ßÁ∫¶ 2 ‰∏áÂ§öÔºâÊâçÂèØ‰ª•ÊåâÊâπÂèë‰ª∑ÊãøË¥ß„ÄÇ ‰∏ΩÈìÇÈ£ûÁè†ÂÆùÊâπÂèëÂπøÂú∫ÔºöËøôÈáåÂíåÂÖ∂‰ªñÊâπÂèëÂπøÂú∫‰∏ÄÊ†∑Ôºå‰πüÊòØÂæàÂ§öÁöÑÊüúÂè∞ÔºåÈªÑÈáë„ÄÅÁèçÁè†„ÄÅK Êñ§„ÄÅÈíªÁü≥„ÄÅÂΩ©ÂÆùÈÉΩÊúâÔºå‰πüÊúâÂÆöÂà∂ÈíªÁü≥„ÄÅÂõûÊî∂ÈªÑÈáë‰πãÁ±ªÁöÑÂ∫óÈì∫„ÄÇËøòÊòØËÉΩÊâæÂà∞ËõÆÂ§öÂ•ΩÁúãÁöÑÈ•∞ÂìÅÊúâÊó∂Èó¥‰πüÂèØ‰ª•Êù•Ê∑òÊ∑òÂÆù„ÄÇ‰∏âÊ•ºÁöÑÈì∂È•∞Âü∫Êú¨ÈÉΩÊòØÊâπÂèëÁöÑ(Âü∫Êú¨ÈÉΩÊòØ 925 Èì∂).3000 Ëµ∑ÊâπËøôÊ†∑ÔºåÊÉ≥Ë¶ÅÊëÜÂú∞ÊëäÊàñËÄÖÂÅöÂæÆÂïÜÁöÑÂèØ‰ª•Êù•Ôºå‰∏çËøáËøëÂπ¥Êù•ÈôÑËøëÂºÄ‰∫Ü‰∏çÂ∞ëÊñ∞Âú∫ÊüúÂè∞ÂïÜÂÆ∂ÊµÅÂ§±‰∏•Èáç„ÄÇ Ê∞¥Ë¥ùÂõΩÈôÖË¥ü‰∏ÄÊ•ºÔºöÂ∞èÊüúÂè∞Èõ∂ÂîÆ„ÄÅÂêÑÁßçÂìÅÁ±ªÈÉΩÊúâÔºå‰ª∑Ê†ºÂèØÁ†ç‰ª∑Ôºå 123 Ê•ºÊúâÂÖ®ÂìÅÁ±ªÁöÑÁè†ÂÆùÔºöÊúâÈªÑÈáë„ÄÅK ÈáëÈï∂ÂµåÁ±ªÈÉ®ÂàÜÂèØÈõ∂ÂîÆÔºå‰ª∑Ê†ºÂÖ¨ÈÅì„ÄÇ Ê∞¥Ë¥ùÂ£πÂè∑Ë¥ü‰∏ÄÊ•ºÔºöÂ∞èÊüúÂè∞ÁöÑÁ°¨Èáë„ÄÅ5G ÈªÑÈáë„ÄÅÂ∞èÁè†Â≠êÈÉΩÊúâÔºåK ÈáëÈï∂ÂµåÂ±ÖÂ§öÔºåÂπ¥ËΩªÊó∂Â∞öÔºåÊï£ÂÆ¢ÂèØ‰ª•ÈÄõÂæà‰πÖÔºåËøòÊúâËá™ÂàõËÆæËÆ°Â∏àÂìÅÁâåÔºå‰ª∑Ê†ºÁ®çË¥µÔºå‰ΩÜÂ•ΩÁúãÔºå123 Ê•º ÂÖ®ÂìÅÁ±ªÔºåÈªÑÈáëÈíªÁü≥Èï∂ÂµåÁéâÁü≥ÈÉΩÊúâÔºå‰ΩÜÊï£ÂÆ¢ÂíåÊâπÂèë‰ª∑Ê†ºÂ∑ÆÂà´Â§ß„ÄÇ ÁâπÂäõÁè†ÂÆùÂ§ßÂé¶Ë¥ü‰∏ÄÊ•ºÔºöÈùûÂ∏∏Â§öÁöÑÁºñÁª≥ÊüúÂè∞ÔºåËøòÊúâÈªÑÈáëÔºåK ÈáëÂ∞èÊüúÂè∞ÔºåÊØîÂ§ßÂûãÊâπÂèëÂéÖÁöÑÂ∑•Ë¥πÁï•È´ò‰ΩÜÊï£Âçñ‰∏Ä‰ª∂‰πüÂèØ‰ª•‰π∞„ÄÇ123 Ê•ºÔºöÊúâÂíåÁî∞Áéâ„ÄÅÁø°Áø†„ÄÅÁéâÁü≥„ÄÅËøòÊúâÈªÑÈáëÂõûÊî∂„ÄÅÊúâÈªÑÈáëÈúÄË¶ÅÁΩÆÊç¢ÂõûÊî∂ÁöÑÂèØ‰ª•Êù•ËøôÈáå„ÄÇ Ê∞¥Ë¥ùÈì∂Â∫ßË¥ü‰∏ÄÊ•ºÔºöÊúâ‰∏ÄÂÆ∂ÈíªÁü≥Ôºå‰ª∑Ê†ºÊØî‰∏ìÊüú‰Ωé‰∏Ä‰∫õÔºå‰ΩÜ‰πü‰∏çÊòØÂêåË°åÊãøË¥ß‰ª∑ÊúÄ‰ΩéÔºå‰π∞ÈíªÁü≥Á¨¨‰∫åÈÄâÊã©„ÄÇ 1234 Ê•ºÔºöÂÖ®ÂìÅÁ±ªÔºåK ÈáëÈíªÁü≥Èï∂ÂµåÈì∂È•∞ÈÉΩÊúâÔºåÂπ≥Êó∂ÈÄõÁöÑ‰∫∫ÊØîËæÉÂ∞ë„ÄÇ Ê∞¥Ë¥ùÈáëÂ∫ßË¥ü‰∏ÄÊ•ºÔºöÂÖ®ÂìÅÁ±ª„ÄÅËøòÊúâ‰∏™ÈªÑÈáëÂïÜ‰∏ìÂçñÈõ∂ÁÇπÂá†ÂÖãÁöÑÂ∞èÈÖç‰ª∂ÔºåÂñúÊ¨¢Â∞èÈÖç‰ª∂ÁöÑÂèØ‰ª•Êù•„ÄÇ123 ‰∏âÊ•ºÔºöÊúâÈáëÈï∂ÁéâÂ±ïÂéÖ„ÄÅÈíªÁü≥Â±ïÂéÖ„ÄÅËøòÊúâÂ∞èÂûãÈªÑÈáëÂ±ïÂéÖÔºåÊ•º‰∏äÔºöÈªÑÈáëÂ§ßÂûãÂ±ïÂéÖÔºå‰∏çÊé•Êï£ÂÆ¢ÔºåÂè™ÊúâÂºÄÊà∑‰∫ÜÁöÑËÄÅÊùøÊàñËÄÖÁ∫ø‰∏ãÂÆû‰ΩìÂ∫óÂä†ÁõüÂïÜÂèØ‰ª•ÊãøË¥ßÔºå‰π∞Èáë‰ª∑Ê†ºÊúÄ‰ΩéÔºåÂ∑•Ëâ∫ÊúÄÂ•ΩÔºåÂ∑•Ë¥πÊúÄ‰ΩéÔºå‰ΩÜÊòØË¶ÅËµ∑Èáè„ÄÇ ÂÖ¥ÈæôÈªÑÈáëÁè†ÂÆùÂ§ßÂé¶Ë¥ü‰∏ÄÂ±ÇÔºöÈªÑÈáë„ÄÅÁéâÁü≥‰∏∫‰∏ª„ÄÇ123 Ê•ºÔºö‰ª•Áø°Áø†ÁéâÁü≥‰∏∫‰∏ªÔºå‰π∞‰πãÂâç‰∏ÄÂÆöÂÅöÂ•ΩÁø°Áø†ÊîªÁï•Ôºå‰∏çÁÑ∂ÂÆπÊòìË¢´ÂùëÔºå‰ª∑Ê†ºÂ∑ÆÂà´ÂæàÂ§ß„ÄÇ Ê∞¥Ë¥ùÂõΩÈôÖ„ÄÅÊ∞¥Ë¥ùÂ£πÂè∑„ÄÅÈáëÂ∫ß„ÄÅÈì∂Â∫ß„ÄÅÂÖ¥Èæô„ÄÅÁâπÂäõËøôÂÖ≠Â§ßÂïÜÂú∫ÁöÑË¥ü‰∏ÄÊ•ºÊòØËøûÈÄöÁöÑÔºåÂ§ßÂ∞èÂïÜÂÆ∂Êó†Êï∞ÔºåÊ¨æÂºèÁê≥ÁêÖÊª°ÁõÆ(ÈªÑÈáë„ÄÅÈíªÁü≥„ÄÅÈï∂Âµå„ÄÅk Èáë„ÄÅÈìÇÈáë„ÄÅÁø°Áø†Á≠âÊúâ)Ë∂≥Â§üÈÄõ‰∏ÄÊï¥Â§©‰∫Ü„ÄÇ ÈªÑÈáëÁü•ËØÜÔºà‰ªÄ‰πàÂè´Á¥†Èáë„ÄÅÁ°¨Èáë„ÄÅ5G ÈªÑÈáë„ÄÅÂè§Ê≥ïÈáë)‰π∞ÈáëÁöÑÊäÄÂ∑ß ÂçÉ‰∏áÂà´ÈóÆÁúüÂÅáÔºåÂçÉ‰∏áÂà´ÈóÆÁ∫Ø‰∏çÁ∫ØÔºåÂçÉ‰∏áÂà´ÈóÆ‰øù‰∏ç‰øùÁúü‚Äî‚ÄîÂÖ∏ÂûãÁöÑÂ∞èÁôΩÈÄÅÂëΩ‰∏âËøû„ÄÇ ‰∏çË¶ÅËØïÂõæÁ†ç‰ª∑Ôºå‰∏çÂèØËÉΩÁöÑ„ÄÇÂ∞èÂ∫óËÄÅÊùøÂèØËÉΩÁªô‰Ω†Êäπ‰∏™Èõ∂ÔºåÂ§ßÂ∫óÂá†ÂùóÈí±ÁöÑÂ∞æÊï∞‰πü‰∏çÂèØËÉΩÁªô‰Ω†ÊäπÂéªÁöÑÔºå10005 ÂÖÉÂ∞±ÊòØ 10005 ÂÖÉÔºå‰∏ÄÂàÜ‰πü‰∏ç‰ºöÂ∞ëÁöÑÔºà‰ΩÜÊòØÊØîËµ∑‰Ω†Âú®Âë®Â§ßÁ¶è‰π∞ÁöÑËÉΩÁúÅ‰∏ãÂ§ßÂá†ÂçÉÔºåÈ¶ôÔºÅÁúüÈ¶ôÔºÅÔºâ„ÄÇ Ê≤°ÊúâÂèëÁ•®ÔºåÊ≤°ÊúâÁõñÁ´†ÔºåÊ≤°ÊúâËµ†ÂìÅÔºå‰ΩÜË¶ÅÊúâÊî∂ÊçÆÔºàËØÅÊòéÊòØËøôÈáå‰π∞ÁöÑÔºâ„ÄÇ‰∏çË¶ÅÂ∏¶ÁùÄÂéªÂë®Â§ßÁ¶è‰π∞ÈáëÁöÑÂßøÊÄÅÊù•Ê∞¥Ë¥ù‰π∞ÈáëÔºåËøôÈáåÁ∫ØÁ≤πÂ∞±ÊòØÈí±ÂèòË¥ßÔºåÊ≤°ÊúâÂæÆÁ¨ë+ËΩªÂ£∞ÁªÜËØ≠ÁöÑ‰ªãÁªçÔºåÊ≤°ÊúâÁ´ØËå∂ÂÄíÊ∞¥Ôºå‰Ω†‰πü‰∏çË¶ÅÊåáÊúõÊúâÂÖ∂‰ªñÊúçÂä°„ÄÇ Ê≠£Á°ÆÁöÑÊ≠•È™§ÊòØÔºåÊâæÊ¨æÔºåÁúãÂà∞ÂñúÊ¨¢ÁöÑÔºåËÆ©Â∞èÂ¶πÁªô‰Ω†ÊãøÂá∫Êù•ÔºåÊ£ÄÊü•Áúã‰∏ãÂÅöÂ∑•Â¶Ç‰ΩïÔºà‰∏ªË¶ÅÁúãÊúâÊ≤°ÊúâÂáπÈô∑Á≠âÂ§ßÊØõÁóÖÔºåÂ∞èÂàíÁóï‰πãÁ±ªÁöÑÂêπÊØõÊ±ÇÁñµÁöÑÂ∞±ÁÆó‰∫ÜÔºâÔºåÁÑ∂ÂêéÈóÆ‰ªäÂ§©Èáë‰ª∑Â§öÂ∞ëÔºüËøô‰∏™ÊúâÊ≤°ÊúâÁ≤æÂìÅÂ∑•Ë¥πÔºü‰∏äÁß∞ÔºåÊâ´Á†Å‰ªòÈí±„ÄÇÁÑ∂ÂêéÊãøË¥ßÊâ≠Â§¥Â∞±Ëµ∞„ÄÇ ‰∏ÄËà¨ÈÉΩÊ≤°ÊúâÂåÖË£ÖÁöÑÔºåÂèØ‰ª•ÈóÆÂ∞èÂ¶πÂì™ÈáåÂçñÂåÖË£ÖÔºå‰∏ªË¶ÅÂçñÂú∫ÈÉΩÊúâÂçñÂåÖË£ÖÔºå‰ª∑Ê†ºÂá†ÂùóÂà∞Âá†ÂçÅÂùóÁöÑÈÉΩÊúâ„ÄÇ ÂæàÂ§öÈÉΩÊîØÊåÅÊóßÈáëÊç¢Ê¨æÔºåÂèØ‰ª•Â∏¶‰∏äÊóßÈáëËøáÂéªÊç¢„ÄÇ ‰∏ÄÂÆö‰∏çË¶ÅÈóÆÂïÜÂÆ∂ÈªÑÈáëÊòØ‰∏çÊòØÁúüÁöÑÔºåÂ¶ÇÊûú‰∏ÄÂºÄÂè£ÈóÆÈªÑÈáëÊòØÂê¶ÁúüÁöÑÔºåÂïÜÂÆ∂Áü•ÈÅì‰Ω†ÊòØÂ∞èÁôΩÔºå‰ª∑Ê†ºËá™ÁÑ∂‰∏ç‰ºöÁªô‰Ω†ÂæàÂêàÈÄÇ„ÄÇ ÊèêÈóÆÊµÅÁ®ãÔºö‰ªäÊó•Èáë‰ª∑Â§öÂ∞ëÔºüÂ∑•Ë¥πÂ§öÂ∞ëÔºüÊúâÊ≤°ÊúâÁ≤æÂìÅË¥πÔºüÂ∑•Ë¥πÈ´òÂèØ‰ª•Á†çÂ∑•Ë¥πÔºåÈáë‰ª∑ÊòØÈÄèÊòéÁöÑÂ∞±‰∏çË¶ÅÁ†ç‰∫Ü‰πüÁ†ç‰∏ç‰∏ãÊù•„ÄÇÈ¢Ñ‰º∞ÂÆûÈôÖÂà∞ÊâãÁöÑÊØèÂÖãÈáë‰ª∑ÔºåÁî®ÊâãÊú∫ËÆ∞ÂΩï‰∏Ä‰∏ã„ÄÇÂõ†‰∏∫ÊØèÂÆ∂Â∫óÁöÑÂÆûÈôÖÂà∞ÊâãÊØèÂÖãÈáë‰ª∑Áï•Êúâ‰∏çÂêåÔºåËÆ∞ÂΩï‰∏ãÊù•ÂèØ‰ª•ÂØπÊØî‰∏Ä‰∏ãÔºåÈÄâÊã©ÂêàÈÄÇÁöÑÂ∫óÈì∫Ë¥≠‰π∞„ÄÇ‰∏çÂêåÂ∑•Ëâ∫Â∑•Ë¥πÂíåÁ≤æÂìÅË¥π‰∏çÂêåÔºå‰∏ÄËà¨Êù•ËØ¥ 5G ÊúÄÈ´òÔºå3D Ê¨°È´òÔºåÂè§Ê≥ïÊ¨°‰πãÔºåÁ¥†ÈáëÊúÄ‰Ωé„ÄÇ‰π∞ÂÆåÈ¶ñÈ•∞Âà´Âøò‰∫ÜË¶ÅÊî∂ÊçÆ„ÄÇ Ê∞¥Ë¥ù‰π∞‰∫ÜÈªÑÈáë‰∏çË¶ÅÊåáÊúõ ÂïÜÂÆ∂Áªô‰Ω†ÈÖçÁõíÂ≠ê‰πãÁ±ªÁöÑÔºåÂü∫Êú¨ÈÉΩÊòØË¢ãÂ≠êË£ÖÁöÑÔºåÔºàÂú®ÈáëÂ±ïË¥ü‰∏ÄÊ•ºÁöÑ‰∏§‰∏™Á§ºÁõíÊ°£Âè£Â∞±ÂèØ‰ª•‰π∞ÔºâËá™Â∑±‰πüÂèØ‰ª•ÂéªÂë®Âõ¥ÂçñÂåÖË£ÖÁöÑËá™Ë°åÈááË¥≠ÂåÖË£ÖÁ§ºÁõí 10 ÂÖÉÂ∑¶Âè≥‰∏Ä‰∏™„ÄÇ Ê£ÄÊµã ÂÆûÂú®‰∏çÊîæÂøÉÈúÄË¶ÅÂÅöÊ£ÄÊµãÁöÑÔºåÂèØ‰ª•Âéª‰∏áÂ±± B Â∫ß‰∫åÊ•º‰∏≠ÈáëË¥®Ê£ÄÔºåÊé®ËçêËøôÂÆ∂ÁöÑÁêÜÁî±ÊòØÊØîËæÉÊñπ‰æøÂ•ΩÊâæÔºåËÄå‰∏îÊï£ÂÆ¢ÁöÑ‰ª∑Ê†ºÂæà‰æøÂÆúÔºåË¥µÈáëÂ±û‰∏Ä‰ªΩ 10 ÂÖÉ„ÄÇÂÖ∂‰ªñÈâ¥ÂÆöÊú∫ÊûÑÊï£ÂÆ¢ÁöÑ‰ª∑Ê†ºÂ§™Ë¥µ‰∫Ü„ÄÇÊî∂Ê†∑Êó∂Èó¥ÊòØ 10:00-17:00ÔºåË∂ÖËøá 17 ÁÇπÊúâÊó∂ÂÄôÂ∞±Ë¶ÅÂ§öÊî∂Âä†ÊÄ•Ë¥πÁî®‰∫Ü„ÄÇ Ê£ÄÊµãÊú∫ÊûÑÂè™Ë¥üË¥£Ê£ÄÊµãÔºå‰∏çÁªô‰Ω†‰º∞‰ª∑„ÄÇÊää‰∏úË•ø‰∫§ÁªôÂâçÂè∞Ôºå‰ºöÈóÆ‰Ω†ÊòØ‰ªÄ‰πàÂêçÂ≠óÊàñËÄÖÂì™ÂÆ∂ÁöÑÔºå‰Ω†Â∞±ËØ¥‰Ω†ÊòØÊï£ÂÆ¢Èõ∂ÂîÆËá™Â∑±Êù•ÁöÑ„ÄÇÁ°ÆËÆ§Â•Ω‰ª∂Êï∞ÔºåÊãøÂõûÊâßÂçïÔºåÊâ´Á†ÅÊü•ËØ¢ËøõÂ∫¶„ÄÇ Ê£ÄÊµãÊú∫ÊûÑÂØπ‰Ω†‰π∞ÁöÑÁè†ÂÆùÊ≤°ÂÖ¥Ë∂£Ôºå‰∏çË¶ÅËø´ÂÆ≥Â¶ÑÊÉ≥ËßâÂæó‰ºöÂÅ∑‰Ω†ÁöÑÈáë„ÄÇÈâ¥ÂÆöËøáÁ®ãÊØîËæÉ‰πÖÔºå‰∏ÄËà¨ 2 Â∞èÊó∂ÔºåÂèØ‰ª•ÂéªÂë®ËæπÂÜçÂéªÈÄõÈÄõÂÖ∂‰ªñÁè†ÂÆùÔºàÂõ†‰∏∫Âë®ËæπÂÆûÂú®ÊòØÊ≤°Âï•ÂêÉÁöÑÂñùÁöÑÁé©ÁöÑÔºâ ÂØπ‰π∞Âà∞ÁöÑÈªÑÈáëÂÆûÂú®‰∏çÊîæÂøÉÁöÑËØùÂèØ‰ª•ÂÜçÂéªÂÅö‰∏™Ê£ÄÊµãÔºåËøôÈáåÂæàÂ§öÂú∞ÊñπÈÉΩÊúâË¥®Ê£ÄÊú∫ÊûÑÔºåÂ∞±ËØ¥ÈúÄË¶ÅÂÅöÊùêË¥®Â§çÊ£ÄÂ∞±Â•Ω‰∫ÜÔºåÊ≤°ÊúâÂÆû‰ΩìÂïÜÂÆ∂‰ºöÂÜíÈô©ÂîÆÂÅá„ÄÇ ÂèÇËÄÉ „Äê‰øùÂßÜÁ∫ß„Äë2021 ÊúÄÊñ∞Ê∞¥Ë¥ù‰π∞ÈáëÈõ∂ÂîÆÊîªÁï• Êï£ÂÆ¢ÈÄõÊ∞¥Ë¥ù‰π∞ÈªÑÈáëÊîªÁï•]]></content>
      <tags>
        <tag>ÁîüÊ¥ª</tag>
        <tag>ÁêÜË¥¢</tag>
        <tag>ÊîªÁï•</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Canvas ÂÖ•Èó®Á¨îËÆ∞]]></title>
    <url>%2Fblog%2F2023%2F02%2F18%2FCanvas%20%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Âü∫Á°ÄÁü•ËØÜ ÈªòËÆ§Â§ßÂ∞èÔºöÂ¶ÇÊûú‰∏çËÆæÁΩÆÂÆΩÈ´òÔºåcanvas ÁöÑÈªòËÆ§ÂÆΩÈ´òÊòØÔºöwidth: 300px; height: 150px;„ÄÇ ÊõøÊç¢ÂÜÖÂÆπÔºö‰∏é&lt;img&gt;ÂÖÉÁ¥†‰∏çÂêåÔºå&lt;canvas&gt;ÂÖÉÁ¥†ÈúÄË¶ÅÁªìÊùüÊ†áÁ≠æ&lt;/canvas&gt;ÔºåÂ¶ÇÊûúÁªìÊùüÊ†áÁ≠æ‰∏çÂ≠òÂú®ÔºåÂàôÊñáÊ°£ÁöÑÂÖ∂‰ΩôÈÉ®ÂàÜ‰ºöË¢´ËÆ§‰∏∫ÊòØÊõø‰ª£ÂÜÖÂÆπÔºåÂ∞Ü‰∏ç‰ºöÊòæÁ§∫Âá∫Êù•„ÄÇ ‰ªÄ‰πàÊòØÊõøÊç¢ÂÜÖÂÆπÔºåÂ∞±ÊòØÂú®Êüê‰∫õ‰∏úË•øÂä†ËΩΩ‰∏çÂá∫Êù•ÁöÑÊó∂ÂÄôÔºàÂéüÂõ†ÂèØËÉΩÂ§öÁßçÂ§öÊ†∑ÔºåÊØîÂ¶ÇÊµèËßàÂô®Â§™ËÄÅ‰∏çÊîØÊåÅËøô‰∏™‰∏úË•øÔºåÊØîÂ¶ÇÁΩëÁªú‰∏çÂ•ΩÂä†ËΩΩ‰∏çÂá∫ÔºâÔºåÈÇ£‰πàÂ∞±ÁªôËøô‰∫õ‰∏úË•øÊõøÊç¢ÊàêÂÖ∂‰ªñÂÜÖÂÆπÔºåÊØîÂ¶Ç&lt;img&gt;Ê†áÁ≠æÂ∞±Êúâ alt Â±ûÊÄßÁî®‰∫éÂú®ÂõæÁâáÂä†ËΩΩ‰∏çÂá∫ÁöÑÊó∂ÂÄôÊòæÁ§∫ÊñáÊú¨„ÄÇcanvasÊ†áÁ≠æ‰πüÊúâÁõ∏Â∫îÁöÑÊé™ÊñΩÔºåÁî®Ê≥ïÊòØÔºö 1234567&lt;canvas id="stockGraph" width="150" height="150"&gt; current stock price: $3.15 +0.15&lt;/canvas&gt;&lt;canvas id="clock" width="150" height="150"&gt; &lt;img src="images/clock.png" width="150" height="150" alt="" /&gt;&lt;/canvas&gt; Ê∏≤Êüì‰∏ä‰∏ãÊñáÔºàThe rendering contextÔºâÔºöÂ∏∏Áî®ÁöÑÊ∏≤Êüì‰∏ä‰∏ãÊñáÊúâ 2DÔºå3D„ÄÇ2d ÂÜôÊ≥ïÂ¶Ç‰∏ã: 1234567const canvas = document.getElementById("canvas");if (canvas.getContext) &#123; const context = canvas.getContext("2d"); // drawing code here&#125; else &#123; // canvas-unsupported code here&#125; 2D ÁªòÂõæÂùêÊ†áÁ≥ªÁõ¥ËßíÂùêÊ†áÁ≥ªÔºåÂéüÁÇπÂú®Â∑¶‰∏äËßíÔºåx ËΩ¥ÂêëÂè≥‰∏∫Ê≠£Ôºåy ËΩ¥Âêë‰∏ã‰∏∫Ê≠£„ÄÇ ÁªòÂà∂ÂõæÂΩ¢‰∏çÂêå‰∫é SVGÔºå&lt;canvas&gt; Âè™ÊîØÊåÅ‰∏§ÁßçÂΩ¢ÂºèÁöÑÂõæÂΩ¢ÁªòÂà∂ÔºöÁü©ÂΩ¢ÂíåË∑ØÂæÑÔºàÁî±‰∏ÄÁ≥ªÂàóÁÇπËøûÊàêÁöÑÁ∫øÊÆµÔºâ„ÄÇÊâÄÊúâÂÖ∂‰ªñÁ±ªÂûãÁöÑÂõæÂΩ¢ÈÉΩÊòØÈÄöËøá‰∏ÄÊù°ÊàñËÄÖÂ§öÊù°Ë∑ØÂæÑÁªÑÂêàËÄåÊàêÁöÑ„ÄÇ‰∏çËøáÔºåÊàë‰ª¨Êã•Êúâ‰ºóÂ§öË∑ØÂæÑÁîüÊàêÁöÑÊñπÊ≥ïËÆ©Â§çÊùÇÂõæÂΩ¢ÁöÑÁªòÂà∂Êàê‰∏∫‰∫ÜÂèØËÉΩ„ÄÇ ÁªòÂà∂Áü©ÂΩ¢‰∏âÁßçÁªòÂà∂Áü©ÂΩ¢ÁöÑÊñπÊ≥ïÔºö ÁªòÂà∂‰∏Ä‰∏™Â°´ÂÖÖÁü©ÂΩ¢ÔºöfillRect(x, y, width, height) ÁªòÂà∂‰∏Ä‰∏™Áü©ÂΩ¢ËæπÊ°ÜÔºöstrokeRect(x, y, width, height) Ê∏ÖÈô§‰∏Ä‰∏™Áü©ÂΩ¢Âå∫ÂüüÔºåËÆ©Ê∏ÖÈô§ÈÉ®ÂàÜÂÆåÂÖ®ÈÄèÊòéÔºöclearRect(x, y, width, height) ÁªòÂà∂Ë∑ØÂæÑÊ†∏ÂøÉÂëΩ‰ª§ 5 ‰∏™Ôºö beginPath() // ÂºÄÂßãÁªòÂà∂ moveTo() // ÁßªÂä®ÁîªÁ¨î closePath() // Èó≠ÂêàÊõ≤Á∫ø fill() // Â°´ÂÖÖÊõ≤Á∫ø stroke() // ÁªòÂà∂ËΩÆÂªì closePath()‰∏çÊòØÂøÖÈ°ªÁöÑÔºåÁî® fill()Â∞±ËÉΩËá™Âä®Èó≠ÂêàÊõ≤Á∫øÔºå‰ΩÜ stroke()‰∏ç‰ºöËá™Âä®Èó≠ÂêàÊõ≤Á∫øÔºåÊâÄ‰ª•Âú®Â¶ÇÊûúÊÉ≥Èó≠ÂêàÊõ≤Á∫øÂ∞±Ë¶ÅÂú® stroke()‰πãÂâç closePath()‰∏Ä‰∏ã ‰∏æ‰∏™‰æãÂ≠êÔºöÁîª‰∏âËßíÂΩ¢ Â∏∏ËßÅÁöÑË∑ØÂæÑ Áõ¥Á∫øÔºölineTo(x, y) ÂúÜÂºßÔºö arc(x, y, radius, startAngle, endAngle, anticlockwise) // startAngle Âíå endAngle Âçï‰ΩçÊòØÂºßÂ∫¶ arcTo(x1, y1, x2, y2, radius) Ë¥ùÂ°ûÂ∞îÊõ≤Á∫øÔºö ‰∫åÊ¨°Ë¥ùÂ°ûÂ∞îÊõ≤Á∫øÔºöquadraticCurveTo(cp1x, cp1y, x, y) ‰∏âÊ¨°Ë¥ùÂ°ûÂ∞îÊõ≤Á∫øÔºöbezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) Áü©ÂΩ¢Ôºörect(x, y, width, height) Path2D ÂØπË±°Path2D ÂØπË±°Áî®Êù•ÁºìÂ≠òÁªòÁîªÂëΩ‰ª§ÔºåÊúâ‰∏âÁßçÊûÑÈÄ†ÊñπÂºèÔºö new Path2D(); // Á©∫ÂØπË±° new Path2D(path); // ÂÖãÈöÜ‰∏Ä‰∏™ Path2D ÂØπË±° new Path2D(d); // ‰ªé svg Âª∫Á´ã Path2D ÂØπË±°Ôºå‰æãÂ¶ÇÔºönew Path2D(&quot;M10 10 h 80 v 80 h -80 Z&quot;); ËøòÂèØ‰ª•ÊãºÊé• pathÔºö Path2D.addPath(path, transform?) // Ê∑ªÂä†‰∏ÄÊù°Ë∑ØÂæÑÂà∞ÂΩìÂâçË∑ØÂæÑÔºåÂèØ‰ª•ËÆæÁΩÆÂèòÊç¢Áü©Èòµ ‰ª£Á†ÅÁ§∫‰æã Ê†∑ÂºèÂíåÈ¢úËâ≤ fillStyle = color // Â°´ÂÖÖËâ≤ strokeStyle = color // ËΩÆÂªìËâ≤ globalAlpha = transparencyValue // ÈÄèÊòéÂ∫¶ÔºåÂèñÂÄºËåÉÂõ¥Ôºö0.0ÔºàÂÆåÂÖ®ÈÄèÊòéÔºâÂà∞ 1.0ÔºàÂÆåÂÖ®‰∏çÈÄèÊòéÔºâ È¢úËâ≤ÂèñÂÄºÁöÑÂõõÁßçÂÜôÊ≥ïÔºö 1234ctx.fillStyle = "orange";ctx.fillStyle = "#FFA500";ctx.fillStyle = "rgb(255, 165,0 )";ctx.fillStyle = "rgba(255, 165, 0, 1)";]]></content>
      <tags>
        <tag>Canvas</tag>
        <tag>Â≠¶‰π†Á¨îËÆ∞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êï∞Áã¨Ê∏∏ÊàèÂà∂‰ΩúËøáÁ®ãËÆ∞ÂΩï]]></title>
    <url>%2Fblog%2F2023%2F02%2F10%2F%E6%95%B0%E7%8B%AC%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[ÊàëÊâìÁÆóËá™Â∑±ÂÅö‰∏Ä‰∏™Êï∞Áã¨Ê∏∏ÊàèÔºå‰∏ªË¶ÅÂàÜ‰∏∫‰∏§Ê≠•Ôºö ÁîüÊàê‰∏Ä‰∏™Êï∞Áã¨ È™åËØÅÁé©ÂÆ∂Â°´ÂÖ•ÁöÑÊï∞Â≠óÊòØÂê¶Ê≠£Á°Æ ÁîüÊàê‰∏Ä‰∏™Êï∞Áã¨ÂèØ‰ª•ÊúâÂæàÁúÅ‰∫ãÁöÑÂäûÊ≥ïÔºåÂ∞±ÊòØÁõ¥Êé•‰ªéÊï∞Áã¨Â∫ì‰∏≠ÈöèÊú∫ÈÄâ‰∏Ä‰∏™ÔºàÁîöËá≥ÂèØ‰ª•Áõ¥Êé•ÊääÁ©∫ÁôΩÈÉΩÁªô‰Ω†ÊåñÂ•ΩÔºâ„ÄÇ‰πüÂèØ‰ª•Áî®Êö¥ÂäõÊñπÊ≥ïÔºàÂõûÊ∫ØÊ≥ïÔºâÔºå‰∏ÄË°å‰∏ÄË°åÂéªÂ°´ÔºåËøõË°å‰∏ç‰∏ãÂéªÂ∞±ÂõûÊ∫ØÂà∞‰∏ä‰∏ÄÊ≠•„ÄÇ ÁîüÊàêÊï∞Áã¨ÊúÄÈ´òÊïàÁöÑÁÆóÊ≥ïÊòØÔºöËàûËπàÈìæÔºåÂÆûÈôÖ‰∏äËàûËπàÈìæÊòØ‰∏ÄÁßçÊï∞ÊçÆÁªìÊûÑÔºåÊòØ‰∏∫‰∫ÜX ÁÆóÊ≥ïËÄå‰∫ßÁîüÁöÑÔºåËÄå X ÁÆóÊ≥ïÊòØÁî®Êù•Ëß£ÂÜ≥‰∏ÄÁ±ªÈóÆÈ¢òÔºöÁ≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢ò Êèí‰∏™È¢òÂ§ñËØùÔºåÊàëÊúãÂèãËØ¥Ôºå‰∏úÈáéÂú≠ÂêæÁöÑÂ∞èËØ¥„ÄäÂ´åÁñëÁäØ X ÁöÑÁåÆË∫´„ÄãÔºåÁöÑÂá∂ÊâãÂ∞±Âú®Á†îÁ©∂Ëøô‰∏™ÈóÆÈ¢òÔºåÊúâÂÖ¥Ë∂£ÂèØ‰ª•È°∫Â∏¶ÁúãÁúãÔºåËøôÂ∞èËØ¥Êå∫ÊúâÂêçÁöÑ„ÄÇ Á≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢òÊòØ‰∏Ä‰∏™ NP ÂÆåÂÖ®ÈóÆÈ¢òÔºåNP ÈóÆÈ¢òÁöÑÊ¶ÇÂøµÊàëÂ∑Æ‰∏çÂ§öÂøòÂÖâ‰∫ÜÔºåÂæóÈáçÊñ∞ÁúãÁúã Á≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢òÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØÁªôÂÆö‰∏Ä‰∏™ÂÖ®ÈõÜ XÔºåÂíåËã•Âπ≤Â≠êÈõÜ SÔºå‰ªéÂ≠êÈõÜ‰∏≠ÈÄâÂá∫ N ‰∏™ÔºåÂÆÉ‰ª¨ÊãºÂáëËµ∑Êù•ÊÅ∞Â•ΩÔºàÊ≤°ÊúâÂ§ö‰ΩôÁöÑÂÖÉÁ¥†ÔºåÊØîÂ¶ÇÊüê‰∏™ÂÖÉÁ¥†Âá∫Áé∞Ëøá‰∏§Ê¨°ÔºâÁ≠â‰∫éÂÖ®ÈõÜ X„ÄÇ X ÁÆóÊ≥ïÁª¥Âü∫ÁôæÁßëÁöÑËß£ËØ¥ÊàëÁúã‰∏çÊáÇÔºåËøòÂ•Ω OI-Wiki ‰∏äËÆ≤ÁöÑË∂≥Â§üËØ¶ÁªÜÔºöX ÁÆóÊ≥ï Ëß£ÂÜ≥Á≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢òÔºåÁÆÄÂçïÊù•ËØ¥ÂàÜ‰∏∫‰ª•‰∏ãÂá†‰∏™Ê≠•È™§Ôºö Âª∫Ê®°ÈíàÂØπÈóÆÈ¢òÂª∫Ê®°ÔºåÂª∫Ê®°Êàê‰∏Ä‰∏™ 01 Áü©ÈòµÔºåÊØè‰∏ÄË°å‰ª£Ë°®‰∏Ä‰∏™ÈõÜÂêàÔºå1 ‰ª£Ë°®ÂåÖÂê´‰∫ÜÈõÜÂêà X ÁöÑÊüê‰∏™ÂÖÉÁ¥†Ôºà1 ÁöÑ‰ΩçÁΩÆÔºåÂ∞±ÊòØËØ•ÂÖÉÁ¥†Âú®ÈõÜÂêà X ‰∏≠ÁöÑ‰ΩçÁΩÆÔºâÔºå0 ‰ª£Ë°®Ê≤°ÂåÖÂê´ ÁÆóÊ≥ïÊ≠•È™§ÁÆÄÂåñÈóÆÈ¢òÔºàÁº©Â∞èÁü©ÈòµÔºåÂà†Êéâ‰∏çÂÜçËÄÉËôëÁöÑÈÉ®ÂàÜÔºâÔºåÈÄíÂΩíËß£ÂÜ≥Â≠êÈóÆÈ¢ò„ÄÇ ÈÄâË°åÔºöÈÄâ 1 Âá∫Áé∞Ê¨°Êï∞ÊúÄÂ∞ëÁöÑ‰∏ÄÂàóÔºåÁÑ∂Âêé‰ªéËøôÂàóÊúâ 1 ÁöÑË°å‰∏≠Èöè‰æøÈÄâ‰∏ÄË°å Âà†ÂáèÔºöÊâæÂà∞Ëøô‰∏ÄË°åÁöÑÊúâ 1 ÁöÑÈÇ£‰∫õÂàóÔºåÂéªÊéâËøô‰∫õÂàóÔºåÊâæÂà∞Ëøô‰∫õÂàó‰∏äÊòØ 1 ÁöÑË°åÔºåÂéªÊéâËøô‰∫õË°å Áé∞Â∑≤ÁªèÂæóÂà∞‰∫Ü‰∏Ä‰∏™Áº©Â∞èÁâàÁöÑÁü©ÈòµÔºåÁªßÁª≠‰ª•‰∏äËøôÁßçÂà†ÂáèÊìç‰Ωú ÂçïÊ¨°Ê∑±Â∫¶ÊêúÁ¥¢ÁªìÊùüÊ†áÂøóÔºöÂæóÂà∞‰∏Ä‰∏™Á©∫Áü©Èòµ„ÄÇÊòØÂê¶ÊúâËß£ÔºöÊúÄÂêé‰∏ÄÊ¨°Âà†Èô§ÁöÑË°åÂÖ®ÈÉ®ÊòØ 1ÔºåÂàôËØ¥ÊòéÈóÆÈ¢òÊúâËß£ÔºåÂê¶ÂàôÈóÆÈ¢òÊó†Ëß£„ÄÇÊÄªÁ®ãÂ∫èÁªìÊùüÊ†áÂøóÔºöÂõûÊ∫ØÂÆåÊâÄÊúâÂèØËÉΩÁöÑÂàÜÊîØ Ëøô‰∏™ÁÆóÊ≥ïÂæàÂ•ΩÁöÑÁº©Â∞è‰∫ÜÈóÆÈ¢òËßÑÊ®°ÔºåÈùûÂ∏∏ÂÖ∏ÂûãÁöÑÊäÄÂ∑ß ÁÆóÊ≥ïÂê´‰πâÊØèÈÄâÊã©‰∏ÄË°åÔºå‰ª£Ë°®ÁùÄÊâìÁÆóÁî®Ëøô‰∏ÄË°åÂéªÁ≤æÁ°ÆË¶ÜÁõñÂÖ®ÈõÜÔºåÈÇ£‰πàÁõ∏Â∫îÁöÑÔºö ÊØèË°åÂè™Áî®‰∏ÄÊ¨°ÔºåÊïÖÂà†Èô§ÈÄâÊã©ÁöÑËøô‰∏ÄË°å Ëøô‰∏ÄË°å‰∏≠Âá∫Áé∞ÁöÑÊâÄÊúâÂÖÉÁ¥†ÔºàÊØè‰∏™ 1 ‰ª£Ë°®‰∏Ä‰∏™ÂÖÉÁ¥†Âá∫Áé∞ÔºâÔºåÂêéÁª≠ÈÉΩ‰∏çÁî®ÂÜçËÄÉËôëÔºåÊïÖÂà†Èô§Áõ∏ÂÖ≥Âàó Ë∑üÂÆÉËµ∑ÂÜ≤Á™ÅÁöÑË°åÔºàÂêå‰∏ÄÂàó‰∏äÊúâ 1Ôºå‰ª£Ë°®ÊúâÁõ∏ÂêåÁöÑÂÖÉÁ¥†Ôºå‰∏çÁ¨¶ÂêàÁ≤æÁ°ÆË¶ÜÁõñÔºâÔºåÊ≤°Ê≥ïÁ∫≥ÂÖ•Ëß£‰∏≠ÔºåÊâÄ‰ª•ÂêéÁª≠ÈÉΩ‰∏çÁî®ÂÜçËÄÉËôëÔºåÊïÖÂà†Èô§Ëøô‰∫õË°å ‰ª•‰∏ä‰∏âÊ≠•ÂèØ‰ª•‰øùËØÅÊØèÊ¨°ÈÄâÊã©ÁöÑË°åÔºåË°å‰πãÈó¥ÊòØ‰∏ç‰ºöÂá∫Áé∞ÈáçÂ§çÂÖÉÁ¥†ÁöÑ„ÄÇ ÁªìÊùüÊ†áÂøó‰πüÂæàÂ•ΩÁêÜËß£ÔºåÊúÄÂêé‰∏ÄÊ¨°Âà†Èô§ÁöÑË°åÔºåÂ¶ÇÊûúÂÖ®ÈÉ®ÊòØ 1ÔºåÂàôÊ†áÂøóÁùÄÊàë‰ª¨ÊâÄÊúâÂàóÈÉΩÂàöÂ•ΩÂ°´Ë°•‰∏ä‰∫ÜÂÖÉÁ¥†„ÄÇ ËøôÊ†∑Êàë‰ª¨Â∞±ÂÅöÂà∞‰∫ÜÂÖ®Ë¶ÜÁõñ+Á≤æÁ°ÆË¶ÜÁõñÔºåËøô‰∏§È°πË¶ÅÊ±Ç„ÄÇ ÁÆóÊ≥ïÁöÑÂÖ∑‰ΩìÂÆûÁé∞ÂÖ∑‰Ωì‰ª£Á†ÅÂÆûÁé∞ÔºåËøòÊúâÂæàÂ§öÁªÜËäÇ‰∏çÊ∏ÖÊ•öÔºåÂèÇËÄÉËµÑÊñôÔºö Ë∑≥Ë∑ÉÁöÑËàûËÄÖÔºåËàûËπàÈìæÔºàDancing LinksÔºâÁÆóÊ≥ï‚Äî‚ÄîÊ±ÇËß£Á≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢ò ÁªèËøá‰∏§Â§©ÁöÑËÆæËÆ°‰∏éËæõËã¶Ë∞ÉËØïÔºåÊàëËá™Â∑±ÂÆûÁé∞‰∫Ü‰∏Ä‰ªΩ TypeScript ÂÜôÁöÑ‰ª£Á†ÅÔºö https://github.com/liuqinh2s/Algorithm/blob/master/DancingLinksX/DancingLinksX.ts ‰∏é‰∏äÈù¢ÈÇ£‰∏™ÂÆûÁé∞‰∏çÂêåÔºåÊàëËøô‰∏™ÂÆûÁé∞Êó¢ÊúâÂàóÂ§¥ÔºåÂèàÊúâË°åÂ§¥ÔºåÂèçÊ≠£ÊÄé‰πàÊñπ‰æøÊÄé‰πàÊù•„ÄÇ Êï∞Áã¨ÊÄé‰πàËΩ¨Âåñ‰∏∫Á≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢òÂèÇËÄÉËµÑÊñôÔºöhttps://zhuanlan.zhihu.com/p/67447747 Âú®ÁΩë‰∏äÊü•ÈòÖ‰∫ÜÂ§ßÈáèËµÑÊñôÔºå‰ΩÜ‰∏ÄÂºÄÂßãÈÉΩÁúã‰∏çÊáÇÔºå‰∏îÂèëÁé∞‰ªñ‰ª¨ËÆ≤ÁöÑÂü∫Êú¨‰∏ä‰∏ÄÊ®°‰∏ÄÊ†∑ÔºàÂ§©‰∏ãÊñáÁ´†‰∏ÄÂ§ßÊäÑÔºâÔºåÂ∞±Ë∑üÂâçÈù¢ËàûËπàÈìæ‰∏ÄÊ†∑ÔºåËøûÈÖçÂõæÈÉΩÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇ ÊÄé‰πàÊääÊï∞Áã¨Ëøô‰∏™Áü©ÈòµËΩ¨Âåñ‰∏∫Á≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢òÁöÑ 01 Áü©ÈòµÔºåÂÖ∂ÂÆûÂ∞±ÊòØË¶ÅÊÉ≥Ê∏ÖÊ•öÔºåË°åÂíåÂàóÁöÑÊÑè‰πâÊòØ‰ªÄ‰πàÔºü Ë°åÁöÑÊÑè‰πâÁ≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢òÁöÑÊ†∏ÂøÉË¶ÅÁ¥†ÊòØÔºö‰∏Ä‰∏™ÂÖ®ÈõÜ XÔºåËã•Âπ≤Â≠êÈõÜ S ÈÇ£‰πàÊàë‰ª¨ÂÖàÊù•ÊÉ≥ÊÉ≥ÂÖ®ÈõÜÊòØ‰ªÄ‰πàÔºü ÂÖ®ÈõÜËÇØÂÆöÊòØ‰∏ÄÂπÖÂÆåÊï¥ÁöÑÊ≠£Á°ÆÁöÑÊï∞Áã¨Á≠îÊ°à ÈÇ£ÊØè‰∏™Â≠êÈõÜÊòØ‰ªÄ‰πàÔºü Â≠êÈõÜÂ∫îËØ•ÊòØÂçï‰∏™Ê†ºÂ≠êÁöÑËß£ÔºåÁÑ∂ÂêéÊàë‰ª¨ÊãøÊÅ∞Â•Ω 81 ‰∏™Â≠êÈõÜÔºåÂáëÂá∫ÂÖ®ÈõÜ„ÄÇ ÊØè‰∏™Ê†ºÂ≠êÊúâ 9 ÁßçÂ°´Ê≥ïÔºå81 ‰∏™Ê†ºÂ≠êÊúâ 729 ÁßçÂ°´Ê≥ïÔºåÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶Å‰ªé 729 ‰∏™Â≠êÈõÜ‰∏≠ÈÄâ 81 ‰∏™Âá∫Êù•„ÄÇ ÂàóÁöÑÊÑè‰πâÈ¶ñÂÖàÊÄùËÄÉ‰∏Ä‰∏ãË¶ÅÂæÄ‰∏Ä‰∏™Êï∞Áã¨ÁöÑÊ†ºÂ≠êÈáåÂ°´ÂÖ•‰∏Ä‰∏™Êï∞Â≠óÂèóÂì™‰∫õÊù°‰ª∂Á∫¶ÊùüÔºö È¶ñÂÖàÔºåËøô‰∏™Ê†ºÂ≠êÈáå‰∏çËÉΩÊúâÊï∞Â≠óÔºåÂç≥‰∏∫Á©∫ ÂÖ∂Ê¨°ÔºåÂêå‰∏ÄË°å‰∏çËÉΩÊúâÁõ∏ÂêåÊï∞Â≠ó ÂÜçÊ¨°ÔºåÂêå‰∏ÄÂàó‰∏çËÉΩÊúâÁõ∏ÂêåÊï∞Â≠ó ÊúÄÂêéÔºåÂêå‰∏Ä‰∏™‰πùÂÆ´Ê†º‰∏çËÉΩÊúâÁõ∏ÂêåÊï∞Â≠ó ÊØè‰∏™Ê†ºÂ≠êÈÉΩÊúâ 4 ‰∏™Á∫¶ÊùüÔºå81 ‰∏™Ê†ºÂ≠êÊúâ 324 ‰∏™Á∫¶ÊùüÔºåÊâÄ‰ª•Êúâ 324 ÂàóÔºåÂÖ∑‰ΩìÁöÑÊØè‰∏ÄÂàóÁöÑÂê´‰πâÂ¶Ç‰∏ãÔºö Á¨¨ 0 ÂàóË°®Á§∫Êï∞Áã¨Ôºà0,0Ôºâ‰ΩçÁΩÆÊòØÂê¶ÊúâÊï∞Â≠ó Á¨¨ 1 ÂàóË°®Á§∫Ôºà0,1Ôºâ‰ΩçÁΩÆÊòØÂê¶ÊúâÊï∞Â≠ó ‚Ä¶‚Ä¶ Á¨¨ 8 ÂàóË°®Á§∫Ôºà0,8ÔºâÊòØÂê¶ÊúâÊï∞Â≠ó Á¨¨ 9 ÂàóË°®Á§∫Ôºà1,0ÔºâÊòØÂê¶ÊúâÊï∞Â≠ó ‚Ä¶‚Ä¶ Á¨¨ 80 ÂàóË°®Á§∫Ôºà8,8ÔºâÊòØÂê¶ÊúâÊï∞Â≠ó ‰ª•‰∏ä 81 ÂàóË°®Á§∫Êï∞Áã¨ÁöÑÊ†ºÂ≠êÈáåÊòØÂê¶ÊúâÊï∞Â≠óÁöÑÁ∫¶ÊùüÊù°‰ª∂ÔºåÊé•ÁùÄ 81 ÂàóË°®Á§∫Á¨¨ 0 Ë°åÊòØÂê¶ÊúâÊï∞Â≠ó 1 82 ÂàóË°®Á§∫Á¨¨ 0 Ë°åÊòØÂê¶ÊúâÊï∞Â≠ó 2 ‚Ä¶‚Ä¶ 89 ÂàóË°®Á§∫Á¨¨ 0 Ë°åÊòØÂê¶ÊúâÊï∞Â≠ó 9 90 ÂàóË°®Á§∫Á¨¨ 1 Ë°åÊòØÂê¶ÊúâÊï∞Â≠ó 1 91 ÂàóË°®Á§∫Á¨¨ 1 Ë°åÊòØÂê¶ÊúâÊï∞Â≠ó 2 ‚Ä¶‚Ä¶ 161 ÂàóË°®Á§∫Á¨¨ 8 Ë°åÊòØÂê¶ÊúâÊï∞Â≠ó 9 ‰ª•‰∏ä‰∏∫Ë°åÁöÑÁ∫¶ÊùüÊù°‰ª∂ 162 ÂàóË°®Á§∫Á¨¨ 0 ÂàóÊòØÂê¶ÊúâÊï∞Â≠ó 1 ‚Ä¶‚Ä¶ 242 ÂàóË°®Á§∫Á¨¨ 8 ÂàóÊòØÂê¶ÊúâÊï∞Â≠ó 9 ÊúÄÂêéÔºåÊòØ‰πùÂÆ´Ê†ºÁöÑÁ∫¶ÊùüÊù°‰ª∂Ôºö 243 ÂàóË°®Á§∫Á¨¨ 0 ‰∏™‰πùÂÆ´Ê†ºÊòØÂê¶ÊúâÊï∞Â≠ó 1 244 ÂàóË°®Á§∫Á¨¨ 0 ‰∏™‰πùÂÆ´Ê†ºÊòØÂê¶ÊúâÊï∞Â≠ó 2 ‚Ä¶‚Ä¶ 323 ÂàóË°®Á§∫Á¨¨ 8 ‰∏™‰πùÂÆ´Ê†ºÊòØÂê¶ÊúâÊï∞Â≠ó 9 ÂÖ∑‰Ωì‰æãÂ≠êÊàë‰ª¨Êãø 4*4 ÁöÑÊï∞Áã¨Êù•ÂÅö‰æãÂ≠êÔºàÂè™Áî®Âà∞ 1 Âà∞ 4 Âõõ‰∏™Êï∞ÔºåÂèØ‰ª•Áß∞‰πã‰∏∫ 2 Èò∂Êï∞Áã¨ÂêßÔºåÊØîÂí±‰ª¨Â∏∏Áé©ÁöÑ‰∏âÈò∂Êï∞Áã¨Â∞è‰∏ÄÈò∂ÔºâÔºö 12340 4 0 00 0 0 00 0 0 00 0 0 0 ËøôÂπÖÂõæËΩ¨ÂåñÊàêÁ≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢òÁöÑÁü©ÈòµÊòØ‰ªÄ‰πàÊ†∑Âë¢Ôºü 12Á¨¨‰∫å‰∏™Ê†ºÂ≠êÈáåÂ°´‰∫ÜÊï∞ÔºåÂÖ∂‰ªñÊ≤°Â°´ | Á¨¨‰∏ÄË°åÂ°´‰∫ÜÊï∞Â≠ó4 | Á¨¨2ÂàóÂ°´‰∫ÜÊï∞Â≠ó4 | Á¨¨1‰∏™4ÂÆ´Ê†ºÂ°´‰∫ÜÊï∞Â≠ó40 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 | 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 | 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 | 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ‰∏äÈù¢Áî®|ÂàíÂàÜ‰∫ÜÂõõ‰∏™Âå∫ÂüüÔºåÊØè‰∏™Âå∫ÂüüÁöÑÂê´‰πâÈÉΩËØ¶ÁªÜËØ¥Êòé‰∫Ü ‰ªé‰∏äËø∞ 01 Ë°å‰πüËÉΩÁõ¥Êé•Êé®Âá∫Êï∞Áã¨ÂõæÔºåÂÆÉ‰ª¨ÊòØÂèØ‰ª•‰∫íÁõ∏Êé®Âá∫ÁöÑÔºÅ ÂΩìÁÑ∂‰πüÂèØ‰ª•Áî®Â§çÂêàÊï∞Áã¨ÂõæÔºåÊé®Âá∫Â§çÂêàË°åÔºå‰ΩÜÊòØÂ§çÂêàË°åÂèØËÉΩÊó†Ê≥ïÊé®Âá∫Âçï‰∏™ÂÖ∑‰ΩìÊï∞Áã¨ÂõæÔºåÂõ†‰∏∫Â≠òÂú®‰∏ÄÂØπÂ§öÁöÑÊÉÖÂÜµÔºå‰∏Ä‰∏™ÂæàÁÆÄÂçïÁöÑ‰æãÂ≠êÂ∞±ÊòØÂÖ® 1 ÁöÑË°åÔºåÂØπÂ∫îÁöÑÊòØÊäΩË±°ÁöÑÊï∞Áã¨Ëß£ÔºåËÄåÊï∞Áã¨Ëß£ÊòØÊúâ N ‰∏™ÁöÑ„ÄÇ Êï∞Áã¨ÁöÑÂÖ®ÈÉ®Ëß£ÊúâÂ§öÂ∞ë‰∏™Ôºü Êï∞Áã¨ÁöÑÊÄª‰∏™Êï∞ÊòØËøô‰πàÂæóÂá∫Êù•ÁöÑ„ÄÇ9!√ó722√ó27√ó 27,704,267,971=6,670,903,752,021,072,936,960ÔºàÁ∫¶Êúâ 6.67√ó10 ÁöÑ 21 Ê¨°ÊñπÔºâÁßçÁªÑÂêàÔºå2005 Âπ¥Áî± Bertram Felgenhauer Âíå Frazer Jarvis ËÆ°ÁÆóÂá∫ËØ•Êï∞Â≠óÔºåÂ¶ÇÊûúÂ∞ÜÈáçÂ§çÔºàÂ¶ÇÊï∞Â≠ó‰∫§Êç¢„ÄÅÂØπÁß∞Á≠âÔºâ‰∏çËÆ°ÁÆóÔºåÈÇ£‰πàÊúâ 5,472,730,538 ‰∏™ÁªÑÂêà„ÄÇÈÇ£‰πàÊúâË∂£ÁöÑÊù•‰∫ÜÔºåÊúâ‰∏™ 9!=362880ÔºåËøô‰∏™Â∞±Á≠â‰∫é 9 ÁöÑÂÖ®ÊéíÂàóÔºåÊòØ‰∏çÊòØÂèØ‰ª•‰ªéËøôÈáåÂÅöÁ™ÅÁ†¥Âè£Âë¢ÔºüÂ¶ÇÊûúÊàëÂèØ‰ª•ÈöèÊú∫ÁöÑÁîüÊàê 362880 ‰∏™ÂÆåÊï¥ÁöÑÊï∞Áã¨Áü©ÈòµÔºåÁÑ∂ÂêéÈöèÊú∫ÁöÑÊØèË°åÊåñÂéª 4 Âà∞ 5 ‰∏™ÈÇ£Â∞±ÊòØ 362880/24/120*9*362880=411505920 ‰∏™ÔºåËøô‰∏™Êï∞Â≠óÂ§üÂ§ßÂÆ∂ÊúâÁîü‰πãÂπ¥Áé©ÁöÑ‰∫Ü„ÄÇ--ÊëòÂΩïËá™Êï∞Áã¨-- ‰∏Ä‰∏™È´òÊïàÁéáÁîüÊàêÊï∞Áã¨ÁöÑÁÆóÊ≥ï ÁúüÂÆûÊÄßÊúâÂæÖËøõ‰∏ÄÊ≠•ËÄÉËØÅ Êï∞Áã¨Ê±ÇËß£Èöè‰æøÁªôÂá∫‰∏Ä‰∏™Êï∞Áã¨ÂõæÔºå‰πüÂ∞±ÊòØÁõ∏ÂΩì‰∫éÁªôÂá∫‰∫ÜËàûËπàÈìæ‰∏≠ÁöÑ‰∏ÄË°åÔºåÊàë‰ª¨‰ª•Ëøô‰∏ÄË°å‰∏∫ÂÖ•Âè£ÔºåÂç≥ÂèØËøõË°åÁ≤æÁ°ÆË¶ÜÁõñÈóÆÈ¢òÁöÑÊ±ÇËß£ÔºåËß£Á©∫Èó¥ÊòØ 729ÔºåÂØπÂ∫îÁöÑ 01 Áü©ÈòµÂ§ßÂ∞èÊòØÔºö729*324Ôºå‰∏çËøáËøòÂ•ΩÊòØ‰∏™Á®ÄÁñèÁü©Èòµ„ÄÇ Êúâ‰∏Ä‰∏™‰ºòÂåñÂøÖÈ°ªË¶ÅËØ¥‰∏Ä‰∏ãÔºöÊØèÊ¨°ÈÄâË°åÁöÑÊó∂ÂÄôÔºåÈÄâ 1 ÊúÄÂ∞ëÁöÑÂàó‰∏äÁöÑÊüê‰∏ÄË°å„ÄÇ ÈÄâ 1 ÊúÄÂ∞ëÁöÑÂàóÁöÑÊÑè‰πâÊòØÔºöÂØªÊâæÂá∫Áé∞Âú®ÊâÄÊúâÂ≠êÈõÜ‰∏≠Ê¨°Êï∞ÊúÄÂ∞ëÁöÑÂÖÉÁ¥†ÔºåÊó¢ÁÑ∂Â§ßÂÆ∂ÈÉΩÂæàÁº∫Ëøô‰∏™ÂÖÉÁ¥†ÔºåÈÇ£‰πàÂü∫Êú¨‰∏äÊÑèÂë≥ÁùÄÂáëÂÖ®ÈõÜÂêàÔºåÂæàÈúÄË¶ÅËøô‰∏™ÂÖÉÁ¥†ÔºåÈÇ£‰πàÂ∞±Ë¶Å‰ºòÂÖàÈÄâÊã©Ëøô‰∫õÂÖÉÁ¥† Ê≤°Âä†Ëøô‰∏™‰ºòÂåñÁöÑÊó∂ÂÄôÔºåÊàëÁöÑÂõûÊ∫Ø‰∏ÄÁõ¥Âú®ÊêûÊéíÂàóÁªÑÂêàÔºåÊó†Â§¥ËãçËùáÔºåË∑ë‰∫Ü 60 Â§ö‰∏áÊ¨° dance ÈÉΩÊ≤°ÁªìÊûúÔºàÂá†ÂàÜÈíüÈÉΩËøáÂéª‰∫ÜÔºâÔºåÂä†‰∫ÜËøô‰∏™‰ºòÂåñÁõ¥Êé•Ëµ∑È£ûÔºå1 ÁßíÈíü‰∏çÂà∞Â∞±Ëß£Âá∫Êù•‰∫Ü„ÄÇ ÊàëÁöÑÊï∞Áã¨Ê±ÇËß£‰ª£Á†ÅÔºöhttps://github.com/liuqinh2s/Algorithm/blob/master/SudoKu/SudoKu.ts ËÉΩÁõ¥Êé•Âú®ÊµèËßàÂô®‰∏äË∑ëÁöÑ‰ª£Á†ÅÔºöhttps://github.com/liuqinh2s/Algorithm/blob/master/SudoKu/bundle.js ÂèØ‰ª•ÈÄöËøánpm i @liuqinh2s/sudoku-jsÂÆâË£Ö ËÉΩÂú®Á∫øÁé©ÁöÑÈ°πÁõÆÔºöhttps://jujuxi.xyz/sudoku/ Êï∞Áã¨ÁîüÊàê‰ª•‰∏äÂè™ËÆ≤‰∫ÜÂ¶Ç‰ΩïËß£Êï∞Áã¨ÔºåÈÇ£‰πàÂ¶Ç‰ΩïÁîüÊàêÊï∞Áã¨Âë¢ÔºöÊï∞Áã¨ÁöÑÁîüÊàêËøáÁ®ãÊòØÊÄéÊ†∑ÁöÑÔºü - ÂçïÊÉ≥ÁöÑÂõûÁ≠î - Áü•‰πé ÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØÔºöÈöèÊú∫ÊîæÂÖ• 11 ‰∏™Êï∞ÔºåÊ±ÇËß£Âá∫ÁªàÁõòÔºåÁÑ∂ÂêéÊåñÊ¥û„ÄÇ Êï∞Áã¨ËÉåÊôØÁü•ËØÜÂàùÁ∫ßËØæÂ†ÇÔºà3Ôºâ|Êï∞Áã¨ÊØî‰Ω†Ëøò‰ºòÁæéÔºåËøòÊúâ‰∏™ÊÄßÔºÅÊØîËæÉÁ≤æÁæéÁöÑÊï∞Áã¨ÁΩëÁ´ôÔºöSudoku.com Êï∞Áã¨ÈöæÊòìÂà§ÂÆö]]></content>
      <tags>
        <tag>È°πÁõÆ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[border-radiusËØ¶Ëß£]]></title>
    <url>%2Fblog%2F2023%2F02%2F09%2Fborder-radius%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[Áúã„ÄäCSS Ëß£ÂØÜ„ÄãÁöÑÊó∂ÂÄôÈÅáÂà∞ border-radius ‰∏çÊòØÂæàÊáÇÔºåÊúâ‰∏™‰æãÂ≠êÂ¶Ç‰∏ãÔºö 12border-radius: 100% 100% 0 0 / 100% 0 0 0; /* Â∑¶‰∏äËßíÊ§≠ÂúÜÂçäÂæÑÊòØÂçäÂÆΩÈ´ò */border-radius: 100% 0 0 0 / 100% 0 0 0; /* Â∑¶‰∏äËßíÊ§≠ÂúÜÂçäÂæÑÊòØÂÖ®ÂÆΩÈ´ò */ Â∑ÆÂà´Êå∫Â§ßÁöÑÂØπÂêßÔºåÂéüÂõ†Â∞±ÊòØËßí‰∏éËßí‰πãÈó¥Âá∫Áé∞‰∫ÜÊå§ÂÖëÔºàÊàñËÄÖËØ¥ÈáçÂè†ÔºâÔºåÂ¶ÇÊûúÈÅáÂà∞‰∫ÜÈáçÂè†ÊÄé‰πàÂäûÂë¢ÔºüÊÄé‰πàË°®Áé∞Âë¢ÔºüÂéüÁêÜÊòØ‰ªÄ‰πàÔºü Êü•ÂÆòÊñπÊñáÊ°£ÔºåÂèëÁé∞ËÆ≤ÁöÑÂæàÁ≤óÁ≥ôÔºå‰ΩÜÂÆòÊñπÊñáÊ°£ÁªôÂá∫‰∫Ü‰∏Ä‰∏™specificationÔºàËØ¶ÁªÜËØ¥ÊòéÔºâÔºåËøôÈáåÈù¢Êúâ‰∏ÄÊù°Overlapping CurvesÔºå‰∏ìÈó®ËÆ≤‰∫ÜËøôÁßçÊÉÖÂÜµÊÄé‰πàÂ§ÑÁêÜ„ÄÇ ÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØÊâæÊúÄÂ§ßÁöÑ‰∏ÄÂ§ÑÈáçÂè†ÔºåÁÑ∂ÂêéÊâÄÊúâÁöÑÂçäÂæÑÈÉΩÁ≠âÊØî‰æãÁº©Â∞èÔºåÊØî‰æãÊòØÔºöÈáçÂè†Â§ÑÁöÑÊÄªÈïøÂ∫¶/ÂéüÊú¨ÈïøÂ∫¶„ÄÇ ÂÅáÂ¶ÇÊúÄÂ§ßÈáçÂè†Â§ÑÁöÑÈïøÂ∫¶ÊòØÂÆΩÁöÑ‰∏§ÂÄçÔºåÈÇ£‰πàÊâÄÊúâÂçäÂæÑÈÉΩË¶ÅÁº©Â∞è‰∏ÄÂçä„ÄÇ ÂÆûÈ™åÈìæÊé• ÈÄöËøáËøô‰ª∂‰∫ãÔºåÊàëÂÜçÊ¨°ÊÑüÊ¶ÇÔºåÊúÄÊúâÊïàÔºåÊúÄÂèØÈù†ÁöÑ‰ø°ÊÅØÊù•Ëá™‰∫éÂÆòÊñπÔºåËøòÊúâÂ∞±ÊòØ‰∏ÄÂÆöË¶ÅÁÜüÁªÉËã±ÊñáÔºå‰∏çÁÑ∂ËøûÁ≠îÊ°àÂú®Âì™ÈÉΩÊâæ‰∏çÂà∞„ÄÇ ÂÖ≥‰∫éÁº©ÂÜôÁº©ÂÜô 1Ôºà‰∏Ä‰∏™ÂÄºÔºâÔºö ËøôÁßçÊúÄÁÆÄÂçï 123border-radius: 100%;/*Á≠â‰ª∑‰∫é*/border-radius: 100% 100% 100% 100%; Áº©ÂÜô 2Ôºà‰∏§‰∏™ÂÄºÔºâÔºö ÈáçÂ§çËá™Ë∫´‰∏ÄÈÅç 123border-radius: 100% 0;/*Á≠â‰ª∑‰∫é*/border-radius: 100% 0 100% 0; Áº©ÂÜô 3Ôºà‰∏â‰∏™ÂÄºÔºâÔºö Êää‰∏≠Èó¥Ëøô‰∏™ÂÄºÈáçÂ§ç‰∏ÄÈÅç 123border-radius: 100% 50% 100%;/*Á≠â‰ª∑‰∫é*/border-radius: 100% 50% 100% 50%; Ë∑ü margin Âíå padding ÁöÑÁº©ÂÜôÊòØ‰∏ÄÊ®°‰∏ÄÊ†∑ÁöÑ]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AIÊó∂‰ª£Êù•‰∏¥ÔºåÊúâÂì™‰∫õÊú∫ÈÅáÊàëÂèØ‰ª•Êäì‰ΩèÔºü]]></title>
    <url>%2Fblog%2F2023%2F02%2F06%2FAI%E6%97%B6%E4%BB%A3%E6%9D%A5%E4%B8%B4%EF%BC%8C%E6%9C%89%E5%93%AA%E4%BA%9B%E6%9C%BA%E9%81%87%E6%88%91%E5%8F%AF%E4%BB%A5%E6%8A%93%E4%BD%8F%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[È¶ñÂÖà‰ªÄ‰πàÊòØ AI Êó∂‰ª£ÔºåÊàëÊâÄËÆ§‰∏∫ÁöÑ AI ÊòØÂèØ‰ª•ËÆ©ËÆ°ÁÆóÊú∫‰∫ßÁîüÁöÑÊô∫ÂäõÔºåÂÉèÁ±ª‰ºº‰∫é‰∫∫‰∏ÄÊ†∑Â∑•‰ΩúÔºåÂÅö‰ª•ÂâçÁÆÄÂçïÁöÑÈÄªËæëÊó†Ê≥ïÂÆåÊàêÁöÑ‰∫ãÊÉÖÔºåÊØîÂ¶ÇÔºö ËØÜÂà´ÂõæÁâáÈáåÁöÑÊñáÂ≠ó ËØÜÂà´ÂõæÁâáÈáåÊúâÊ≤°ÊúâÁå´ Ëá™Âä®È©æÈ©∂ÔºåËØÜÂà´Ë∑ØÂÜµ ‰∏ãÊ£ãÔºåÂõΩÈôÖË±°Ê£ãÔºåÂõ¥Ê£ãÔºåÂáªË¥•‰∫∫Á±ªÂÜ†ÂÜõ AI Êç¢ËÑ∏ÔºåÂ∞ÜÂõæÁâáÂíåËßÜÈ¢ë‰∏≠ÁöÑ‰∫∫ËÑ∏Êç¢ÊàêÂè¶‰∏Ä‰∏™‰∫∫ÁöÑ Ê†πÊçÆÂÖ≥ÈîÆËØçÔºå‰ΩúÁîªÔºåÂÜôÂ∞èËØ¥ ‰∏äÁΩëÊêúÈõÜËµÑÊñôÊï¥ÂêàÂá∫ÊëòË¶Å ‰ª•‰∏äÈÉΩÊòØ AI ÁõÆÂâçÂ∑≤ÁªèËÉΩÂÆåÊàêÁöÑ‰∫ãÊÉÖÔºå‰º†ÁªüÁöÑ‰ª£Á†ÅÊòØÊó†Ê≥ïÂÆåÊàê‰ª•‰∏äËøôÁßçÂ§çÊùÇÁöÑÂ∑•‰ΩúÁöÑ„ÄÇÊàëÊää‰º†Áªü‰ª£Á†ÅÊó†Ê≥ïÂÆåÊàêÔºåÂèàÊúâÁÇπÁ±ª‰ºº‰∫∫ÊâçËÉΩÂäûÂà∞ÁöÑÊ∑∑Ê≤å‰∏îÂ§çÊùÇÁöÑ‰∫ãÊÉÖÔºàÁîöËá≥Â∏¶Êúâ‰∏Ä‰∫õÂàõÈÄ†ÂäõÔºâÁß∞‰Ωú AI„ÄÇAI ‰∏çÊòØÊåáÂÉè‰∫∫‰∏ÄÊ†∑ËÉΩÈÄöÁî®ÁöÑÂ§ÑÁêÜ‰ªª‰ΩïÊô∫ÂäõÈóÆÈ¢òÔºåËÄåÊòØËÉΩ‰∏Ä‰∏™‰∏Ä‰∏™ÊîªÂÖãÂÖ∑‰ΩìÁöÑÊô∫ÂäõÈóÆÈ¢òÔºåAI ËÉΩÂÅöÂà∞ÁöÑ‰∫ãÊÉÖÂ∑≤ÁªèË∂äÊù•Ë∂äÂ§ö„ÄÇÂÖ∂‰∫ßÁîüÁöÑÁîü‰∫ßÂäõÊòØÂ∑®Â§ßÁöÑÔºåÂπ∂‰∏çÊØî‰∫íËÅîÁΩëÊó∂‰ª£‰Ωé„ÄÇ ÊúâÂì™‰∫õÊú∫ÈÅáÈ¶ñÂÖà‰ªéÊàëËá™Â∑±ÁöÑËßíÂ∫¶Âá∫ÂèëÔºåÊàëÂ∏åÊúõ AI ËÉΩÂÆåÊàêÂì™‰∫õ‰∫ãÔºü ÊèêÈÜíÊàëË¶ÅÂÅöÂì™‰∫õ‰∫ãÔºåÊØîÂ¶ÇÔºöÊàëÁªèÂ∏∏ÁâôËÜèÁî®Âà∞Ê≤°ÊúâÔºåÊØèÊ¨°Âà∑ÁâôÁöÑÊó∂ÂÄôÊâçÊÉ≥Ëµ∑Êù•Ë¶Å‰π∞Ôºå‰ΩÜÊòØÂõûÂÆ∂ÁöÑÊó∂ÂÄôÈÉΩ‰∏çËÆ∞Âæó‰π∞„ÄÇÊàëÂΩìÁÑ∂Áü•ÈÅìÂèØ‰ª•Ëá™Â∑±ÂÆö‰∏™Êó•Á®ãÊàñËÄÖÈóπÈíüÊèêÈÜíÔºå‰ΩÜÊàëÂÆöËøáÂá†‰∏™ÔºåËøòÊòØËßâÂæóÊØîËæÉÈ∫ªÁÉ¶ Â§ñÂçñËá™Âä®ËÆ¢È§êÔºåÊàëÊúâÁöÑÊó∂ÂÄôÂú®ÂÖ¨Âè∏Â∑•‰ΩúÔºå‰∏äÂçàÂπ≤Ê¥ªÂ§™ÊäïÂÖ•ÔºåÂøòËÆ∞ÂÆöÂ§ñÂçñ Ëá™Âä®ËÆ¢ÁÅ´ËΩ¶Á•®ÔºåÂÖ≥‰∫éËÆ¢ÁÅ´ËΩ¶Á•®ÊàëÈÉΩÊÄªÁªìÂá∫‰∏Ä‰∫õÂ∞èÁ™çÈó®‰∫ÜÔºåÊØîÂ¶Ç‰π∞Áü≠Âå∫Èó¥ÔºàÊ≤°‰∫∫Êä¢ÔºâÁöÑÊàñËÄÖÂÖ®Âå∫Èó¥ÁöÑÔºàÊîæÁ•®Â§öÔºå‰∏îË¶Å‰∫è‰∏ÄÈÉ®ÂàÜÈí±ÔºåÊä¢ÁöÑ‰∫∫Â∞ëÔºâ Êï∞ÊçÆËΩ¨Êç¢Ôºå‰ªéÂõæÁâá‰∏≠ËØªÂèñ excelÔºåword Á≠âÁ≠â Â∏¶‰ºûÊèêÈÜíÔºåÊàëËÄÅÊòØÂøòËÆ∞ÁúãÂ§©Ê∞îÈ¢ÑÊä•ÔºåËôΩÁÑ∂Ê∑±Âú≥ÂæàÂ∞ë‰∏ãÈõ®Ôºå‰ΩÜÂÅ∂Â∞îËøòÊòØÈúÄË¶ÅÊèêÈÜíÂ∏¶‰ºû ‰ª•‰∏äÂ§ßÈÉ®ÂàÜÈÉΩÊòØ‰∏Ä‰∫õÊèêÈÜíÁ±ªÁöÑÂ∞è‰∫ãÔºåÂèØ‰ª•ÂΩí‰∏∫ÁîüÊ¥ªÁÆ°ÂÆ∂Á±ªÁöÑ‰∏ÄÁßç‰ΩìÈ™åÂçáÁ∫ß„ÄÇ]]></content>
      <tags>
        <tag>ÊÄªÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[cssÂ±Ö‰∏≠ÁöÑÊúÄ‰Ω≥ÂÆûË∑µ]]></title>
    <url>%2Fblog%2F2022%2F12%2F13%2Fcss%E5%B1%85%E4%B8%AD%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%2F</url>
    <content type="text"><![CDATA[Â±Ö‰∏≠ÊòØ css ‰∏≠ÂæàÈáçË¶ÅÁöÑ‰∏Ä‰∏™Âü∫Á°ÄÁü•ËØÜÔºå‰∏ªË¶ÅÂàÜ‰∏â‰∏™ÊñπÂêëËÆ®ËÆ∫Ôºö Ê∞¥Âπ≥Â±Ö‰∏≠ or ÂûÇÁõ¥Â±Ö‰∏≠ ÊñáÊú¨Â±Ö‰∏≠ or ÂÆπÂô®Â±Ö‰∏≠ÔºàÂùóÁ∫ßÂÖÉÁ¥†Ôºâ ËÆæÁΩÆÁà∂ÂÆπÂô® or ËÆæÁΩÆËá™Ë∫´ or ÈÉΩÈúÄË¶ÅËÆæÁΩÆ ÊúÄ‰Ω≥ÂÆûË∑µÊúÄ‰Ω≥ÂÆûË∑µÔºåÈÉΩÊòØÈÄöËøáÁªôÁà∂ÂÆπÂô®ËÆæÁΩÆÊ†∑ÂºèÔºåÊù•‰ΩøÂÜÖÂÆπËææÂà∞Â±Ö‰∏≠ÊïàÊûú„ÄÇËøô‰∏™ËÆæËÆ°Âì≤Â≠¶‰πüÊòØÈùûÂ∏∏Ê≠£Á°ÆÁöÑÔºåÊàë‰ª¨Á°ÆÂÆûÂ∫îËØ•ÈÄöËøáÊìç‰ΩúÁà∂ÂÆπÂô®Êù•ËÆ©ÂÖ∂ÂÜÖÂÆπÂ±Ö‰∏≠ÔºåÂ±Ö‰∏≠Âπ∂ÈùûÊòØÂ≠êÂÖÉÁ¥†ÈúÄË¶ÅËÄÉËôëÁöÑ‰∫ãÔºàÂõ†‰∏∫Â≠êÂÖÉÁ¥†ÂèØËÉΩÊúâÂ§ö‰∏™Ôºå‰∏îÂÖ∂Ëá™Ë∫´ÂèØËÉΩÊØîËæÉÂ§çÊùÇÔºâ„ÄÇ ÊñáÊú¨Â±Ö‰∏≠Ê∞¥Âπ≥Â±Ö‰∏≠ÊñáÊú¨Ê∞¥Âπ≥Â±Ö‰∏≠‰ΩøÁî®text-align: center;Ôºö 12345.center&#123; text-align: center; border: 2px solid red;&#125;&lt;div class="center"&gt;ÊàëÊòØÊñáÊú¨&lt;/div&gt; Ëøô‰∏™ÈùûÂ∏∏Â•Ω‰ΩøÔºåÂçïË°åÂíåÂ§öË°åÊñáÊú¨ÈÉΩÂèØ‰ª•Â§ÑÁêÜ„ÄÇ text-align ÊñáÊ°£ ÂûÇÁõ¥Â±Ö‰∏≠‰ΩøÁî® line-height ÂèØ‰ª•Ë∞ÉËäÇÊñáÊú¨ÁöÑÂûÇÁõ¥Èó¥Ë∑ùÔºå‰ªéËÄåËææÂà∞ÂûÇÁõ¥Â±Ö‰∏≠ÁöÑÊïàÊûúÔºå‰∏çËøáÂ¶ÇÊûúÊòØÂ§öË°åÊñáÊú¨ÁöÑËØùÔºåÈúÄË¶ÅÁü•ÈÅìË°åÊï∞Ôºå‰ΩÜÂ§ßÂ§öÊï∞ÊÉÖÂÜµ‰∏ãÈÉΩÊòØ‰∏çÁü•ÈÅìË°åÊï∞ÁöÑÔºåÊâÄ‰ª•‰∏ÄËà¨Áî®‰∫éÂçïË°åÊñáÊú¨ÁöÑÂûÇÁõ¥Â±Ö‰∏≠Âú∫ÊôØ„ÄÇ ÂÆûÈ™åÂú∞ÂùÄÔºöhttps://replit.com/@liuqinh2s1/cssTest3#src/App.css ÂÆûÈôÖ‰∏äÂ§öË°åÊñáÊú¨ÂûÇÁõ¥Â±Ö‰∏≠ÂèØ‰ª•Áî®Ë∑üÂÆπÂô®Â±Ö‰∏≠‰∏ÄÊ†∑ÁöÑÊñπÊ≥ïÔºöflex Â∏ÉÂ±ÄÔºö https://replit.com/@liuqinh2s1/css-center2#index.html ÂêåÊ†∑ÁöÑ‰πüÈÄÇÁî®‰∫éÂçïË°åÔºåÁîöËá≥ÂçïË°åÊñáÊú¨Ê∞¥Âπ≥Â±Ö‰∏≠‰πüÂèØ‰ª•Áî® flex Â∏ÉÂ±ÄÔºå‰ΩÜÂ§öË°åÊñáÊú¨Ê∞¥Âπ≥Â±Ö‰∏≠‰∏çÂèØ‰ª•Áî® flex Â∏ÉÂ±Ä ÂÆπÂô®Â±Ö‰∏≠ÂÆπÂô®Â±Ö‰∏≠ÁöÑÊúÄ‰Ω≥ÂÆûË∑µÊòØ flex Â∏ÉÂ±Ä„ÄÇÂ¶ÇÊûúÊÉ≥ÁúãËØ¶ÁªÜÁöÑÊïôÁ®ãÔºåÊé®ËçêËøô‰∏™ÔºöFlex Â∏ÉÂ±ÄÊïôÁ®ãÔºöËØ≠Ê≥ïÁØá - ÈòÆ‰∏ÄÂ≥∞ÁöÑÁΩëÁªúÊó•Âøó ÂÆûÈ™åÂú∞ÂùÄÔºöhttps://replit.com/@liuqinh2s1/css-center#index.html Ê∞¥Âπ≥Â±Ö‰∏≠Â¶ÇÊûúÊòØÊ∞¥Âπ≥ÊéíÂ∏ÉÁöÑÔºåËÆæÁΩÆjustify-content: center;Ôºö 12345678.center &#123; display: flex; justify-content: center;&#125;&lt;div class="center"&gt; &lt;div&gt;a&lt;/div&gt; &lt;div&gt;b&lt;/div&gt;&lt;/div&gt; Â¶ÇÊûúÊòØÂûÇÁõ¥ÊéíÂ∏ÉÁöÑÔºåËÆæÁΩÆalign-items: center;Ôºö 123456789.center &#123; display: flex; flex-direction: column; align-items: center;&#125;&lt;div class="center"&gt; &lt;div&gt;a&lt;/div&gt; &lt;div&gt;b&lt;/div&gt;&lt;/div&gt; ÂûÇÁõ¥Â±Ö‰∏≠‰∏é‰∏äÈù¢Ê∞¥Âπ≥Â±Ö‰∏≠ÁöÑÂÜôÊ≥ïÊ≠£Â•ΩÁõ∏Âèç Â¶ÇÊûúÊòØÊ∞¥Âπ≥ÊéíÂ∏ÉÁöÑÔºåËÆæÁΩÆalign-items: center;Ôºö 12345678.center &#123; display: flex; align-items: center;&#125;&lt;div class="center"&gt; &lt;div&gt;a&lt;/div&gt; &lt;div&gt;b&lt;/div&gt;&lt;/div&gt; Â¶ÇÊûúÊòØÂûÇÁõ¥ÊéíÂ∏ÉÁöÑÔºåËÆæÁΩÆjustify-content: center;Ôºö 123456789.center &#123; display: flex; flex-direction: column; justify-content: center;&#125;&lt;div class="center"&gt; &lt;div&gt;a&lt;/div&gt; &lt;div&gt;b&lt;/div&gt;&lt;/div&gt; ÊâÄ‰ª•ÊÄªÁªìÂ¶Ç‰∏ãÔºöÈô§Â§öË°åÊñáÊú¨Ê∞¥Âπ≥Â±Ö‰∏≠ÂøÖÈ°ªÁî®text-align: center;Â§ñÔºåÂÖ∂‰ΩôÊÉÖÂÜµÔºåÂÖ®ÈÉ®ÂèØ‰ª•Áî® flex Â∏ÉÂ±ÄËß£ÂÜ≥„ÄÇ Ë°•ÂÖÖÂà©Áî® positionÔºå50%Âíå transform Ëá™Ë∫´ÁöÑ‰∏ÄÂçäÈ´òÊù•ËææÂà∞Â±Ö‰∏≠Ôºö 123456789101112131415.parent&#123; height: 200px; border: 2px solid red; position: relative;&#125;.child&#123; height: 100px; border: 1px solid blue; position: absolute; top: 50%; transform: translate(0, -50%);&#125;&lt;div class="parent"&gt; &lt;div class="child"&gt;1&lt;/div&gt;&lt;/div&gt;]]></content>
      <tags>
        <tag>css</tag>
        <tag>ÂâçÁ´Ø</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ë°åÂÜÖÂÖÉÁ¥†ÂíåÂùóÁ∫ßÂÖÉÁ¥†]]></title>
    <url>%2Fblog%2F2022%2F12%2F08%2F%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E5%92%8C%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[Ë°åÂÜÖÂÖÉÁ¥†ÂíåÂùóÁ∫ßÂÖÉÁ¥†ÁÆóÊòØ css ‰∏≠ÊúÄÂü∫Á°ÄÔºå‰πüÊòØÊúÄÈáçË¶ÅÁöÑÈÉ®ÂàÜ‰∫Ü„ÄÇ‰ΩÜÊàëÂØπËøôÈÉ®ÂàÜËøòÊ≤°ÂΩªÂ∫ïÁ†îÁ©∂ÈÄèÔºåÈúÄË¶ÅÂΩªÂ∫ïÊéåÊè°ÊâçË°å„ÄÇ ÊØîÂ¶ÇÔºåwidth Âíå height Ë∑üÁà∂ËäÇÁÇπÂíåÂ≠êËäÇÁÇπÁöÑÂÖ≥Á≥ªÂà∞Â∫ïÊòØ‰ªÄ‰πàÔºåÈªòËÆ§ÊòØ‰ªÄ‰πàÔºüË°åÂÜÖÂÖÉÁ¥†ÁöÑ padding Âíå margin ËÉΩËÆæÁΩÆÂêóÔºü Ë°åÂÜÖÂÖÉÁ¥†Ôºå‰πüÂè´ÂÜÖËÅîÂÖÉÁ¥†Ôºåinline-element ÂØπÊØîÂåÖÂê´ÂÖ≥Á≥ªÂùóÁ∫ßÂÖÉÁ¥†ÂèØ‰ª•ÂåÖÂê´ÂùóÁ∫ßÂÖÉÁ¥†ÊàñËÄÖË°åÂÜÖÂÖÉÁ¥†ÔºåË°åÂÜÖÂÖÉÁ¥†Âè™ËÉΩÂåÖÂê´Ë°åÂÜÖÂÖÉÁ¥†„ÄÇ‰ΩÜËøôÂè™ÊòØÂª∫ËÆÆÔºåÂπ∂ÈùûÂº∫Âà∂ÔºåÂç≥‰æøË°åÂÜÖÂÖÉÁ¥†ÂåÖÂê´ÂùóÁ∫ßÂÖÉÁ¥†‰πü‰∏ç‰ºöÊä•Èîô„ÄÇ Êç¢Ë°åÂùóÁ∫ßÂÖÉÁ¥†Áã¨Âç†‰∏ÄË°åÔºåÂâçÂêéÈÉΩ‰∏çÂèØ‰ª•ÊúâÂùóÁ∫ßÂÖÉÁ¥†ÊàñËÄÖË°åÂÜÖÂÖÉÁ¥†ÔºàÂΩìÁÑ∂ display: flex;ÂèØ‰ª•ËÆ©Âá†‰∏™ÂùóÁ∫ßÂÖÉÁ¥†ÊîæÂú®Âêå‰∏ÄË°åÔºâ„ÄÇË°åÂÜÖÂÖÉÁ¥†‰ª¨ÂèØ‰ª•ÊéíÂàóÂú®Âêå‰∏ÄË°åÈáåÔºåÁõ¥Âà∞Ëøô‰∏ÄË°åÊîæ‰∏ç‰∏ãÊâçÊç¢Ë°å„ÄÇ ‰∏Ä‰∏™ÂçïËØçÊòØ‰∏ç‰ºöÊç¢Ë°åÁöÑÂèëÁé∞Ë°åÂÜÖÂÖÉÁ¥†Â±ÖÁÑ∂‰∏ç‰ºöÊç¢Ë°åÔºåÂéüÊù•ÊòØÂõ†‰∏∫Ë¢´ÂΩìÊàê‰∏Ä‰∏™ÂçïËØç‰∫Ü ÂÆûÈ™åÔºöhttps://replit.com/@liuqinh2s1/cssTest2#src/App.tsx Áî®Ê†∑ÂºèÂèØ‰ª•ÊéßÂà∂ÊØè‰∏™Â≠óÊØçÊç¢Ë°åÔºö 12word-break: break-all;word-wrap: break-word; ÂÆΩÈ´òÂùóÁ∫ßÂÖÉÁ¥†ÂèØ‰ª•ËÆæÁΩÆÂÆΩÈ´òÔºåË°åÂÜÖÂÖÉÁ¥†‰∏çËÉΩËÆæÁΩÆÂÆΩÈ´òÔºàÂç≥Ôºöwidth Âíå heightÔºâ„ÄÇ‰ΩÜË°åÂÜÖÂÖÉÁ¥†ÂèØ‰ª•ËÆæÁΩÆ line-heightÔºàÊ≤°Êúâ line-widthÔºâ„ÄÇ ÈªòËÆ§ÂÆΩÈ´òÂùóÁ∫ßÂÖÉÁ¥†ÈªòËÆ§ÁªßÊâøÁà∂ÁõíÂ≠êÁöÑÂÆΩÂ∫¶Ôºå‰ΩÜÈ´òÂ∫¶‰∏ç‰ºöÁªßÊâøÔºàÊÉ≥Ë¶ÅÁªßÊâøÂèØ‰ª•ËÆæÁΩÆÊàêheight: 100%;ÔºâÔºåÁî±ÂÜÖÂÆπÁâ©ÊíëÂºÄÊàñËÄÖËá™Â∑±ËÆæÁΩÆ„ÄÇË°åÂÜÖÂÖÉÁ¥†‰∏çËÉΩËÆæÁΩÆÂÆΩÈ´òÔºå‰πü‰∏çÁªßÊâøÂÆΩÈ´òÔºåÂÆΩÈ´òÈÉΩÁî±ÂÜÖÂÆπÁâ©ÊíëÂºÄ„ÄÇ ËæπË∑ùÂùóÁ∫ßÂÖÉÁ¥†ÁöÑ margin Âíå padding ‰ºöÂØπÂ§ñ‰∫ßÁîüËæπË∑ùÊïàÊûúÔºåË°åÂÜÖÂÖÉÁ¥†ÁöÑ margin Âíå padding Âú®Ê∞¥Âπ≥ÊñπÂêë‰∏ä‰ºöÂØπÂ§ñ‰∫ßÁîüÊïàÊûúÔºåÂûÇÁõ¥ÊñπÂêë‰∏ä‰∏ç‰ºöÂØπÂ§ñ‰∫ßÁîüÊïàÊûú„ÄÇÂÆûÈ™åÔºöhttps://replit.com/@liuqinh2s1/css-test1#src/App.tsx display: inlineÔºåinline-blockÔºåblock ÁöÑÂå∫Âà´ÂÆö‰πâÊàê inline Â∞±ÊòØË°åÂÜÖÂÖÉÁ¥†Ôºåblock Â∞±ÊòØÂùóÁ∫ßÂÖÉÁ¥†„ÄÇÂÆÉ‰ª¨ÁöÑÂå∫Âà´ÂâçÈù¢Â∑≤ÁªèËÆ≤Ëøá‰∫Ü inline-block ÊòØÂÆÉ‰ª¨‰∫åËÄÖÁöÑÁªºÂêàÔºåÊú¨Ë¥®‰∏ä‰πüÊòØ‰∏™ blockÔºåÈô§‰∫Ü‰∏ç‰ºöÁã¨Âç†‰∏ÄË°å„ÄÇ ÂÆûÈ™å‰æãÂ≠êÔºöhttps://www.w3school.com.cn/tiy/t.asp?f=css_inline-block_span Â≠êÂÖÉÁ¥†ÊÄé‰πàÊíëÊª°Ââ©‰ΩôÁöÑÁ©∫Èó¥ÔºüÁî® flex-grow ÂéªÊíëÊª°Ââ©‰ΩôÁöÑÁ©∫Èó¥ÔºåÂÖ∑‰ΩìÊÄé‰πàÂÜôÔºö Áî® display: flexÔºåÁÑ∂Âêé flex: 1ÔºåÂç≥ÂèØ„ÄÇflex: 1 ÁöÑÂê´‰πâÊòØ flex: 1 1 auto„ÄÇ‰πüÂ∞±ÊòØ flex-grow: 1; flex-shrink: 1; flex-basis: auto„ÄÇ flexÔºåflex-growÔºåflex-shrinkÔºåflex-basisËøô‰∏™‰∏úË•øÁöÑËÆ°ÁÆóÂÖ¨ÂºèÂÆòÁΩëÊ≤°ÊúâÂÖ¨Â∏ÉÔºåÂØºËá¥Âè™ËÉΩÊü•Âà´‰∫∫ÂÜôÁöÑËµÑÊñôÔºåÊàñËÄÖËá™Â∑±Êé®ÂØº„ÄÇÁªèËøáÂ§öÊ¨°ÂÆûÈ™åÂêéÔºåÁªìËÆ∫Â¶Ç‰∏ãÔºö grow ÁöÑËÆ°ÁÆóË∑üËá™Ë∫´ÂÆΩÈ´òÊó†ÂÖ≥ÔºåÁõ¥Êé•ÊåâÊØî‰æãÂàÜÈÖçÂâ©‰ΩôÁöÑÁ©∫Èó¥Ôºåshrink ÁöÑËÆ°ÁÆóÊòØË∑üËá™Ë∫´ÂÆΩÈ´òÊúâÂÖ≥ÁöÑÔºåÈúÄË¶ÅÊ†πÊçÆËá™Ë∫´ÂÆΩÈ´òÔºåÊåâÂä†ÊùÉÊØî‰æãÂπ≥ÊëäÔºàÁº©ÂáèÔºâË∂ÖÂá∫ÁöÑÁ©∫Èó¥„ÄÇ ÂÅáËÆæËÆ°ÁÆóÁöÑÊòØÊ∞¥Âπ≥ÊñπÂêëÁöÑ flexÔºö grow ÁöÑÁÆóÊ≥ïÂ¶Ç‰∏ãÔºö Âçï‰∏™ÂÖÉÁ¥†ÈúÄË¶Å grow ÁöÑÈáèÔºö(Âçï‰∏™Â≠êÂÖÉÁ¥† flex-grow/ÊÄªÁöÑ flex-grow)\*(Áà∂ÂÆπÂô®ÂÆΩÂ∫¶-Â≠êÂÖÉÁ¥†ÂÆΩÂ∫¶‰πãÂíå) shrink ÁöÑÁÆóÊ≥ïÂ¶Ç‰∏ãÔºö ÂÅáËÆæ div1 ÊòØ 100px, flex-shrink:1Ôºõdiv2 ÊòØ 200px, flex-shrink:2Ôºõdiv3 ÊòØ 300px, flex-shrink: 3„ÄÇÂÆπÂô®ÂÆΩÂ∫¶ 700px div1 ÂÖÉÁ¥†ÈúÄË¶Å shrink ÁöÑÈáèÔºö(100*1)/(100*1+200*2+300*3)\*(700-100-200-300) ‰πüÂ∞±ÊòØÂä†ÊùÉÊØî‰æãÔºåÈúÄË¶ÅÁî®Âà∞Ëá™Ë∫´ÁöÑÂÆΩÈ´ò flex-basis Â∞±ÊòØÂÆΩÈ´òÁöÑÊÑèÊÄùÔºå‰ΩÜÊØîÂÆΩÈ´ò‰ºòÂÖàÁ∫ßÈ´òÔºåÊØîÂ¶ÇÂÆö‰πâ‰∫Ü width: 100px; flex-basis: 0px;ÈÇ£‰πàÂ∞±ÊòØÊåâ 0 ÂéªËøõË°å flex ÁöÑ„ÄÇ ÂÆûÈ™åÂú∞ÂùÄÔºöhttps://replit.com/@liuqinh2s1/css-flex#src/App.tsx]]></content>
      <tags>
        <tag>css</tag>
        <tag>ÂâçÁ´Ø</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âä†ÂØÜË¥ßÂ∏ÅÊî∂ËóèÁΩëÂùÄ]]></title>
    <url>%2Fblog%2F2022%2F11%2F30%2F%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81%E6%94%B6%E8%97%8F%E7%BD%91%E5%9D%80%2F</url>
    <content type="text"><![CDATA[Getting started | Bitcoin Design ËÄÅÂ∏ÅÔºö ‰πåÈæüÂ∏Å(TRTL)ÁüøÊ±† Èó®ÁΩóÂ∏Å(XMR)ÁΩëÈ°µÈí±ÂåÖ Èó®ÁΩóÂ∏ÅÁüøÊ±† BSC ÈìæÈ°πÁõÆÔºö bunny ÁüøÊ±† pancake beefy jetswap BNB Smart Chain Explorer LOWB LOWB Ë∑®ÈìæÊ°• BSC Ê°• KCC ÈìæÔºö ÊñáÊ°£ Âå∫ÂùóÊü•ËØ¢ AxieInfinityÔºö axie market Ë¥¶Âè∑‰∏≠ÂøÉ ÁôΩÁöÆ‰π¶ axie zone axie tech axie world axieinfinity github katana AXS Staking Âø´‰πêÂå∫ÂùóÁª¥Âü∫ „Äê‰ª•Â§™Âùä„ÄëÊ∑±ÂÖ•ÁêÜËß£ gas Êú∫Âà∂ evm-opcode-gas-costs Á©∫ÊäïÔºö airdrops.io defi llama Êô∫ËÉΩÂêàÁ∫¶Ôºö Provider Migration Guide | MetaMask Docs How to Become a Blockchain Engineer | by Patrick Collins | Better Programming HTMoon DOG Âå∫ÂùóÈìæÊäÄÊúØ-Êô∫ËÉΩÂêàÁ∫¶ Solidity ÁºñÁ®ãËØ≠Ë®Ä ‰ª£Â∏Å YELD ‰ª∑Ê†ºÁõ¥Êé•Ë∑≥Ê∞¥ÂΩíÈõ∂ÔºöPolyYeld Finance Ë¢´ÊîªÂáª‰∫ã‰ª∂ÂÖ®Ëß£Êûê ‰ª•Â§™ÂùäÊô∫ËÉΩÂêàÁ∫¶ÂÆâÂÖ®ÂÖ•Èó®‰∫ÜËß£‰∏Ä‰∏ãÔºà‰∏äÔºâ Êô∫ËÉΩÂêàÁ∫¶ÂÖ•Èó® 1‚Äî‚ÄîRemix+ÂêàÁ∫¶Ë∞ÉÁî® Êô∫ËÉΩÂêàÁ∫¶ÂÖ•Èó® Êô∫ËÉΩÂêàÁ∫¶ÂÖ•Èó® Ethernaut Security Innovation Blockchain CTF Êô∫ËÉΩÂêàÁ∫¶ÂÆâÂÖ®ÂÖ•Èó®:ETHERNAUT-WriteUp blockchain-ctf Èù∂Âú∫Ôºà0-12Ôºâ Ethernaut Èù∂Âú∫Âà∑È¢òÔºà‰∏äÔºâ ÂÖçË¥πÈ¢ÜÂèñÊµãËØïÁΩëÁªúÂ∏ÅÔºöRinkeby Authenticated Faucet CryptoZombies - ÁºñÊ∏∏ÊàèÁöÑÂêåÊó∂Â≠¶‰π†‰ª•Â§™ÂùäÁöÑÊô∫ËÉΩÂçèËÆÆ. Loom Network ‰∫ßÂìÅ„ÄÇ remix]]></content>
      <tags>
        <tag>Âä†ÂØÜË¥ßÂ∏Å</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[leetcode 902. ÊúÄÂ§ß‰∏∫ N ÁöÑÊï∞Â≠óÁªÑÂêà]]></title>
    <url>%2Fblog%2F2022%2F11%2F29%2Fleetcode%20902.%20%E6%9C%80%E5%A4%A7%E4%B8%BA%20N%20%E7%9A%84%E6%95%B0%E5%AD%97%E7%BB%84%E5%90%88%2F</url>
    <content type="text"><![CDATA[ËøôÈ¢òÊòØÊï∞‰Ωç dp Á±ªÂûãÁöÑÈ¢òÔºåÈÅçÂéÜÂØπË±°Êúâ‰∏§‰∏™Ôºö ÈÅçÂéÜ N ÁöÑÊØè‰∏Ä‰Ωç ÈÅçÂéÜ digits ÈóÆÈ¢òËßÑÊ®°ÊòØ N ÁöÑ‰ΩçÊï∞„ÄÇ Áä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ãÊòØËøôÊ†∑ÊÄùËÄÉÂæóÂá∫Ôºö Âú®ÈÅçÂéÜ digits Êó∂ÔºåËÆæÂΩìÂâç digits ÁöÑÂÄº‰∏∫ digits[i]Ôºö Â¶ÇÊûú digits[i]ÊØî N ÁöÑÁ¨¨ j ‰ΩçÁöÑÊï∞Â≠óÂ∞èÔºåÂàô‰Ωé‰ΩçÁöÑÊï∞Â≠óÂ∞±ÂèØ‰ª•‰ªªÊÑèÔºåÈÇ£‰πàÁî± digits[i]ÂºÄÂ§¥ÊâÄ‰∫ßÁîüÁöÑÁªÑÂêàÊï∞ÊòØÔºödigits.length**(j-1)„ÄÇ Â¶ÇÊûú digits[i]Á≠â‰∫é N ÁöÑÁ¨¨ j ‰ΩçÊï∞Â≠óÔºåÂàôËøòË¶ÅÁªßÁª≠ÂØπÊØîÁ¨¨ j-1 ‰ΩçÊâçÁü•ÈÅìËÉΩÂê¶ÂáëÂá∫‰∏Ä‰∏™ÊØî N Â∞èÁöÑÔºå‰πüÂç≥ÈÄíÂΩíÔºåÁº©Â∞èÈóÆÈ¢òËßÑÊ®°„ÄÇ‰∫ßÁîüÁªÑÂêàÔºödp[j-1] Â¶ÇÊûú digits[i]Â§ß‰∫é N ÁöÑÁ¨¨ j ‰ΩçÊï∞Â≠óÔºåÂàôÂêéÈù¢‰Ωé‰ΩçÁöÑÊï∞Â≠ó‰∏çÁÆ°ÊòØ‰ªÄ‰πàÔºåÈÉΩÂ∑≤Áªè‰∏çËÉΩ‰∫ßÁîüÂ∞è‰∫é N ÁöÑÁªÑÂêà‰∫Ü„ÄÇ‰∫ßÁîüÁªÑÂêàÔºö0 ÊääÊØè‰∏™ digits[i]ÂØπÂ∫îÁöÑÁªìÊûúÂä†Ëµ∑Êù•ÔºåÂ∞±ÊòØÂΩìÂâçÈóÆÈ¢òËßÑÊ®°ÔºàÈóÆÈ¢òËßÑÊ®°‰∏∫ÔºöjÔºâÁöÑÁ≠îÊ°à„ÄÇ Áä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ãÔºö 12345if (digits[i] &lt; N[j]) &#123; dp[j] += digits.length ** (j - 1);&#125; else if (digits[i] == N[j]) &#123; dp[j] += dp[j - 1];&#125; ‰ª£Á†ÅÔºö 12345678910111213141516171819function atMostNGivenDigitSet(digits: string[], n: number): number &#123; const nStr = n.toString(); const dp = new Array(nStr.length).fill(0); const memo = []; for (let i = 1, res = 1; i &lt; nStr.length; i++) &#123; memo.push((res = res * digits.length)); &#125; for (let i = 0; i &lt; nStr.length; i++) &#123; for (let j = 0; j &lt; digits.length; j++) &#123; if (digits[j] &lt; nStr[nStr.length - 1 - i]) &#123; dp[i] += i &gt; 0 ? memo[i - 1] : 1; &#125; else if (digits[j] == nStr[nStr.length - 1 - i]) &#123; console.log(digits[j], nStr[nStr.length - 1 - i], dp); dp[i] += i &gt; 0 ? dp[i - 1] : 1; &#125; &#125; &#125; return memo.reduce((a, b) =&gt; a + b, 0) + dp[dp.length - 1];&#125;]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue.jsÂìçÂ∫îÁ≥ªÁªüÁöÑÂÆûÁé∞ Á¨¨‰∏ÄÁØá]]></title>
    <url>%2Fblog%2F2022%2F11%2F06%2Fvue.js%E5%93%8D%E5%BA%94%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%9E%E7%8E%B0%20%E7%AC%AC%E4%B8%80%E7%AF%87%2F</url>
    <content type="text"><![CDATA[‰ªÄ‰πàÊòØÂâØ‰ΩúÁî®ÂáΩÊï∞ÔºüÂ¶ÇÊûú‰∏Ä‰∏™ÂáΩÊï∞Âè™ÊòØÊé•Êî∂ËæìÂÖ•ÔºåÁÑ∂ÂêéËæìÂá∫ÔºåÊ≤°ÊúâÂΩ±ÂìçÂ§ñÈÉ®ÔºàÊØîÂ¶Ç‰øÆÊîπÂ§ñÈÉ®ÂèòÈáèÔºâÔºåÈÇ£‰πàÊàë‰ª¨Â∞±ËØ¥Ëøô‰∏™ÂáΩÊï∞Ê≤°ÊúâÂâØ‰ΩúÁî®ÔºåÂèç‰πãÂ∞±ÊòØÊúâÂâØ‰ΩúÁî®„ÄÇÁêÜÊÉ≥ÁöÑÊÉÖÂÜµ‰∏ãÔºåÊàë‰ª¨Â∏åÊúõÊâÄÊúâÁöÑÂáΩÊï∞ÈÉΩÂæàÁ∫ØÁ≤πÔºåÊ≤°ÊúâÂâØ‰ΩúÁî®„ÄÇ ‰∏æ‰∏™‰æãÂ≠êÔºö 123function effect() &#123; document.body.innerText = "hello vue3";&#125; ProxyÊàë‰ª¨ÈÉΩÁü•ÈÅì vue.js ËøôÁ±ªÊ°ÜÊû∂ÊòØÂ£∞ÊòéÂºèÁöÑÔºåÂΩìÊï∞ÊçÆÂèëÁîüÂèòÂåñÔºåÂÆÉÂèØ‰ª•ÁõëÂê¨Âà∞Âπ∂ÈáçÊñ∞Ê∏≤ÊüìÔºåÈÇ£‰πàËøôÁßçÂìçÂ∫îÁ≥ªÁªüÊòØÂ¶Ç‰ΩïÂÆûÁé∞ÁöÑÂë¢ÔºüÈ¶ñÂÖà‰∏Ä‰∏™ÈóÆÈ¢òÂ∞±ÊòØÊÄé‰πàÁõëÂê¨Âà∞Êï∞ÊçÆÁöÑÂèòÂåñ„ÄÇÁ≠îÊ°àÊòØ ProxyÔºåvue2 Áî®‰∫ÜObject.defineProperty()ÂáΩÊï∞ÔºåËøôÊòØ es2015 ‰πãÂâçÁöÑÂÅöÊ≥ïÔºåvue3 ÂàôÊòØÁî®‰∫Ü es2015 Â∏¶Êù•ÁöÑÊñ∞ÁâπÊÄßÔºöProxy„ÄÇ ÈÄöËøá Proxy Êàë‰ª¨ÂèØ‰ª•ÁõëÂê¨Âà∞Êï∞ÊçÆÁöÑÂèòÂåñÔºàsetÔºâÔºåÈÇ£Â∞±ÂèØ‰ª•Ë∞ÉÁî®ÂâØ‰ΩúÁî®ÂáΩÊï∞Êõ¥Êñ∞ dom ‰∫Ü„ÄÇ ÊúÄÁÆÄÂçïÁöÑÂìçÂ∫îÁ≥ªÁªüËÆæËÆ°Â¶Ç‰∏ãÔºö 123456789101112131415161718function effect(data) &#123; document.body.innerText = data.text;&#125;const data = &#123; text: "hello vue3" &#125;;const obj = new Proxy(data, &#123; get(target, key) &#123; return target[key]; &#125;, set(target, key, value) &#123; target[key] = value; effect(target); return true; &#125;,&#125;);// È¶ñÊ¨°Ê∏≤Êüìeffect(data);// setÊìç‰ΩúÔºåËß¶ÂèëÈáçÊñ∞Ê∏≤Êüìobj.text = "11"; // ËøôÈáåÂøÖÈ°ªË¶Å‰øÆÊîπobjÂØπË±°ÔºàÊîπdataÊòØÁõëÂê¨‰∏çÂà∞ÁöÑÔºâ ‰∏ãÈù¢ÂºÄÂßãÔºåÈÉΩÊòØÈúÄÊ±ÇÂèòÂåñ‰∫ßÁîüÁöÑ‰ª£Á†ÅÂèòÂåñ‰∫Ü„ÄÇ Â¶ÇÊûúÊúâÂ§ö‰∏™ÂâØ‰ΩúÁî®ÂáΩÊï∞ÈúÄË¶ÅÊ≥®ÂÜåÔºåÊÄé‰πàÂäûÔºü Â¶ÇÊûúËøô‰∫õÂ§ö‰∏™ÂâØ‰ΩúÁî®ÂáΩÊï∞ÔºåÁõëÂê¨ÁöÑÊòØËøô‰∏™ÂØπË±°ÁöÑ‰∏çÂêå keyÔºåÊÄé‰πàÂäûÔºü Â¶ÇÊûúËøô‰∫õÂ§ö‰∏™ÂâØ‰ΩúÁî®ÂáΩÊï∞ÔºåÁõëÂê¨ÁöÑÊòØÂ§ö‰∏™ÂØπË±°ÁöÑ‰∏çÂêå keyÔºåÊÄé‰πàÂäûÔºü ÂàÜÊîØÂàáÊç¢ Â¶ÇÊûúÊúâÂ§ö‰∏™ÂâØ‰ΩúÁî®ÂáΩÊï∞ÈúÄË¶ÅÊ≥®ÂÜåÔºåÊÄé‰πàÂäûÔºü‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 1234567891011121314151617181920212223function effect1(data) &#123; document.body.innerText = data.text;&#125;function effect2(data) &#123; document.body.setAttribute(data.text);&#125;const data = &#123; text: "hello vue3" &#125;;const obj = new Proxy(data, &#123; get(target, key) &#123; return target[key]; &#125;, set(target, key, value) &#123; target[key] = value; effect1(target); effect2(target); return true; &#125;,&#125;);// È¶ñÊ¨°Ê∏≤Êüìeffect1(obj);effect2(obj);// setÊìç‰ΩúÔºåËß¶ÂèëÈáçÊñ∞Ê∏≤Êüìobj.text = "11"; // ËøôÈáåÂøÖÈ°ªË¶Å‰øÆÊîπobjÂØπË±°ÔºàÊîπdataÊòØÁõëÂê¨‰∏çÂà∞ÁöÑÔºâ ËøôÊ†∑ÂÜôÔºåÊòæÁÑ∂Âæà‰∏çÁÅµÊ¥ªÔºàÂõ†‰∏∫Ë¶ÅÂéª‰øÆÊîπÂ∑≤ÁªèÂÜôÂ•ΩÁöÑ‰ª£Á†ÅÔºâÔºåÈÇ£‰πàÊÄé‰πàËÆæËÆ°ÊâçËÉΩ‰∏çÂéªÂä®Â∑≤ÁªèÂÜôÂ•ΩÁöÑ‰ª£Á†ÅÂë¢ÔºüÁ≠îÊ°àÊòØ‰º†ÂõûË∞ÉÂáΩÊï∞Ôºö 1234567891011121314151617181920212223242526const bucket = new Set();function useEffect(fn, data) &#123; bucket.add(fn); return fn(data);&#125;const data = &#123; text: "hello vue3" &#125;;const obj = new Proxy(data, &#123; get(target, key) &#123; return target[key]; &#125;, set(target, key, value) &#123; target[key] = value; bucket.forEach((fn) =&gt; fn(target)); return true; &#125;,&#125;);// È¶ñÊ¨°Ê∏≤ÊüìuseEffect((data) =&gt; &#123; document.body.innerText = data.text;&#125;, data);useEffect((data) =&gt; &#123; document.body.setAttribute("a", data.text);&#125;, data);// setÊìç‰ΩúÔºåËß¶ÂèëÈáçÊñ∞Ê∏≤Êüìobj.text = "11"; // ËøôÈáåÂøÖÈ°ªË¶Å‰øÆÊîπobjÂØπË±°ÔºàÊîπdataÊòØÁõëÂê¨‰∏çÂà∞ÁöÑÔºâ ËøôÊ†∑ÁöÑÂÜôÊ≥ïÔºåÊòØ‰∏çÊòØÂæàÂÉè react ÁöÑ useEffect()‰∫Ü„ÄÇ Â¶ÇÊûúËøô‰∫õÂ§ö‰∏™ÂâØ‰ΩúÁî®ÂáΩÊï∞ÔºåÁõëÂê¨ÁöÑÊòØËøô‰∏™ÂØπË±°ÁöÑ‰∏çÂêå keyÔºåÊÄé‰πàÂäûÔºüÁî®‰∏™ MapÔºåËÆ© key ÂíåÂõûË∞ÉÂáΩÊï∞‰∏Ä‰∏ÄÂØπÂ∫îÂç≥ÂèØÔºå‰ΩÜÂ¶Ç‰ΩïÁü•ÈÅìÂâØ‰ΩúÁî®ÂáΩÊï∞Áî®‰∫ÜÂì™‰∏™ key Âë¢ÔºüÂ¶ÇÊûúÊòØÂú® useEffect ÈáåÈù¢ÊòæÁÑ∂ÊòØ‰∏çÁü•ÈÅìÁöÑÔºå‰ΩÜÁî®Ê≤°Áî® keyÔºåÁî®‰∫ÜÂì™‰∏™ keyÔºåProxy ÈáåÈù¢ÁöÑ get Êã¶Êà™ÂáΩÊï∞ÊòØ‰∏ÄÊ∏Ö‰∫åÊ•öÁöÑÔºåÊâÄ‰ª•Êàë‰ª¨Â∫îËØ•Âú®ËøôÈáåÊ∑ªÂä†ÂâØ‰ΩúÁî®ÂáΩÊï∞ÔºÅ‰ΩÜ get Êã¶Êà™ÂáΩÊï∞ÈáåÈù¢Âèà‰∏çÁü•ÈÅìÔºåÂΩìÂâçËé∑ÂèñÊï∞ÊçÆÁöÑÂáΩÊï∞ÊòØÂì™‰∏™ÔºåÂæàÁÆÄÂçïÔºåÊàë‰ª¨ËÆæÁΩÆ‰∏Ä‰∏™ activeEffect Êù•ËÆ∞ÂΩïÂΩìÂâçÁöÑÂáΩÊï∞„ÄÇ‰ΩÜÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºå‰∏Ä‰ΩÜÊàë‰ª¨ÂºÄÂßãÂú® get ÈáåÈù¢Ê≥®ÂÜåÂìçÂ∫îÔºåÊØèÊ¨°Ë∞ÉÁî®ÂâØ‰ΩúÁî®ÂáΩÊï∞Â∞±‰ºöË∞ÉÁî®Ê≥®ÂÜåÂìçÂ∫îÔºåËøô‰∏™Êó∂ÂÄôÈúÄË¶ÅÊõ¥Êñ∞ activeEffect„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940let activeEffect;const bucket = new Map();function useEffect(fn, data) &#123; function effectFn(data) &#123; activeEffect = effectFn; return fn(data); &#125; return effectFn(data);&#125;const data = &#123; text: "hello vue3", a: "11" &#125;;const obj = new Proxy(data, &#123; get(target, key) &#123; if (activeEffect) &#123; const effects = bucket.get(key); if (!effects) &#123; bucket.set(key, new Set([activeEffect])); &#125; else &#123; effects.add(activeEffect); &#125; &#125; return target[key]; &#125;, set(target, key, value) &#123; target[key] = value; const effects = bucket.get(key); effects &amp;&amp; effects.forEach((fn) =&gt; fn(target)); return true; &#125;,&#125;);// È¶ñÊ¨°Ê∏≤ÊüìuseEffect((data) =&gt; &#123; document.body.innerText = data.text;&#125;, obj); // ËøôÈáå‰πüË¶Å‰º†obj‰∫ÜÔºå‰∏çÁÑ∂getÁöÑÊó∂ÂÄôÔºå‰πüÊòØÁõëÂê¨‰∏çÂà∞ÁöÑuseEffect((data) =&gt; &#123; document.body.setAttribute("a", data.a);&#125;, obj);// setÊìç‰ΩúÔºåËß¶ÂèëÈáçÊñ∞Ê∏≤Êüìobj.text = "hello aaaa"; // ËøôÈáåÂøÖÈ°ªË¶Å‰øÆÊîπobjÂØπË±°ÔºàÊîπdataÊòØÁõëÂê¨‰∏çÂà∞ÁöÑÔºâobj.a = "222"; ËøôÊ†∑Â∞±ÂÆûÁé∞‰∫ÜÂØπÂçï‰∏™ÂØπË±°ÁöÑÂ§ö‰∏™‰∏çÂêå key Ê≥®ÂÜåÂ§ö‰∏™ÂâØ‰ΩúÁî®ÂáΩÊï∞ÔºåËøõË°åÂìçÂ∫îÂºèÊ∏≤Êüì„ÄÇ ËÄå‰∏îÔºåÊàë‰ª¨ÂèØ‰ª•ÊääÂÖ∂‰∏≠Â§ÑÁêÜÂâØ‰ΩúÁî®ÂáΩÊï∞ÁöÑÈÄªËæëÊäΩÂá∫Êù•Ôºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546let activeEffect;const bucket = new Map();function useEffect(fn, data) &#123; function effectFn(data) &#123; activeEffect = effectFn; return fn(data); &#125; return effectFn(data);&#125;const data = &#123; text: "hello vue3", a: "11" &#125;;const obj = new Proxy(data, &#123; get(target, key) &#123; track(key); return target[key]; &#125;, set(target, key, value) &#123; target[key] = value; trigger(target, key); return true; &#125;,&#125;);function track(key) &#123; if (activeEffect) &#123; const effects = bucket.get(key); if (!effects) &#123; bucket.set(key, new Set([activeEffect])); &#125; else &#123; effects.add(activeEffect); &#125; &#125;&#125;function trigger(target, key) &#123; const effects = bucket.get(key); effects &amp;&amp; effects.forEach((fn) =&gt; fn(target));&#125;// È¶ñÊ¨°Ê∏≤ÊüìuseEffect((data) =&gt; &#123; document.body.innerText = data.text;&#125;, obj);useEffect((data) =&gt; &#123; document.body.setAttribute("a", data.a);&#125;, obj);// setÊìç‰ΩúÔºåËß¶ÂèëÈáçÊñ∞Ê∏≤Êüìobj.text = "hello aaaa";obj.a = "222"; Â¶ÇÊûúËøô‰∫õÂ§ö‰∏™ÂâØ‰ΩúÁî®ÂáΩÊï∞ÔºåÁõëÂê¨ÁöÑÊòØÂ§ö‰∏™ÂØπË±°ÁöÑ‰∏çÂêå keyÔºåÊÄé‰πàÂäûÔºüÂÜçÂä†‰∏Ä‰∏™ Map Âç≥ÂèØÔºåËÄå‰∏îÁî±‰∫éÈîÆÊòØ‰∏™ÂØπË±°ÔºåÊúÄÂ•ΩÁî® WeakMapÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758let activeEffect;const bucket = new WeakMap();function useEffect(fn, data) &#123; function effectFn(data) &#123; activeEffect = effectFn; return fn(data); &#125; return effectFn(data);&#125;const data1 = &#123; text: "hello vue3", a: "11" &#125;;const data2 = &#123; text2: "hello vue2", b: "22" &#125;;const obj1 = createProxyObj(data1);const obj2 = createProxyObj(data2);function createProxyObj(data) &#123; return new Proxy(data, &#123; get(target, key) &#123; track(target, key); return target[key]; &#125;, set(target, key, value) &#123; target[key] = value; trigger(target, key); return true; &#125;, &#125;);&#125;function track(target, key) &#123; if (activeEffect) &#123; let effectsOnTarget = bucket.get(target); if (!effectsOnTarget) &#123; bucket.set(target, (effectsOnTarget = new Map())); &#125; let effects = effectsOnTarget.get(key); if (!effects) &#123; effectsOnTarget.set(key, (effects = new Set())); &#125; effects.add(activeEffect); &#125;&#125;function trigger(target, key) &#123; const effectsOnTarget = bucket.get(target); if (effectsOnTarget) &#123; const effects = effectsOnTarget.get(key); effects &amp;&amp; effects.forEach((fn) =&gt; fn(target)); &#125;&#125;// È¶ñÊ¨°Ê∏≤ÊüìuseEffect((data) =&gt; &#123; document.body.innerText = data.text;&#125;, obj1);useEffect((data) =&gt; &#123; document.body.setAttribute("b", data.b);&#125;, obj2);// setÊìç‰ΩúÔºåËß¶ÂèëÈáçÊñ∞Ê∏≤Êüìobj1.text = "hello aaaa";obj2.b = "333"; ÂàÜÊîØÂàáÊç¢ÁõÆÂâçÊù•ËØ¥Ôºö È¶ñÊ¨°ÊâßË°åÂâØ‰ΩúÁî®ÂáΩÊï∞‰ºöËß¶Âèë getÔºåget ‰ºöÊääÂâØ‰ΩúÁî®ÂáΩÊï∞Ê∑ªÂä†‰∏∫ÂìçÂ∫îÂáΩÊï∞„ÄÇ ÁÑ∂ÂêéÊõ¥Êñ∞ÂÄºÁöÑÊó∂ÂÄô‰ºöËß¶Âèë setÔºåset ‰ºöÊâßË°åÂìçÂ∫îÂáΩÊï∞ÔºåÊâßË°åÂìçÂ∫îÂáΩÊï∞Âèà‰ºöËß¶Âèë getÔºåget ‰ºöÊääÂâØ‰ΩúÁî®ÂáΩÊï∞Ê∑ªÂä†‰∏∫ÂìçÂ∫îÂáΩÊï∞„ÄÇ ‰πüÂ∞±ÊòØËØ¥ÊØèÊ¨°Êõ¥Êñ∞ÂÄºÈÉΩ‰ºöÈáçÊñ∞Ê∑ªÂä†ÂìçÂ∫îÂáΩÊï∞Ôºå‰ºº‰πéÂæàÂÜó‰ΩôÔºåËÉΩÂê¶Âè™ÊâßË°å‰∏ÄÊ¨°Âë¢ÔºüÁ≠îÊ°àÊòØ‰∏çËÉΩÔºåÂõ†‰∏∫ÂèØËÉΩÂ≠òÂú®ÂàÜÊîØÔºå‰æãÂ¶ÇÔºö 12345678const data = &#123; ok: true, text: "hello world" &#125;;const obj = new Proxy(data, &#123; /* ... */&#125;);useEffect(function effectFn() &#123; document.body.innerText = obj.ok ? obj.text : "not";&#125;, obj); ÂΩì obj.ok ‰∏∫ true ÁöÑÊó∂ÂÄôÔºåobj.text ÁöÑÂìçÂ∫îÂáΩÊï∞‰ºöËÆ∞ÂΩï‰∏ãÂâØ‰ΩúÁî®ÂáΩÊï∞Ôºå‰ΩÜÂ¶ÇÊûú obj.ok ‰∏∫ false ÁöÑÊó∂ÂÄôÔºå‰øÆÊîπ obj.text ÂÖ∂ÂÆû‰∏çÁî®ÊâßË°åÂâØ‰ΩúÁî®ÂáΩÊï∞‰∫ÜÔºå‰ΩÜÁî±‰∫é‰πãÂâçÊ∑ªÂä†ËøáÔºåÊâÄ‰ª•ËøòÊòØ‰ºöÊâßË°å„ÄÇ ÊâÄ‰ª•Êàë‰ª¨‰∏ç‰ªÖË¶ÅÈáçÊñ∞Ê∑ªÂä†ÂìçÂ∫îÂáΩÊï∞ÔºåËøòÈúÄË¶ÅÊ∏ÖÁêÜ‰πãÂâçÊ∑ªÂä†ÁöÑ„ÄÇËøôÊ†∑ÊØèÊ¨°Ê∑ªÂä†ÁöÑÂìçÂ∫îÂáΩÊï∞Êâç‰ºöÊòØÂáÜÁ°ÆÊó†ËØØÁöÑ„ÄÇ ‰∏∫‰∫ÜÊ∏ÖÁêÜÂìçÂ∫îÂáΩÊï∞ÔºåÊØîËæÉÁ≤óÊö¥‰∏ÄÁÇπÁöÑÊòØÈÅçÂéÜ bucket ‰∏≠ÁöÑÊØè‰∏™ target ÁöÑÊØè‰∏™ keyÔºåÁÑ∂ÂêéÂØπÂÖ∂ set ÈõÜÂêàÊâßË°å delete()ÊñπÊ≥ïÔºå‰ΩÜËøôÊ†∑ÊòæÁÑ∂‰∏çÂ§™Â•ΩÔºåÊàë‰ª¨ÂèØ‰ª•ËÆ∞ÂΩï‰∏Ä‰∏ãÂì™‰∫õÈõÜÂêàÂ≠ò‰∫ÜÂΩìÂâçÂâØ‰ΩúÁî®ÂáΩÊï∞ÔºåÂè™ÂØπËøô‰∫õÈõÜÂêàÊâßË°å delete()ÊñπÊ≥ï„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 12345678910111213141516171819202122232425262728293031function useEffect(fn, data) &#123; effectFn.records = []; return effectFn(data); function effectFn(data) &#123; cleanup(effectFn); activeEffect = effectFn; return fn(data); function cleanup(effectFn) &#123; for (let i = 0; i &lt; effectFn.records.length; i++) &#123; effectFn.records[i].delete(fn); &#125; &#125; &#125;&#125;function track(target, key) &#123; if (activeEffect) &#123; let effectsOnTarget = bucket.get(target); if (!effectsOnTarget) &#123; bucket.set(target, (effectsOnTarget = new Map())); &#125; let effects = effectsOnTarget.get(key); if (!effects) &#123; effectsOnTarget.set(key, (effects = new Set())); &#125; effects.add(activeEffect); activeEffect.records.push(effects); // Êñ∞Â¢û &#125;&#125; Êàë‰ª¨ÊîπÂÜô‰∫Ü useEffectÔºåÂ¢ûÂä†‰∫Ü‰∏Ä‰∏™ records Êù•ËÆ∞ÂΩïÈúÄË¶ÅÊ∏ÖÁêÜÂì™‰∫õÈõÜÂêàÔºåÂú®ÊØèÊ¨°ÈáçÊñ∞Ê∑ªÂä†ÂìçÂ∫î‰πãÂâçÔºåÊ∏ÖÁêÜÊéâÊóßÁöÑÂìçÂ∫î„ÄÇÂπ∂Âú® track ÂáΩÊï∞ÈáåÈù¢ÂØπËøô‰∏™ records ËøõË°åÂ°´ÂÖÖ„ÄÇ ‰ΩÜËøòÂ≠òÂú®‰∏Ä‰∏™ÈóÆÈ¢òÔºåËøô‰∏™ÈóÆÈ¢òÊØîËæÉÈöêÁßòÔºåÈÇ£Â∞±ÊòØÈÅçÂéÜÁöÑÊó∂ÂÄôÂØπÈÅçÂéÜÂØπË±°ËøõË°å add Âíå delete Êìç‰ΩúÔºåtrigger ‰∏≠Êàë‰ª¨ÊâßË°åÂìçÂ∫îÂáΩÊï∞ÔºåÂìçÂ∫îÂáΩÊï∞‰ºöÂØπÊ°∂ÂÖà cleanup ÂÜçÈáçÊñ∞Ê∑ªÂä†Ôºå‰ΩÜËøô‰∏™Êó∂ÂÄôÊàë‰ª¨ËøòÂú®ÈÅçÂéÜÊ°∂ÂïäÔºåÊâÄ‰ª•Â∞±Áõ∏ÂΩì‰∫éËøôÊ†∑Ôºö 1234567const set = new Set([1]);set.forEach((item) =&gt; &#123; set.delete(1); set.add(1); console.log("ÈÅçÂéÜ‰∏≠");&#125;); Ëøô‰ºöÈÄ†ÊàêÊ≠ªÂæ™ÁéØÔºåËß£ÂÜ≥ÁöÑÂäûÊ≥ïÔºåËá™ÁÑ∂ÊòØ‰∏çÂØπÈÅçÂéÜÁöÑÂØπË±°Â¢ûÂà†ÔºåÊñ∞Êêû‰∏™ÂØπË±°ËøõË°åÂ¢ûÂà†„ÄÇ‰øÆÊîπÂêéÁöÑ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 1234567function trigger(target, key) &#123; const effectsOnTarget = bucket.get(target); if (effectsOnTarget) &#123; const effects = effectsOnTarget.get(key); effects &amp;&amp; [...effects].forEach((fn) =&gt; fn(target)); // ‰øÆÊîπÔºå‰∏çÂØπÂéüÈõÜÂêàËøõË°å‰∏ÄËæπÈÅçÂéÜ‰∏ÄËæπÂ¢ûÂà† &#125;&#125;]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScriptÊâßË°å‰∏ä‰∏ãÊñá‰πã‰ΩúÁî®ÂüüÈìæ]]></title>
    <url>%2Fblog%2F2022%2F07%2F14%2FJavaScript%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B9%8B%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%2F</url>
    <content type="text"><![CDATA[ÊâßË°å‰∏ä‰∏ãÊñá‰∏≠Êúâ‰∏™‰ΩúÁî®ÂüüÈìæÔºåÂΩìÊü•Êâæ‰∏Ä‰∏™ÂèòÈáèÊó∂‰ºöÈ°∫ÁùÄËøô‰∏™ÈìæÊâæ„ÄÇ ÂáΩÊï∞ÁöÑ‰ΩúÁî®ÂüüÂú®ÂáΩÊï∞ÂÆö‰πâÁöÑÊó∂ÂÄôÂ∞±ÂÜ≥ÂÆö‰∫Ü„ÄÇËøôÊòØÂõ†‰∏∫ÂáΩÊï∞ÂØπË±°Êúâ‰∏™ÂÜÖÈÉ®Â±ûÊÄß[[scope]] ÂáΩÊï∞ÁöÑÁîüÂëΩÂë®ÊúüÂàÜ‰∏∫ÔºöÂáΩÊï∞ÂàõÂª∫ Âíå ÂáΩÊï∞Ë∞ÉÁî®„ÄÇ ÂáΩÊï∞ÂàõÂª∫ÁöÑÊó∂ÂÄôÔºå‰ºöÊääÂÖ∂ÊâÄÂ§ÑÊâßË°å‰∏ä‰∏ãÊñáÁöÑ‰ΩúÁî®ÂüüÈìæÁõ¥Êé•ËµãÂÄºÁªôÂáΩÊï∞ÁöÑÂÜÖÈÉ®Â±ûÊÄß[[scope]]ÔºàËøôÂ∞±ÊòØËØçÊ≥ï‰ΩúÁî®ÂüüÁöÑÂéüÁêÜ‰∫ÜÔºâÔºåÂáΩÊï∞Ë∞ÉÁî®ÁöÑÊó∂ÂÄô‰ºöÂàõÂª∫Ëá™Â∑±ÁöÑÊâßË°å‰∏ä‰∏ãÊñáÔºåÂπ∂ÊääËá™Â∑±ÁöÑAOÂíå[[scope]]ÂêàÂπ∂ÊàêÊñ∞ÁöÑ‰ΩúÁî®ÂüüÈìæÔºö ÂÅáËÆæË¶ÅÂÆûÁé∞Âä®ÊÄÅ‰ΩúÁî®ÂüüÁöÑËØùÔºå[[scope]]Â∞±ÂæóÂú®Ë∞ÉÁî®Êó∂ÂéªÊâßË°å‰∏ä‰∏ãÊñáÊ†àÁöÑ‰∏ä‰∏ÄÂ∏ßÂéªÂèñ„ÄÇ 1Scope = [AO].concat([[scope]]); ÂÆû‰æãÂâñÊûê123456var scope = "global scope";function checkscope() &#123; var scope2 = "local scope"; return scope2;&#125;checkscope(); ÊâßË°åËøáÁ®ãÂ¶Ç‰∏ãÔºö ÂÖ®Â±ÄÊâßË°å‰∏ä‰∏ãÊñáÂàõÂª∫ÔºåÂÖ∂‰ΩúÁî®ÂüüÈìæÂ∞±Âè™ÊúâËá™Ë∫´ÁöÑ VOÔºåÁÑ∂ÂêéÂ∞ÜÂÖ®Â±Ä‰∏ä‰∏ãÊñáÂéãÊ†àÔºö 1234567ECStack = [];globalContext = &#123; VO, Scope: [VO], this: window,&#125;;ECStack.push(globalContext); checkscope ÂáΩÊï∞Ë¢´ÂàõÂª∫Ôºå‰øùÂ≠òÂΩìÂâçÊâßË°å‰∏ä‰∏ãÊñáÁöÑ‰ΩúÁî®ÂüüÈìæÂà∞ checkscope ÂáΩÊï∞ÁöÑÂÜÖÈÉ®Â±ûÊÄß[[scope]]ÔºàËøô‰∏ÄÊ≠•ÊòØËØçÊ≥ï‰ΩúÁî®ÂüüÂÆûÁé∞ÁöÑÂÖ≥ÈîÆÔºâ 1checkscope.[[scope]] = globalContext.Scope; Ë∞ÉÁî® checkscope ÂáΩÊï∞ÔºåÂáΩÊï∞Âπ∂‰∏çÁ´ãÂàªÊâßË°åÔºåÂºÄÂßãÂÅöÂáÜÂ§áÂ∑•‰ΩúÔºåÁîüÊàêÊâßË°å‰∏ä‰∏ãÊñáÔºåÂπ∂ÂéãÂÖ•ÊâßË°å‰∏ä‰∏ãÊñáÊ†àÔºö AOÔºöÁî® arguments ÂàõÂª∫Ê¥ªÂä®ÂØπË±°ÔºåÈöèÂêéÂàùÂßãÂåñÊ¥ªÂä®ÂØπË±°ÔºåÂä†ÂÖ•ÂΩ¢ÂèÇ„ÄÅÂáΩÊï∞Â£∞Êòé„ÄÅÂèòÈáèÂ£∞Êòé ScopeÔºöÂ§çÂà∂ÂáΩÊï∞[[scope]]Â±ûÊÄßÂàõÂª∫‰ΩúÁî®ÂüüÈìæÔºåÂ∞ÜÊ¥ªÂä®ÂØπË±°ÂéãÂÖ• checkscope ‰ΩúÁî®ÂüüÈìæÈ°∂Á´Ø this 12345678910checkscopeContext = &#123; AO: &#123; arguments: &#123; length: 0, &#125;, scope2: undefined, &#125;, Scope: [AO, [[Scope]]],&#125;;ECStack.push(checkscopeContext); ÂáÜÂ§áÂ∑•‰ΩúÂÅöÂÆåÔºåÂºÄÂßãÊâßË°åÂáΩÊï∞ÔºåÈöèÁùÄÂáΩÊï∞ÁöÑÊâßË°åÔºå‰øÆÊîπ AO ÁöÑÂ±ûÊÄßÂÄºÔºåÊü•ÊâæÂà∞ scope2 ÁöÑÂÄºÔºåËøîÂõûÂêéÂáΩÊï∞ÊâßË°åÂÆåÊØïÔºåÂáΩÊï∞‰∏ä‰∏ãÊñá‰ªéÊâßË°å‰∏ä‰∏ãÊñáÊ†à‰∏≠ÂºπÂá∫ 12345678910checkscopeContext = &#123; AO: &#123; arguments: &#123; length: 0, &#125;, scope2: "local scope", &#125;, Scope: [AO, [[Scope]]],&#125;;ECStack.pop(); ÊØè‰∏ÄÊ≠•‰∏≠ÂÖ∑‰ΩìÁöÑÂÆûÁé∞ÁªÜËäÇÊàë‰ª¨Êó†Ê≥ïÂæóÁü•ÔºàÂõ†‰∏∫ÂèØ‰ª•ÊúâÂ§öÁßçÂÆûÁé∞ÊâãÊ≥ïÔºâÔºå‰ΩÜËøô 5 Ê≠•Âç¥ÊòØÁúüÂÆûÂ≠òÂú®ÁöÑÔºàÂõ†‰∏∫ÂèØ‰ª•ÈÄöËøá‰æãÂ≠êÈ™åËØÅÔºâ„ÄÇ]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript Èó≠ÂåÖ]]></title>
    <url>%2Fblog%2F2022%2F07%2F14%2FJavaScript%E9%97%AD%E5%8C%85%2F</url>
    <content type="text"><![CDATA[Èó≠ÂåÖÊòØÂπ≤‰ªÄ‰πàÁî®ÁöÑÊú¨Ë¥®‰∏äÈó≠ÂåÖÂ∞±ÊòØ‰∏∫‰∫ÜÊãìÂ±ïÊü•ÊâæËá™Áî±ÂèòÈáèÁöÑËåÉÂõ¥ MDN ÂØπÈó≠ÂåÖÁöÑÂÆö‰πâ‰∏∫Ôºö A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment) ‰∏Ä‰∏™ÂáΩÊï∞ÂíåÂØπÂÖ∂Âë®Âõ¥Áä∂ÊÄÅÔºàlexical environmentÔºåËØçÊ≥ïÁéØÂ¢ÉÔºâÁöÑÂºïÁî®ÊçÜÁªëÂú®‰∏ÄËµ∑ÔºàÊàñËÄÖËØ¥ÂáΩÊï∞Ë¢´ÂºïÁî®ÂåÖÂõ¥ÔºâÔºåËøôÊ†∑ÁöÑÁªÑÂêàÂ∞±ÊòØÈó≠ÂåÖÔºàclosureÔºâ„ÄÇ 123456789function init() &#123; var name = 'Mozilla'; // name is a local variable created by init function displayName() &#123; // displayName() is the inner function, a closure console.log(name); // use variable declared in the parent function &#125; displayName();&#125;init(); name ÊòØ displayName ÂáΩÊï∞ÊâÄÂ§ÑÁéØÂ¢É‰∏≠ÁöÑÂèòÈáèÔºåÂÆÉ‰ª¨‰∏ÄËµ∑ÊûÑÊàê‰∫ÜÈó≠ÂåÖ„ÄÇËÄåÈó≠ÂåÖÁöÑÂÆûÁé∞‰æùËµñ‰∫éÊâßË°å‰∏ä‰∏ãÊñá‰∏≠ÁöÑ‰ΩúÁî®ÂüüÈìæ„ÄÇ ‰∏äÈù¢Ëøô‰∏™‰æãÂ≠êÊúâÁÇπÂπ≥Âπ≥Êó†Â•á‰∫ÜÔºåËÆ©Êàë‰ª¨Áúã‰∏Ä‰∏™Á•ûÂ•á‰∏ÄÁÇπÁöÑ‰æãÂ≠êÔºö 1234567891011var scope = "global scope";function checkscope()&#123; var scope = "local scope"; function f()&#123; return scope; &#125; return f;&#125;var foo = checkscope();foo(); ËøôÈáåÁõ¥Êé•ÁªôÂá∫ÁÆÄË¶ÅÁöÑÊâßË°åËøáÁ®ãÔºö ËøõÂÖ•ÂÖ®Â±Ä‰ª£Á†ÅÔºåÂàõÂª∫ÂÖ®Â±ÄÊâßË°å‰∏ä‰∏ãÊñáÔºåÂÖ®Â±ÄÊâßË°å‰∏ä‰∏ãÊñáÂéãÂÖ•ÊâßË°å‰∏ä‰∏ãÊñáÊ†à ÂÖ®Â±ÄÊâßË°å‰∏ä‰∏ãÊñáÂàùÂßãÂåñ ÊâßË°å checkscope ÂáΩÊï∞ÔºåÂàõÂª∫ checkscope ÂáΩÊï∞ÊâßË°å‰∏ä‰∏ãÊñáÔºåcheckscope ÊâßË°å‰∏ä‰∏ãÊñáË¢´ÂéãÂÖ•ÊâßË°å‰∏ä‰∏ãÊñáÊ†à checkscope ÊâßË°å‰∏ä‰∏ãÊñáÂàùÂßãÂåñÔºåÂàõÂª∫ÂèòÈáèÂØπË±°„ÄÅ‰ΩúÁî®ÂüüÈìæ„ÄÅthis Á≠â checkscope ÂáΩÊï∞ÊâßË°åÂÆåÊØïÔºåcheckscope ÊâßË°å‰∏ä‰∏ãÊñá‰ªéÊâßË°å‰∏ä‰∏ãÊñáÊ†à‰∏≠ÂºπÂá∫ ÊâßË°å f ÂáΩÊï∞ÔºåÂàõÂª∫ f ÂáΩÊï∞ÊâßË°å‰∏ä‰∏ãÊñáÔºåf ÊâßË°å‰∏ä‰∏ãÊñáË¢´ÂéãÂÖ•ÊâßË°å‰∏ä‰∏ãÊñáÊ†à f ÊâßË°å‰∏ä‰∏ãÊñáÂàùÂßãÂåñÔºåÂàõÂª∫ÂèòÈáèÂØπË±°„ÄÅ‰ΩúÁî®ÂüüÈìæ„ÄÅthis Á≠â f ÂáΩÊï∞ÊâßË°åÂÆåÊØïÔºåf ÂáΩÊï∞‰∏ä‰∏ãÊñá‰ªéÊâßË°å‰∏ä‰∏ãÊñáÊ†à‰∏≠ÂºπÂá∫ ‰∫ÜËß£Âà∞Ëøô‰∏™ËøáÁ®ãÔºåÊàë‰ª¨Â∫îËØ•ÊÄùËÄÉ‰∏Ä‰∏™ÈóÆÈ¢òÔºåÈÇ£Â∞±ÊòØÔºö ÂΩì f ÂáΩÊï∞ÊâßË°åÁöÑÊó∂ÂÄôÔºåcheckscope ÂáΩÊï∞‰∏ä‰∏ãÊñáÂ∑≤ÁªèË¢´ÈîÄÊØÅ‰∫ÜÂïä(Âç≥‰ªéÊâßË°å‰∏ä‰∏ãÊñáÊ†à‰∏≠Ë¢´ÂºπÂá∫)ÔºåÊÄé‰πàËøò‰ºöËØªÂèñÂà∞ checkscope ‰ΩúÁî®Âüü‰∏ãÁöÑ scope ÂÄºÂë¢Ôºü ‰ª•‰∏äÁöÑ‰ª£Á†ÅÔºåË¶ÅÊòØËΩ¨Êç¢Êàê PHPÔºåÂ∞±‰ºöÊä•ÈîôÔºåÂõ†‰∏∫Âú® PHP ‰∏≠Ôºåf ÂáΩÊï∞Âè™ËÉΩËØªÂèñÂà∞Ëá™Â∑±‰ΩúÁî®ÂüüÂíåÂÖ®Â±Ä‰ΩúÁî®ÂüüÈáåÁöÑÂÄºÔºåÊâÄ‰ª•ËØª‰∏çÂà∞ checkscope ‰∏ãÁöÑ scope ÂÄº„ÄÇ ÁÑ∂ËÄå JavaScript Âç¥ÊòØÂèØ‰ª•ÁöÑÔºÅ ÂΩìÊàë‰ª¨‰∫ÜËß£‰∫ÜÂÖ∑‰ΩìÁöÑÊâßË°åËøáÁ®ãÂêéÔºåÊàë‰ª¨Áü•ÈÅì f ÊâßË°å‰∏ä‰∏ãÊñáÁª¥Êä§‰∫Ü‰∏Ä‰∏™‰ΩúÁî®ÂüüÈìæÔºö 123fContext = &#123; Scope: [AO, checkscopeContext.AO, globalContext.VO],&#125;; ÂØπÁöÑÔºåÂ∞±ÊòØÂõ†‰∏∫Ëøô‰∏™‰ΩúÁî®ÂüüÈìæÔºåf ÂáΩÊï∞‰æùÁÑ∂ÂèØ‰ª•ËØªÂèñÂà∞ checkscopeContext.AO ÁöÑÂÄºÔºåËØ¥ÊòéÂΩì f ÂáΩÊï∞ÂºïÁî®‰∫Ü checkscopeContext.AO ‰∏≠ÁöÑÂÄºÁöÑÊó∂ÂÄôÔºåÂç≥‰Ωø checkscopeContext Ë¢´ÈîÄÊØÅ‰∫ÜÔºå‰ΩÜÊòØ JavaScript ‰æùÁÑ∂‰ºöËÆ© checkscopeContext.AO Ê¥ªÂú®ÂÜÖÂ≠ò‰∏≠ÔºàÂõ†‰∏∫ËøòÊúâÂà´ÁöÑÂºïÁî®Âú®ÔºåÊâÄ‰ª•‰∏ç‰ºöËøõË°åÂûÉÂúæÂõûÊî∂ÔºâÔºåf ÂáΩÊï∞‰æùÁÑ∂ÂèØ‰ª•ÈÄöËøá f ÂáΩÊï∞ÁöÑ‰ΩúÁî®ÂüüÈìæÊâæÂà∞ÂÆÉÔºåÊ≠£ÊòØÂõ†‰∏∫ JavaScript ÂÅöÂà∞‰∫ÜËøô‰∏ÄÁÇπÔºå‰ªéËÄåÂÆûÁé∞‰∫ÜÈó≠ÂåÖËøô‰∏™Ê¶ÇÂøµ„ÄÇ ÊâÄ‰ª•ÔºåËÆ©Êàë‰ª¨ÂÜçÁúã‰∏ÄÈÅçÂÆûË∑µËßíÂ∫¶‰∏äÈó≠ÂåÖÁöÑÂÆö‰πâÔºö Âç≥‰ΩøÂàõÂª∫ÂÆÉÁöÑ‰∏ä‰∏ãÊñáÂ∑≤ÁªèÈîÄÊØÅÔºåÂÆÉ‰ªçÁÑ∂Â≠òÂú®ÔºàÊØîÂ¶ÇÔºåÂÜÖÈÉ®ÂáΩÊï∞‰ªéÁà∂ÂáΩÊï∞‰∏≠ËøîÂõûÔºâ Âú®‰ª£Á†Å‰∏≠ÂºïÁî®‰∫ÜËá™Áî±ÂèòÈáè Âú®ËøôÈáåÂÜçË°•ÂÖÖ‰∏Ä‰∏™„ÄäJavaScript ÊùÉÂ®ÅÊåáÂçó„ÄãËã±ÊñáÂéüÁâàÂØπÈó≠ÂåÖÁöÑÂÆö‰πâ: This combination of a function object and a scope (a set of variable bindings) in which the function‚Äôs variables are resolved is called a closure in the computer science literature. Èó≠ÂåÖÂú®ËÆ°ÁÆóÊú∫ÁßëÂ≠¶‰∏≠‰πüÂè™ÊòØ‰∏Ä‰∏™ÊôÆÈÄöÁöÑÊ¶ÇÂøµÔºåÂ§ßÂÆ∂‰∏çË¶ÅÂéªÊÉ≥ÂæóÂ§™Â§çÊùÇ„ÄÇ ÁªèÂÖ∏Èù¢ËØïÈ¢ò1234567891011var data = [];for (var i = 0; i &lt; 3; i++) &#123; data[i] = function () &#123; console.log(i); &#125;;&#125;data[0]();data[1]();data[2](); Á≠îÊ°àÊòØÂÖ®ÊòØ 3ÔºåÂõ†‰∏∫ËøôÈáåÁöÑ i ÊòØÁõ¥Êé•‰ªéÂÖ®Â±Ä‰∏ä‰∏ãÊñá‰∏≠ËØªÂèñÂà∞ÁöÑÔºåËÆ©Êàë‰ª¨Â§öÂä†‰∏ÄÂ±ÇÈó≠ÂåÖÔºö 12345678910111213var data = [];for (var i = 0; i &lt; 3; i++) &#123; data[i] = (function (i) &#123; return function () &#123; console.log(i); &#125;; &#125;)(i);&#125;data[0]();data[1]();data[2](); ËøôÈáåÂÜô‰∫Ü‰∏™Á´ãÂç≥ÊâßË°åÂáΩÊï∞ÔºåÁî±ÂÆÉÂàõÂª∫‰∫Ü‰∏Ä‰∏™Èó≠ÂåÖÔºöÁ´ãÂç≥ÊâßË°åÂáΩÊï∞ÁöÑ AO + ÂÜÖÂ±ÇÂáΩÊï∞ÔºåËøô‰∏™Èó≠ÂåÖ‰∏≠Êúâ‰∏™Ëá™Áî±ÂèòÈáè iÔºåÊù•Ëá™Ëøô‰∏™Á´ãÂç≥ÊâßË°åÂáΩÊï∞ÁöÑÂΩ¢ÂèÇÔºåÂΩ¢ÂèÇÂú®ÊØèÊ¨°Á´ãÂç≥ÊâßË°åÂêé‰ºöË¢´ÂàÜÂà´ËµãÂÄº 0,1,2„ÄÇËÄåÂÜÖÂ±ÇÂáΩÊï∞Ë¢´ËøîÂõûÁªôËøô‰∏™ data Êï∞ÁªÑÔºåÂΩìÂÜÖÂ±ÇÂáΩÊï∞ÊâßË°åÊó∂ÔºåÈ°∫ÁùÄ‰ΩúÁî®ÂüüÈìæÊü•Êâæ iÔºå‰ºöÂÖà‰ªéÁ´ãÂç≥ÊâßË°åÂáΩÊï∞ÁöÑ AO ‰∏≠ËØªÂèñÂà∞ iÔºåÂ∞±‰ºöÂàÜÂà´ËØªÂèñÂà∞ 0,1,2„ÄÇ ÂèÇËÄÉ JavaScript Ê∑±ÂÖ•‰πãÈó≠ÂåÖ Èó≠ÂåÖ - mdn]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScriptÊâßË°å‰∏ä‰∏ãÊñá‰πãÂèòÈáèÂØπË±°]]></title>
    <url>%2Fblog%2F2022%2F07%2F13%2FJavaScript%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B9%8B%E5%8F%98%E9%87%8F%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[ÊâßË°å‰∏ä‰∏ãÊñá‰∏≠ÂåÖÂê´Âì™‰∫õ‰∏úË•øÂØπ‰∫éÊØè‰∏™ÊâßË°å‰∏ä‰∏ãÊñáÔºåÈÉΩÊúâ‰∏â‰∏™ÈáçË¶ÅÂ±ûÊÄßÔºö ÂèòÈáèÂØπË±°(Variable objectÔºåVO) ‰ΩúÁî®ÂüüÈìæ(Scope chain) this Êú¨ÁØáÂ∞±Êù•ËÆ≤ËÆ≤Á¨¨‰∏Ä‰∏™ÂèòÈáèÂØπË±° ÂÖ®Â±Ä‰∏ä‰∏ãÊñá Âú®È°∂Â±Ç JavaScript ‰ª£Á†Å‰∏≠ÔºåÂèØ‰ª•Áî®ÂÖ≥ÈîÆÂ≠ó this ÂºïÁî®ÂÖ®Â±ÄÂØπË±°„ÄÇÂõ†‰∏∫ÂÖ®Â±ÄÂØπË±°ÊòØ‰ΩúÁî®ÂüüÈìæÁöÑÂ§¥ÔºåËøôÊÑèÂë≥ÁùÄÊâÄÊúâÈùûÈôêÂÆöÊÄßÁöÑÂèòÈáèÂíåÂáΩÊï∞ÂêçÈÉΩ‰ºö‰Ωú‰∏∫ËØ•ÂØπË±°ÁöÑÂ±ûÊÄßÊù•Êü•ËØ¢„ÄÇ ‰æãÂ¶ÇÔºåÂΩì JavaScript ‰ª£Á†ÅÂºïÁî® parseInt() ÂáΩÊï∞Êó∂ÔºåÂÆÉÂºïÁî®ÁöÑÊòØÂÖ®Â±ÄÂØπË±°ÁöÑ parseInt Â±ûÊÄß„ÄÇÂÖ®Â±ÄÂØπË±°ÊòØ‰ΩúÁî®ÂüüÈìæÁöÑÂ§¥ÔºåËøòÊÑèÂë≥ÁùÄÂú®È°∂Â±Ç JavaScript ‰ª£Á†Å‰∏≠Â£∞ÊòéÁöÑÊâÄÊúâÂèòÈáèÈÉΩÂ∞ÜÊàê‰∏∫ÂÖ®Â±ÄÂØπË±°ÁöÑÂ±ûÊÄß„ÄÇ Âú®ÊµèËßàÂô®‰∏≠ÔºåÂÖ®Â±ÄÂØπË±°Êúâ window ÊåáÂêëËá™Ë∫´ ‰πüÂ∞±ÊòØËØ¥Âú®ÂÖ®Â±ÄÊâßË°å‰∏ä‰∏ãÊñá‰∏≠ÔºåÊâÄÊúâÊú™ÈôêÂÆöÁöÑÂèòÈáèÈÉΩÊåÇÂú®ÂÖ®Â±ÄÂØπË±°‰∏äÔºå‰ªéÂÖ®Â±ÄÂØπË±°‰∏≠ËØªÂÜô„ÄÇÊØîÂ¶Ç: 1234567var a = 1;console.log(a);console.log(this.a);console.log(window.a);console.log(this.window.a);// ‰ΩÜÊòØ‰∏çËÉΩÂÜôconsole.log(window.this.a); ÊâßË°åËøáÁ®ãJavaScript ‰ª£Á†ÅÂú®ËøõÂÖ•‰∏ÄÊÆµ‰ª£Á†ÅÁéØÂ¢ÉÊó∂Ôºå‰ºöÂàÜ‰∏∫‰∏§‰∏™Èò∂ÊÆµÔºö ‰ª£Á†ÅÂàÜÊûêÔºàËøõÂÖ•ÊâßË°å‰∏ä‰∏ãÊñáÔºâ ‰ª£Á†ÅÊâßË°å ËøõÂÖ•ÊâßË°å‰∏ä‰∏ãÊñáÂΩìËøõÂÖ•ÊâßË°å‰∏ä‰∏ãÊñáÊó∂ÔºåËøôÊó∂ÂÄôËøòÊ≤°ÊúâÊâßË°å‰ª£Á†ÅÔºå ÂèòÈáèÂØπË±°‰ºöÂåÖÊã¨‰∏âÁ±ªÔºö ÂáΩÊï∞ÁöÑÊâÄÊúâÂΩ¢ÂèÇ (Â¶ÇÊûúÊòØÂáΩÊï∞‰∏ä‰∏ãÊñá) Áî±ÂêçÁß∞ÂíåÂØπÂ∫îÂÄºÁªÑÊàêÁöÑ‰∏Ä‰∏™ÂèòÈáèÂØπË±°ÁöÑÂ±ûÊÄßË¢´ÂàõÂª∫ Ê≤°ÊúâÂÆûÂèÇÔºåÂ±ûÊÄßÂÄºËÆæ‰∏∫ undefined ÂáΩÊï∞Â£∞Êòé Áî±ÂêçÁß∞ÂíåÂØπÂ∫îÂÄºÔºàÂáΩÊï∞ÂØπË±°(function-object)ÔºâÁªÑÊàê‰∏Ä‰∏™ÂèòÈáèÂØπË±°ÁöÑÂ±ûÊÄßË¢´ÂàõÂª∫ Â¶ÇÊûúÂèòÈáèÂØπË±°Â∑≤ÁªèÂ≠òÂú®Áõ∏ÂêåÂêçÁß∞ÁöÑÂ±ûÊÄßÔºåÂàôÂÆåÂÖ®ÊõøÊç¢Ëøô‰∏™Â±ûÊÄß ÂèòÈáèÂ£∞Êòé Áî±ÂêçÁß∞ÂíåÂØπÂ∫îÂÄºÔºàundefinedÔºâÁªÑÊàê‰∏Ä‰∏™ÂèòÈáèÂØπË±°ÁöÑÂ±ûÊÄßË¢´ÂàõÂª∫ Â¶ÇÊûúÂèòÈáèÂêçÁß∞Ë∑üÂ∑≤ÁªèÂ£∞ÊòéÁöÑÂΩ¢ÂºèÂèÇÊï∞ÊàñÂáΩÊï∞Áõ∏ÂêåÔºåÂàôÂèòÈáèÂ£∞Êòé‰∏ç‰ºöÂπ≤Êâ∞Â∑≤ÁªèÂ≠òÂú®ÁöÑËøôÁ±ªÂ±ûÊÄß 12345678910function foo(a) &#123; var b = 2; function c() &#123;&#125; var d = function() &#123;&#125;; b = 3;&#125;foo(1); Âú®ËøõÂÖ•ÊâßË°å‰∏ä‰∏ãÊñáÂêéÔºåËøôÊó∂ÂÄôÁöÑ AO ÊòØÔºö 12345678910AO = &#123; arguments: &#123; 0: 1, length: 1 &#125;, a: 1, b: undefined, c: reference to function c()&#123;&#125;, d: undefined&#125; ‰ª£Á†ÅÊâßË°åËøòÊòØ‰∏äÈù¢ÁöÑ‰æãÂ≠êÔºåÂΩì‰ª£Á†ÅÊâßË°åÂÆåÂêéÔºåËøôÊó∂ÂÄôÁöÑ AO ÊòØÔºö 12345678910AO = &#123; arguments: &#123; 0: 1, length: 1 &#125;, a: 1, b: 3, c: reference to function c()&#123;&#125;, d: reference to FunctionExpression "d"&#125; ÊÄùËÄÉÈ¢òÁ¨¨‰∏ÄÈ¢ò123456function foo() &#123; console.log(a); a = 1; // Áõ∏ÂΩì‰∫éÊåÇÂú®ÂÖ®Â±ÄÂØπË±°‰∏ä&#125;foo(); // ??? ‰ºöÊä•ÈîôÔºåUncaught ReferenceError: a is not defined ËøôÊòØÂõ†‰∏∫ÂáΩÊï∞‰∏≠ÁöÑ &quot;a&quot; Âπ∂Ê≤°ÊúâÈÄöËøá var ÂÖ≥ÈîÆÂ≠óÂ£∞ÊòéÔºåÊâÄÊúâ‰∏ç‰ºöË¢´Â≠òÊîæÂú® AO ‰∏≠„ÄÇ Á¨¨‰∏ÄÊÆµÊâßË°å console ÁöÑÊó∂ÂÄôÔºå AO ÁöÑÂÄºÊòØÔºö 12345AO = &#123; arguments: &#123; length: 0 &#125;&#125; Ê≤°Êúâ a ÁöÑÂÄºÔºåÁÑ∂ÂêéÂ∞±‰ºöÂà∞ÂÖ®Â±ÄÂéªÊâæÔºåÂÖ®Â±Ä‰πüÊ≤°ÊúâÔºåÊâÄ‰ª•‰ºöÊä•Èîô„ÄÇ 123456function foo() &#123; console.log(a); var a = 1;&#125;foo(); // ??? ÊîπÊàêËøôÊ†∑ÔºåÊúâÂèòÈáèÊèêÂçáÂ∞±‰∏ç‰ºöÊä•Èîô‰∫Ü„ÄÇÊâìÂç∞ undefined ÊàñËÄÖÂÖàÊåÇÂú®ÂÖ®Â±ÄÂØπË±°‰∏ä 12345function bar() &#123; a = 1; console.log(a);&#125;bar(); // ??? ÊâìÂç∞ 1 Á¨¨‰∫åÈ¢ò1234567console.log(foo);function foo()&#123; console.log("foo");&#125;var foo = 1; ‰ºöÊâìÂç∞ÂáΩÊï∞ÔºåËÄå‰∏çÊòØ undefined „ÄÇ ËøôÊòØÂõ†‰∏∫Âú®ËøõÂÖ•ÊâßË°å‰∏ä‰∏ãÊñáÊó∂ÔºåÈ¶ñÂÖà‰ºöÂ§ÑÁêÜÂáΩÊï∞Â£∞ÊòéÔºåÂÖ∂Ê¨°‰ºöÂ§ÑÁêÜÂèòÈáèÂ£∞ÊòéÔºåÂ¶ÇÊûúÂèòÈáèÂêçÁß∞Ë∑üÂ∑≤ÁªèÂ£∞ÊòéÁöÑÂΩ¢ÂºèÂèÇÊï∞ÊàñÂáΩÊï∞Áõ∏ÂêåÔºåÂàôÂèòÈáèÂ£∞Êòé‰∏ç‰ºöÂπ≤Êâ∞Â∑≤ÁªèÂ≠òÂú®ÁöÑËøôÁ±ªÂ±ûÊÄß„ÄÇ ÂèÇËÄÉ JavaScript Ê∑±ÂÖ•‰πãÂèòÈáèÂØπË±°]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScriptÊâßË°å‰∏ä‰∏ãÊñáÊ†à]]></title>
    <url>%2Fblog%2F2022%2F07%2F12%2FJavaScript%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88%2F</url>
    <content type="text"><![CDATA[È°∫Â∫èÊâßË°åÔºü‰ª£Á†ÅÁ§∫‰æã 1Ôºö 123456789101112131415var foo = function () &#123; console.log('foo1');&#125;foo(); // foo1var foo = function () &#123; console.log('foo2');&#125;foo(); // foo2 ‰ª£Á†ÅÁ§∫‰æã 2Ôºö 123456789101112131415function foo() &#123; console.log('foo1');&#125;foo(); // foo2function foo() &#123; console.log('foo2');&#125;foo(); // foo2 Á¨¨‰∏Ä‰∏™‰æãÂ≠ê‰∏≠Áî®Âà∞‰∫ÜÂèòÈáèÊèêÂçáÔºåÁ¨¨‰∫å‰∏™‰æãÂ≠ê‰∏≠Áî®Âà∞‰∫ÜÂáΩÊï∞ÊèêÂçá„ÄÇJavaScript ÂºïÊìéÂπ∂Èùû‰∏ÄË°å‰∏ÄË°åÂú∞ÂàÜÊûêÂíåÊâßË°åÁ®ãÂ∫èÔºåËÄåÊòØ‰∏ÄÊÆµ‰∏ÄÊÆµÂú∞ÂàÜÊûêÊâßË°å„ÄÇÂΩìÊâßË°å‰∏ÄÊÆµ‰ª£Á†ÅÁöÑÊó∂ÂÄôÔºå‰ºöËøõË°å‰∏Ä‰∏™‚ÄúÂáÜÂ§áÂ∑•‰Ωú‚Äù„ÄÇÂà∞Â∫ï JavaScript ÂºïÊìéÈÅáÂà∞‰∏ÄÊÆµÊÄéÊ†∑ÁöÑ‰ª£Á†ÅÊó∂Êâç‰ºöÂÅö‚ÄúÂáÜÂ§áÂ∑•‰Ωú‚ÄùÂë¢Ôºü ÂèØÊâßË°å‰ª£Á†ÅJavaScript ÊÄªÂÖ±Êúâ‰∏âÁßçÂèØÊâßË°åÁöÑ‰ª£Á†ÅÔºö ÂÖ®Â±Ä‰ª£Á†Å ÂáΩÊï∞‰ª£Á†Å eval ‰ª£Á†Å ÊâßË°å‰∏ä‰∏ãÊñáÊ†àJavaScript ÂºïÊìéÂàõÂª∫‰∫ÜÊâßË°å‰∏ä‰∏ãÊñáÊ†àÔºàExecution context stackÔºåECSÔºâÊù•ÁÆ°ÁêÜÊâßË°å‰∏ä‰∏ãÊñá 123456789var scope = "global scope";function checkscope()&#123; var scope = "local scope"; function f()&#123; return scope; &#125; return f();&#125;checkscope(); 123456789var scope = "global scope";function checkscope()&#123; var scope = "local scope"; function f()&#123; return scope; &#125; return f;&#125;checkscope()(); ‰∏äÈù¢Ëøô‰∏™‰æãÂ≠ê‰∏≠ÔºåÊâßË°å‰∏ä‰∏ãÊñáÊ†àÁöÑÂèòÂåñÂ∞±‰∏ç‰∏ÄÊ†∑ ËÆ©Êàë‰ª¨Ê®°ÊãüÁ¨¨‰∏ÄÊÆµ‰ª£Á†ÅÔºö 1234ECStack.push(&lt;checkscope&gt; functionContext);ECStack.push(&lt;f&gt; functionContext);ECStack.pop();ECStack.pop(); ËÆ©Êàë‰ª¨Ê®°ÊãüÁ¨¨‰∫åÊÆµ‰ª£Á†ÅÔºö 1234ECStack.push(&lt;checkscope&gt; functionContext);ECStack.pop();ECStack.push(&lt;f&gt; functionContext);ECStack.pop(); ÊâßË°å‰∏ä‰∏ãÊñá‰∏≠ÂåÖÂê´Âì™‰∫õ‰∏úË•øÂØπ‰∫éÊØè‰∏™ÊâßË°å‰∏ä‰∏ãÊñáÔºåÈÉΩÊúâ‰∏â‰∏™ÈáçË¶ÅÂ±ûÊÄßÔºö ÂèòÈáèÂØπË±°(Variable objectÔºåVO) ‰ΩúÁî®ÂüüÈìæ(Scope chain) this ÂèÇËÄÉ JavaScript Ê∑±ÂÖ•‰πãÊâßË°å‰∏ä‰∏ãÊñáÊ†à]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScriptËØçÊ≥ï‰ΩúÁî®Âüü]]></title>
    <url>%2Fblog%2F2022%2F07%2F11%2FJavaScript%E8%AF%8D%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F%2F</url>
    <content type="text"><![CDATA[Êúâ‰∏§Áßç‰ΩúÁî®ÂüüÔºö Âä®ÊÄÅ‰ΩúÁî®Âüü ÈùôÊÄÅ‰ΩúÁî®ÂüüÔºà‰πüÂè´ÔºöËØçÊ≥ï‰ΩúÁî®ÂüüÔºålexical scopingÔºâ JavaScript ÈááÁî®ÁöÑÊòØËØçÊ≥ï‰ΩúÁî®Âüü ‰ªÄ‰πàÊòØ‰ΩúÁî®Âüü‰ΩúÁî®ÂüüÔºåÈ°æÂêçÊÄù‰πâÊòØÁî®Êù•Ë°®Á§∫‰∏Ä‰∏™ÂèòÈáè‰ΩúÁî®ÁöÑËåÉÂõ¥„ÄÇ Ëøô‰∏§Áßç‰ΩúÁî®ÂüüÁöÑÂå∫Âà´ÊòØ‰ªÄ‰πàËÆ©Êàë‰ª¨Áúã‰∏Ä‰∏™‰æãÂ≠êÂ∞±ËÉΩÁü•ÈÅìÔºö 1234567891011121314var value = 1;function foo() &#123; console.log(value);&#125;function bar() &#123; var value = 2; foo();&#125;bar();// ÁªìÊûúÊòØ ??? Â¶ÇÊûúÊòØÈùôÊÄÅ‰ΩúÁî®ÂüüÔºåÈÇ£‰πàÁ≠îÊ°àÊòØ 1ÔºåÂõ†‰∏∫ value Ëøô‰∏™ÂèòÈáèÂú®ÂáΩÊï∞ÂÆö‰πâÁöÑÊó∂ÂÄôÂ∞±Â∑≤ÁªèÂÜ≥ÂÆö‰∫Ü„ÄÇÂ¶ÇÊûúÊòØÂä®ÊÄÅ‰ΩúÁî®ÂüüÔºåÈÇ£‰πàÁ≠îÊ°àÊòØ 2Ôºåvalue Ëøô‰∏™ÂèòÈáèË¶ÅÁ≠âÂáΩÊï∞ÊâßË°åÁöÑÊó∂ÂÄôÊâçÂÆö‰∏ãÊù•„ÄÇ ÈùôÊÄÅ‰ΩúÁî®ÂüüÊâßË°åËøáÁ®ãÊâßË°å foo ÂáΩÊï∞ÔºåÂÖà‰ªé foo ÂáΩÊï∞ÂÜÖÈÉ®Êü•ÊâæÊòØÂê¶ÊúâÂ±ÄÈÉ®ÂèòÈáè valueÔºåÂ¶ÇÊûúÊ≤°ÊúâÔºåÂ∞±Ê†πÊçÆ‰π¶ÂÜôÁöÑ‰ΩçÁΩÆÔºåÊü•Êâæ‰∏äÈù¢‰∏ÄÂ±ÇÁöÑ‰ª£Á†ÅÔºå‰πüÂ∞±ÊòØ value Á≠â‰∫é 1ÔºåÊâÄ‰ª•ÁªìÊûú‰ºöÊâìÂç∞ 1„ÄÇËÄå‰∏îÂ¶ÇÊûúÂéªÊéâvar value = 1;Ëøô‰∏ÄÂè•Ôºå‰ºöÊä•ÂèòÈáèÊú™ÂÆö‰πâÈîôËØØ„ÄÇ Âä®ÊÄÅ‰ΩúÁî®ÂüüÊâßË°åËøáÁ®ãÊâßË°å foo ÂáΩÊï∞Ôºå‰æùÁÑ∂ÊòØ‰ªé foo ÂáΩÊï∞ÂÜÖÈÉ®Êü•ÊâæÊòØÂê¶ÊúâÂ±ÄÈÉ®ÂèòÈáè value„ÄÇÂ¶ÇÊûúÊ≤°ÊúâÔºåÂ∞±‰ªéË∞ÉÁî®ÂáΩÊï∞ÁöÑ‰ΩúÁî®ÂüüÔºå‰πüÂ∞±ÊòØ bar ÂáΩÊï∞ÂÜÖÈÉ®Êü•Êâæ value ÂèòÈáèÔºåÊâÄ‰ª•ÁªìÊûú‰ºöÊâìÂç∞ 2„ÄÇ ÂâçÈù¢Êàë‰ª¨Â∑≤ÁªèËØ¥‰∫ÜÔºåJavaScript ÈááÁî®ÁöÑÊòØÈùôÊÄÅ‰ΩúÁî®ÂüüÔºåÊâÄ‰ª•Ëøô‰∏™‰æãÂ≠êÁöÑÁªìÊûúÊòØ 1„ÄÇ bash ËÑöÊú¨ÈááÁî®ÁöÑÊòØÂä®ÊÄÅ‰ΩúÁî®Âüü: 123456789value=1function foo () &#123; echo $value;&#125;function bar () &#123; local value=2; foo;&#125;bar Ëøô‰∏™‰æãÂ≠ê‰ºöÊâìÂç∞ 2 ÊÄùËÄÉÈ¢ò123456789var scope = "global scope";function checkscope()&#123; var scope = "local scope"; function f()&#123; return scope; &#125; return f();&#125;checkscope(); 123456789var scope = "global scope";function checkscope()&#123; var scope = "local scope"; function f()&#123; return scope; &#125; return f;&#125;checkscope()(); Ëøô‰∏§‰∏™‰æãÂ≠ê‰∏≠ÔºåËôΩÁÑ∂ÂáΩÊï∞ÊâßË°åÁöÑÁéØÂ¢É‰∏ç‰∏ÄÊ†∑Ôºå‰ΩÜÊâìÂç∞ÁöÑÁªìÊûúÊòØ‰∏ÄÊ†∑ÁöÑÔºåÂõ†‰∏∫ËøòÊòØÈÇ£‰∏™ÂéüÂõ†ÔºåJavaScript ÁöÑ‰ΩúÁî®ÂüüÊòØÈùôÊÄÅ‰ΩúÁî®Âüü ÂºïÁî®ÁäÄÁâõ‰π¶‰∏≠ÁöÑ‰∏ÄÊÆµËØù Like most modern programming languages, JavaScript uses lexical scoping. This means that functions are executed using the variable scope that was in effect when they were defined, not the variable scope that is in effect when they are invoked. In order to implement lexical scoping, the internal state of a JavaScript function object must in- clude not only the code of the function but also a reference to the current scope chain. (Before reading the rest of this section, you may want to review the material on variable scope and the scope chain in ¬ß3.10 and ¬ß3.10.3.) This combination of a function object and a scope (a set of variable bindings) in which the function‚Äôs variables are resolved is called a closure in the computer science literature. (This is an old term that refers to the fact that the function‚Äôs variables have bindings in the scope chain and that therefore the function is ‚Äúclosed over‚Äù its variables.) Technically, all JavaScript functions are closures: they are objects, and they have a scope chain associated with them. Most functions are invoked using the same scope chain that was in effect when the function was defined, and it doesn‚Äôt really matter that there is a closure involved. Closures become interesting when they are invoked under a different scope chain than the one that was in effect when they were defined. This happens most commonly when a nested function object is returned from the function within which it was defined. There are a number of powerful programming techniques that involve this kind of nested function closures, and their use has become relatively common in JavaScript programming. Closures may seem confusing when you first en- counter them, but it is important that you understand them well enough to use them comfortably. JavaScript, The Definite Guide JavaScript ÊòØÂ¶Ç‰ΩïÂÆûÁé∞ËøôÁßçËØçÊ≥ï‰ΩúÁî®ÂüüÁöÑÊÉ≥Ë¶Å‰∫ÜËß£ËøôÁßçËØçÊ≥ï‰ΩúÁî®ÂüüÊòØÂ¶Ç‰ΩïÂÆûÁé∞ÁöÑÔºåÂ∞±Ë¶Å‰∫ÜËß£ JavaScript ÁöÑÊâßË°å‰∏ä‰∏ãÊñáÊ†àÔºåÂÖ∑‰ΩìËØ∑ÁúãËøôÁØáÊñáÁ´†ÔºöJavaScript ÊâßË°å‰∏ä‰∏ãÊñáÊ†à ÂèÇËÄÉ JavaScript Ê∑±ÂÖ•‰πãËØçÊ≥ï‰ΩúÁî®ÂüüÂíåÂä®ÊÄÅ‰ΩúÁî®Âüü]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScriptÂéüÂûãÂíåÂéüÂûãÈìæ]]></title>
    <url>%2Fblog%2F2022%2F07%2F10%2FJavaScript%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE%2F</url>
    <content type="text"><![CDATA[ÂéüÂûãÈìæÊòØÂπ≤‰ªÄ‰πàÁî®ÁöÑJavaScript ÈááÁî®‰∫ÜÂéüÂûãÂíåÂéüÂûãÈìæÊù•ÂÆûÁé∞Á±ªÂíåÁªßÊâøÔºàÂ∞±ÊòØÊü•ÊâæÂ±ûÊÄßÁî®ÁöÑÔºâ„ÄÇ ÂΩì JavaScript Êü•Êâæ‰∏Ä‰∏™ÂØπË±°‰∏äÁöÑÂ±ûÊÄßÁöÑÊó∂ÂÄôÔºåÂú®ËØ•ÂØπË±°‰∏äÊâæ‰∏çÂà∞Â∞±‰ºöÂéªÂÆÉÁöÑÂéüÂûãÈìæ‰∏äÊü•ÊâæÔºàÈÄöËøá__proto__‰∏ÄÂ±Ç‰∏ÄÂ±ÇÂæÄ‰∏äÊâæÔºâ„ÄÇÊØîÂ¶ÇÔºö 1234function Foo() &#123;&#125;var foo = new Foo();Foo.prototype.a = 1;console.log(foo.a); // 1 ÂéüÂûãÂíåÂéüÂûãÈìæ‰∏ªË¶ÅÁî±‰∏â‰∏™ÊåáÈíàÂÆûÁé∞Ôºö prototype: ÊûÑÈÄ†ÂáΩÊï∞ÁöÑprototypeÂ±ûÊÄßÊåáÂêëÂéüÂûãÂØπË±°ÔºàËøô‰∏™ÂéüÂûãÂØπË±°‰∏ÄËà¨Â∞±Áî®ÊûÑÈÄ†ÂáΩÊï∞.prototypeË°®Á§∫Ôºâ __proto__: ÂÆû‰æãÂØπË±°ÁöÑ__proto__Â±ûÊÄßÊåáÂêëÂéüÂûãÂØπË±° constructor: ÂéüÂûãÂØπË±°ÁöÑconstructorÂ±ûÊÄßÊåáÂêëÊûÑÈÄ†ÂáΩÊï∞ ÊâÄÊúâÂØπË±°ÈÉΩÂü∫‰∫éObjectÔºåÊòØÂõ†‰∏∫ÊâÄÊúâÂéüÂûãÂØπË±°ÁöÑ__proto__ÊúÄÁªàÈÉΩÊåáÂêëObject.prototypeÔºåËÄåObject.prototypeÁöÑ__proto__‰∏∫ null JavaScript Âè™Ë¶ÅÂâçÈù¢Â∏¶ new Â∞±ÊòØÊûÑÈÄ†ÂáΩÊï∞ÔºåÁÆ≠Â§¥ÂáΩÊï∞ÂíåÂºÇÊ≠•ÂáΩÊï∞‰∏çÂèØ‰ª•ÂÅöÊûÑÈÄ†ÂáΩÊï∞ÔºåÂõ†‰∏∫ÁÆ≠Â§¥ÂáΩÊï∞Ê≤°Êúâ thisÔºåËÄåÂºÇÊ≠•ÂáΩÊï∞ËøîÂõûÁöÑÊòØ Promise ÂØπË±° ÂΩìÊàë‰ª¨Âú®ÂÆû‰æãÂØπË±°‰∏äÊü•Êâæ‰∏Ä‰∏™Â±ûÊÄßÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûú‰∏çÂ≠òÂú®ÔºåÂàô‰ºöÈÄíÂΩíÁöÑÂéªÂéüÂûãÈìæ‰∏äÊâæ„ÄÇ ÊâÄÊúâÂØπË±°ÈÉΩÊúâ__proto__Â±ûÊÄßÔºå‰ΩÜÂè™ÊúâÂáΩÊï∞ÂØπË±°ÊâçÊúâprototypeÂ±ûÊÄßÔºåÂè™ÊúâÂéüÂûãÂØπË±°ÊâçÊúâconstructorÂ±ûÊÄßÔºà‰∏•Ê†ºÊÑè‰πâ‰∏äÔºâ ÂÆû‰æãÂØπË±°Ê≤°ÊúâconstructorÂ±ûÊÄßÔºåËØ•Â±ûÊÄßÁªßÊâøËá™ÂéüÂûãÂØπË±°„ÄÇÂàÜÂà´ÂØπÂÆû‰æãÂØπË±°ÂíåÂéüÂûãÂØπË±°‰ΩøÁî®hasOwnPropertyÈ™åËØÅconstructorÂ±ûÊÄßÂç≥ÂèØËØÅÊòé 123var a = new Object();console.log(a.hasOwnProperty('constructor')); // falseconsole.log(a.__proto__.hasOwnProperty('constructor')); // true ÂèÇËÄÉËµÑÊñô JavaScript Ê∑±ÂÖ•‰πã‰ªéÂéüÂûãÂà∞ÂéüÂûãÈìæ Javascript Object Hierarchy ‰∏ÄÊñáÁúãÊáÇ JS ÁöÑÁªßÊâø Èù¢ËØïÂÆòÈóÆÔºöËÉΩÂê¶Ê®°ÊãüÂÆûÁé∞ JS ÁöÑ new Êìç‰ΩúÁ¨¶ ÂÆûË∑µÊúÄÂêé‰∏çÂæó‰∏çËØ¥‰∏ÄÂè•ÔºåÂú®Êàë‰ª¨ÂÖ¨Âè∏ÁöÑÈ°πÁõÆÂºÄÂèë‰∏≠ÔºåÊ†πÊú¨Áî®‰∏ç‰∏ä‰ª•‰∏äÁü•ËØÜÔºåÊàë‰ª¨ÈÉΩÊòØÁî® typescript ÂíåÁ±ªÁºñÁ®ã„ÄÇ‰ΩÜ‰∫ÜËß£Â∫ïÂ±ÇÂéüÁêÜËøòÊòØÊúâÂä©‰∫éËß£ÂÜ≥‰∏Ä‰∫õÁñëÈöæÊùÇÁóáÁöÑ]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TCPÂíåUDPÁöÑÂå∫Âà´]]></title>
    <url>%2Fblog%2F2022%2F06%2F20%2FTCP%E5%92%8CUDP%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[Â•Ω‰πÖÊ≤°ÂõûÈ°æËøô‰∏™Áü•ËØÜÁÇπ‰∫ÜÔºåÊàëÁé∞Âú®Âè™ËÆ∞Âæó TCP ÊòØÊúâÈìæÊé•ÁöÑÔºåUDP ÊòØÊó†ËøûÊé•ÁöÑÔºõTCP ÊòØÂèØÈù†ÁöÑÔºåUDP ÊòØ‰∏çÂèØÈù†ÁöÑ„ÄÇÊäÄÊúØÁªÜËäÇÂ∑≤ÁªèÂÖ®ÁÑ∂ÂøòÂÖâ‰∫ÜÔºå‰ªäÂ§©Â∞±Êù•ÂõûÈ°æ‰∏Ä‰∏ã„ÄÇ ÂÖàËØ¥Âá†‰∏™Âá†ÁÇπÁªìËÆ∫ÔºåÁÑ∂ÂêéÂÜçËØ¥ËØ¥ÁªÜËäÇÔºö TCP ÊòØÊúâÈìæÊé•ÁöÑÔºåUDP ÊòØÊó†ËøûÊé•ÁöÑ TCP ÂèØÈù†ÔºàÊó†Â∑ÆÈîôÔºå‰∏ç‰∏¢Â§±‰∏çÈáçÂ§çÔºåÊåâÂ∫èÂà∞ËææÔºâÔºåUDP ‰∏çÂèØÈù† TCP Èù¢ÂêëÂ≠óËäÇÊµÅÔºåUDP Èù¢ÂêëÊä•Êñá TCP ÊòØ‰∏ÄÂØπ‰∏ÄÂÖ®ÂèåÂ∑•ÔºåUDP ÊòØ n ÂØπ n TCP ÁöÑÈ¶ñÈÉ®ËæÉÂ§ß‰∏∫ 20 Â≠óËäÇÔºåUDP È¶ñÈÉ®Âè™Êúâ 8 Â≠óËäÇ TCP ‰∏∫‰ªÄ‰πàË¶Å‰∏âÊ¨°Êè°ÊâãÂõõÊ¨°Êå•Êâã‰∏âÊ¨°Êè°ÊâãÊòØÂõ†‰∏∫ÂèåÊñπÈÉΩË¶ÅÁ°ÆËÆ§ÂØπÊñπÁöÑÂèëÈÄÅÂíåÊé•Êî∂‰∏§ÁßçËÉΩÂäõÔºö Á¨¨‰∏ÄÊ¨°ÂÆ¢Êà∑Á´ØÂèëÈÄÅ SYN Êä•ÊñáÊÆµÔºåÊúçÂä°Âô®Êé•Êî∂Âà∞‰∫ÜÔºå‰ªéÊúçÂä°Âô®ÁöÑËßÜËßíÁúãÔºåÂÆ¢Êà∑Á´ØÂÖ∑Â§á‰∫ÜÂèëÈÄÅËÉΩÂäõ„ÄÇ Á¨¨‰∫åÊ¨°ÊúçÂä°Âô®Á´ØÂèëÈÄÅ ACK+SYN Êä•ÊñáÊÆµÔºåÂÆ¢Êà∑Á´ØÊé•Êî∂Âà∞‰∫ÜÔºå‰ªéÂÆ¢Êà∑Á´ØÁöÑËßíÂ∫¶ÁúãÔºåÊúçÂä°Âô®ÂÖ∑Â§á‰∫ÜÊé•Êî∂ÂíåÂèëÈÄÅ‰∏§ÁßçËÉΩÂäõ„ÄÇ Á¨¨‰∏âÊ¨°ÂÆ¢Êà∑Á´ØÊé•Êî∂Âà∞‰∫ÜÊúçÂä°Âô®ÁöÑÊä•ÊñáÔºåÂÜçÂèë‰∏Ä‰∏™ ACK Êä•ÊñáÁªôÊúçÂä°Âô®ÔºåÊúçÂä°Âô®Êé•Êî∂Âà∞Ëøô‰∏™ ACK Êä•ÊñáÂ∞±ËÉΩÁ°ÆËÆ§ÂÆ¢Êà∑Á´ØÁöÑÊé•ÂèóËÉΩÂäõÊ≠£Â∏∏„ÄÇ ÊâÄ‰ª•ÊúÄÂ∞ëÈúÄË¶Å‰∏âÊ¨°ÔºåÊâçËÉΩÁ°ÆËÆ§ÂèåÊñπÁöÑÊî∂ÂèëËÉΩÂäõÈÉΩÊòØÊ≠£Â∏∏ÁöÑ„ÄÇ ÂõõÊ¨°Êå•ÊâãÊòØÂõ†‰∏∫ TCP ÊòØÂèåÂ∑•‰ø°ÈÅìÔºåÂÖ≥Èó≠‰∫Ü A Âà∞ B ÁöÑÂèëÈÄÅÊ∏†ÈÅìÔºåB Âà∞ A ÁöÑËøòÊ≤°ÂÖ≥Èó≠ÔºåÊâÄ‰ª•ÈúÄË¶ÅÂõõÊ¨°Ôºö ÂÆ¢Êà∑Á´ØÂèëÈÄÅ FIN Êä•ÊñáÊÆµÁªôÊúçÂä°Âô®Á´ØÔºåÊúçÂä°Âô®Êî∂Âà∞ÂêéÂèëÈÄÅ ACK ÁªôÂÆ¢Êà∑Á´ØÔºåÂÆ¢Êà∑Á´ØÊî∂Âà∞ ACK ÂêéÂ∞±‰ºö‰∏çÂÜçÂèëÊ∂àÊÅØ„ÄÇ‰πüÂ∞±ÊòØËØ¥ÂÆ¢Êà∑Á´ØÂà∞ÊúçÂä°Âô®Á´ØËøôÊù°‰ø°ÈÅìÂÖ≥Èó≠‰∫Ü„ÄÇ ÊúçÂä°Âô®ÂèëÈÄÅ FIN Êä•ÊñáÊÆµÁªôÂÆ¢Êà∑Á´ØÔºåÂÆ¢Êà∑Á´ØÊî∂Âà∞ÂêéÂèëÈÄÅ ACK ÁªôÊúçÂä°Âô®ÔºåÊúçÂä°Âô®Êî∂Âà∞ ACK ÂêéÂ∞±‰∏çÂÜçÂèëÊ∂àÊÅØÁªôÂÆ¢Êà∑Á´Ø‰∫Ü„ÄÇÊúçÂä°Âô®ÂèëÈÄÅÁªôÂÆ¢Êà∑Á´ØËøôÊù°‰ø°ÈÅìÂ∞±ÂÖ≥Èó≠‰∫Ü„ÄÇ ËøôÈáåÁöÑÈóÆÈ¢òÂ∞±ÊòØ‰∏∫‰ªÄ‰πàÊúçÂä°Âô®‰∏çÊää ACK Âíå FIN ÂêàÂú®‰∏ÄËµ∑ÂèëÔºåÂ∞±ÂÉè‰∏âÊ¨°Êè°ÊâãÊó∂ÂÄôÈÇ£Ê†∑ ACK+SYN ‰∏ÄËµ∑Âèë„ÄÇÂõ†‰∏∫ÊúçÂä°Âô® ‚Üí ÂÆ¢Êà∑Á´ØÔºåÂÆ¢Êà∑Á´Ø ‚Üí ÊúçÂä°Âô®Ëøô‰∏§Êù°‰ø°ÈÅìÊòØ‰∫íÁõ∏Áã¨Á´ãÁöÑÔºåÂú®ÂÖ≥Èó≠ÂÖ∂‰∏≠‰∏ÄÊù°ÁöÑÊó∂ÂÄôÔºåÂè¶‰∏ÄÊù°ÂèØËÉΩËøòÂú®Â∑•‰ΩúÔºå‰∏çÂ∫îËØ•‰∏ÄËµ∑ÂÖ≥Èó≠ÔºåÈúÄË¶ÅËÆæËÆ°ÊàêÁã¨Á´ãÂÖ≥Èó≠„ÄÇ Èù¢ÂêëÊä•ÊñáÂíåÈù¢ÂêëÂ≠óËäÇÊµÅÁöÑÂå∫Âà´Èù¢ÂêëÊä•ÊñáÁöÑ‰º†ËæìÊñπÂºèÊòØÂ∫îÁî®Â±Ç‰∫§Áªô UDP Â§öÈïøÁöÑÊä•ÊñáÔºåUDP Â∞±ÁÖßÊ†∑ÂèëÈÄÅÔºåÂç≥‰∏ÄÊ¨°ÂèëÈÄÅ‰∏Ä‰∏™Êä•Êñá„ÄÇÂõ†Ê≠§ÔºåÂ∫îÁî®Á®ãÂ∫èÂøÖÈ°ªÈÄâÊã©ÂêàÈÄÇÂ§ßÂ∞èÁöÑÊä•Êñá„ÄÇËã•Êä•ÊñáÂ§™ÈïøÔºåÂàô IP Â±ÇÈúÄË¶ÅÂàÜÁâáÔºåÈôç‰ΩéÊïàÁéá„ÄÇUDP ÂØπÂ∫îÁî®Â±Ç‰∫§‰∏ãÊù•ÁöÑÊä•ÊñáÔºåÊó¢‰∏çÂêàÂπ∂Ôºå‰πü‰∏çÊãÜÂàÜÔºåËÄåÊòØ‰øùÁïôËøô‰∫õÊä•ÊñáÁöÑËæπÁïå„ÄÇ Èù¢ÂêëÂ≠óËäÇÊµÅÁöÑËØùÔºåËôΩÁÑ∂Â∫îÁî®Á®ãÂ∫èÂíå TCP ÁöÑ‰∫§‰∫íÊòØ‰∏ÄÊ¨°‰∏Ä‰∏™Êï∞ÊçÆÂùóÔºàÂ§ßÂ∞è‰∏çÁ≠âÔºâÔºå‰ΩÜ TCP ÊääÂ∫îÁî®Á®ãÂ∫èÁúãÊàêÊòØ‰∏ÄËøû‰∏≤ÁöÑÊó†ÁªìÊûÑÁöÑÂ≠óËäÇÊµÅ„ÄÇTCP Êúâ‰∏Ä‰∏™ÁºìÂÜ≤ÔºåÂΩìÂ∫îÁî®Á®ãÂ∫è‰º†ÈÄÅÁöÑÊï∞ÊçÆÂùóÂ§™ÈïøÔºåTCP Â∞±ÂèØ‰ª•ÊääÂÆÉÂàíÂàÜÁü≠‰∏Ä‰∫õÂÜç‰º†ÈÄÅ„ÄÇÂ¶ÇÊûúÂ∫îÁî®Á®ãÂ∫è‰∏ÄÊ¨°Âè™ÂèëÈÄÅ‰∏Ä‰∏™Â≠óËäÇÔºåTCP ‰πüÂèØ‰ª•Á≠âÂæÖÁßØÁ¥ØÊúâË∂≥Â§üÂ§öÁöÑÂ≠óËäÇÂêéÂÜçÊûÑÊàêÊä•ÊñáÊÆµÂèëÈÄÅÂá∫Âéª„ÄÇ]]></content>
      <tags>
        <tag>ËÆ°ÁÆóÊú∫ÁΩëÁªú</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊúçÂä°Âô®ÈáçË£ÖÁ≥ªÁªü]]></title>
    <url>%2Fblog%2F2022%2F06%2F11%2F%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©ÊàëÁöÑ wordpress Êï∞ÊçÆÂ∫ìË¢´ÊîªÂáª‰∫ÜÔºåÁõÆÂâçËøò‰∏çÁü•ÈÅìÈªëÂÆ¢Áî®‰∫Ü‰ªÄ‰πàÊâãÊÆµÔºåÊâÄ‰ª•ÊâìÁÆóÁªôÊúçÂä°Âô®ÈáçË£ÖÁ≥ªÁªü„ÄÇÊàëÁî®ÁöÑÊòØÊê¨Áì¶Â∑•ÁöÑÊúçÂä°Âô®ÔºåÊâìÂºÄÁÆ°ÁêÜÁïåÈù¢ÔºåÊàëÈÄâÊã©ÁöÑÊòØ centos-7-x86_64-bbr BBRÔºàBottleneck Bandwidth and RTTÔºâÊòØ‰∏ÄÁßçÊñ∞ÁöÑÊã•Â°ûÊéßÂà∂ÁÆóÊ≥ïÔºåÁî± Google Ë¥°ÁåÆÁªô Linux ÂÜÖÊ†∏ TCP Â†ÜÊ†à„ÄÇÊúâ‰∫Ü BBRÔºåLinux ÊúçÂä°Âô®ÂèØ‰ª•ÊòæÁùÄÊèêÈ´òÂêûÂêêÈáèÂπ∂ÂáèÂ∞ëËøûÊé•Âª∂Ëøü„ÄÇÊ≠§Â§ñÔºåÈÉ®ÁΩ≤ BBR ÂæàÂÆπÊòìÔºåÂõ†‰∏∫Ê≠§ÁÆóÊ≥ïÂè™ÈúÄË¶ÅÂú®ÂèëÈÄÅÊñπÊõ¥Êñ∞ÔºåËÄåÊó†ÈúÄÂú®ÁΩëÁªúÊàñÊé•Êî∂ÊñπÊõ¥Êñ∞„ÄÇ Êê≠Âª∫ ShadowsocksÁÑ∂ÂêéÈ¶ñÂÖàÊÉ≥Âà∞ÁöÑÊòØË¶ÅÂÆâË£Ö shadowsocksÔºåÂõ†‰∏∫ÊàëËøô‰∏™ÊúçÂä°Âô®Âü∫Êú¨‰∏äÂ∞±ÊòØÁî®Êù•Âπ≤Ëøô‰∏™‰∫ãÁöÑ„ÄÇ Êàë‰∏çÊÉ≥‰ΩøÁî®ÁΩë‰∏äÈÇ£Áßç‰∏ÄÈîÆÂÆâË£ÖËÑöÊú¨ÁöÑÊñπÂºèÊù•ÂºÑËøô‰∏™ÔºåÂõ†‰∏∫ÊÄï‰∏çÂÆâÂÖ®ÔºàÁúüÁöÑÊÄï‰∫ÜÊÄï‰∫ÜÔºâ„ÄÇÊâÄ‰ª•ÊúÄÂ•ΩË¶ÅËá™Â∑±ÊêûÊáÇÊØè‰∏ÄÊ≠•ÈÉΩÂÅö‰∫Ü‰ªÄ‰πà„ÄÇ ‰∏ªË¶ÅÂèÇËÄÉËøôÁØáÊñáÁ´†Ôºöhttps://gist.github.com/3013216027/469e7b988edde7e5f806f55a993b9efa ÂèëÁé∞ÂÆâË£Ö shadowsocks ‰πãÂâçÂÖàË¶ÅÂÆâË£Ö pip ÂÆâË£Ö pip ÂàôË¶ÅÂÆâË£Ö python3 ÂÆâË£Ö python3ÊàëËØï‰∫Ü‰∏Ä‰∏ãyum install python3Â±ÖÁÑ∂ÁúüÁöÑËÉΩÂÆâË£ÖÔºåÁªà‰∫é‰∏çÁî®ÂÉè‰ª•ÂâçÈÇ£Ê†∑‰ªé python ÂÆòÁΩë‰∏ãËΩΩÊ∫êÁ†ÅÔºåËá™Â∑±ÁºñËØëÔºåËá™Â∑±ÈÖçÁéØÂ¢ÉÂèòÈáè‰∫Ü„ÄÇ ÂÆâË£ÖÂÆåÂêéÊµã‰∏Ä‰∏ãÁâàÊú¨python3 --versionÔºöPython 3.6.8ÔºåÊµã‰∏Ä‰∏ãÂÆâË£Ö‰ΩçÁΩÆÔºöwhich python3Ôºö/usr/bin/python3 ÂÆâË£Ö shadowsocksÊé•‰∏ãÊù•Â∞±ÊòØÂÆâË£Ö shadowsocks ‰∫ÜÔºöpython3 -m pip install shadowsocks ÂÆâË£ÖÂÆåÂêéÊµã‰∏Ä‰∏ã ssserver ÁúãËÉΩ‰∏çËÉΩÁî®ÔºåÁõ¥Êé•ËæìÂÖ•Ëøô‰∏™ÂëΩ‰ª§ÁúãÁúãÊïàÊûúÔºåËÉΩÁî®ÔºåÂÆö‰Ωç‰∏Ä‰∏ã‰ΩçÁΩÆÔºö which ssserverÔºö/usr/local/bin/ssserver„ÄÇ Âç∏ËΩΩ shadowsocks ÂêéÂ∞±‰∏çËÉΩÁî®‰∫ÜÔºåÊâÄ‰ª•ËÉΩÁ°ÆÂÆö ssserver ÊòØË∑ü shadowsocks ÊúâÂÖ≥ÁöÑ„ÄÇ ÈÖçÁΩÆ shadowsocks1234567891011&#123; &quot;server&quot;: &quot;0.0.0.0&quot;, &quot;local_port&quot;: 1080, &quot;port_password&quot;: &#123; &quot;10085&quot;: &quot;gagosdfger&quot;, &quot;10086&quot;: &quot;gagosdfger&quot;, &quot;10010&quot;: &quot;gagosdfger&quot; &#125;, &quot;method&quot;: &quot;aes-256-cfb&quot;, &quot;timeout&quot;: 600&#125; ÂèëÁé∞Âä†ÂØÜÊñπÊ≥ï‰∏çÊîØÊåÅaes-256-gcmÔºåÊúâ‰ªÄ‰πàÂäûÊ≥ïÁªôÂÆÉÂä†‰∏ÄÁßçÂä†ÂØÜÊñπÂºèÂë¢]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊµèËßàÂô®‰∏äÁöÑÂá†ÁßçxyÂùêÊ†á]]></title>
    <url>%2Fblog%2F2022%2F06%2F09%2F%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E7%9A%84%E5%87%A0%E7%A7%8Dxy%E5%9D%90%E6%A0%87%2F</url>
    <content type="text"><![CDATA[È¶ñÂÖàÂàÜ‰∏∫‰∏§Â§ßÁ±ªÔºö ‰∫ã‰ª∂ÂùêÊ†á dom ÂùêÊ†á ‰∫ã‰ª∂ÂùêÊ†áÊúâÂ¶Ç‰∏ãÂá†ÁßçÔºö screenX, screenY clientX, clientY pageX, pageY offsetX, offsetY ‰∏ãÈù¢ËøôÂº†ÂõæÂèØ‰ª•ÂæàÂ•ΩÁöÑÂØπÊØîÂ±ïÁ§∫ËøôÂá†Áßç xy ÂùêÊ†áÔºö ÈÇ£Â¶ÇÊûúÊòØÂú® iframe ‰∏≠ÁöÑ documentÔºåclientX Âíå screenX ËøòÊòØÁ¨¶ÂêàÁõ¥ËßâÁöÑÂÄºÂêóÔºü Á≠îÊ°àÊòØ clientX ‰∏çÊòØÔºåscreenX ÊòØ„ÄÇ clientX ÁöÑÂÄºÊòØ‰ªé document ÁöÑÂ∑¶Ëµ∑Âßã‰ΩçÁΩÆÁÆóËµ∑ÁöÑÔºå‰∏ç‰ºöËÄÉËôë iframe Ë∑ùÁ¶ªÊµèËßàÂô®Â∑¶ËæπË∑ù„ÄÇscreenX Âàô‰æùÁÑ∂ÊòØË∑ùÁ¶ªÂ±èÂπïÂ∑¶ËæπÁöÑË∑ùÁ¶ª„ÄÇ dom ÂùêÊ†á]]></content>
      <tags>
        <tag>ÂâçÁ´Ø</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁîüÊàêÂõ∫ÂÆöÈïøÂ∫¶ÁöÑÂ≠óÁ¨¶‰∏≤]]></title>
    <url>%2Fblog%2F2022%2F06%2F09%2F%E7%94%9F%E6%88%90%E5%9B%BA%E5%AE%9A%E9%95%BF%E5%BA%A6%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%2F</url>
    <content type="text"><![CDATA[ÂâçÁ´Ø‰∏ÄËà¨ÈÉΩË¶ÅÂ∫îÂØπÂêÑÁßçÂêÑÊ†∑ÁöÑÁî®Êà∑ËæìÂÖ•ÔºåÊØîÂ¶ÇÈôêÂà∂Áî®Êà∑ËæìÂÖ•ÁöÑÂ≠óÁ¨¶‰∏≤ÈïøÂ∫¶‰∏çË∂ÖËøá 255 ‰∏™Â≠óÁ¨¶„ÄÇÈÇ£‰πàÊàëËá™Â∑±ÊµãËØïÁöÑÊó∂ÂÄôÔºåÂéªÂì™ÈáåÂºÑ‰∏™ 256 ÈïøÂ∫¶ÁöÑÂ≠óÁ¨¶‰∏≤Âë¢Ôºå‰Ωú‰∏∫‰∏Ä‰∏™Á®ãÂ∫èÂëòÔºåÂΩìÁÑ∂ÊòØËá™Â∑±ÂÜô‰ª£Á†ÅÁîüÊàê„ÄÇ‰∏ãÈù¢ÊàëÂ∞±Êù•ÁΩóÂàó‰∏Ä‰∏ãÊúâÂì™‰∫õÊñπÊ≥ïÂèØ‰ª•ÂÆûÁé∞Ëøô‰∏™ÈúÄÊ±Ç„ÄÇ Â≠óÁ¨¶‰∏≤ÊñπÊ≥ïÔºöpadStart()Âíå padEnd()ES6 ÁöÑÂ≠óÁ¨¶‰∏≤Êñ∞ËØ≠Ê≥ï padStart()Âíå padEnd()ÔºåÂèØ‰ª•ÂæàÂ•ΩÁöÑÂÆåÊàêËøô‰∏™ÈúÄÊ±ÇÔºö 12''.padStart(256, 'a');''.padEnd(256, 'a'); ÂÆòÊñπÊñáÊ°£Ôºöhttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/padStart Êï∞ÁªÑÊñπÊ≥ïÔºö join()1new Array(256).fill('a').join(''); Â≠óÁ¨¶‰∏≤ÊñπÊ≥ïÔºörepeat()1'a'.repeat(256);]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊµèËßàÂô® storage ‰∫ã‰ª∂]]></title>
    <url>%2Fblog%2F2022%2F06%2F08%2F%E6%B5%8F%E8%A7%88%E5%99%A8storage%E4%BA%8B%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[ÂÆòÊñπÊñáÊ°£Ôºöhttps://developer.mozilla.org/zh-CN/docs/Web/API/Window/storage_event Âú®‰ΩøÁî® storage ‰∫ã‰ª∂ÁöÑÊó∂ÂÄôÔºåÊàëÂèëÁé∞‰∫Ü‰∏§‰∏™‰∏çÁ¨¶ÂêàÊàëÁõ¥ËßâÁöÑÁâπÊÄßÔºö Âú®Êú¨Á™óÂè£‰øÆÊîπÂ≠òÂÇ®Âå∫ÂüüÔºàlocalStorage Êàñ sessionStorageÔºâÊó∂ÔºåÊú¨Á™óÂè£ÁöÑÁõëÂê¨Êó†Êïà ÂøÖÈ°ªÂÜôÂÖ•‰∏éÊóßÂÄº‰∏çÂêåÁöÑÂÄºÔºåÊâçËÉΩÁõëÂê¨Âà∞ ÊàëËá™Â∑±ÂÜô‰ª£Á†ÅÊµãËØï‰∫Ü‰ª•‰∏ä‰∏§‰∏™ÁâπÁÇπÔºå‰ΩÜÁñëÊÉëÁöÑÊòØ‰∏≠ÊñáÊñáÊ°£ÈáåÈù¢‰ªÄ‰πàÈÉΩÊ≤°ËÆ≤ÔºåÂéüÊù•Ëã±ÊñáÊñáÊ°£ÈáåÈù¢ËØ¥‰∫ÜËøô‰∏§ÁÇπÔºåMDN ÁöÑ‰∏≠ÊñáÊñáÊ°£ÂíåËã±ÊñáÊñáÊ°£Âπ∂‰∏çÊòØÁøªËØëÂÖ≥Á≥ªÔºåÂÆåÂÖ®Â∞±ÊòØÂè¶ÂÜôÁöÑ„ÄÇÊâÄ‰ª•Â¶ÇÊûúËßâÂæóÊñáÊ°£ÊúâÈóÆÈ¢òÔºåËøòÊòØÂàáÊç¢Âà∞Ëã±ÊñáÁúãÂêß„ÄÇ Ëã±ÊñáÊñáÊ°£ÁöÑËß£ÈáäThe storage event of the Window interface fires when a storage area (localStorage) has been modified in the context of another document. Note: This won&#39;t work on the same page that is making the changes ‚Äî it is really a way for other pages on the domain using the storage to sync any changes that are made. Pages on other domains can&#39;t access the same storage objects. ÊµãËØï‰ª£Á†Å123456// ËÆæÁΩÆÁõëÂê¨window.addEventListener('storage', ()=&gt;&#123;console.log('ÁõëÂê¨storage', localStorage.getItem('abcd'))&#125;);// Êü•ÁúãdomÊúâÂì™‰∫õÁõëÂê¨‰∫ã‰ª∂getEventListeners(window);// ËÆæÁΩÆlocalStoragelocalStorage.setItem('abcd', '1111');]]></content>
      <tags>
        <tag>ÂâçÁ´Ø</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∫åÂàÜÊü•Êâæ]]></title>
    <url>%2Fblog%2F2022%2F06%2F08%2F%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%2F</url>
    <content type="text"><![CDATA[‰ªÄ‰πàÊòØ‰∫åÂàÜÊü•ÊâæÔºö‰∫åÂàÜÊü•ÊâæÊØèÊ¨°Âè™Êü•ËØ¢ midÔºàÊï∞ÁªÑÊúÄ‰∏≠Èó¥ÁöÑÊï∞ÔºâÔºåÂ¶ÇÊûúÊ≤°ÊâæÂà∞ÁõÆÊ†áÔºåÂ∞±Áº©Â∞èÂå∫Èó¥ÔºåÊ†πÊçÆ mid ÂíåÁõÆÊ†áÊï∞ÂØπÊØîÔºåÂè™ÊêúÂ∑¶ÂçäÂå∫Èó¥ÊàñÂè≥ÂçäÂå∫Èó¥„ÄÇ ‰∫åÂàÜÊü•ÊâæÁöÑÂâçÊèêÔºöÊï∞ÊçÆÊúâÂ∫è ‰∫åÂàÜÊü•ÊâæÁªìÊùüÁöÑÊù°‰ª∂ÔºöÊü•ÊâæÂå∫Èó¥‰∏∫Á©∫ÔºåÊàñËÄÖÊâæÂà∞ÂÖÉÁ¥† ‰∫åÂàÜÊü•ÊâæÁöÑÊù°‰ª∂ÂàÜÊîØÔºö nums[mid]==target nums[mid]&lt;target nums[mid]&gt;target ‰∫åÂàÜÊü•ÊâæÁöÑÊêúÁ¥¢Âå∫Èó¥Ë°®Á§∫ÂΩ¢ÂºèÔºö Â∑¶Èó≠Âè≥ÂºÄÔºàÂå∫Èó¥‰∏∫Á©∫ÁöÑÊù°‰ª∂ÊòØ left==rightÔºâ Â∑¶Èó≠Âè≥Èó≠ÔºàÂå∫Èó¥‰∏∫Á©∫ÁöÑÊù°‰ª∂ÊòØ left&gt;rightÔºâ ‰∫åÂàÜÊü•ÊâæÊúâÁöÑÊó∂ÂÄôÊàë‰ºöÂÜôÂá∫Ê≠ªÂæ™ÁéØÊù•Ôºå‰ªîÁªÜÊÄùËÄÉ‰∫Ü‰∏Ä‰∏ãÔºöÂøÖÈ°ªÊØèÊ¨°Êî∂Áº©ËæπÁïåÁöÑÊó∂ÂÄôÔºåÈÉΩÊéíÈô§Êéâ midÔºåÂÆåÂÖ®ÈÅøÂÖç mid Ë¢´ÈáçÂ§çÊü•ÁöÑÂèØËÉΩ„ÄÇ ‰π†È¢ò leetcode 704. ‰∫åÂàÜÊü•Êâæ leetcode 34. Âú®ÊéíÂ∫èÊï∞ÁªÑ‰∏≠Êü•ÊâæÂÖÉÁ¥†ÁöÑÁ¨¨‰∏Ä‰∏™ÂíåÊúÄÂêé‰∏Ä‰∏™‰ΩçÁΩÆÔºà‰∏≠Á≠âÔºâ Á¨¨‰∏ÄÈ¢òÁ≠îÊ°àÔºöÂ∑¶Èó≠Âè≥Èó≠ÊêúÁ¥¢Âå∫Èó¥ÁöÑÂÜôÊ≥ïÔºö 1234567891011121314151617181920/** * @param &#123;number[]&#125; nums * @param &#123;number&#125; target * @return &#123;number&#125; */var search = function(nums, target) &#123; let left = 0; let right = nums.length-1; while(left&lt;=right)&#123; const mid = left + Math.floor((right-left)/2); if(nums[mid]==target)&#123; return mid; &#125;else if(nums[mid]&gt;target)&#123; right = mid-1; &#125;else if(nums[mid]&lt;target)&#123; left = mid+1; &#125; &#125; return -1;&#125;; Â∑¶Èó≠Âè≥ÂºÄÊêúÁ¥¢Âå∫Èó¥ÁöÑÂÜôÊ≥ïÔºö 1234567891011121314151617181920/** * @param &#123;number[]&#125; nums * @param &#123;number&#125; target * @return &#123;number&#125; */var search = function(nums, target) &#123; let left = 0; let right = nums.length; while(left&lt;right)&#123; const mid = left + Math.floor((right-left)/2); if(nums[mid]==target)&#123; return mid; &#125;else if(nums[mid]&gt;target)&#123; right = mid; &#125;else if(nums[mid]&lt;target)&#123; left = mid+1; &#125; &#125; return -1;&#125;; Á¨¨‰∫åÈ¢òÁ≠îÊ°àÔºöÂ∑¶Èó≠Âè≥Èó≠ÊêúÁ¥¢Âå∫Èó¥ÁöÑÂÜôÊ≥ïÔºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647/** * @param &#123;number[]&#125; nums * @param &#123;number&#125; target * @return &#123;number[]&#125; */var searchRange = function(nums, target) &#123; return [findLeft(nums, target), findRight(nums, target)]&#125;;var findLeft = function(nums, target)&#123; let left = 0; let right = nums.length; while(left&lt;right)&#123; let mid = left + Math.floor((right-left)/2); if(nums[mid]==target)&#123; right = mid; &#125;else if(nums[mid]&lt;target)&#123; left = mid+1; &#125;else if(nums[mid]&gt;target)&#123; right = mid; &#125; &#125; if(nums[left]==target)&#123; return left &#125; return -1;&#125;var findRight = function(nums, target)&#123; let left = 0; let right = nums.length; while(left&lt;right)&#123; let mid = left + Math.floor((right-left)/2); console.log(left, mid, right) if(nums[mid]==target)&#123; left = mid+1; &#125;else if(nums[mid]&lt;target)&#123; left = mid+1; &#125;else if(nums[mid]&gt;target)&#123; right = mid; &#125; &#125; if(nums[right-1]==target)&#123; return right-1; &#125; return -1;&#125; Â∑¶Èó≠Âè≥Èó≠ÊêúÁ¥¢Âå∫Èó¥ÁöÑÂÜôÊ≥ïÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546/** * @param &#123;number[]&#125; nums * @param &#123;number&#125; target * @return &#123;number[]&#125; */var searchRange = function(nums, target) &#123; return [fundLeft(nums, target), fundRight(nums, target)]&#125;;var fundLeft = function(nums, target)&#123; let left = 0; let right = nums.length - 1; while(left&lt;=right)&#123; let mid = left + Math.floor((right-left)/2); if(nums[mid]==target)&#123; right = mid-1; &#125;else if(nums[mid]&lt;target)&#123; left = mid+1; &#125;else if(nums[mid]&gt;target)&#123; right = mid-1; &#125; &#125; if(nums[left]==target)&#123; return left; &#125; return -1;&#125;var fundRight = function(nums, target)&#123; let left = 0; let right = nums.length - 1; while(left&lt;=right)&#123; let mid = left + Math.floor((right-left)/2); if(nums[mid]==target)&#123; left = mid+1; &#125;else if(nums[mid]&lt;target)&#123; left = mid+1; &#125;else if(nums[mid]&gt;target)&#123; right = mid-1; &#125; &#125; if(nums[right]==target)&#123; return right; &#125; return -1;&#125;]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â¶Ç‰ΩïÂ≠¶‰π†]]></title>
    <url>%2Fblog%2F2021%2F08%2F22%2F%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[ËøôÁØáÊñáÁ´†ÁöÑÊÄùÊÉ≥Êù•Ëá™‰∫éËøô‰ΩçÂçö‰∏ªÔºöbilibili-YJangoÔºåÊàëËßâÂæóÂæàÂèóÂêØÂèëÂ∞±Â∞ÜÂÖ∂ÁÆÄÁï•ÂÜô‰∫Ü‰∏ãÊù•„ÄÇ ‰ªÄ‰πàÊòØÂ≠¶‰π†ÔºüÂ≠¶‰π† vs ËÆ∞ÂøÜ ËÆ∞ÂøÜÔºöÂÆπÈáèÊúâÈôê„ÄÅÈöæ‰ª•ÈõÜÈΩê Â≠¶‰π†Ôºö‰ªéÊúâÈôêÁöÑ‰æãÂ≠ê‰∏≠ÊâæÂá∫ÈóÆÈ¢òÂíåÁ≠îÊ°àÁöÑËßÑÂæãÔºöÁü•ËØÜ Ë¥πÊõºËØ¥ÔºöÂ¶ÇÊûú‰Ω†Ê≤°ÊúâÂäûÊ≥ïÁî®ÁÆÄÂçïÁöÑËØ≠Ë®ÄÊèèËø∞ÊâÄÂ≠¶ÁöÑÁü•ËØÜÔºå‰Ω†Â∞±Ê≤°ÊúâÁúüÊ≠£Â≠¶‰ºöÂÆÉ„ÄÇ Âõ†‰∏∫Â≠¶‰π†ÊòØÁî®Áü•ËØÜÊù•ÂéãÁº©ÂéüÊú¨Êó†ÈôêÁöÑ‰ø°ÊÅØ Â≠¶‰π†ÔºöÊâæÂá∫Áü•ËØÜ„ÄÅÂéãÁº©‰ø°ÊÅØ Â¶Ç‰ΩïÂ≠¶‰π†ÊâæÂá∫ÈóÆÈ¢òÂíåÁ≠îÊ°àÁöÑËßÑÂæãÔºåÈáçÂ°ëÂ§ßËÑëÈìæÊé•„ÄÇÂ≠¶‰π†ÁöÑÁ¨¨‰∏ÄÊ≠•Â∞±ÊòØÊòéÁ°ÆÔºöÈóÆÈ¢òÂíåÁ≠îÊ°à„ÄÇ ÂæàÂ§ö‰∫∫ÂéãÊ†πËøûË¶ÅÂ≠¶ÁöÑÁü•ËØÜÊâÄÊèèËø∞ÁöÑÈóÆÈ¢òÈÉΩ‰∏çÊ∏ÖÊ•öÂ∞±ÂéªÂ≠¶‰π†ÔºåÊúÄÂêéÂè™ÊòØËÆ∞‰ΩèÁü•ËØÜÁöÑÊèèËø∞ËÄåÂ∑≤„ÄÇ ÁÑ∂ËÄåÁü•ËØÜ‰∏çÊòØ‰ø°ÊÅØÔºåÂ≠¶‰π†‰∏çÊòØËÆ∞ÂøÜ„ÄÇÊó†Ê≥ï‰ªÖÂá≠ËÆ∞‰ΩèÁü•ËØÜÊù•Â≠¶‰ºöÁü•ËØÜ„ÄÇËøô‰πüÊòØ‰∫∫‰ª¨Âú®ÊïôÂíåÂ≠¶ÁöÑËøáÁ®ã‰∏≠ÊúÄÂÆπÊòìÁäØÁöÑÈîôËØØÔºå‰ª•‰∏∫Â∞ÜÁü•ËØÜÂëäËØâ‰∫ÜÊüê‰∫∫ÔºåÂØπÊñπÂ∞±ÂèØ‰ª•Â≠¶‰ºö‰∫ÜÔºå‰ª•‰∏∫Âê¨ÊáÇ‰∫ÜÁü•ËØÜÔºåÂ∞±‰ª•‰∏∫Ëá™Â∑±Â≠¶‰ºö‰∫Ü„ÄÇÁÑ∂ËÄåÁü•ËØÜÁöÑÊèèËø∞Âè™ÊòØÂØπÂ≠¶‰π†Ëµ∑Âà∞ÂºïÂØºÁöÑ‰ΩúÁî®ÔºåÊúÄÁªàÁöÑÂ≠¶‰π†‰∏ÄÂÆöË¶ÅÈÄöËøá‰æãÂ≠êÊù•ÁêÜÊ∏ÖÈóÆÈ¢òÂíåÁ≠îÊ°àÁöÑÂÖ≥Á≥ªÔºåÊù•ÈáçÂ°ëÂ§ßËÑëÈìæÊé•„ÄÇËøô‰πüÂ∞±ÊòØ‰∏∫‰ªÄ‰πàÂú®ËÆ®ËÆ∫„ÄÅÂÜôÊñáÁ´†‰ª•ÂèäËæ©ËÆ∫Êó∂‰∏ÄÂÆö‰ºö‰º¥ÈöèÁùÄ‰æãÂ≠êÔºåËÄå‰∏çÊòØÂçïÁ∫ØÁöÑÂØπÁü•ËØÜËøõË°åÊèèËø∞„ÄÇÂõ†Ê≠§Âú®Áúã‰π¶Êó∂‰πüË¶ÅÊ≥®ÊÑèÂå∫ÂàÜÔºåÂì™‰∫õÊòØ‰æãÂ≠êÔºåÂì™‰∫õÊòØÂØπÁü•ËØÜÁöÑÊèèËø∞„ÄÇÊàë‰∏™‰∫∫Âú®ÂÜôÊñáÁ´†Êó∂ÁîöËá≥Â∏∏Â∏∏‰ºöÂ∞Ü‰æãÂ≠êÂíåÁü•ËØÜÊèèËø∞ÂàÜÂºÄÊù•ÂÜô„ÄÇÂçéÁΩóÂ∫öÁöÑÔºöÂÖàÊää‰π¶ËØªÂéöÔºåÂÜçÊää‰π¶ËØªËñÑ„ÄÇÁöÑÂ≠¶‰π†ÊñπÊ≥ïÂ∞±ÊòØÊåáÔºöÂÖàÂ∞ΩÂèØËÉΩÁöÑÊêúÈõÜÊõ¥Â§öÁöÑ‰æãÂ≠êÊù•Â∏ÆÂä©‰Ωì‰ºöÈóÆÈ¢òÂíåÁ≠îÊ°à‰πãÈó¥ÁöÑÂÖ≥Á≥ª„ÄÇËÄåÂΩì‰Ω†ÁúüÊ≠£Â≠¶‰ºöÁöÑÊó∂ÂÄôËøô‰∫õ‰æãÂ≠êÂ∞±‰ºöÂéãÁº©ÊàêÁü•ËØÜ„ÄÇÊúÄÂêéÁî±‰∫éÂ≠¶‰π†ÊòØ‰∏∫‰∫ÜËß£ÂÜ≥Êñ∞ÈóÆÈ¢òÔºåÊâÄ‰ª•ÈúÄË¶ÅÈ™åËØÅ‰ªéÁé∞Êúâ‰æãÂ≠ê‰∏≠ÊâÄÊèêÁÇºÁöÑÁü•ËØÜÔºåÊòØÂê¶ËÉΩÊèèËø∞ÈóÆÈ¢òÂíåÁ≠îÊ°àÁöÑÁúüÊ≠£ËßÑÂæãÔºåËÄå‰∏çÊòØ‰ªÖ‰ªÖËÆ∞‰Ωè‰∫ÜËøô‰∫õ‰æãÂ≠ê„ÄÇ Â≠¶‰π†Ê≠•È™§Ôºö ÊòéÁ°ÆÈóÆÈ¢òÂíåÁ≠îÊ°à Áî®‰æãÂ≠êÊûÑÂª∫Áü•ËØÜ È™åËØÅÁü•ËØÜÊúâÊïàÊÄß Â≠¶‰π†ÁöÑËØØÂå∫Â≠¶‰π†ÊúÄÈáçË¶ÅÁöÑ‰∏§Ê≠•Ôºö ÊòéÁ°ÆÈóÆÈ¢òÔºàËæìÂÖ•ÔºâÂíåÁ≠îÊ°àÔºàËæìÂá∫Ôºâ Áî®‰æãÂ≠êÊûÑÂª∫Áü•ËØÜ Â≠¶‰π†ÊñπÂºèÂàÜ‰∏∫‰∏§Â§ßÁ±ªÔºö ÊÄùËÄÉÁ±ªÔºöÊï∞Â≠¶„ÄÅÈÄªËæë ËøêÂä®Á±ªÔºöËØ≠Ë®Ä„ÄÅËøêÂä® Âå∫Âà´Âú®‰∫éÊòØÂê¶‰æùÈù†ÊÑèËØÜÔºåÂõ†‰∏∫ÊÑèËØÜÊòØÂêéËøõÂåñÂá∫Êù•ÁöÑÔºåÊìÖÈïøËß£ÂÜ≥ÁöÑÊòØÊé®Êñ≠ÈóÆÈ¢òÔºåÈÄüÂ∫¶ÁºìÊÖ¢ÔºåÂ≠¶‰∏ç‰ºöÁöÑÂéüÂõ†Âú®‰∫éÔºö ÈîôËØØÁöÑËæìÂÖ•ËæìÂá∫ ÈîôËØØÁöÑÂ≠¶‰π†ÊñπÂºèÔºöÁî®ÊÄùËÄÉÁ±ªÊñπÂºèÊù•Â≠¶‰π†ÊâÄÊúâÁü•ËØÜÔºåÊØîÂ¶ÇÁúã‰π¶Â≠¶Ê∏∏Ê≥≥„ÄÅÂ≠¶ÂÅöËèú ‰∏çÈÄöËøá‰æãÂ≠ê‰ªÖËÆ∞ÂøÜÁü•ËØÜ ‰ª•ËØ≠Ë®Ä‰∏∫‰æãÔºåÂõõÈ°πËÉΩÂäõÁöÑÊ≠£Á°ÆËæìÂÖ•„ÄÅËæìÂá∫ÂàÜÂà´ÊòØÔºö Âê¨ÔºàÂ£∞Èü≥Ôºâ ËØ¥ÔºàÊÉ≥Ê≥ïÔºâ ËØªÔºàÊñáÂ≠óÔºâ ÂÜôÔºàÊÉ≥Ê≥ïÔºâ Â∫îËØïËã±ËØ≠ÁöÑËØØÂå∫ÊòØÔºöËæìÂÖ•„ÄÅËæìÂá∫ÂèòÊàê‰∫ÜÂÆåÂΩ¢Â°´Á©∫ÔºåÈòÖËØªÈÄâÊã©Á≠âÔºåËøôÁ±ª‰ªé‰∏Ä‰∫õÊñáÂ≠óÂà∞Âè¶‰∏Ä‰∫õÊñáÂ≠óÁöÑÊÄùËÄÉÁ±ªÈóÆÈ¢ò„ÄÇÁî®ÁôæËØçÊñ©ËÉåÂçïËØçÊó∂ËøòÂÆπÊòì‰∫ßÁîüÂè¶‰∏ÄÁßçÂÅèÂ∑ÆÔºöÂõæÁâá-&gt;‰∏≠Êñá„ÄÇËã±ËØ≠Â≠¶‰π†‰∏≠ÊúÄËá¥ÂëΩÁöÑÊòØÊèíÂÖ•‰∫Ü‰∏≠ÊñáÊÄùËÄÉËøô‰∏™‰∏≠Èó¥ËæìÂá∫Ôºå‰∏ç‰ªÖËæìÂá∫ÈîôËØØÔºåËÄå‰∏îÈùûÂ∏∏ÁºìÊÖ¢„ÄÇËã•ËÆ©ÂæàÂ§öÊáÇÂ§ñËØ≠Ôºå‰ΩÜÊú™ÁªèËÆ≠ÁªÉÁöÑ‰∫∫ÂêåÊó∂ÁøªËØë‰∏≠ÊñáÁöÑËØùÔºå‰ªñ‰ª¨‰ºöÂèçÂ∫î‰∏çËøáÊù•ÔºåÂ∞±ÊòØÂõ†‰∏∫‰ªñÁöÑÂ§ßËÑëÂú®Ëøô‰∏™ËøáÁ®ã‰∏≠ÂÖ∂ÂÆûÂπ∂‰∏çÊÄùËÄÉ‰∏≠Êñá„ÄÇÂΩìÂá∫ÂõΩÂêéÂ∞±‰ºöÂèëÁé∞ÔºåÊâÄÂ≠¶Ëã±ËØ≠ÁöÑËæìÂÖ•ÂíåÁúüÂÆûËã±ËØ≠ÁöÑËæìÂÖ•ÊòØ‰∏çÂêåÁöÑÔºåÊ†πÊú¨Áî®‰∏ç‰∫Ü„ÄÇ‰∏çÁªèËøá‰æãÂ≠êËÄåÁõ¥Êé•ËÆ∞ÂøÜÁü•ËØÜ‰πüÊòØÂ∏∏ËßÅÁöÑËØØÂå∫ÔºåÁî±‰∫éËØ≠Ë®ÄÁöÑËæìÂÖ•‰ªéÊù•‰∏çÊòØ‰∏Ä‰∏™ÂçïËØçËÄåÊòØ‰∏Ä‰∏™Âè•Â≠êÔºåË¶ÅÊÉ≥ÊääÊè°Âè•Â≠ê‰∏≠Êüê‰∏™ÂçïËØçÁöÑÁúüÊ≠£Âê´‰πâÔºåÈúÄË¶ÅÈÄöËøáÂ§ßÈáè‰Ωì‰ºö‰∏çÂêåÁöÑ‰æãÂè•Ôºå‰ΩÜÂæàÂ§öÊó∂ÂÄôÂ≠¶Áîü‰ªÖ‰ªÖÊòØËÆ∞‰Ωè‰∫ÜÂçïËØçÁöÑ‰∏≠ÊñáÊèèËø∞„ÄÇÂæàÂ§öËã±ËØ≠ÂêçÂ∏à‰πüÁäØÂêåÊ†∑ÁöÑÈîôËØØÔºå‰∏çÁÆ°‰ªñÊÄªÁªìÁöÑÂÜçÂ•ΩÔºåËã•‰ªÖ‰ªÖÊòØÊää‰ªñÁöÑÊÄªÁªìÂëäËØâÂ≠¶ÁîüÔºåÂ≠¶ÁîüÊ∞∏ËøúÈÉΩÊòØÂú®Êää‰ªñÁöÑÊÄªÁªìÂΩìÊàê‰ø°ÊÅØËÆ∞ÂøÜÔºåËÄå‰∏çÊòØ‰Ωú‰∏∫Áü•ËØÜÂ≠¶‰π†„ÄÇÂçÅÂπ¥Â≠¶‰∏ç‰ºöËã±ËØ≠Ôºå‰∏çÊòØÂõ†‰∏∫Ê≤°Â≠¶‰ºöÔºåËÄåÊòØÂõ†‰∏∫ÊêûÈîô‰∫ÜËæìÂÖ•ËæìÂá∫ÔºåÈÄ†ÊàêÂ≠¶Âà∞ÁöÑÊòØÂÆåÂÖ®‰∏çÂêåÁöÑÁü•ËØÜ„ÄÇ Êàë‰ª¨ÂèØ‰ª•ÂêåÊó∂Â∫îÁî®Â§ö‰∏™Â∫îÁî®Á±ªÁü•ËØÜÔºåË≠¨Â¶ÇÊüê‰∫∫ÂèØ‰ª•ËæπËµ∞Ë∑ØËæπËÅäÂ§©„ÄÇ‰ΩÜÊÑèËØÜÂú®Êüê‰∏ÄÂàªÂè™ËÉΩ‰∏ìÊ≥®‰∫é‰∏Ä‰∏™ÊÄùËÄÉÁ±ªÈóÆÈ¢òÔºåÊó†Ê≥ïÂπ∂Ë°å„ÄÇÂõ†Ê≠§Âú®Êüê‰∏ÄÂàªÔºåËã•Êó†Ê≥ï‰ªéËÑë‰∏≠ÊêúÁ¥¢Âà∞ËÉΩÁõ¥Êé•‰ªéËæìÂÖ•ÂæóÂà∞ËæìÂá∫ÁöÑÁü•ËØÜÔºåÈóÆÈ¢òÂ∞±Êó†Ê≥ïËß£ÂÜ≥„ÄÇÁÑ∂ÂêéÊàë‰ª¨ÊâÄÊéåÊè°ÁöÑÁü•ËØÜÂèàÊòØÊúâÈôêÁöÑÔºåËøôÁßçÁõ¥Êé•‰ªéËæìÂÖ•ÂæóÂà∞ËæìÂá∫ÁöÑÁü•ËØÜÂæÄÂæÄ‰ºöË∂ÖËøáÊàë‰ª¨ÁöÑÁü•ËØÜËåÉÂõ¥„ÄÇÂ∫îÂØπÂäûÊ≥ïÂèØ‰ª•ÊòØÂ≠¶‰π†Êõ¥Â§öÁöÑÁü•ËØÜÔºå‰ΩÜËøòÊúâ‰∏Ä‰∏™ÁÆÄÂçïÔºåÂç¥ÂèàÊó†ÊØîÂº∫Â§ßÁöÑÊñπÊ≥ïÂ∞±ÊòØÂàÜËÄåÊ≤ª‰πã„ÄÇÂ∞ÜÈóÆÈ¢òÊãÜÂàÜÊàêËÑë‰∏≠Â≠òÊúâÁöÑÔºåËÉΩÁõ¥Êé•‰ªéËæìÂÖ•ÂæóÂà∞ËæìÂá∫ÁöÑÂ∞èÈóÆÈ¢òÊù•Ëß£ÂÜ≥„ÄÇ‰Ω†‰∏ÄÂÆöÂê¨ËøáËøô‰∏™ÂäûÊ≥ïÔºå‰ΩÜÊÅêÊÄï‰Ω†Âπ∂‰∏çÁü•ÈÅìÂÆÉ‰∏∫‰ªÄ‰πàÂ¶ÇÊ≠§Âº∫Â§ß„ÄÇÂéüÂõ†Âú®‰∫éÔºåÂÆÉÂèØ‰ª•Â∞ÜÂéüÊú¨ÈúÄË¶Å‰Ω†ÊéåÊè°ÊåáÊï∞Á∫ßÁü•ËØÜÊâçËÉΩËß£ÂÜ≥ÁöÑÈóÆÈ¢òÔºåÂèòÊàêÁî®Á∫øÊÄßÁ∫ßÁü•ËØÜÂ∞±ÂèØ‰ª•Ëß£ÂÜ≥ÁöÑÈóÆÈ¢ò„ÄÇÂÅáËÆæ‰Ω†ÊéåÊè°‰∫Ü‰∏âÁßçÁü•ËØÜÔºå‰∏çËÄÉËôëÈ°∫Â∫èÔºåÂçï‰ªéÁªÑÂêàÊù•ÁúãÔºåÂ∞±ÂèØ‰ª•ÂΩ¢Êàê $2^3$ ÁßçÁü•ËØÜÔºåÂ¶ÇÊûú‰∏çÊãÜÂàÜÈóÆÈ¢ò‰Ω†ÈúÄË¶ÅÊéåÊè° 8 ÁßçÁü•ËØÜÊâçËÉΩËß£ÂÜ≥Ëøô‰∫õÈóÆÈ¢ò„ÄÇËÄåÊúâ 20 ÁßçÁü•ËØÜÁöÑÊó∂ÂÄôÔºå‰∫åËÄÖÁöÑÂ∑ÆÂà´Â∞±ÊòØ 20 vs 1048576„ÄÇ Â∫îÂØπÊñπÊ≥ïÔºö Â§öÂ≠¶Áü•ËØÜ ÂàÜËÄåÊ≤ª‰πãÔºà$2^n \rightarrow n$ÔºåÂÆÉÁõ¥Êé•ÂÜ≥ÂÆö‰∫Ü‰∏Ä‰∏™‰∫∫Ëß£ÂÜ≥ÈóÆÈ¢òÁöÑËÉΩÂäõÔºâ ÈÄ†ÊàêÁé∞Ë±°Ôºö ÁºñÁ®ãÊó†Â§¥Áª™ ÂÜô‰Ωú‰∏çÂá∫Â≠ó Ëß£È¢òÊ≤°ÊÄùË∑Ø Â∑•‰ΩúÈöæÂ∫îÂØπ]]></content>
      <tags>
        <tag>ÊñπÊ≥ïËÆ∫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âø´ÈÄüÊéíÂ∫èÊúÄÂùèÁöÑÊÉÖÂÜµÂï•Êó∂ÂÄôÂá∫Áé∞]]></title>
    <url>%2Fblog%2F2021%2F06%2F28%2F%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E6%9C%80%E5%9D%8F%E7%9A%84%E6%83%85%E5%86%B5%E5%95%A5%E6%97%B6%E5%80%99%E5%87%BA%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[Âú®Èù¢ËØïÂØåÈÄîÁöÑÊó∂ÂÄôÈù¢ËØïÂÆòÈóÆ‰∫ÜËøôÊ†∑‰∏Ä‰∏™ÈóÆÈ¢òÔºöÂø´ÈÄüÊéíÂ∫èÊúÄÂùèÁöÑÊÉÖÂÜµÂï•Êó∂ÂÄôÂá∫Áé∞ÔºüÂΩìÊó∂Ê≤°ÊúâÁ≠î‰∏äÊù•„ÄÇÂÆûÈôÖ‰∏äËøô‰∏™ÈóÆÈ¢òÊØîËæÉÂÆπÊòìÊÉ≥Ê∏ÖÊ•öÔºåÊÄùË∑ØÂ¶Ç‰∏ãÔºå‰ªéÂø´ÈÄüÊéíÂ∫èÁöÑÂΩ¢ÂºèÂÖ•ÊâãÔºö$O(N*logN)$ÔºåN ‰ª£Ë°®ÂçïÊ¨°ÊéíÂ∫èÁöÑÊó∂Èó¥Ëä±ÈîÄÔºålogN ‰ª£Ë°®ÈÄíÂΩíÊ¨°Êï∞„ÄÇÊàë‰ª¨Áü•ÈÅìÊúÄÂùèÊÉÖÂÜµÊòØ$O(N^2)$Ôºå‰πüÂ∞±ÊòØËØ¥$logN$ÈÄÄÂåñÊàê‰∫Ü$N$„ÄÇÈÇ£‰πà‰ªÄ‰πàÊÉÖÂÜµ‰ºöÈÄÄÂåñÊàê$logN$ÔºåÂΩìÁÑ∂ÊòØÈóÆÈ¢òËßÑÊ®°Áº©ÂáèÂæóÊÖ¢ÁöÑÊó∂ÂÄôÔºåËøô‰∏éÊàë‰ª¨ÈÄâ‰∏≠Êû¢ÊúâÁõ¥Êé•ÁöÑÂÖ≥Á≥ª„ÄÇÂÅáÂ¶ÇÊàë‰ª¨ÈÄâÁöÑ‰∏≠Êû¢ÔºåÊØèÊ¨°ÈÉΩÊòØÊúÄÂ∞èÊàñËÄÖÊúÄÂ§ßÔºåÈÇ£‰πàÈóÆÈ¢òÁöÑÁº©Â∞èÈÄüÂ∫¶Â∞±‰ºöÂèòÊàêÁ∫øÊÄßÁöÑ‰∫ÜÔºõËÄåÂÅáÂ¶ÇÊàë‰ª¨ÈÄâÁöÑ‰∏≠Êû¢ÔºåÊØèÊ¨°ÊÅ∞Â•ΩÊòØ‰∏≠Èó¥ÈÇ£‰∏™Êï∞ÔºåÈÇ£‰πàÈóÆÈ¢òÈÄíÂΩíÊ¨°Êï∞Â∞±ÊòØ$log_2^N$‰∫Ü„ÄÇ Áî±‰∫éÊàë‰ª¨‰∏ÄËà¨ÈÉΩÊòØÈÄâÁ¨¨‰∏Ä‰∏™ÊàñËÄÖÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÂÅö‰∏≠Êû¢ÔºåÈÇ£‰πàÊúÄÂùèÁöÑÊÉÖÂÜµÂØπÂ∫îÂ∞±ÊòØÔºöÂ∑≤ÁªèÊúâÂ∫èÔºàËøôÂåÖÊã¨Ê≠£Â∫èÔºåÈÄÜÂ∫èÔºå‰ª•ÂèäÂÖ®ÈÉ®ÂÖÉÁ¥†Áõ∏Á≠âÔºâ Áî±‰∫éÂø´ÈÄüÊéíÂ∫èÁöÑËøô‰∏™ÁâπÂæÅÔºåÊâÄ‰ª•Êàë‰ª¨‰∏ÄËà¨ÁöÑÁÆóÊ≥ïÂ∫ì‰∏≠ÊòØÁªìÂêà‰∫ÜÂ•ΩÂá†ÁßçÊéíÂ∫èÁÆóÊ≥ïÔºöC++‰∏ÄÈÅìÊ∑±ÂùëÈù¢ËØïÈ¢òÔºöSTL Èáå sort ÁÆóÊ≥ïÁî®ÁöÑÊòØ‰ªÄ‰πàÊéíÂ∫èÁÆóÊ≥ïÔºü ÂêåÊó∂Êàë‰πüÂú®ÊÄùËÄÉ‰∏∫Âï•Âø´ÊéíËøôÁßçÊúÄÂùèÊòØ$O(N^2)$ÁöÑÁÆóÊ≥ï‰ºöË¢´‰ΩøÁî®ÔºåËÄå‰∏çÁõ¥Êé•‰ΩøÁî®ÊúÄÂùèÊòØ$O(NlogN)$ÁöÑÁÆóÊ≥ïÔºåÊØîÂ¶ÇÂΩíÂπ∂ÊéíÂ∫èÔºåÂ†ÜÊéíÂ∫è„ÄÇÁ≠îÊ°àËá™ÁÑ∂ÊòØËøô‰∫õÊéíÂ∫è‰πüÊúâÂêÑËá™ÁöÑÁº∫ÁÇπÔºåËÄå‰∏îÊàë‰º∞ËÆ°ÊòØÊó†Ê≥ïÂÆπÂøçÁöÑÁº∫ÁÇπ„ÄÇÊØîÂ¶ÇÂΩíÂπ∂ÊéíÂ∫èÔºåÂÆÉ‰∏çÊòØ‰∏Ä‰∏™ÂéüÂú∞ÊéíÂ∫èÁÆóÊ≥ïÔºåÈúÄË¶ÅÈ¢ùÂ§ñÁöÑÂ≠òÂÇ®Á©∫Èó¥„ÄÇÂ†ÜÊéíÂ∫èÔºåÈúÄË¶ÅÊûÑÂª∫Â†ÜËä±Ë¥πÈ¢ùÂ§ñÁöÑÊó∂Èó¥„ÄÇÂ†ÜÊûÑÂª∫ÂÆåÊØïÂêéÔºåÂÄüÁî®Â†ÜËøôÁßçÁªìÊûÑÔºåÊØèÊ¨°Âè™ËÉΩ‰ªéÂ†ÜÈ°∂ÂèñÂá∫ÊúÄÂ§ßÊàñÊúÄÂ∞èÁöÑÊï∞ÔºåËÄå‰∏îÂèñÂÆåËøòË¶ÅËøõË°åÂ†ÜÁª¥Êä§ÔºåËä±Ë¥π$logN$ÁöÑÊó∂Èó¥„ÄÇÊûÑÂª∫Â†ÜÁöÑËøáÁ®ãÂíåÂ†ÜÊéíÂ∫èÁöÑËøáÁ®ãÁ±ª‰ººÔºåÂè™‰∏çËøáÊûÑÂª∫Â†ÜÊòØÊ∑ªÂä†Âè∂ËäÇÁÇπ+‰∏äÊµÆÂ†ÜÂåñÁöÑËøáÁ®ãÔºåËÄåÂ†ÜÊéíÂ∫èÊòØÂèñÊ†πËäÇÁÇπ+‰∏ãÊ≤âÂ†ÜÂåñÁöÑËøáÁ®ãÔºåÂêåÊ†∑ÁöÑÊûÑÂª∫Â†Ü‰πüË¶ÅËä±Ë¥π$O(NlogN)$ÁöÑÊó∂Èó¥„ÄÇÊâÄ‰ª•Â†ÜÊéíÂ∫è‰ºöËä±Ë¥πÂèåÂÄçÁöÑÊó∂Èó¥„ÄÇ]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êô∫ËÉΩÂêàÁ∫¶ÂÖ•Èó®]]></title>
    <url>%2Fblog%2F2021%2F06%2F28%2F%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[ÂâçË®Ä‰ªé 2017 Âπ¥ÂºÄÂßã‰π∞ÊØîÁâπÂ∏ÅÁöÑÊó∂ÂÄôÔºåÊàëÂ∞±ÊÉ≥Â≠¶‰π†Êô∫ËÉΩÂêàÁ∫¶Áõ∏ÂÖ≥ÁöÑÂºÄÂèëÔºå‰πüÊõæÊÉ≥ËøáË¶ÅÊäïË∫´Âå∫ÂùóÈìæË°å‰∏öÔºåËøô‰∏ÄÊãñÂ∞±ÊòØ 4 Âπ¥„ÄÇÊàëËÆ§ÁúüÂºÄÂßãÂ≠¶Ëµ∑Êô∫ËÉΩÂêàÁ∫¶ÔºåÊúÄ‰∏ªË¶ÅÁöÑÂéüÂõ†ÂÖ∂ÂÆûÊòØÂõ†‰∏∫ÊàëÁ¶ªÂÆÉÊõ¥Ëøë‰∫Ü„ÄÇËøô‰∏ÄËΩÆÁâõÂ∏ÇÔºåDEFI ÁÅ´ÁàÜÔºåËÆ©ÊàëÂ≠¶‰ºö‰∫Ü‰ΩøÁî®Èí±ÂåÖÂíåÂÖ¨Èìæ„ÄÇËÄåÂú®ÂéªÂπ¥ÔºåÊàëËøòÊòØ‰∏™Âè™‰ºöÂú® OTC ÂÖ•ÈáëÁöÑÂÇªÂ≠êÔºåÂ∫ìÂ∏ÅÁöÑ OTC ÂÆö‰ª∑ÈÇ£‰πà‰∏çÂêàÁêÜÈÉΩÂè™‰ºöÁî® OTC ÂÖ•ÈáëÔºåÂêéÊù•ÊàëÊâçÂèëÁé∞ÂéüÊù• USDT ÂèØ‰ª•ÈöèÊÑèÂú®Èìæ‰∏äËΩ¨ÔºåËÄå‰∏îÊ≥¢Âú∫ÂÖçÊâãÁª≠Ë¥πÔºåÁî±Ê≠§ÊâìÂºÄ‰∫ÜÊñ∞‰∏ñÁïåÁöÑÂ§ßÈó®„ÄÇ ËµÑÊñô Solidity ËØ≠Ë®Ä Solidity ÊñáÊ°£ Remix Remix ÁöÑ‰ΩøÁî® Remix ‰ΩøÁî®ÊïôÁ®ã ÂèëÂ∏Å ‰∫∫Áîü‰∏≠Á¨¨‰∏ÄÊÆµÊô∫ËÉΩÂêàÁ∫¶‰ª£Á†Å 12345678pragma solidity ^0.4.0;contract addressTest&#123; function getBalance(address addr) public view returns (uint)&#123; return addr.balance; &#125;&#125;]]></content>
      <tags>
        <tag>Â∏ÅÂúà</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[position sticky]]></title>
    <url>%2Fblog%2F2021%2F05%2F28%2Fposition-sticky%2F</url>
    <content type="text"><![CDATA[Âú®ÂÅöÂÖ¨Âè∏È°πÁõÆÁöÑËøáÁ®ã‰∏≠ÈÅáÂà∞‰∏Ä‰∏™ÈóÆÈ¢òÔºöËÆ©Ë°®Â§¥Âõ∫ÂÆöÔºåÂêåÊó∂ÂÖ∂ÂÆΩÂ∫¶ÂøÖÈ°ªÂç†Êª°Êï¥‰∏™Áà∂ÂÖÉÁ¥†„ÄÇÁî® fixedÔºåÂèØ‰ª•Âõ∫ÂÆö‰ΩÜÊòØÂÆΩÂ∫¶Êó†Ê≥ïÊíëÂºÄ„ÄÇÊúÄÁªàÁî®position: stickyËß£ÂÜ≥‰∫ÜÈóÆÈ¢ò„ÄÇ ÂèÇËÄÉËµÑÊñôÔºö ÊùÄ‰∫Ü‰∏™ÂõûÈ©¨Êû™ÔºåËøòÊòØËØ¥ËØ¥ position:sticky Âêß¬´ Âº†Èë´Êó≠-Èë´Á©∫Èó¥-Èë´ÁîüÊ¥ª position - CSSÔºàÂ±ÇÂè†Ê†∑ÂºèË°®Ôºâ | MDN position: sticky ÁöÑ‰ΩúÁî®Ëøô‰∏™ÂùëÂÖàÊîæÁùÄÔºåÁ≠âÊ∑±ÂÖ•Á†îÁ©∂‰∫ÜÂÜçÊù•Â°´ÔºåÊîæ‰∏ä codepen ËØïÈ™åÁé∞Âú∫Ôºöhttps://codepen.io/liuqinh2s/pen/oNZWbeX]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁÇíÂ∏ÅÁöÑÂü∫Êú¨Áü•ËØÜ]]></title>
    <url>%2Fblog%2F2019%2F12%2F30%2F%E7%82%92%E5%B8%81%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[Âπ≥Âè∞ÈÄâÊã©Âπ≥Âè∞ÈÄâÊã©ÔºöÈÄâÂ§ßÂπ≥Âè∞ÔºåÂÉèÁÅ´Â∏Å„ÄÅÂ∏ÅÂÆâ„ÄÇËøôÈáåÊúâ‰∏™ÊéíË°å‰æõÂèÇËÄÉÔºöhttps://coinmarketcap.com/zh/rankings/exchanges/ ÊàëËá™Â∑±ÈÄâÁöÑÊòØÁÅ´Â∏ÅÔºå‰ª•ÂâçÁöÑÁÅ´Â∏Å‰ΩìÈ™åÊòØÈùûÂ∏∏Â•ΩÁöÑÔºå‰π∞ÂçñÂæàÊñπ‰æøÔºåÁé∞Âú®ÁªèÂ∏∏Êï∞ÊçÆÂà∑‰∏çÂá∫Êù•„ÄÇ k Á∫øÂõæK Á∫øÂõæÔºàÂõ†‰∏∫ÂΩ¢Áä∂ÈÖ∑‰ººËú°ÁÉõÔºå‰πüÂè´Ëú°ÁÉõÂõæÔºâ k Á∫øÂõæÊòØÊúÄÂ∏∏Áî®ÂíåÊúÄÂü∫Êú¨ÁöÑ‰ø°ÊÅØÊù•Ê∫ê k Á∫øÂõæÊòØÂÖ∏ÂûãÁöÑÁ¨õÂç°Â∞îÂùêÊ†áÔºà‰πüÂ∞±ÊòØÁõ¥ËßíÂùêÊ†áÁ≥ªÔºâÔºåÊ®™ËΩ¥ÊòØÊó∂Èó¥ÔºåÁ∫µËΩ¥ÊòØ‰ª∑Ê†º„ÄÇ Ê®™ËΩ¥ÂèØ‰ª•ÈÄâÊã©Â§öÁßçÊó∂Èó¥ÂàÜÁâáÔºåÊØîÂ¶Ç‰∏Ä‰∏™ÊúàÔºå1 Âë®Ôºå1 Â§©Ôºå4 Â∞èÊó∂Ôºå1 Â∞èÊó∂Ôºå15 ÂàÜÈíüÔºå1 ÂàÜÈíü„ÄÇ‰∏äÂõæ‰∏≠ÔºåÊàëÈÄâÊã©ÁöÑÂ∞±ÊòØ 1 Â§©ÁöÑ k Á∫øÂõæ„ÄÇÊØè‰∏ÄÊ†πËú°ÁÉõÂ∞±‰ª£Ë°®‰∏Ä‰∏™Êó∂Èó¥ÁâáÁöÑÂü∫Êú¨‰ø°ÊÅØÔºåÂΩìËú°ÁÉõÊòØÁ∫¢Ëâ≤ÁöÑÊó∂ÂÄôÔºåÂ∞±ËØ¥ÊòéÊòØ Êî∂Áõò‰ª∑&lt;ÂºÄÁõò‰ª∑ÔºõÊòØÁªøËâ≤ÁöÑÊó∂ÂÄôÔºåÂ∞±ËØ¥ÊòéÊòØ ÂºÄÁõò‰ª∑&gt;Êî∂Áõò‰ª∑„ÄÇËÄå‰∏≠Èó¥ÁªÜÈïøÁöÑÁ∫øÂÜíÂá∫Â§¥ÔºåÂ∞±ÊòØÂú®ËØ•Êó∂Èó¥ÁâáÂÜÖ‰ª∑Ê†ºÊõæ‰ªäÂà∞ËøáÁöÑ‰ΩçÁΩÆ„ÄÇ ‰ªÄ‰πàÊòØÊî∂Áõò‰ª∑Ôºå‰ªÄ‰πàÊòØÂºÄÁõò‰ª∑ÔºüÂºÄÁõò‰ª∑ÊòØÊó∂Èó¥ÁâáÂºÄÂßãÁöÑÊó∂ÂÄôÁöÑ‰ª∑Ê†ºÔºåÊî∂Áõò‰ª∑ÊòØÊó∂Èó¥ÁâáÁªìÊùüÊó∂ÂÄôÁöÑ‰ª∑Ê†º„ÄÇÊØîÂ¶Ç‰Ω†Â¶ÇÊûúÈÄâÁöÑÊòØ 1 Â§©‰Ωú‰∏∫Êó∂Èó¥ÁâáÔºåÈÇ£‰πàÂºÄÁõòÊó∂Èó¥Â∞±ÊòØ 00:00:01ÔºåÊî∂ÁõòÊó∂Èó¥Â∞±ÊòØ 23:59:59„ÄÇÈÇ£‰ªÄ‰πàÂèàÊòØ‰ª∑Ê†ºÂë¢Ôºü‰ª∑Ê†ºÊòØ‰∏ä‰∏ÄÁ¨îÊàê‰∫§ÁöÑ‰ª∑Ê†º„ÄÇ ÂΩìÁÑ∂Á∫¢Ëâ≤ÂíåÁªøËâ≤Âè™ÊòØ‰∏ÄÁßçÁ∫¶ÂÆö‰øóÊàêÔºåÂú®‰∏≠ÂõΩËÇ°Â∏ÇÔºåÁ∫¢Ëâ≤‰∏ÄËà¨‰ª£Ë°®Ê∂®ÔºåÁªøËâ≤‰ª£Ë°®Ë∑å„ÄÇËÄåÁæéËÇ°ÂàôÊÅ∞Â•ΩÁõ∏Âèç„ÄÇ Â¶ÇÊûú‰Ω†ËÉΩÈÄöËøáËá™Â∑±ÁöÑËßÇÂØüÂèëÁé∞‰ª•‰∏äËøô‰∫õ‰ø°ÊÅØÔºåËØ¥Êòé‰Ω†Â∑≤ÁªèÂÖ∑Â§á‰∫Ü‰∏ÄÂÆöÁöÑÊ¥ûÂØüÂäõ„ÄÇ‰π∞‰∫ÜËøô‰πà‰πÖÊØîÁâπÂ∏ÅÔºåÊàë‰πüÊòØ‰ªäÂπ¥Êâç‰∫ÜËß£‰∫ÜËøô‰∫õ‰ø°ÊÅØ„ÄÇ ‰ΩÜÂÄüÂä©‰∫éÊêúÁ¥¢ÂºïÊìéÂíåÁª¥Âü∫ÁôæÁßëÊàë‰ª¨ÂèØ‰ª•Êõ¥Âø´ÁöÑÊéåÊè°Ëøô‰∫õÁü•ËØÜ„ÄÇ Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ËøòÊúâÈªÑ„ÄÅÁªø„ÄÅÁ¥´‰∏âÊ†πÊõ≤Á∫øË¥ØÁ©øÂú®Ëú°ÁÉõÂõæ‰∏≠„ÄÇËøôÂ∞±ÊòØ ÂùáÁ∫ø„ÄÇ‰∏äÂõæ‰∏≠ MA5 ÊòØÈªÑËâ≤ÁöÑÔºåMA10 ÊòØÁªøËâ≤ÁöÑÔºåMA30 ÊòØÁ¥´Ëâ≤ÁöÑ„ÄÇ MA ÊòØ Moving Average ÁöÑÊÑèÊÄùÔºåMA Á∫øÂ∞±ÊòØ ÁßªÂä®Âπ≥ÂùáÁ∫ø„ÄÇ ‰ΩÜË¶ÅÊ≥®ÊÑèÁöÑÊòØ MA5 Âπ∂‰∏ç‰∏ÄÂÆöÊòØ 5 Êó•ÂùáÁ∫øÁöÑÊÑèÊÄùÔºåËøòË¶ÅÁúã‰Ω†ÈÄâÊã©ÁöÑÊòØ‰ªÄ‰πàÊó∂Èó¥ÂàÜÁâáÔºåÂ¶ÇÊûúÊòØ 1 Â∞èÊó∂ÔºåÈÇ£Â∞±ÊòØ 5 Â∞èÊó∂ÂùáÁ∫ø„ÄÇÂè¶Â§ñÂùáÁ∫øÈááÁî®ÁöÑÊï∞ÊçÆ‰∏ÄËà¨ÊòØÊî∂Áõò‰ª∑„ÄÇËÆ°ÁÆóÊñπÊ≥ïÂæàÁÆÄÂçïÔºåÂΩìÂâçÂùáÁ∫øÂÄº=ÂâçÈù¢Âá†Ê†πËú°ÁÉõÁöÑÊî∂Áõò‰ª∑Áõ∏Âä†/Ëú°ÁÉõÁöÑÊ†πÊï∞„ÄÇÊØîÂ¶Ç MA5 = (ÂâçÈù¢ÂõõÊ†πËú°ÁÉõÂõæÁöÑÊî∂Áõò‰ª∑+ÂΩìÂâç‰ª∑Ê†º)/5ÔºåÁî±‰∫éËøòÊ≤°Êî∂ÁõòÔºåËÆ°ÁÆóÂΩìÂâçÁöÑ MA5ÔºåÊúÄÂêé‰∏ÄÊ†π k Á∫øÁöÑÊî∂Áõò‰ª∑Áî®ÁöÑÊòØÂΩìÂâç‰ª∑Ê†ºÔºåÊâÄ‰ª•ÂΩìÂâçÁöÑ MA5 ÊòØÊ≥¢Âä®ÁöÑ„ÄÇ Ê∑±Â∫¶Âõæ Ê∑±Â∫¶ÂõæÂ∞±ÊØîËæÉÁÆÄÂçï‰∫Ü„ÄÇ‰ªéÂõæ‰∏≠Êàë‰ª¨ÂèØ‰ª•ÂæóÁü•ÔºåÁªøËâ≤ËøôËæπÊòØ‰π∞ÂÖ•ÔºåÁ∫¢Ëâ≤ÊòØÂçñÂá∫„ÄÇÊ®™ËΩ¥ÊòØ‰ª∑Ê†ºÔºåÁ∫µËΩ¥ÊòØÊï∞Èáè„ÄÇ ‰∏ÄËà¨Êù•ËØ¥‰ª∑Ê†ºË∂ä‰ΩéÊÑøÊÑè‰π∞ÁöÑ‰∫∫Ë∂äÂ§öÔºå‰ª∑Ê†ºË∂äÈ´òÊÑøÊÑèÂçñÁöÑ‰∫∫Ë∂äÂ§öÔºåÊâÄ‰ª•‰ºöÂëàÁé∞Âá∫ËøôÁßç‰∏§‰∏™‰∏âËßíÂΩ¢Â∞ñÂ∞ñËßíÁõ∏ÂØπÁöÑÊÑüËßâÔºå‰∏≠Èó¥ÊòØË∞∑Ôºå‰∏§ËæπÊòØÂ≥∞„ÄÇ Êàë‰ª¨ÈúÄË¶ÅÁïôÊÑèÁöÑÊòØ‰π∞ÁõòÂíåÂçñÁõòÂì™‰∏™Êõ¥Â§ßÔºå‰π∞ÁõòÂ§ßËØ¥ÊòéÂæàÂ§ö‰∫∫ÊÉ≥Ë¶Å‰π∞Ôºà‰∏ÄËà¨ÊÉÖÂÜµ‰∏ã‰ºöÂØºËá¥‰æõ‰∏çÂ∫îÊ±ÇÔºåÊ≠§Êó∂‰∏∫ÂçñÊñπÂ∏ÇÂú∫Ôºå‰ª∑Ê†ºÂèØËÉΩ‰ºöË¢´Êé®È´òÔºâÔºåÂçñÁõòÂ§ßËØ¥ÊòéÂæàÂ§ö‰∫∫ÊÉ≥Ë¶ÅÂçñÔºà‰∏ÄËà¨ÊÉÖÂÜµ‰∏ã‰ºöÂØºËá¥‰æõËøá‰∫éÊ±ÇÔºåÊ≠§Êó∂‰∏∫‰π∞ÊñπÂ∏ÇÂú∫Ôºå‰ª∑Ê†ºÂèØËÉΩ‰ºöË¢´Âéã‰ΩéÔºâ„ÄÇ Âè¶‰∏Ä‰∏™Áé∞Ë±°Â∞±ÊòØÂú®Êüê‰∏™‰ª∑‰ΩçÂΩ¢Êàê‰∏ÄÊù°ÊØîËæÉÊòéÊòæÁöÑÂûÇÁ∫øÔºåËØ¥ÊòéÂú®Ëøô‰∏™‰ª∑Ê†ºÁöÑËÆ¢ÂçïÈáèÁ™ÅÁÑ∂ÈùûÂ∏∏Â§öÔºåËøôÁßçÁ∫øÂ∞±ÊòØÂéãÂäõ‰ΩçÔºåÂèØ‰ª•ÈòªÊ≠¢Êö¥Ê∂®Êö¥Ë∑å„ÄÇ ‰ΩÜÊàë‰ª¨‰πüË¶ÅÊ≥®ÊÑèÂà∞ÔºåÊ∑±Â∫¶ÂõæÂè™ÊòØÊåÇÂçï‰ø°ÊÅØÁöÑ‰∏Ä‰∏™ÂÖ®Êñπ‰ΩçÂ±ïÁ§∫ÔºåÊåÇÂçïÊòØÂèØ‰ª•ÈöèÊó∂ÂèñÊ∂àÁöÑÔºåÈô§ÈùûÊåÇÂçï‰∏çÂèØÂèñÊ∂àÔºåÂê¶ÂàôÊ∑±Â∫¶ÂõæÊÄªÊòØÊúâ‰∏ÄÂÆöÁöÑÂª∂ËøüÊÄßÔºåÊúâÂèØËÉΩË¢´Â∫ÑÂÆ∂Áî®Êù•Ëø∑ÊÉëÊï£Êà∑„ÄÇ ÊµÅÂä®ÊÄßÁõÆÂâçÊØîÁâπÂ∏ÅÁöÑÊØèÊó•‰∫§ÊòìÈáèÂç†Êï¥‰∏™Âä†ÂØÜË¥ßÂ∏ÅÁöÑ 60%‰ª•‰∏äÔºåÊµÅÂä®ÊÄßÊúÄÂ§ß„ÄÇÊüê‰∫õÂ∏ÇÂÄºÂ∞èÁöÑÂ∏ÅÁßçÊµÅÂä®ÊÄßÂæàÂ∞èÔºåÂ§ßËµÑÈáëËøõ‰∏çÊù•Ôºå‰πüÂá∫‰∏çÂéª„ÄÇÊØîÁâπÂ∏ÅÁöÑËøô‰∏™‰ºòÂäøÂ∞Ü‰∏çÊñ≠ÁöÑÂê∏ÂºïÂ§ßËµÑÈáëÊ≥®ÂÖ•„ÄÇ Â¶ÇÊûú‰Ω†Êâã‰∏äÊúâ 1000 ‰∏™ÊØîÁâπÂ∏ÅÔºåÁîöËá≥ 10000 ‰∏™ÊØîÁâπÂ∏ÅÔºå‰∏çÁî®ÊãÖÂøÉÂá∫ÂîÆ‰∏ç‰∫ÜÔºå‰Ω†ÊåÇ‰∏™ÂçñÂçïÔºåÂ∏ÇÂú∫ÂæàÂø´Â∞±ËÉΩÂêÉÊéâ„ÄÇËÄå‰∏Ä‰∫õÂ∏ÇÂÄºÂíå‰∫§ÊòìÈáèÂ∞èÁöÑÂ∏ÅÁßçÂàô‰∏çË°åÔºåÊØîÂ¶Ç BTSÔºåÂ∑®ËüπÁé∞Âú®Ë¶ÅÁî©Âçñ 3 ‰∫ø‰∏™ BTSÔºåÂ∞±ÂæàÂõ∞Èöæ„ÄÇ ‰ª∑Ê†ºÂíåÂ∏ÇÂÄºÂä†ÂØÜË¥ßÂ∏ÅÊö¥Ê∂®Êö¥Ë∑åÔºåÈí±ÈÉΩËøõ‰∫ÜË∞ÅÁöÑËÖ∞ÂåÖÔºü Âú®Â∏ÇÂú∫‰∏≠Ôºå‰ª∑Ê†º‰∏ªË¶ÅÊòØÈÄöËøá‰π∞ÂçñËøáÁ®ãÁõ¥Êé•ÂÜ≥ÂÆöÁöÑÔºåÂΩì‰π∞ÊñπÂäõÈáèÂº∫‰∫éÂçñÊñπÔºå‰ª∑Ê†ºÂ∞±Ê∂®ÔºõÂèç‰πã‰ª∑Ê†ºÂ∞±Ë∑åÔºà‰æõÈúÄÂÖ≥Á≥ªÂÜ≥ÂÆö‰ª∑Ê†ºËµ∞ÂäøÔºâ„ÄÇ ‰ΩÜËøôÂÖ∂‰∏≠‰πüÊúâ‰∏çÂ∞ëÁå´ËÖªÔºå‰∏æ‰∏™ÂÆûÈôÖÁöÑ‰æãÂ≠êÔºö ÂÅáËÆæÊØîÁâπÂ∏ÅÁé∞Âú®ÁöÑ‰ª∑Ê†ºÊòØ 10000 USDTÔºåÂπ∂‰∏îÂè™Êúâ‰Ω†‰∏Ä‰∏™‰∫∫Âú®‰∫§ÊòìÔºå‰Ω†ÊÉ≥‰π∞ 100 ‰∏á USDT ÁöÑ BTCÔºåÂè™ËÉΩÈÄöËøá‰∏çÊñ≠Êä¨È´ò‰ª∑Ê†ºÔºåÂêÉÊéâÊåÇÁùÄÁöÑÂçñÂçïÔºåÊâçËÉΩ‰π∞Âà∞ÈúÄË¶ÅÊï∞ÈáèÁöÑ BTC„ÄÇ ÂÅáËÆæ‰π∞ÂÆå‰πãÂêéÔºåBTC ‰ª∑Ê†ºÂà∞‰∫Ü 10100 USDTÔºåÁõÆÂâçÊØîÁâπÂ∏ÅÁöÑÊµÅÈÄöÈáè‰∏∫ 1777.5 ‰∏áÔºåÊâÄ‰ª• BTC ÁöÑÊÄªÂ∏ÇÂÄºÂ¢ûÂä†‰∫Ü100*1777.5‰∏á=17.775‰∫ø„ÄÇ‰ΩÜÂÆûÈôÖÊµÅÂÖ•ÁöÑËµÑÈáëÈáè‰∏∫ 100 ‰∏á USDT„ÄÇÊØîÁâπÂ∏ÅÁöÑÂÆûÈôÖ‰∫§ÊòìÈáèÂú®100‰∏á/10000Âà∞100‰∏á/10100‰πãÈó¥Ôºå100 ‰∏™‰∏çÂà∞ÔºåÂíåÊâÄÊúâÁöÑÊØîÁâπÂ∏ÅÊï∞ÈáèÁõ∏ÊØîÊòØÂæàÂ∞ëÁöÑ„ÄÇËøôÊÑèÂë≥ÁùÄ‰ª∑Ê†ºÂíåÂ∏ÇÂÄºÁöÑÊ≥¢Âä®ÂÖ∂ÂÆûÂè™ÊòØ‰∏ÄÈÉ®ÂàÜÂèÇ‰∏é‰∫§ÊòìÁöÑÊØîÁâπÂ∏ÅÊâÄÂØºËá¥ÁöÑ„ÄÇ ËøôÂëäËØâÊàë‰ª¨ÔºöÂ∏ÇÂÄºÊòØËôöÁöÑÔºåËÄå‰∫§ÊòìÈáèÊõ¥‰∏∫ÁúüÂÆû„ÄÇÂ¶ÇÊûúÊüê‰∏™Â∏Å‰∫§ÊòìÈáèËøá‰ΩéÔºåËÄåÂ∏ÇÂÄºËøáÈ´òÔºåËØ¥ÊòéËØ•Âä†ÂØÜË¥ßÂ∏ÅË¢´‰∫∫ÊâÄÊìçÊéßÔºåÈÇ£‰πàÂ∞ÜÂçÅÂàÜÂç±Èô©„ÄÇ]]></content>
      <tags>
        <tag>Â∏ÅÂúà</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ëá™Âà∂jsonËß£ÊûêÂô®]]></title>
    <url>%2Fblog%2F2019%2F10%2F01%2F%E8%87%AA%E5%88%B6json%E8%A7%A3%E6%9E%90%E5%99%A8%2F</url>
    <content type="text"><![CDATA[ÂÖ¨Âè∏ÂÆâÊéí‰∫Ü‰∏ÄÊ¨°Êñ∞‰∫∫ÊäÄÊúØÂàÜ‰∫´ÔºåÊàëÂàÜ‰∫´ÁöÑ‰∏ªÈ¢òÊòØÔºöËá™Âà∂ json Ëß£ÊûêÂô® json ÂÆòÁΩë‰ªãÁªç]]></content>
      <tags>
        <tag>È°πÁõÆ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂõæÁÅµÊú∫]]></title>
    <url>%2Fblog%2F2019%2F04%2F26%2F%E5%9B%BE%E7%81%B5%E6%9C%BA%2F</url>
    <content type="text"><![CDATA[ÂõæÁÅµÊú∫ÂõæÁÅµÊú∫ÔºàTuring MachineÔºâÊòØ Ëã±ÂõΩÊï∞Â≠¶ÂÆ∂Ëâæ‰º¶¬∑ÂõæÁÅµ Âú® 1936 Âπ¥ÂèëË°®ÁöÑ &quot;On Computable Numbers, with an Application to the Entscheidungsproblem&quot;Ôºà„ÄäËÆ∫ÂèØËÆ°ÁÆóÊï∞ÂèäÂÖ∂Âú®Âà§ÂÆöÊÄßÈóÆÈ¢ò‰∏äÁöÑÂ∫îÁî®„ÄãÔºâ‰∏≠ÊèêÂá∫ÁöÑÊï∞Â≠¶Ê®°Âûã„ÄÇÂú®ÊñáÁ´†‰∏≠ÂõæÁÅµÊèèËø∞‰∫ÜÂÆÉÊòØ‰ªÄ‰πàÔºåÂπ∂‰∏îËØÅÊòé‰∫ÜÔºåÂè™Ë¶ÅÂõæÁÅµÊú∫ÂèØ‰ª•Ë¢´ÂÆûÁé∞ÔºåÂ∞±ÂèØ‰ª•Áî®Êù•Ëß£ÂÜ≥‰ªª‰ΩïÂèØËÆ°ÁÆóÈóÆÈ¢ò„ÄÇ ÂéÜÂè≤ Â¶àÂí™ËØ¥ÔºöÂõæÁÅµ Ê®°‰ªøÊ∏∏Êàè ÂõæÁÅµÊú∫ÁöÑÂü∫Êú¨ÊÄùÊÉ≥ÂõæÁÅµÊú∫ÊòØ‰∏ÄÁßç ÊäΩË±°ËÆ°ÁÆóÊ®°ÂûãÔºåÂõæÁÅµÊú∫ÁöÑÊûÑÊàêÔºö ‰∏ÄÊù°Êó†ÈôêÈïøÁöÑÁ∫∏Â∏¶ÔºåÁ∫∏Â∏¶Áî±ÂæàÂ§ö‰∏™Ê†ºÂ≠êÊûÑÊàêÔºåÁî®‰∫éËæìÂÖ•ËæìÂá∫‰ø°ÊÅØ„ÄÇÊØè‰∏™Ê†ºÂ≠ê‰∏≠ÂåÖÂê´‰∏Ä‰∏™Êù•Ëá™ÊúâÈôêÂ≠óÊØçË°®ÁöÑÁ¨¶Âè∑ÔºåÂ≠óÊØçË°®‰∏≠Êúâ‰∏Ä‰∏™ÁâπÊÆäÁ¨¶Âè∑Ë°®Á§∫Á©∫ÁôΩ„ÄÇÁ∫∏Â∏¶‰∏ä‰∏ÄÁ´ØÁöÑÊ†ºÂ≠ê‰ªé 0 ÂºÄÂßãÁºñÂè∑ÔºåÂè¶‰∏ÄÁ´ØÊó†ÈôêÂª∂‰º∏‰∏ÄÁõ¥Âà∞Êó†Á©∑Â§ß„ÄÇ ‰∏Ä‰∏™ËØªÂÜôÂ§¥ÔºåÁî®‰∫éËØªÂÜôÁ∫∏Â∏¶ ‰∏Ä‰∏™Áä∂ÊÄÅÂØÑÂ≠òÂô®ÔºåÁî®‰∫é‰øùÂ≠òÊú∫Âô®Áä∂ÊÄÅ„ÄÇÂõæÁÅµÊú∫ÁöÑÁä∂ÊÄÅ‰∏™Êï∞ÊúâÈôêÔºåÂπ∂‰∏îÊúâ‰∏Ä‰∏™ÁâπÊÆäÁöÑÁä∂ÊÄÅÔºöÂÅúÊú∫Áä∂ÊÄÅ ‰∏ÄÂ•óÊéßÂà∂ËßÑÂàôÔºåÊ†πÊçÆÂΩìÂâçÊú∫Âô®Áä∂ÊÄÅÂíåÁ∫∏Â∏¶ÂÜÖÂÆπÊù•Á°ÆÂÆö‰∏ã‰∏ÄÊ≠•ÁöÑÂä®‰ΩúÔºö ÂÜôÂÖ•ÊàñÊì¶Èô§ÂΩìÂâçÊ†ºÂ≠êÂÜÖÂÆπ ÁßªÂä®ËØªÂÜôÂ§¥ÔºåÂêëÂ∑¶„ÄÅÂêëÂè≥„ÄÅÊàñ‰∏çÂä® ‰øùÊåÅÂΩìÂâçÁä∂ÊÄÅÊàñËΩ¨ÁßªÂà∞Âè¶‰∏ÄÁä∂ÊÄÅ ÂõæÁÅµÊú∫ÁöÑÊ≠£ÂºèÂÆö‰πâa (one-tape) Turing machine can be formally defined as a 7-tuple $M=\langle Q,\Gamma ,b,\Sigma ,\delta ,q_{0},F\rangle $ where $Q$ is a finite, non-empty set of states; $\Gamma$ is a finite, non-empty set of tape alphabet symbols; $b\in \Gamma$ is the blank symbol (the only symbol allowed to occur on the tape infinitely often at any step during the computation); $\Sigma \subseteq \Gamma \setminus {b}$ is the set of input symbols, that is, the set of symbols allowed to appear in the initial tape contents; $q_{0}\in Q$ is the initial state; $F\subseteq Q$ is the set of final states or accepting states. The initial tape contents is said to be accepted by $M$ if it eventually halts in a state from $F$. $\delta :(Q\setminus F)\times \Gamma \not \to Q\times \Gamma \times \{L,R\}$ is a partial function called the transition function, where L is left shift, R is right shift. (A relatively uncommon variant allows &quot;no shift&quot;, say N, as a third element of the latter set.) If $\delta$ is not defined on the current state and the current tape symbol, then the machine halts; ÂõæÁÅµÊú∫ÁöÑÂÆûË∑µ Brainfuck ÂõæÁÅµÂÆåÂ§áÂè™Ë¶ÅËÉΩÊ®°ÊãüÂçïÂ∏¶ÂõæÁÅµÊú∫ÔºåÂ∞±ÊòØÂõæÁÅµÂÆåÂ§áÁöÑ„ÄÇËøô‰πüÊÑèÂë≥ÁùÄÂÖ∂ËÆ°ÁÆóËÉΩÂäõ‰∏éÈÄöÁî®ÂõæÁÅµÊú∫Á≠âÂêå„ÄÇ ‰∏çÊòØÂõæÁÅµÂÆåÂ§áÁöÑÁöÑÂ∏∏ËßÅÊÉÖÂÜµÊúâÔºõ ÈÄíÂΩíÊàñÂæ™ÁéØÊúâÈôêÔºåÊó†Ê≥ïÂÜô‰∏çÁªàÊ≠¢ÁöÑÁ®ãÂ∫èÔºåÂ¶Çwhile(true){} Êó†Ê≥ïÂÆûÁé∞Á±ª‰ººÊï∞ÁªÑÊàñÂàóË°®ËøôÊ†∑ÁöÑÊï∞ÊçÆÁªìÊûÑÔºà‰∏çËÉΩÊ®°ÊãüÁ∫∏Â∏¶Ôºâ ÂõæÁÅµÂÆåÂ§á‰πüÊúâÂèØËÉΩÂ∏¶Êù•ÂùèÂ§ÑÔºå‰∏çÂõæÁÅµÂÆåÂ§á‰πü‰∏çÊòØÂÆåÂÖ®Ê≤°Áî®ÔºåÊØîÂ¶ÇÔºöÊúâ‰∫õÂú∫ÊôØÊàë‰ª¨ÈúÄË¶ÅÈôêÂà∂ËØ≠Ë®ÄÁöÑË°®ËææËÉΩÂäõÔºåÂ¶Ç ÈôêÂà∂Êó†ÈôêÂæ™ÁéØÂíåÈÄíÂΩíÔºå‰øùËØÅÊàë‰ª¨ÁöÑÁ®ãÂ∫è‰∏ÄÂÆöÊòØÂèØÁªàÊ≠¢ÁöÑ„ÄÇ ÂÅúÊú∫ÈóÆÈ¢òÂÅúÊú∫ÈóÆÈ¢òÔºàËã±ËØ≠Ôºöhalting problemÔºâÊòØÈÄªËæëÊï∞Â≠¶‰∏≠ÂèØËÆ°ÁÆóÊÄßÁêÜËÆ∫ÁöÑ‰∏Ä‰∏™ÈóÆÈ¢ò„ÄÇÈÄö‰øóÂú∞ËØ¥ÔºåÂÅúÊú∫ÈóÆÈ¢òÂ∞±ÊòØÂà§Êñ≠‰ªªÊÑè‰∏Ä‰∏™Á®ãÂ∫èÊòØÂê¶ËÉΩÂú®ÊúâÈôêÁöÑÊó∂Èó¥‰πãÂÜÖÁªìÊùüËøêË°åÁöÑÈóÆÈ¢ò„ÄÇËØ•ÈóÆÈ¢òÁ≠â‰ª∑‰∫éÂ¶Ç‰∏ãÁöÑÂà§ÂÆöÈóÆÈ¢òÔºöÊòØÂê¶Â≠òÂú®‰∏Ä‰∏™Á®ãÂ∫è PÔºåÂØπ‰∫é‰ªªÊÑèËæìÂÖ•ÁöÑÁ®ãÂ∫è wÔºåËÉΩÂ§üÂà§Êñ≠ w ‰ºöÂú®ÊúâÈôêÊó∂Èó¥ÂÜÖ ÁªìÊùüÊàñËÄÖÊ≠ªÂæ™ÁéØ„ÄÇ Ëâæ‰º¶¬∑ÂõæÁÅµÂú® 1936 Âπ¥Áî® ÂØπËßíËÆ∫ËØÅÊ≥ï ËØÅÊòé‰∫ÜÔºå‰∏çÂ≠òÂú®Ëß£ÂÜ≥ÂÅúÊú∫ÈóÆÈ¢òÁöÑÈÄöÁî®ÁÆóÊ≥ï„ÄÇ ÂÅúÊú∫ÈóÆÈ¢òÂåÖÂê´‰∫Ü Ëá™ÊàëÊåáÊ∂âÔºåÊú¨Ë¥®ÊòØ ‰∏ÄÈò∂ÈÄªËæë ÁöÑ‰∏çÂÆåÂ§áÊÄßÔºåÁ±ª‰ººÁöÑÂëΩÈ¢òÊúâ ÁêÜÂèëÂ∏àÊÇñËÆ∫„ÄÅÂÖ®ËÉΩÊÇñËÆ∫ Á≠â„ÄÇ ËØÅÊòéÂæàÁÆÄÂçïÔºåÊûÑÈÄ†G=~GÂëΩÈ¢òÔºàG Á≠â‰∫é G ÈùûÔºâÔºåËÆ©ÈÄªËæëÂ¥©Ê∫ÉÔºåÊó†ËÆ∫ G ÊòØÁúüËøòÊòØÂÅáÔºåÈÉΩÊòØÈîôÁöÑÔºåÊúÄÂêéÊé®ÂØºÂá∫Ôºö‰∏çÂ≠òÂú®ËøôÊ†∑ÁöÑ G„ÄÇ ÂÅúÊú∫ÈóÆÈ¢òËØÅÊòéËøáÁ®ãÔºàÂèçËØÅÊ≥ïÔºâÔºö Â¶ÇÊûúÂ≠òÂú®ÂèØ‰ª•Âà§ÂÆö‰ªªÊÑèÁ®ãÂ∫èÊòØÂê¶ÂÅúÊú∫ÁöÑÁ®ãÂ∫èÔºåÊàë‰ª¨Âßë‰∏îÁß∞ÂÆÉ‰∏∫ ‰∏äÂ∏ùÁ®ãÂ∫è ÈÇ£Êàë‰ª¨ÂÆö‰πâËøôÊ†∑‰∏Ä‰∏™Á®ãÂ∫èÔºåÂÆÉÂà©Áî®‰∏äÂ∏ùÁ®ãÂ∫èÂà§Êñ≠Ëá™Â∑±ÊòØÂê¶ÂÅúÊú∫Ôºå‰ΩÜÂ¶ÇÊûú‰∏äÂ∏ùÁ®ãÂ∫èËæìÂá∫ÂÅúÊú∫ÔºåÂÆÉÂ∞±‰∏çÂÅúÔºõÂ¶ÇÊûú‰∏äÂ∏ùÁ®ãÂ∫èËæìÂá∫‰∏çÂÅúÊú∫ÔºåÂÆÉÂ∞±ÂÅúÊú∫ÔºàÂ∞±ÊòØÂèçÁùÄÂπ≤Ôºâ„ÄÇËøôÊ†∑‰∏ÄÊù•Êó†ËÆ∫‰∏äÂ∏ùÁ®ãÂ∫èËæìÂá∫‰ªÄ‰πàÔºå‰∏äÂ∏ùÁ®ãÂ∫èÈÉΩÊòØÈîôÁöÑ„ÄÇÈÇ£‰πàÊàë‰ª¨Âè™ËÉΩËØ¥‰∏çÂ≠òÂú®ËøôÊ†∑ÁöÑ‰∏äÂ∏ùÁ®ãÂ∫è„ÄÇ 123456789101112def is_halt(program, input): if program halts on input: return true else: return falsedef fuck_is_halt(): if is_halt(fuck_is_halt): while (1): pass else: pass Matrix67ÔºöÂÅúÊú∫ÈóÆÈ¢ò„ÄÅChaitin Â∏∏Êï∞‰∏é‰∏áËÉΩËØÅÊòéÊñπÊ≥ï ÂàòÊú™ÈπèÔºöÂ∫∑ÊâòÂ∞î„ÄÅÂì•Âæ∑Â∞î„ÄÅÂõæÁÅµ‚Äî‚ÄîÊ∞∏ÊÅíÁöÑÈáëËâ≤ÂØπËßíÁ∫ø(rev#2) Ëá™ÊàëÊåáÊ∂â Âú®Êï∞Â≠¶‰∏≠ÔºåÂØπËá™ÊåáÁöÑÁ†îÁ©∂ÊúÄÁªàÂØºËá¥‰∫ÜËëóÂêçÁöÑ Âì•Âæ∑Â∞î‰∏çÂÆåÂ§áÂÆöÁêÜ„ÄÇ ËÆ°ÁÆóÊú∫Á®ãÂ∫è‰∏≠ÁöÑËá™Êåá‰∏ªË¶ÅÊòØ‰∏∫ ÈÄíÂΩí Âæ∑ÁΩóÊñØÁâπÊïàÂ∫îÔºö Êàë‰ª¨ÁªèÂ∏∏ÂèØ‰ª•Âú®‰∏ªÊí≠Èó¥ÁúãÂà∞Á±ª‰ººÁöÑÁîªÈù¢Ôºö ‰πüÂèØ‰ª•Áî®‰∏§Èù¢ÈïúÂ≠êËá™Â∑±ÂÅöËøô‰∏™ÂÆûÈ™å„ÄÇ Â¶àÂí™ËØ¥ÔºöÂì•Âæ∑Â∞î]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÜØ¬∑ËØ∫‰æùÊõºÁªìÊûÑ]]></title>
    <url>%2Fblog%2F2019%2F04%2F22%2F%E5%86%AF%C2%B7%E8%AF%BA%E4%BE%9D%E6%9B%BC%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[ÂÜØ¬∑ËØ∫‰æùÊõºÁªìÊûÑÂÜØ¬∑ËØ∫‰ºäÊõºÁªìÊûÑ‰∏é Â≠òÂÇ®Á®ãÂ∫èÂûãËÆ°ÁÆóÊú∫ ÊòØ‰∫íÁõ∏ÈÄöÁî®ÁöÑÂêçËØç Âìà‰ΩõÁªìÊûÑ ÊòØ‰∏ÄÁßçÂ∞ÜÁ®ãÂ∫èÊï∞ÊçÆ‰∏éÊôÆÈÄöÊï∞ÊçÆÂàÜÂºÄÂ≠òÂÇ®ÁöÑËÆæËÆ°Ê¶ÇÂøµÔºåÂèØ‰ª•ËØ¥ÊòØÂÜØ¬∑ËØ∫‰æùÊõºÁªìÊûÑÁöÑ‰∏ÄÁßç„ÄÇ Â≠òÂÇ®Á®ãÂ∫èËÆ°ÁÆóÊú∫Âú®‰ΩìÁ≥ªÁªìÊûÑ‰∏ä‰∏ªË¶ÅÁâπÁÇπÊúâÔºö ‰ª•ËøêÁÆóÂçïÂÖÉ‰∏∫‰∏≠ÂøÉ ÈááÁî®Â≠òÂÇ®Á®ãÂ∫èÂéüÁêÜ Â≠òÂÇ®Âô®ÊòØÊåâÂú∞ÂùÄËÆøÈóÆ„ÄÅÁ∫øÊÄßÁºñÂùÄÁöÑÁ©∫Èó¥ ÊéßÂà∂ÊµÅÁî±Êåá‰ª§ÊµÅ‰∫ßÁîü Êåá‰ª§Áî± Êìç‰ΩúÁ†Å Âíå Âú∞ÂùÄÁ†Å ÁªÑÊàê Êï∞ÊçÆ‰ª•‰∫åËøõÂà∂ÁºñÁ†Å ‰∫î‰∏™ÁªÑÊàêÈÉ®ÂàÜÔºö Â≠òÂÇ®Âô® ÊéßÂà∂Âô® ËøêÁÆóÂô®ÔºàÁÆóÊúØÈÄªËæëÂçïÂÖÉÔºâ ËæìÂÖ• ËæìÂá∫ ÂéÜÂè≤ ÊñáÊòé‰πãÂÖâÔºöÁîµÂ≠êËÆ°ÁÆóÊú∫ÁöÑÂèëÊòéÔºç‰ªéÂõæÁÅµÂà∞ÂÜØËØ∫‰æùÊõºÔºà‰∏äÔºâ ÊñáÊòé‰πãÂÖâÔºöÂÜØËØ∫‰æùÊõºÁ≥ªÁªüÁªìÊûÑÂíåÁîµÂ≠êËÆ°ÁÆóÊú∫ÁöÑÂèëÊòéÔºà‰∏ãÔºâ Â¶àÂí™ËØ¥ÔºöËøáÁõÆ‰∏çÂøòÁöÑÂ§©Êâç‚Äî‚ÄîÂÜØËØ∫‰æùÊõºÁöÑ‰º†Â•á‰∫∫Áîü ‰ªñ‰∏∫‰ΩïË¢´Áß∞‰ΩúÈÄöÁî®ËÆ°ÁÆóÊú∫‰πãÁà∂Ôºü ÂÜØ¬∑ËØ∫‰æùÊõº ÂÜØ¬∑ËØ∫‰æùÊõºÁî±‰∫éÂú®ÊõºÂìàÈ°øÂ∑•Á®ã‰∏≠ÈúÄË¶ÅÂ§ßÈáèÁöÑËøêÁÆóÔºå‰ªéËÄå‰ΩøÁî®‰∫ÜÂΩìÊó∂ÊúÄÂÖàËøõÁöÑ‰∏§Âè∞ËÆ°ÁÆóÊú∫ Mark I Âíå ENIACÔºåÂú®‰ΩøÁî® Mark I Âíå ENIAC ÁöÑËøáÁ®ã‰∏≠Ôºå‰ªñÊÑèËØÜÂà∞‰∫ÜÂ≠òÂÇ®Á®ãÂ∫èÁöÑÈáçË¶ÅÊÄßÔºå‰ªéËÄåÊèêÂá∫‰∫ÜÂ≠òÂÇ®Á®ãÂ∫èÈÄªËæëÊû∂ÊûÑ„ÄÇ ÊúÄÊó©ÁöÑËÆ°ÁÆóÊú∫ÂÜÖÂê´Âõ∫ÂÆöÁî®ÈÄîÁöÑÁ®ãÂ∫èÔºåÂπ∂ÈùûÂèØÁºñÁ®ãÔºåËã•ÊÉ≥Ë¶ÅÊîπÂèòÊ≠§Êú∫Âô®ÁöÑÁ®ãÂ∫èÔºå‰Ω†ÂøÖÈ°ªÊõ¥ÊîπÁ∫øË∑Ø„ÄÅÊõ¥ÊîπÁªìÊûÑÁîöËá≥ÈáçÊñ∞ËÆæËÆ°Êú∫Âô®„ÄÇËÄåÂ≠òÂÇ®Á®ãÂ∫èÂûãËÆ°ÁÆóÊú∫ÁöÑÊ¶ÇÂøµÊîπÂèò‰∫ÜËøô‰∏ÄÂàá„ÄÇÂÄüÁùÄÂ∞ÜÊåá‰ª§ÂΩìÊàê‰∏ÄÁßçÁâπÂà´Á±ªÂûãÁöÑÈùôÊÄÅÊï∞ÊçÆÔºå‰∏ÄÂè∞Â≠òÂÇ®Á®ãÂ∫èÂûãËÆ°ÁÆóÊú∫ÂèØËΩªÊòìÊîπÂèòÂÖ∂Á®ãÂ∫èÔºåÂπ∂Âú®Á®ãÂ∫èÊéßÂà∂‰∏ãÊîπÂèòÂÖ∂ËøêÁÆóÂÜÖÂÆπ„ÄÇ ‰ºòÂäøÂÜØ¬∑ËØ∫‰æùÊõºÊû∂ÊûÑÁ¨¨‰∏ÄÊ¨° Â∞ÜÂ≠òÂÇ®Âô®ÂíåËøêÁÆóÂô®ÂàÜÂºÄÔºåÊåá‰ª§ÂíåÊï∞ÊçÆÂùáÊîæÁΩÆ‰∫éÂ≠òÂÇ®Âô®‰∏≠Ôºå‰∏∫ËÆ°ÁÆóÊú∫ÁöÑ ÈÄöÁî®ÊÄß Â•†ÂÆö‰∫ÜÂü∫Á°Ä„ÄÇËôΩÁÑ∂Âú®ËßÑËåÉ‰∏≠ËÆ°ÁÆóÂçïÂÖÉ‰æùÁÑ∂ÊòØÊ†∏ÂøÉÔºå‰ΩÜÂÜØ¬∑ËØ∫‰æùÊõºÊû∂ÊûÑ‰∫ãÂÆû‰∏äÂØºËá¥‰∫Ü ‰ª•Â≠òÂÇ®Âô®‰∏∫Ê†∏ÂøÉ ÁöÑÁé∞‰ª£ËÆ°ÁÆóÊú∫ÁöÑËØûÁîü„ÄÇ Ê≥®ÔºöËØ∑ÂêÑ‰ΩçÂú®ÂøÉÈáåÊòéÁ°Æ‰∏Ä‰ª∂‰∫ãÊÉÖÔºöÂ≠òÂÇ®Âô®ÊåáÁöÑÊòØÂÜÖÂ≠òÔºåÂç≥ RAM„ÄÇÁ£ÅÁõòÁêÜËÆ∫‰∏äÂ±û‰∫éËæìÂÖ•ËæìÂá∫ËÆæÂ§á„ÄÇ Áº∫Èô∑ Á®ãÂ∫èÂèØ‰øÆÊîπÂæàÂèØËÉΩÊòØÈùûÂ∏∏ÂÖ∑‰º§ÂÆ≥ÊÄßÁöÑÔºöÂú®‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂ≠òÂÇ®Á®ãÂ∫èÂûãËÆ°ÁÆóÊú∫‰∏äÔºå‰∏Ä‰∏™ËÆæËÆ°‰∏çËâØÁöÑÁ®ãÂ∫èÂèØËÉΩ‰ºö‰º§ÂÆ≥Ëá™Â∑±„ÄÅÂÖ∂‰ªñÁ®ãÂ∫èÁîöÊàñÊòØÊìç‰ΩúÁ≥ªÁªüÔºåÂØºËá¥Ê≠ªÊú∫„ÄÅÁºìÂ≠òÊ∫¢Âá∫Â∞±ÊòØ‰∏Ä‰∏™ÂÖ∏Âûã‰æãÂ≠ê„ÄÇËÄåÂàõÈÄ†ÊàñÊõ¥ÊîπÂÖ∂‰ªñÁ®ãÂ∫èÁöÑËÉΩÂäõ‰πüÂØºËá¥‰∫ÜÊÅ∂ÊÑèËΩØ‰ª∂ÁöÑÂá∫Áé∞„ÄÇÂà©Áî®ÁºìÂ≠òÊ∫¢Âá∫Ôºå‰∏Ä‰∏™ÊÅ∂ÊÑèÁ®ãÂ∫èÂèØ‰ª•Ë¶ÜÁõñË∞ÉÁî®Â†ÜÊ†àÔºàCall stackÔºâÂπ∂ÊîπÂÜô‰ª£Á†ÅÔºåÂπ∂‰∏î‰øÆÊîπÂÖ∂‰ªñÁ®ãÂ∫èÊñá‰ª∂‰ª•ÈÄ†ÊàêËøûÈîÅÁ†¥Âùè„ÄÇÂ≠òÂÇ®Âô®‰øùÊä§Êú∫Âà∂ÂèäÂÖ∂‰ªñÂΩ¢ÂºèÁöÑËÆøÈóÆÊéßÂà∂ÂèØ‰ª•‰øùÊä§ÊÑèÂ§ñÊàñÊÅ∂ÊÑèÁöÑ‰ª£Á†ÅÊõ¥Âä®„ÄÇ ÂÜØ¬∑ËØ∫‰ºäÊõºÁì∂È¢àÔºàvon Neumann bottleneckÔºâÔºöÂú®ÂÜÖÂ≠òÂÆπÈáèÊåáÊï∞Á∫ßÊèêÂçá‰ª•ÂêéÔºåCPU ÂíåÂÜÖÂ≠ò‰πãÈó¥ÁöÑÊï∞ÊçÆ‰º†ËæìÂ∏¶ÂÆΩÊàê‰∏∫‰∫ÜÁì∂È¢à„ÄÇÁºìËß£ÁöÑÂäûÊ≥ïÊúâÔºö Âú® CPU ÂíåÂÜÖÂ≠ò‰πãÈó¥Êèê‰æõ cacheÔºàÁºìÂ≠òÔºåÈÄüÂ∫¶ÊØîÂÜÖÂ≠òÂø´ÂæàÂ§öÂÄçÔºâ Â∞ÜÊï∞ÊçÆÂíåÊåá‰ª§ÂàÜÂºÄÂ≠òÂÇ®Âπ∂ËÉΩÂ§üÂÅöÂà∞ÂêåÊó∂ËÆøÈóÆÔºàÂú®‰∏ÄËà¨ÁöÑÂÜØ¬∑ËØ∫‰æùÊõºÁªìÊûÑ‰∏≠Êï∞ÊçÆÂíåÊåá‰ª§ÊîæÂú®Âêå‰∏ÄÂÜÖÂ≠òÈÄöËøáÂêå‰∏ÄÊï∞ÊçÆÊÄªÁ∫øËÆøÈóÆÔºåÂèñÊï∞ÊçÆÂíåÂèñÊåá‰ª§‰∏çËÉΩÂêåÊó∂ËøõË°åÔºåËÄåÂìà‰ΩõÁªìÊûÑÂàôÊòØÂ∞ÜÊï∞ÊçÆÂíåÊåá‰ª§ÂàÜÂºÄÔºåÂèØÂêåÊó∂ËÆøÈóÆÔºâ ÂàÜÊîØÈ¢ÑÊµãÂíåÊµÅÊ∞¥Á∫ø ÂÆûÈôÖ‰∏äÔºåÁªùÂ§ßÂ§öÊï∞Áé∞‰ª£ËÆ°ÁÆóÊú∫‰ΩøÁî®ÁöÑÊòØÊâÄË∞ìÁöÑ‚ÄúModified Harvard Architecture‚ÄùÔºåÊåá‰ª§ÂíåÊï∞ÊçÆÂÖ±‰∫´Âêå‰∏Ä‰∏™ address spaceÔºå‰ΩÜÁºìÂ≠òÊòØÂàÜÂºÄÁöÑ„ÄÇÂú®ÂÜÖÂ≠òÈáåÔºåÊåá‰ª§ÂíåÊï∞ÊçÆÊòØÂú®‰∏ÄËµ∑ÁöÑ„ÄÇËÄåÂú® CPU ÂÜÖÁöÑÁºìÂ≠ò‰∏≠ÔºåËøòÊòØ‰ºöÂå∫ÂàÜÊåá‰ª§ÁºìÂ≠òÂíåÊï∞ÊçÆÁºìÂ≠òÔºåÊúÄÁªàÊâßË°åÁöÑÊó∂ÂÄôÔºåÊåá‰ª§ÂíåÊï∞ÊçÆÊòØ‰ªé‰∏§‰∏™‰∏çÂêåÁöÑÂú∞ÊñπÂá∫Êù•ÁöÑ„ÄÇ‰Ω†ÂèØ‰ª•ÁêÜËß£‰∏∫Âú® CPU Â§ñÈÉ®ÔºåÈááÁî®ÁöÑÊòØÂÜØËØ∫‰æùÊõºÊ®°ÂûãÔºåËÄåÂú® CPU ÂÜÖÈÉ®Áî®ÁöÑÊòØÂìà‰ΩõÁªìÊûÑ„ÄÇ Â§ßÈÉ®ÂàÜÁöÑDSPÈÉΩÊ≤°ÊúâÁºìÂ≠òÔºåÂõ†ËÄåÁõ¥Êé•Â∞±ÊòØÂìà‰ΩõÁªìÊûÑ„ÄÇ ‰∏äÂõæÊòØ i9-7980XE 18 Ê†∏ 36 Á∫øÁ®ãÁöÑÊ∞ëÁî®ÊúÄÂº∫ CPUÔºåÂÖ∂ÈÖçÂêàË∂ÖÈ¢ëËøáÁöÑ DDR4 3200MHz ÁöÑÂÜÖÂ≠òÔºåÊµãËØïÂá∫ÁöÑÂÜÖÂ≠òËØªÂèñÈÄüÂ∫¶‰∏∫ 90GB/S„ÄÇÁúãËµ∑Êù•ÂæàÂø´‰∫ÜÊòØ‰∏çÊòØÔºüÁúãÁúãÂõæ‰∏≠ÁöÑ L1 CacheÔºå3.7TB/S„ÄÇ Êàë‰ª¨ÂÜçÊù•ÁÆóÁÆóÊó∂Èó¥„ÄÇËøôÈ¢ó CPU ÊúÄÂ§ßÁùøÈ¢ë 4.4GHzÔºåÂ∞±ÊòØËØ¥ CPU ÊâßË°å‰∏Ä‰∏™Êåá‰ª§ÈúÄË¶ÅÁöÑÊó∂Èó¥ÊòØ 0.000000000227273 ÁßíÔºåÂç≥ 0.22nsÔºàÁ∫≥ÁßíÔºâÔºåËÄåÂÜÖÂ≠òÁöÑÂª∂ËøüÊòØ 68.1ns„ÄÇÊç¢Âè•ËØùËØ¥ÔºåÂè™Ë¶ÅÂéªÂÜÖÂ≠òÈáåÂèñ‰∏Ä‰∏™Â≠óËäÇÔºåÂ∞±ÈúÄË¶Å CPU Á≠âÂæÖ 300 ‰∏™Âë®ÊúüÔºå‰ΩïÂÖ∂ÁöÑÊµ™Ë¥π CPU ÁöÑÊó∂Èó¥Âïä„ÄÇ CPU L1 L2 L3 ‰∏âÁ∫ßÁºìÂ≠òÊòØ‰ΩøÁî®Âíå CPU ÂêåÊ†∑ÁöÑ 14 Á∫≥Á±≥Â∑•Ëâ∫Âà∂ÈÄ†ÁöÑÁ°ÖÂçäÂØº‰ΩìÔºåÊØè‰∏Ä‰∏™ bit ÈÉΩ‰ΩøÁî®ÂÖ≠‰∏™Âú∫ÊïàÂ∫îÁÆ°ÔºàÈÄö‰øóËß£ÈáäÊàê‰∏âÊûÅÁÆ°ÔºâÊûÑÊàêÔºåÊàêÊú¨È´òÊòÇ‰∏îÈùûÂ∏∏Âç†Áî® CPU Ê†∏ÂøÉÈù¢ÁßØÔºåÊïÖ‰∏çËÉΩÂÅöÊàêÂæàÂ§ßÂÆπÈáè„ÄÇ Èô§Ê≠§‰πãÂ§ñÔºåL1 L2 L3 ‰∏âÁ∫ßÁºìÂ≠òÂØπËÆ°ÁÆóÊú∫ÈÄüÂ∫¶ÁöÑÊèêÂçáÊù•Ê∫ê‰∫éËÆ°ÁÆóÊú∫ÂÜÖÂ≠òÁöÑ„ÄåÂ±ÄÈÉ®ÊÄß„ÄçÔºåÁõ∏ÂÖ≥ÂÜÖÂÆπÊàë‰ª¨‰πãÂêé‰ºö‰∏ìÈó®ËÆ®ËÆ∫„ÄÇ RAMÔºàRandom Access MemoryÔºå‰øóÁß∞ ÂÜÖÂ≠òÔºâÔºöÂÜÖÂ≠òÊúÄÂ§ßÁöÑÁâπÁÇπÊòØÔºöÊéâÁîµÂ§±ÂéªÊï∞ÊçÆ„ÄÇÁ®ãÂ∫èÊòØÈùôÊÄÅÁöÑÊñá‰ª∂Â≠òÊîæÂú®Â§ñÂ≠ò‰∏≠ÔºåËøõÁ®ãÊ≠£Âú®ËøêË°åÁöÑÁ®ãÂ∫èÔºåËøõÁ®ãÂ≠òÊîæÂú®ÂÜÖÂ≠ò‰∏≠„ÄÇÊàë‰ª¨‰πãÊâÄ‰ª•‰ΩøÁî®ÂÜÖÂ≠òÊòØÂõ†‰∏∫ÂÜÖÂ≠òÁöÑÈÄüÂ∫¶ÊØîÂ§ñÂ≠òÂø´ 100 ÂÄçÂ∑¶Âè≥„ÄÇ ROMÔºàRead-Only MemoryÔºåÂè™ËØªÂ≠òÂÇ®Âô®ÔºâÔºöROM ÊéâÁîµ‰∏çÂ§±ÂéªÊï∞ÊçÆ„ÄÇ]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰ªÄ‰πàÊòØÂ≠óÁ¨¶ÈõÜÂíåÁºñÁ†Å]]></title>
    <url>%2Fblog%2F2019%2F04%2F21%2F%E4%BB%80%E4%B9%88%E6%98%AF%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E7%BC%96%E7%A0%81%2F</url>
    <content type="text"><![CDATA[ÊñáÊú¨Êñá‰ª∂‰∏≠Ôºå‰∏∫‰∫ÜËÆ©ÊØîÁâπË°®Á§∫ÊñáÂ≠óÔºåÊàë‰ª¨ÂèëÊòé‰∫ÜÂ≠óÁ¨¶ÈõÜÔºåËÆ©ÁâπÂÆöÁöÑÊØîÁâπÂ∫èÂàóÂØπÂ∫îÁâπÂÆöÁöÑÂ≠óÁ¨¶„ÄÇ Â∏∏ËßÅÁöÑÂ≠óÁ¨¶ÈõÜÊúâÔºö ASCII EASCII GB2312 GBK Unicode UTF-8 Ôºà‰∏•Ê†ºÊù•ËØ¥ UTF-8 Âè™ÊòØ Unicode ÁöÑ‰∏ÄÁßçÁºñÁ†ÅÊñπÂºèÔºâ ANSI ÁºñÁ†Å ASCIIËÆ°ÁÆóÊú∫ËØûÁîü‰∫éÁæéÂõΩÔºåÂõ†Ê≠§ÊúÄÊó©ÁöÑÊó∂ÂÄôÔºå‰∫∫‰ª¨Âè™ÈúÄË¶ÅË°®Á§∫Ëã±Êñá 26 ‰∏™Â≠óÁ¨¶Âú®ÂÜÖÁöÑÂ∞ëÊï∞Â≠óÁ¨¶ÔºåÁî®Âçä‰∏™Â≠óËäÇÂ∞±ÂèØ‰ª•Ë°®Á§∫ÂÆåËøô‰∫õÂ≠óÁ¨¶„ÄÇËøôÂ∞±ÊòØ ASCII Â≠óÁ¨¶ÈõÜÔºåÊúÄÈ´ò‰Ωç‰∏∫ 0ÔºåÂÖ∂‰Ωô 7 ‰ΩçÂèØ‰ª•Ë°®Á§∫ÁöÑËåÉÂõ¥ÊòØÔºö0~127„ÄÇÊÄªÂÖ± 128 ‰∏™Â≠óÁ¨¶„ÄÇ ASCII Â≠óÁ¨¶ÂàÜ‰∏∫ÔºöÊéßÂà∂Â≠óÁ¨¶Ôºà‰∏çÂèØÊòæÁ§∫Ôºâ Âíå ÂèØÊòæÁ§∫Â≠óÁ¨¶ ÂÖ∂‰∏≠Ôºå0x20 ‰ª•‰∏ã‰∏∫ÊéßÂà∂Â≠óÁ¨¶Ôºå‰∏çÂèØÊòæÁ§∫„ÄÇÊØîÂ¶ÇÔºå0x10 Ë°®Á§∫Êç¢Ë°åÔºå0x07 Ë°®Á§∫ÂèëÂ£∞„ÄÇÂè¶Â§ñËøòÊúâ‰∏™ÁâπÊÆäÁöÑÊéßÂà∂Â≠óÁ¨¶Ôºö0x7f Ë°®Á§∫Âà†Èô§ÔºåÊâÄ‰ª•ÊÄªÂÖ±ÊòØ 33 ‰∏™ÊéßÂà∂Â≠óÁ¨¶Ôºå95 ‰∏™ÂèØÊòæÁ§∫Â≠óÁ¨¶„ÄÇ EASCIIÊ¨ßÊ¥≤ÂõΩÂÆ∂‰ΩøÁî®ËÆ°ÁÆóÊú∫‰πãÂêéÔºå‰πüÊúâ‰∫ÜÂàõÂª∫Â≠óÁ¨¶ÈõÜÁöÑÈúÄÊ±ÇÔºå‰∫éÊòØÂØπ ASCII ËøõË°åÊâ©Â±ïÔºå‰ΩøÁî®‰∫ÜÂâ©‰∏ã‰∏ÄÂçäÂ≠óËäÇÁöÑÁ©∫Èó¥Ôºå0x80 - 0xffÁöÑÂÆö‰πâÂ∞±Ë¢´Â°´ÂÖÖÊàê‰∫ÜÂ∏åËÖäÂ≠óÊØçÔºåÁΩóÈ©¨Â≠óÊØçÁ≠âÁ¨¶Âè∑„ÄÇ Ê≠§Êó∂ÔºåÁºñÁ†Å‰æùÊóßÊéßÂà∂Âú® 8 ‰Ωç‰ª•ÂÜÖÔºåÁõ∏ÂÆâÊó†‰∫ã„ÄÇ GB2312 GB ÊòØÂõΩÊ†áÁöÑÊÑèÊÄù ‰∏≠ÂõΩÂºÄÂßã‰ΩøÁî®ËÆ°ÁÆóÊú∫Ôºå‰∫éÊòØÊúâ‰∫ÜËøô‰∏™Â≠óÁ¨¶ÈõÜÔºåÁî±‰∫é‰∏≠ÊñáÊòØË±°ÂΩ¢ÊñáÂ≠óÔºåÂ¶ÇÊûúÊØè‰∏™Â≠óÁ¨¶‰∏Ä‰∏™ÈîÆÁöÑËØùÔºåËÇØÂÆöÊîæ‰∏ç‰∏ãÔºö ‰ΩÜÊàë‰ª¨ÊúâÊãºÈü≥ÔºåÊâÄ‰ª•Áõ¥Êé•Áî®ÁæéÂõΩÈîÆÁõòÂ∞±Ë°å‰∫Ü„ÄÇ GB2312 ÂÖ±Êî∂ÂΩï‰∫Ü 6763 ‰∏™Ê±âÂ≠óÔºåÂÖ∂‰∏≠‰∏ÄÁ∫ßÊ±âÂ≠ó 3755 ‰∏™Ôºå‰∫åÁ∫ßÊ±âÂ≠ó 3008 ‰∏™„ÄÇÂÆÉÊâÄÊî∂ÂΩïÁöÑÊ±âÂ≠óÂ∑≤ÁªèË¶ÜÁõñ‰∏≠ÂõΩÂ§ßÈôÜ 99.75%ÁöÑ‰ΩøÁî®È¢ëÁéá„ÄÇ GB2312 ÁöÑÂü∫Êú¨ÊÄùÊÉ≥ÂæàÁÆÄÂçïÔºåÂ¶ÇÊûú‰∏Ä‰∏™Â≠óÁ¨¶ÂÄº‰∏∫ 127 Âèä‰ª•‰∏ãÔºåÈÇ£ÂÆÉÂ∞±ÊòØ‰∏Ä‰∏™ÂçïÂ≠óËäÇÂ≠óÁ¨¶ÔºåÂíå ASCII ÂÖºÂÆπÔºõÂ¶ÇÊûú‰∏Ä‰∏™Â≠óÁ¨¶ÂÄº‰∏∫ 127 ‰ª•‰∏äÔºåÈÇ£ÂÆÉÂíåÂêéÈù¢ÁöÑÈÇ£‰∏™Â≠óÁ¨¶ÁªÑÊàê‰∏Ä‰∏™Ê±âÂ≠ó„ÄÇÔºàÂêåÊó∂ÔºåÂêéÈù¢ÈÇ£‰∏™Â≠óÁ¨¶‰πü‰∏ÄÂÆöÊòØ 127 ‰ª•‰∏äÁöÑÔºâ ÈÄöËøáËøô‰∏™ÊñπÂºèÔºåÊàë‰ª¨Êâ©Â±ïÂá∫Êù•‰∫Ü 7000+ÁöÑÁÆÄ‰ΩìÊ±âÂ≠óÔºåÂêåÊó∂ËøòÊääÊó•Êú¨ÂÅáÂêçÔºåÁΩóÈ©¨Â∏åËÖäÂ≠óÊØçÔºåÊï∞Â≠¶Á¨¶Âè∑‰πüÂÆπÁ∫≥‰∫ÜËøõÊù•„ÄÇ ÂêåÊó∂Ëøò‰∫ßÁîü‰∫Ü‰∏Ä‰∏™Êñ∞ÁöÑÊ¶ÇÂøµÔºåÂÖ®ËßíÂ≠óÁ¨¶ÔºöASCII Á†ÅÈáåÊú¨Ë∫´ÊúâÁöÑÂ≠óÁ¨¶Ôºå‰πüË¢´Êàë‰ª¨Êâ©Â±ïÊàê‰∫ÜÂèåÂ≠óËäÇÂ≠óÁ¨¶„ÄÇ‰∏∫‰∫ÜÂå∫ÂàÜÔºåÂâçËÄÖÁß∞‰∏∫ÂçäËßíÂ≠óÁ¨¶ÔºåÂêéËÄÖÁß∞‰∏∫ÂÖ®ËßíÂ≠óÁ¨¶„ÄÇÊØîÂ¶ÇÈÄóÂè∑„ÄÅÂÜíÂè∑„ÄÅÂºïÂè∑Á≠âÁ≠âÈÉΩÊúâÂçäËßíÂíåÂÖ®Ëßí‰πãÂàÜ„ÄÇ Ëá≥Ê≠§Ôºå‰∏≠Êñá‰πüÂèØ‰ª•Âú®ËÆ°ÁÆóÊú∫‰∏äË°®Á§∫‰∫Ü„ÄÇ GBK K ÊòØÊâ©Â±ïÁöÑÊÑèÊÄù 7000 ‰∏™ÁÆÄ‰ΩìÊ±âÂ≠óÂπ∂‰∏çËÉΩÊääÊ±âÂ≠óÁ©∑‰∏æ‰∫ÜÔºå‰∏Ä‰∫õÁîüÂÉªÂ≠óÂπ∂‰∏çÂåÖÂê´Âú® GB2312 Èáå„ÄÇ GB2312 Ë°®Á§∫ÔºåÊàëÂèØËÉΩËøòÂèØ‰ª•Êä¢Êïë‰∏Ä‰∏ãÔºåÊàëËøòÊúâÂè¶‰∏ÄÂçäÁöÑÊΩúÂäõÊ≤°ÊúâÂèëÊå•Âë¢ÔºÅ ËøôÂè¶‰∏ÄÂçäÁöÑÊΩúÂäõÂ∞±ÊòØÔºåÁ¨¨‰∫å‰∏™Â≠óËäÇÁöÑ0x00 - 0x7fÈÉ®ÂàÜ„ÄÇËøôÈÉ®ÂàÜÁ©∫Âá∫Êù•ÔºåÊòØÁî±‰∫é GB2312 Ë°®Á§∫Ê±âÂ≠óÊó∂ÔºåË¶ÅÊ±Ç‰∏§‰∏™Â≠óËäÇÈÉΩÊòØÂú®0x80 - 0xffËåÉÂõ¥ÂÜÖÁöÑ„ÄÇ Â°´‰∏äËøôÈÉ®ÂàÜÁöÑÁ©∫Ê°£‰πãÂêéÔºåÂÜçÁîüÂÉªÁöÑÂ≠ó‰πüË¢´Ë°®Á§∫Âá∫Êù•‰∫ÜÔºåÂêåÊó∂ÔºåÊàë‰ª¨ËøòËÄÉËôëÂà∞Ê∏ØÊæ≥Âè∞ÂêåËÉûÁöÑÊÑüÂèóÔºåÂåÖÂê´‰∫ÜÁπÅ‰ΩìÂ≠óÔºå‰∏ÄÂÖ±Â§ßÊ¶ÇÂ¢ûÂä†‰∫Ü 20k ÁöÑÊ±âÂ≠óÂíåÁ¨¶Âè∑„ÄÇ UnicodeÈöèÁùÄÊó∂Èó¥ÁöÑÊé®ÁßªÔºå‰∫íËÅîÁΩëÁöÑÂÖ¥Ëµ∑Ôºå‰∏çÊ≠¢Êµ∑Â≥°‰∏§Â≤∏ÔºåÂÖ®‰∏ñÁïåËåÉÂõ¥ÂÜÖÂÖ±Âª∫‰∏Ä‰∏™Â≠óÁ¨¶ÈõÜÁöÑÂëºÂ£∞Ë∂äÊù•Ë∂äÈ´ò„ÄÇ UnicodeÔºåÁªü‰∏Ä‰∫ÜÊâÄÊúâÂú∞Âå∫ÁöÑÂ≠óÁ¨¶Ôºå‰∏îËøòÂú®‰∏çÊñ≠Êâ©ÂÖÖ‰∏≠„ÄÇUnicode ÁºñÁ†ÅÁ≥ªÁªüÂèØÂàÜ‰∏∫ ÁºñÁ†ÅÊñπÂºè Âíå ÂÆûÁé∞ÊñπÂºè ‰∏§‰∏™Â±ÇÊ¨°„ÄÇUnicode ÁöÑÂÆûÁé∞ÊñπÂºèÁß∞‰∏∫ Unicode ËΩ¨Êç¢Ê†ºÂºèÔºàUnicode Transformation FormatÔºåÁÆÄÁß∞‰∏∫ UTFÔºâ UTF-8 ÂÖºÂÆπ ASCIIÔºåUTF-16 ‰∏çÂÖºÂÆπ ASCII„ÄÇ UTF-8ÂâçÈù¢ËØ¥ÁöÑÈÉΩÊòØÂ≠óÁ¨¶ÈõÜÔºåUTF-8 Âç¥ÊòØ‰∏ÄÁßçÁºñÁ†ÅÊñπÂºèÔºåÂõ†‰∏∫ÂÆÉÂπ∂‰∏çÊòØÂéªÂÅöÂ≠óÁ¨¶ÈõÜÁöÑ‰∫ãÊÉÖÔºåËÄåÊòØ‰∏∫ÁöÑ‰æø‰∫é Unicode Á†ÅÁöÑ‰º†ËæìÂíåÂ≠òÂÇ®ËÄåÁîüÁöÑ„ÄÇUTF-8 ÂÖºÂÆπ ASCII ÁºñÁ†ÅÔºåÊâÄ‰ª•Â∫îÁî®ÈùûÂ∏∏ÂπøÊ≥õÔºåÂá†‰πéÂ∑≤ÁªèÊòØ‰∫íËÅîÁΩëÊ†áÂáÜ„ÄÇ ‰∏éÂÖ∂‰ªñÁöÑÁºñÁ†ÅÊñπÂºèÔºàÂ¶ÇÂìàÂ§´ÊõºÁºñÁ†ÅÔºâÁöÑÊÄùÊÉ≥‰∏ÄËá¥ÔºåUTF-8 ÁöÑÂéüÂàôÂ∞±ÊòØÔºå‰ΩøÁî®‰∏çÂÆöÈïøÂ≠óËäÇÔºà1-6 Â≠óËäÇÔºâÊù•Ë°®Ëææ‰∏Ä‰∏™Â≠óÁ¨¶Ôºå‰ΩøÁî®È¢ëÁéáË∂äÈ´òÁöÑÂ≠óÁ¨¶ÔºåÂ≠óËäÇÊï∞Ë∂äÂ∞ë„ÄÇËøôÊ†∑Â∞±ËÉΩÊúÄÂ§ßÁ®ãÂ∫¶‰∏äËäÇÁ∫¶Á©∫Èó¥„ÄÇÂÖ∑‰ΩìÁöÑÁºñÁ†ÅÊñπÂºèÂ¶Ç‰∏ãÔºö 12345ÂçïÂ≠óËäÇÂ≠óÁ¨¶Ôºö ‰ª•0ÂºÄÂ§¥ÔºåÂêéÈù¢7‰ΩçË°®Á§∫Â≠óÁ¨¶Ôºå‰∫ãÂÆû‰∏äÔºåUTF-8ÁöÑÂçïÂ≠óËäÇÂ≠óÁ¨¶Â∞±ÊòØASCIIÂ≠óÁ¨¶ÔºåÂÆåÁæéÂÖºÂÆπÔºõnÂ≠óËäÇÂ≠óÁ¨¶Ôºö Á¨¨‰∏Ä‰∏™Â≠óËäÇÁöÑÂâçn‰Ωç‰∏∫1ÔºåÁ¨¨n+1‰Ωç‰∏∫0„ÄÇËØªÂà∞Ê≠§Â≠óËäÇÊó∂ÔºåÂèØ‰ª•Êñπ‰æøÁöÑÁü•ÈÅìÂêéÁª≠Â§öÂ∞ëÂ≠óËäÇÊòØÁî®Êù•Ë°®Á§∫‰∏Ä‰∏™Â≠óÁ¨¶Ôºõ ÂÖ∂‰ΩôÂ≠óËäÇÔºå‰ª•10ÂºÄÂ§¥„ÄÇ 1234567UnicodeÁ¨¶Âè∑ËåÉÂõ¥ | UTF-8ÁºñÁ†ÅÊñπÂºè(ÂçÅÂÖ≠ËøõÂà∂) | Ôºà‰∫åËøõÂà∂Ôºâ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì0000 0000-0000 007F | 0xxxxxxx0000 0080-0000 07FF | 110xxxxx 10xxxxxx0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx ÂÆûÈôÖ‰∏ä‰ªéÁ¨¨‰∫åË°åÂØπÁÖßÂºÄÂßãÔºåÂ∞±Â≠òÂú®Á©∫Èó¥Êµ™Ë¥πÔºåÂõ†‰∏∫Âè≥ËæπÁöÑ x ÁöÑ‰ΩçÊï∞Ë∂≥Â§üÁî®Êù•Ë°®Á§∫ 0 Âà∞Â∑¶ËæπÁöÑÁ¨¨‰∫å‰∏™Êï∞ÊâÄË°®Á§∫ËåÉÂõ¥ÂÜÖÁöÑÊâÄÊúâÊï∞ÔºåÊØèË°åÊµ™Ë¥πÁöÑÁ©∫Èó¥Â§ßÂ∞èÊòØÂ∑¶ËæπÁöÑÁ¨¨‰∏Ä‰∏™Êï∞„ÄÇ UTF-8 Âíå Unicode ÊòØ‰∏Ä‰∏ÄÂØπÂ∫îÁöÑÔºåÂØπ‰∫éÂ∏∏Áî®Ê±âÂ≠óÔºåÂü∫Êú¨‰∏äÈÉΩÊòØÂç†Áî® 3 ‰∏™Â≠óËäÇÔºåÁîüÂÉªÊ±âÂ≠óÂèØËÉΩÂç†Áî®Âà∞ 6 ‰∏™Â≠óËäÇ„ÄÇÂØπ‰∫é GB2312 Âíå GBK Êù•ËÆ≤ÔºåUTF-8 Êó†ÁñëÈÄ†Êàê‰∫ÜÊµ™Ë¥πÔºåÊâÄ‰ª•ÔºåUTF-8 ÂèØ‰ª•ËØ¥ÊòØÂØπËã±ÊñáÂèãÂ•ΩÔºå‰ΩÜÂØπ‰∏≠Êñá‰∏çÂèãÂ•ΩÁöÑ‰∏ÄÁßçÁºñÁ†ÅÊñπÂºè„ÄÇÊâÄ‰ª•Âú®‰∏≠ÊñáÁïåÔºåGB2312 ‰∏é GBK ‰æùÊóßÊúâËá™Â∑±ÁöÑÂ∏ÇÂú∫„ÄÇ ANSI ÁºñÁ†ÅANSI Âπ∂‰∏çÊòØÁ°ÆÂÆöÁöÑ‰∏ÄÁßçÁºñÁ†ÅÔºåÂú®ÁÆÄ‰Ωì‰∏≠ÊñáÊìç‰ΩúÁ≥ªÁªüÊåáÁöÑÊòØ GB2312ÔºåÂú®ÁπÅ‰ΩìÊìç‰ΩúÁ≥ªÁªüÊåáÁöÑÊòØ BIG5„ÄÇ Windows ÈáåËØ¥ÁöÑ„ÄåANSI„ÄçÂÖ∂ÂÆûÊòØ Windows code pagesÔºåËøô‰∏™Ê®°ÂºèÊ†πÊçÆÂΩìÂâç locale ÈÄâÂÆöÂÖ∑‰ΩìÁöÑÁºñÁ†ÅÔºåÊØîÂ¶ÇÁÆÄ‰∏≠ locale ‰∏ãÊòØ GBK„ÄÇÊääËá™Â∑±Ëøô‰∫õ code page Áß∞‰Ωú„ÄåANSI„ÄçÊòØ Windows ÁöÑËá≠ÊØõÁóÖ„ÄÇÂú® ASCII ËåÉÂõ¥ÂÜÖÂÆÉ‰ª¨Â∫îËØ•ÊòØÂíå ASCII ‰∏ÄËá¥ÁöÑ„ÄÇ Â≠óÁ¨¶ÈõÜÔºàcharacter setÔºâ‰∏éÁºñÁ†ÅÔºàencodingÔºâÁöÑÂå∫Âà´ÂØπ‰∫é ASCII„ÄÅGB 2312„ÄÅBig5„ÄÅGBK„ÄÅGB 18030 ‰πãÁ±ªÁöÑÈÅóÁïôÊñπÊ°àÊù•ËØ¥ÔºåÂü∫Êú¨‰∏ä‰∏Ä‰∏™Â≠óÁ¨¶ÈõÜÊñπÊ°àÂè™‰ΩøÁî®‰∏ÄÁßçÁºñÁ†ÅÊñπÊ°à„ÄÇ ÊØîÂ¶Ç ASCII ËøôÈÉ®Ê†áÂáÜÊú¨Ë∫´Â∞±Áõ¥Êé•ËßÑÂÆö‰∫ÜÂ≠óÁ¨¶ÂíåÂ≠óÁ¨¶ÁºñÁ†ÅÁöÑÊñπÂºèÔºåÊâÄ‰ª•Êó¢ÊòØÂ≠óÁ¨¶ÈõÜÂèàÊòØÁºñÁ†ÅÊñπÊ°àÔºõËÄå GB 2312 Âè™ÊòØ‰∏Ä‰∏™Âå∫‰ΩçÁ†ÅÂΩ¢ÂºèÁöÑÂ≠óÁ¨¶ÈõÜÊ†áÂáÜÔºå‰∏çËøáÂÆûÈôÖ‰∏äÂü∫Êú¨ÈÉΩÁî® EUC-CN Êù•ÁºñÁ†ÅÔºåÊâÄ‰ª•ÊèêÂèä„ÄåGB 2312„ÄçÊó∂‰πüËØ¥ÁöÑÊòØ‰∏Ä‰∏™Â≠óÁ¨¶ÈõÜÂíåÁºñÁ†ÅËøûÈîÅÁöÑÊñπÊ°àÔºõGBK Âíå GB 18030 Á≠âÂêëÂêéÂÖºÂÆπ‰∫é GB 2312 ÁöÑÊñπÊ°à‰πüÁ±ª‰ºº„ÄÇ ‰∫éÊòØÔºåÂæàÂ§ö‰∫∫ÂèóËøô‰∫õÈÅóÁïôÊñπÊ°àÁöÑÂΩ±ÂìçËÄåÊó†Ê≥ïÁêÜËß£Â≠óÁ¨¶ÈõÜÂíåÁºñÁ†ÅÁöÑÂÖ≥Á≥ª„ÄÇ ÂØπ‰∫é UnicodeÔºåÂ≠óÁ¨¶ÈõÜÂíåÁºñÁ†ÅÊòØÊòéÁ°ÆÂå∫ÂàÜÁöÑ„ÄÇUnicode/UCS Ê†áÂáÜÈ¶ñÂÖàÊòØ‰∏™Áªü‰∏ÄÁöÑÂ≠óÁ¨¶ÈõÜÊ†áÂáÜ„ÄÇËÄå Unicode/UCS Ê†áÂáÜÂêåÊó∂‰πüÂÆö‰πâ‰∫ÜÂá†ÁßçÂèØÈÄâÁöÑÁºñÁ†ÅÊñπÊ°àÔºåÂú®Ê†áÂáÜÊñáÊ°£‰∏≠Áß∞‰Ωú„Äåencoding form„ÄçÔºå‰∏ªË¶ÅÂåÖÊã¨ UTF-8„ÄÅUTF-16 Âíå UTF-32„ÄÇ ÊâÄ‰ª•ÔºåÂØπ Unicode ÊñπÊ°àÊù•ËØ¥ÔºåÂêåÊ†∑ÁöÑÂü∫‰∫é Unicode Â≠óÁ¨¶ÈõÜÁöÑÊñáÊú¨ÂèØ‰ª•Áî®Â§öÁßçÁºñÁ†ÅÊù•Â≠òÂÇ®„ÄÅ‰º†Ëæì„ÄÇÊâÄ‰ª•ÔºåÁî®„ÄåUnicode„ÄçÊù•Áß∞Âëº‰∏Ä‰∏™ÁºñÁ†ÅÊñπÊ°à‰∏çÂêàÈÄÇÔºåÂπ∂‰∏îËØØÂØº„ÄÇ Â≠óËäÇÈ°∫Â∫èÊ†áËÆ∞ÔºàBOMÔºâËøôÈáåÊ∂âÂèäÂà∞‰∏Ä‰∏™ Â≠óËäÇÂ∫è ÁöÑÊ¶ÇÂøµÔºåËØ∑ÂÖà‰∫ÜËß£Ëøô‰∏™Ê¶ÇÂøµ„ÄÇ BOMÔºàByte-Order MarkÔºâ:‰∏ÄÁßç‰∏∫‰∫ÜË∑®Âπ≥Âè∞ËÆæËÆ°ÁöÑÊñá‰ª∂Ëµ∑ÂßãÊ†áËÆ∞Ôºå‰ΩÜÂæàÂ§öÁ®ãÂ∫èÊ≤°ÂéªÂ§ÑÁêÜËøô‰∏™ÔºåÁî®‰∫Ü BOM ÂèçËÄåÂ∏∏ÈÄ†ÊàêÈóÆÈ¢ò„ÄÇ Âú® UTF-16 ‰∏≠ÔºåÂ≠óËäÇÈ°∫Â∫èÊ†áËÆ∞Ë¢´ÊîæÁΩÆ‰∏∫Êñá‰ª∂ÊàñÂ≠óÁ¨¶‰∏≤ÊµÅÁöÑÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶Ôºå‰ª•Ê†áÁ§∫Â≠óËäÇÈ°∫Â∫è„ÄÇ Â§ßÁ´ØÔºö0xFEFF Â∞èÁ´ØÔºö0xFFFE]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ°ÁÆóÊú∫‰∏≠ÁöÑ‰ø°ÊÅØ]]></title>
    <url>%2Fblog%2F2019%2F04%2F20%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E4%BF%A1%E6%81%AF%2F</url>
    <content type="text"><![CDATA[‰ø°ÊÅØÁöÑÊú¨Ë¥®‰ø°ÊÅØÁöÑÊú¨Ë¥®ÊòØÊ∂àÈô§‰∏çÁ°ÆÂÆöÊÄßÔºöÊàë‰ª¨ÊäõÊé∑‰∏ÄÊûöÁ°¨Â∏ÅÔºåÁÑ∂ÂêéÁî®ÊâãÁõñ‰ΩèÔºåÂá∫Áé∞Ê≠£Èù¢Êúù‰∏äÂíåÂèçÈù¢Êúù‰∏äÁöÑÊ¶ÇÁéáÈÉΩÊòØ‰∫åÂàÜ‰πã‰∏Ä„ÄÇÂΩìÊàë‰ª¨ÂÅ∑Áúã‰∫ÜÁªìÊûúÔºåÁ°ÆÂÆö‰∫ÜÊòØÊ≠£Èù¢ËøòÊòØÂèçÈù¢Êúù‰∏äÔºå‰πüÂ∞±Ëé∑Âæó‰∫Ü‰ø°ÊÅØ„ÄÇÂú®Ëøô‰∏™‰æãÂ≠ê‰∏≠ÔºåÊàë‰ª¨Ê∂àÈô§ÁöÑ‰∏çÁ°ÆÂÆöÊÄßÊòØ‰∏Ä‰∏™‰∫åÂàÜ‰πã‰∏ÄÁöÑÊ¶ÇÁéá„ÄÇÂú® È¶ôÂÜú ÂàíÊó∂‰ª£ÁöÑËÆ∫Êñá ÈÄö‰ø°ÁöÑÊï∞Â≠¶ÂéüÁêÜ ‰∏≠ÔºåÈ¶ñÊ¨°ÊèêÂá∫‰∫Ü‰ø°ÊÅØÊòØÂèØÈáèÂåñÁöÑÔºå‰ª•ÂèäÂ¶Ç‰ΩïÈáèÂåñ‰ø°ÊÅØ„ÄÇÊàë‰ª¨‰ª• bit ‰∏∫‰ø°ÊÅØÁöÑÂ∫¶ÈáèÂçï‰ΩçÔºå‰∏Ä‰∏™ bit ÂèØ‰ª•ÊòØ 0 ÊàñËÄÖ 1ÔºåÊàë‰ª¨ÊØèËé∑Âæó‰∏Ä‰∏™ bit ÁöÑ‰ø°ÊÅØÔºåÂ∞±‰ºöÊ∂àÈô§‰∏Ä‰∏™‰∫åÂàÜ‰πã‰∏ÄÁöÑ‰∏çÁ°ÆÂÆöÊÄß„ÄÇ Â∞èÊÄùËÄÉÈ¢òÔºöÂ¶ÇÊûúÊàë‰ª¨ÊäõÊé∑ÁöÑÊòØ‰∏Ä‰∏™È™∞Â≠êÂë¢ÔºåÂΩìÊàë‰ª¨Á°ÆÂÆö‰∫Ü‰∏ÄÊ¨°ÊäïÊé∑ÁªìÊûúÔºåÊàë‰ª¨Ëé∑ÂæóÂ§öÂ∞ë‰ø°ÊÅØÔºàÁî® bit ‰∏∫Âçï‰ΩçË°°ÈáèÔºâÔºüÊàë‰ª¨ÈÉΩÁü•ÈÅìÔºåÈ™∞Â≠êÊúâ 6 ‰∏™Èù¢ÔºåÂàÜÂà´ÂàªÊúâ 1~6ÔºåÊàë‰ª¨ÊúâÂÖ≠ÂàÜ‰πã‰∏ÄÁöÑÊ¶ÇÁéáÂæóÂà∞ÂÖ∂‰∏≠‰ªªÊÑè‰∏Ä‰∏™Èù¢Êúù‰∏ä„ÄÇÈÇ£‰πàÊàë‰ª¨Ëé∑ÂæóÁöÑ‰ø°ÊÅØÂ∫îËØ•ÊòØÔºö$\log_2 6$„ÄÇ ‰ø°ÊÅØËÆ°ÈáèÂçï‰ΩçÊØîÁâπÔºàbitÔºâÔºöÊàë‰ª¨Áé∞Âú®ÊâÄ‰ΩøÁî®ÁöÑËÆ°ÁÆóÊú∫ÈÉΩÊòØ‰∫åËøõÂà∂ÁöÑÁîµÂ≠êËÆ°ÁÆóÊú∫ÔºåÊØè‰∏™ bit Èùû 0 Âç≥ 1„ÄÇ‰πãÊâÄ‰ª•‰ΩøÁî®‰∫åËøõÂà∂ÊòØÂõ†‰∏∫Áâ©ÁêÜ‰∏äÂÆπÊòìÂÆûÁé∞ÔºåÈ´òÁîµÂéãÊàñ‰ΩéÁîµÂéã„ÄÇ Â≠óËäÇÔºàbyteÔºâÔºöÂú®ËÆ°ÁÆóÊú∫‰∏≠‰∏∫‰∫ÜÊñπ‰æøÁöÑÁÆ°ÁêÜÂÜÖÂ≠òÔºåÊàë‰ª¨‰ª• 8 ‰∏™ÊØîÁâπ‰∏∫‰∏Ä‰∏™Âçï‰ΩçÔºåËøô‰∏™Âçï‰ΩçÂè´ÂÅöÂ≠óËäÇ„ÄÇ Âú®‰Ω†Ë¥≠‰π∞ÂÆΩÂ∏¶ÁöÑÊó∂ÂÄôÔºåÊØîÂ¶Ç 100M ÂÆΩÂ∏¶ÔºåÊåáÁöÑÊòØ 100Mb/sÔºåÊç¢ÁÆóÊàêÂ≠óËäÇ‰∏∫Âçï‰ΩçÁöÑÈÄüÂ∫¶Ôºö$\frac{100Mb/s}{8}=12.5MB/s$„ÄÇÊâÄ‰ª•Êàë‰ª¨ÂèëÁé∞‰∏ãËΩΩÈÄüÂ∫¶ÈÄöÂ∏∏Ê≤°ÊúâÂê¨Ëµ∑Êù•ÈÇ£‰πàÂ§∏Âº†ÔºåÂõ†‰∏∫‰∏ãËΩΩÁöÑÊñá‰ª∂ÈÄöÂ∏∏ÊòØ‰ª•Â≠óËäÇ‰∏∫Âçï‰ΩçÁöÑÔºåËÄåËøêËê•ÂïÜÂè£‰∏≠ÁöÑ 100M ÊåáÁöÑÊòØ‰ª•ÊØîÁâπ‰∏∫Âçï‰ΩçÁöÑÈÄüÂ∫¶„ÄÇ K„ÄÅM„ÄÅGÔºöËøô‰∏â‰∏™ÊòØÊúÄÂ∏∏ËßÅÁöÑÂÄçÊï∞Âçï‰ΩçÔºåÂèØ‰ª•Áî®Êù•Êê≠ÈÖç bÔºàbitÔºâÊàñËÄÖ BÔºàByteÔºâ„ÄÇÂÆÉ‰ª¨ÈÉΩÊòØËØçÊ†πÁöÑÁº©ÂÜôÔºåK ÊòØ KiloÔºåË°®Á§∫$2^{10}$ ÔºõM ÊòØ MegaÔºåË°®Á§∫$2^{20}$ ÔºõG ÊòØ GigaÔºåË°®Á§∫$2^{30}$ „ÄÇ ÂÖ∂ÂÆûÂú®‰∏ÄËà¨ÁöÑÂú∫Âêà‰∏≠ÔºåK Ë°®Á§∫$10^3$ÔºåM Ë°®Á§∫$10^6$ÔºåG Ë°®Á§∫$10^9$„ÄÇËÄåÊàë‰ª¨ÁúãÂà∞‰∏äÈù¢ÈÉΩÊòØ‰ª•1024ÂÄçÈÄíÂ¢ûÔºà$2^{10}=1024$ÔºâÔºåÊòØ 1000 ÁöÑËøë‰ºº„ÄÇÂú®‰Ω†Ë¥≠‰π∞Á°¨ÁõòÁöÑÊó∂ÂÄôÔºåÂéÇÂïÜÂç¥ÊòØ‰ΩøÁî® 1000 Ëøô‰∏ÄÂ•óËøõÁéáÁöÑ„ÄÇÊØîÂ¶Ç 100GB ÁöÑÁ°¨ÁõòÔºåÂÖ∂ÂÆûÈôÖÂÆπÈáèÂè™ÊúâÔºö$\frac{100\times1000^3}{1024^3}=93.13GB$„ÄÇËÄåÂÜÖÂ≠òÂàôÊòØÁî® 1024 ËøõÁéáÁÆóÁöÑÔºå1GB ÁöÑÂÜÖÂ≠òÂ∞±ÊòØ$2^{30}$‰∏™Â≠óËäÇÔºåÂõ†‰∏∫ÈááÁî®Âú∞ÂùÄÊÄªÁ∫øÂØªÂùÄÔºåÂØªÂùÄÁ©∫Èó¥ÂøÖÈ°ªÊòØ$2^n$ÔºåÂê¶ÂàôÂ∞±‰ºöÈÄ†ÊàêÂÜÖÂ≠òÊµ™Ë¥πÊàñËÄÖÂÆö‰ΩçÂà∞‰∏Ä‰∏™‰∏çÂ≠òÂú®ÁöÑÂÜÖÂ≠ò„ÄÇ T„ÄÅPÔºöËøô‰∏§‰∏™Â¶ÇÊûú‰Ω†ÊòØÁ®ãÂ∫èÂëòÁöÑËØù‰ºöÊØîËæÉÂ∏∏ËßÅ„ÄÇT ÊòØ TeraÔºå$2^{40}$ÔºõP ÊòØ PetaÔºå$2^{50}$„ÄÇ ÂæÄ‰∏äËµ∞ËøòÊúâÂá†‰∏™Âçï‰ΩçÔºå‰ΩÜÂá†‰πéÊ≤°Êú∫‰ºöÁ¢∞Âà∞Ôºö1EBÔºàExabyte Áôæ‰∫ø‰∫øÂ≠óËäÇ ËâæÂ≠óËäÇÔºâ=1024PBÔºå1ZB (Zettabyte ÂçÅ‰∏á‰∫ø‰∫øÂ≠óËäÇ Ê≥ΩÂ≠óËäÇ)= 1024 EB,1YB (Yottabyte ‰∏Ä‰∫ø‰∫ø‰∫øÂ≠óËäÇ Â∞ßÂ≠óËäÇ)= 1024 ZB,1BB (Brontobyte ‰∏ÄÂçÉ‰∫ø‰∫ø‰∫øÂ≠óËäÇ)= 1024 YB. Â≠óÁ¨¶ÈõÜ‰ø°ÊÅØÊòØ bit ‰Ωç+‰∏ä‰∏ãÊñáÔºàËøôÈáåÁöÑ‰ø°ÊÅØÂèØ‰ª•ÁêÜËß£‰∏∫Ôºö‰∫∫ËÉΩËØªÊáÇÁöÑÊúâÊÑè‰πâÁöÑ‰ø°ÊÅØÔºâÔºåÊØîÁâπ‰Ωç‰∏≠ÁöÑ‰ø°ÊÅØÂèØ‰ª•Ê†πÊçÆ‰∏ä‰∏ãÊñáË¢´‰ªªÊÑèÂú∞Ëß£ËØª„ÄÇ‰∏æ‰∏™‰æãÂ≠êÔºåËøôÈáåÊúâ‰∏Ä‰∏™hello.cÊñá‰ª∂ÔºåÊñá‰ª∂ÂÜÖÂÆπÂ¶Ç‰∏ãÔºö 123456#include &lt;stdio.h&gt;int main()&#123; printf("hello, world\n");&#125; Â¶ÇÊûú‰ª• ASCII ÁºñÁ†Å ÁöÑËØùÔºåÊØè‰∏™Â≠óËäÇÁöÑÂÜÖÂÆπÂ¶Ç‰∏ãÔºö ÊñáÊú¨Êñá‰ª∂ÔºöÂÜÖÂÆπÊòØÊñáÊú¨ÔºåÊñáÊú¨Êñá‰ª∂ÈÉΩ‰ºöÈááÁî®‰∏ÄÁßçÁâπÂÆöÁöÑÁºñÁ†ÅÊñπÂºè ‰∫åËøõÂà∂Êñá‰ª∂ÔºöÈô§ÂéªÊñáÊú¨Êñá‰ª∂ÔºåÂÖ∂‰ªñÁöÑÈÉΩÊòØ‰∫åËøõÂà∂Êñá‰ª∂ Â¶ÇÊûú‰Ω†Á¢∞Âà∞Ëøá‰π±Á†ÅÈóÆÈ¢òÔºåÈÇ£‰πàÂèØ‰ª•Â∞ùËØï‰∫ÜËß£‰∏Ä‰∏ãÔºö‰ªÄ‰πàÊòØÂ≠óÁ¨¶ÈõÜÂíåÁºñÁ†Å Windows ËÆ∞‰∫ãÊú¨ÁöÑ bugÔºàÂÖ∑‰ΩìÂéüÂõ†ÂèØ‰ª•Ëá™Â∑±‰∏äÁΩëÊü•ÔºâÔºö Êñ∞Âª∫‰∏Ä‰∏™ÊñáÊú¨Êñá‰ª∂ÔºåËæìÂÖ•‚ÄúÂÜô‚ÄùÔºå‰øùÂ≠ò‰πãÂêéÂÜçÊâìÂºÄÔºå‰π±Á†Å–¥„ÄÇ Êñ∞Âª∫‰∏Ä‰∏™ÊñáÊú¨Êñá‰ª∂ÔºåËæìÂÖ•‚ÄúËÅîÈÄö‚ÄùÔºå‰øùÂ≠ò‰πãÂêéÂÜçÊâìÂºÄÔºå‰π±Á†ÅÔøΩÔøΩÕ®„ÄÇ Â≠óËäÇÂ∫èËÆ°ÁÆóÊú∫ÁöÑÂÜÖÂ≠òÂú∞ÂùÄÊòØÊåâÂ≠óËäÇÁºñÂè∑ÔºåÊØîÂ¶Ç 4GB ÁöÑÂÜÖÂ≠òÔºåÂÆÉÁöÑÂÜÖÂ≠òÂú∞ÂùÄ‰ªé 0 Âà∞$2^{30}$ÔºåËøôÈáåÊúâ‰∏™ÈóÆÈ¢òÂ∞±ÊòØÂ§öÂ≠óËäÇÁöÑÊï∞ÊçÆÂ¶Ç‰ΩïÁ°ÆÂÆöÂ≠òÊîæÈ°∫Â∫è„ÄÇÊúâÁöÑËÆ°ÁÆóÊú∫ÈááÁî® Â§ßÁ´Ø ÊúâÁöÑÂàôÈááÁî® Â∞èÁ´Ø„ÄÇ ÂÅáËÆæÊàëÊúâ‰∏Ä‰∏™ int ÂûãÊï∞Ôºà4 Â≠óËäÇÔºâÔºö0x29 16 10 57 29 ÊòØÈ´ò‰ΩçÔºå57 ÊòØ‰Ωé‰ΩçÔºåÂ¶ÇÊûúÈ´ò‰ΩçÂ≠òÊîæÁöÑÂÜÖÂ≠òÂú∞ÂùÄ‰πüÊòØÈ´òÂú∞ÂùÄÔºåÈÇ£‰πàÊàë‰ª¨Â∞±Áß∞‰πã‰∏∫ Â§ßÁ´Ø Â≠óËäÇÂ∫è„ÄÇÂèç‰πãÂ∞±ÊòØ Â∞èÁ´Ø Â≠óËäÇÂ∫è„ÄÇ]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexoÊääËã±ÊñáÂºïÂè∑Ê∏≤ÊüìÊàê‰∏≠ÊñáÂºïÂè∑ÁöÑÈóÆÈ¢ò]]></title>
    <url>%2Fblog%2F2019%2F04%2F15%2Fhexo%E6%8A%8A%E8%8B%B1%E6%96%87%E5%BC%95%E5%8F%B7%E6%B8%B2%E6%9F%93%E6%88%90%E4%B8%AD%E6%96%87%E5%BC%95%E5%8F%B7%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[ÂÖ∂ÂÆûËøô‰∏™ÈóÆÈ¢òÊàëÊó©Â∞±ÂèëÁé∞‰∫ÜÔºå‰ΩÜ‰∏ÄÁõ¥Ê≤°Â§™Âú®ÊÑèÔºå‰ªäÂ§©ÂÜôÂçöÂÆ¢ÁöÑÊó∂ÂÄôÂèàÁúãÂà∞Ëøô‰∏™ÈöæÁúãÁöÑÂºïÂè∑ÔºåÁªà‰∫éÂøç‰∏ç‰ΩèÊÉ≥ÁúãÁúãÂà∞Â∫ïÂá∫‰∫Ü‰ªÄ‰πàÈóÆÈ¢ò„ÄÇ È¶ñÂÖàÊàëËØï‰∫Ü‰∏≠ÊñáÁöÑÂçïÂºïÂè∑ÂíåËã±ÊñáÁöÑÂçïÂºïÂè∑ÔºåÂèëÁé∞Ê∏≤ÊüìÊïàÊûúÈÉΩ‰∏ÄÊ†∑ÔºåÁÑ∂ÂêéÊÉ≥ÁúãÁúãÂΩìÊàëÂàÜÂà´Êâì‰∏≠ÊñáÂçïÂºïÂè∑ÂíåËã±ÊñáÂçïÂºïÂè∑ÁöÑÊó∂ÂÄôÔºåhexo ÁöÑÊ∏≤ÊüìÁªìÊûúÂà∞Â∫ïÊòØ‰∏çÊòØ‰∏ÄÊ†∑„ÄÇ ÊâìÂºÄ chrome ÂºÄÂèëÂ∑•ÂÖ∑ÔºåÂèëÁé∞È°µÈù¢‰∏äÁöÑËã±ÊñáÂçïÂºïÂè∑Áªü‰∏ÄË¢´Ê∏≤ÊüìÊàê‰∫Ü‰∏≠ÊñáÁöÑÂçïÂºïÂè∑„ÄÇ ÁÑ∂ÂêéÊàëÊâãÂä®‰øÆÊîπÈ°µÈù¢Áúã‰∫Ü‰∏ãËã±ÊñáÂçïÂºïÂè∑ÊòØ‰ªÄ‰πàÊ†∑Â≠êÔºåÂèëÁé∞Ê†∑ÂºèÁ°ÆÂÆûÂæà‰∏ç‰∏ÄÊ†∑„ÄÇ ÈÇ£‰πàÈóÆÈ¢òÂ∞±Á°ÆÂÆö‰∫ÜÔºöhexo ÊääËã±ÊñáÂºïÂè∑Ê∏≤ÊüìÊàê‰∫Ü‰∏≠ÊñáÂºïÂè∑„ÄÇ Ë∞∑Ê≠åÊêú‰∫Ü‰∏Ä‰∏ãÔºöhexo Ê∏≤Êüì ÂçïÂºïÂè∑ ‰∏≠ÊñáÂçïÂºïÂè∑ÔºåÂæóÂà∞Âá†Êù°‰∏çÈîôÁöÑÁªìÊûúÔºö Ê±ÇÂä©ÔºöÂçïÂºïÂè∑ÊòæÁ§∫ÂºÇÂ∏∏ #1981 6.4.0 ÁâàÊú¨‰πãÂêéÁöÑ‰∏§‰∏™ÈóÆÈ¢ò #462 ÂØπ‰∫éÊàëÊâÄ‰ΩøÁî®ÁöÑkramedÔºåÂè™ÈúÄË¶ÅÂú®_config.yml‰∏≠ÈÖçÁΩÆÔºö 12kramed: smartypants: false ÈóÆÈ¢òÁöÑÂéüÂõ†ÊòØ markdown Ê∏≤ÊüìÂô®ÊääËã±ÊñáÂºïÂè∑Ê∏≤ÊüìÊàê‰∫Ü‰∏≠ÊñáÂºïÂè∑Ôºå‰ΩÜËøôÂÖ∂ÂÆûÊòØÂèØ‰ª•ÈÖçÁΩÆÁöÑÔºåÊâÄ‰ª•Ëß£ÂÜ≥Ëµ∑Êù•ÊØîËæÉÁÆÄÂçï„ÄÇ Âú®Ëß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÁöÑËøáÁ®ã‰∏≠ÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥È°∫Âà©ÁöÑËß£ÂÜ≥ÈóÆÈ¢òÔºå‰Ω†ÈúÄË¶ÅÁöÑÁü•ËØÜÁÇπÊúâÔºö Â≠óÁ¨¶ÈõÜÁöÑÁü•ËØÜ Chrome ÂºÄÂèëÂ∑•ÂÖ∑‰ΩøÁî®ÁªèÈ™å ÂâçÁ´ØÂºÄÂèëÁü•ËØÜ Â•ΩÁöÑÊêúÁ¥¢‰π†ÊÉØ ‰∏ÄÂÆöÁöÑËã±ËØ≠Ê∞¥Âπ≥ Êü•ÈòÖÊñáÊ°£ÁöÑÊÑèËØÜÂíå‰π†ÊÉØ Â¶ÇÊûú‰Ω†Â∑≤ÁªèÂÖ∑Â§á‰∫Ü‰ª•‰∏äÂâçÊèêÔºåÈÇ£‰πàÂ∞±ËÉΩÊØîËæÉËΩªÊùæÊÑâÂø´ÁöÑËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢ò‰∫Ü„ÄÇ]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ mapÁöÑremoveÂáΩÊï∞ÂÆûÁé∞]]></title>
    <url>%2Fblog%2F2019%2F04%2F15%2FC%2B%2B%E7%9A%84map%E7%9A%84remove%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©ÂêåÂ≠¶Áæ§ÈáåÈù¢ËÆ®ËÆ∫‰∫ÜËøôÊ†∑‰∏ÄÊÆµ‰ª£Á†ÅÔºåËØ¥ÊòØ‰∫ßÂìÅÂá∫‰∫Ü bugÔºåÁé∞Âú∫ÊÄ•ÁùÄ‰øÆÂ§ç„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;iostream&gt;#include &lt;map&gt;#include &lt;string&gt;int main()&#123; std::cout &lt;&lt; "hello world" &lt;&lt; std::endl; std::map&lt;int, std::string&gt; mapPeople; mapPeople[1] = "hexu1"; mapPeople[2] = "hexu2"; // mapPeople[3] = "hexu3"; // mapPeople[4] = "hexu4"; std::map&lt;int, std::string&gt;::iterator iter = mapPeople.begin(); for (; iter != mapPeople.end(); iter++) &#123; if (iter-&gt;first == 2) &#123; std::cout &lt;&lt; "id : " &lt;&lt; iter-&gt;first &lt;&lt; ", name : " &lt;&lt; iter-&gt;second &lt;&lt; std::endl; mapPeople.erase(iter++); std::cout &lt;&lt; (iter != mapPeople.end()) &lt;&lt; std::endl; &#125; &#125; //for (; iter != mapPeople.end();) //&#123; // if (iter-&gt;first == 2) // &#123; // std::cout &lt;&lt; "id : " &lt;&lt; iter-&gt;first &lt;&lt; ", name : " &lt;&lt; iter-&gt;second &lt;&lt; std::endl; // mapPeople.erase(iter++); // if (iter == mapPeople.end()) // break; // &#125; // iter++; //&#125;// getchar(); return 0;&#125; ËØ¥ÊòØÁ¨¨‰∏Ä‰∏™ for Âæ™ÁéØ‰ºöÂ¥©Ê∫ÉÔºåÁ¨¨‰∫å‰∏™ for Âæ™ÁéØÂèØ‰ª•ÈÄöËøá„ÄÇÁªèËøáÂàÜÊûêÔºå‰∏ªË¶ÅÈóÆÈ¢òÂÖ∂ÂÆûÊòØÂá∫Âú®ÂØπËø≠‰ª£Âô®Âíå erase ÁöÑ‰∏çÁÜüÊÇâ‰∏äÔºåÂØºËá¥ÈîôËØØÁöÑ‰ΩøÁî®ÔºåËøô‰∏™Á®ãÂ∫èÁöÑÈîôËØØÂæàÊòéÊòæÔºåÂ∞±ÊòØÂú® erase ËøôÊù°ÂàÜÊîØ‰∏≠Ôºåiter++‰∫Ü‰∏§Ê¨°„ÄÇÈÇ£‰πàÂ¶Ç‰ΩïÂÜô‰∏Ä‰∏™Ê≠£Á°ÆÁöÑ remove ÂáΩÊï∞Âë¢Ôºü‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456789101112131415161718192021222324252627#include &lt;iostream&gt;#include &lt;map&gt;#include &lt;string&gt;int main()&#123; std::cout &lt;&lt; "hello world" &lt;&lt; std::endl; std::map&lt;int, std::string&gt; mapPeople; mapPeople[1] = "hexu1"; mapPeople[2] = "hexu2"; mapPeople[3] = "hexu3"; mapPeople[4] = "hexu4"; std::map&lt;int, std::string&gt;::iterator iter = mapPeople.begin(); while (iter != mapPeople.end()) &#123; if (iter-&gt;first == 2) &#123; std::cout &lt;&lt; "id : " &lt;&lt; iter-&gt;first &lt;&lt; ", name : " &lt;&lt; iter-&gt;second &lt;&lt; std::endl; iter = mapPeople.erase(iter); continue; &#125; iter++; &#125; return 0;&#125; Âè¶Â§ñÔºåÁ¢∞Âà∞Âà†Èô§ÁöÑÊó∂ÂÄôÔºåË¶ÅÂ∞èÂøÉÔºåÂèØ‰ª•Ëøô‰πàÂÜôÔºöiter = mapPeople.erase(iter);Ôºå‰πüÂèØ‰ª•Ëøô‰πàÂÜôÔºömapPeople.erase(iter++);ÔºàÂøÖÈ°ªÂú®Âà†Èô§ÂâçÁªôËø≠‰ª£Âô®++ÔºåÂê¶ÂàôËø≠‰ª£Âô®‰ºöÂ§±ÊïàÔºåËøô‰∏™ÈóÆÈ¢òÈÇ£‰ΩçÁ®ãÂ∫èÂëòÂÄíÊòØËÄÉËôëÂà∞‰∫ÜÔºâ„ÄÇ ÊúÄÂêéÊàëÊÉ≥ËØ¥ÁöÑ‰∏ÄÁÇπÊòØÔºåÊ†πÊçÆÊåáÂÆö key Âà†Èô§ map ‰∏≠ÁöÑÂÖÉÁ¥†ÔºåËøô‰∏™ÂäüËÉΩÂú®ÂÖ∂‰ªñËØ≠Ë®Ä‰∏≠ÈÉΩÊúâÂ∫ìÂáΩÊï∞ÂèØ‰ª•Ë∞ÉÁî®ÔºåËÄå C++Âç¥Ê≤°ÊúâÔºåËøòË¶ÅËá™Â∑±Âä®ÊâãÂÜôÔºåËÄå‰∏îÈúÄË¶ÅÂØπ map ÁöÑÂéüÁêÜÊúâ‰∏ÄÂÆöÁöÑ‰∫ÜËß£„ÄÇËøôÂ∞±‰ªé‰æßÈù¢ÂèçÊò†‰∫Ü C++ÂèØËÉΩÂπ∂‰∏çÊòØ‰∏Ä‰∏™È´òÊïàÁöÑÁîü‰∫ßÂ∑•ÂÖ∑„ÄÇ]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âä®ÊÄÅÊï∞ÁªÑÁöÑÂàÜÊëäÂàÜÊûê]]></title>
    <url>%2Fblog%2F2019%2F03%2F03%2F%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84%E7%9A%84%E5%88%86%E6%91%8A%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[‰ªãÁªçÂä®ÊÄÅÊï∞ÁªÑÂú®ÊØèÊ¨°ÂÆπÈáèÁî®Â∞ΩÊó∂ÔºåÈáçÊñ∞Áî≥ËØ∑ 2 ÂÄç‰∫éÂΩìÂâçÊï∞ÁªÑÁöÑÁ©∫Èó¥ÔºåÂπ∂Â∞ÜÂéüÊï∞ÁªÑ‰∏≠ÁöÑÂÜÖÂÆπÊã∑Ë¥ùÂà∞Êñ∞ÁöÑÁ©∫Èó¥ÔºåÁÑ∂ÂêéÈáäÊîæÂéüÊï∞ÁªÑÁöÑÂÜÖÂ≠òÁ©∫Èó¥„ÄÇÂØπ‰∫éÂä®ÊÄÅÊï∞ÁªÑÔºåÊØèÊ¨°ÊèíÂÖ•ÁöÑËä±Ë¥πÊúâ‰∏§ÁßçÊÉÖÂÜµÔºö ÂÆπÈáèÂ§üÁî®ÔºåÊàë‰ª¨Âè™ÈúÄË¶ÅÂ≠òÂÇ®Êñ∞ÁöÑÂÖÉÁ¥† ÂÆπÈáè‰∏çÂ§üÁî®ÔºåÂàõÂª∫Êñ∞ÁöÑÁ©∫Èó¥ÔºåÊã∑Ë¥ùÂéüÊï∞ÁªÑËøõÊñ∞ÁöÑÁ©∫Èó¥ÔºåÂÜçÂ≠òÂÇ®Ëøô‰∏™Êñ∞ÁöÑÂÖÉÁ¥† ÂàÜÊûêÊñπÊ≥ïÊúâËÆ∏Â§öÔºåÁªüÁß∞‰∏∫Ôºöamortized analysisÔºàÂàÜÊëäÂàÜÊûêÔºâ Lecture 21: Amortized Analysis ÁªüËÆ°ÂàÜÊûêÔºàaggregate methodÔºâÊää n ËØçÊìç‰ΩúËä±Ë¥πÊ±ÇÂíåÔºåÁÑ∂ÂêéÂèñÂπ≥ÂùáÂÄº„ÄÇ ÊØèÊ¨°Êâ©ÂÆπÊó∂ÔºåÂêéÂçäÈÉ®ÂàÜÂÖÉÁ¥†Áªü‰∏ÄËøõË°åÁ¨¨‰∏ÄÊ¨°ÁßªÂä®ÔºåËÄåËøô‰∫õÂÖÉÁ¥†‰πãÂêéÁöÑÊâÄÊúâÁßªÂä®Êìç‰Ωú‰πüÊòØ‰∏ÄËµ∑ÂèëÁîüÁöÑÔºåÂõ†ËÄåÊàë‰ª¨ÂèëÁé∞ÂÖÉÁ¥†ÊòØ‰ª•ÁªÑ‰∏∫Âçï‰ΩçÔºåÁªÑÂÜÖÁöÑÂÖÉÁ¥†ÁßªÂä®Ê¨°Êï∞Áõ∏Âêå„ÄÇÈÇ£‰πàÊúâÂ§öÂ∞ë‰∏™ËøôÁßçÁªÑÂë¢ÔºüÁ¨¨‰∏ÄÁªÑÊòØÂçï‰∏™ÂÖÉÁ¥†ÔºåÁ¨¨‰∫åÁªÑ‰πüÊòØÂçï‰∏™ÂÖÉÁ¥†ÔºåÁ¨¨‰∏âÁªÑÊòØ‰∏§‰∏™ÂÖÉÁ¥†ÔºåÁ¨¨ÂõõÁªÑÊòØÂõõ‰∏™ÂÖÉÁ¥†ÔºåÁ¨¨‰∫îÁªÑÊòØ 8 ‰∏™ÂÖÉÁ¥†Ôºå... Ôºå‰ª•Ê≠§Á±ªÊé®„ÄÇËÄåÔºö $$1 + 1 + 2+ 2^2 + \cdots + 2^i = n$$ $$i = \log_2 n -1$$ ËÄåËøô‰∫õÁªÑÁöÑÁßªÂä®Ê¨°Êï∞ÂàÜÂà´ÊòØÂ§öÂ∞ëÂë¢ÔºüÊúÄÂêé‰∏ÄÁªÑÂÖÉÁ¥†Âè™ÁßªÂä®‰∏ÄÊ¨°ÔºåÂÄíÊï∞Á¨¨‰∫åÁªÑÂÖÉÁ¥†ÁßªÂä® 2 Ê¨°Ôºå‰ª•Ê≠§Á±ªÊé®„ÄÇÊâÄ‰ª•ÊÄªÁöÑÁßªÂä®Ê¨°Êï∞ÊòØÔºö $$1\times 2^i+2\times 2^{i-1}+3\times 2^{i-2}+\cdots+k\times 1$$ $$k = \log_2n + 1$$ Ëøô‰∏™ÂºèÂ≠êÊå∫ÊúâËßÑÂæãÁöÑÔºåÊàë‰ª¨ÂèØ‰ª•Â∞ÜÂÖ∂ÂàÜ‰∏∫ÂæàÂ§ö‰∏™ÁªÑÔºåÁ¨¨‰∏ÄÁªÑÊòØÔºö $$1 + 1 + 2+ 2^2 + \cdots + 2^i = n$$ Á¨¨‰∫åÁªÑÊòØÔºö $$1 + 1 + 2+ 2^2 + \cdots + 2^{i-1} = \frac{n}{2}$$ ‰ª•Ê≠§Á±ªÊé®„ÄÇ ‰∫éÊòØÊàë‰ª¨ÂæóÂà∞‰∏äÂºèÁöÑÁ≠â‰ª∑Ë°®Á§∫Ôºö $$n + \frac{n}{2} + \cdots + 1 = 2n-1$$ ÊâÄ‰ª•ÁßªÂä®ÁöÑÂπ≥ÂùáÊ¨°Êï∞ÊòØÔºö$\frac{2n-1}{n}$Ôºå‰πüÂ∞±ÊòØÊØè‰∏™ÂÖÉÁ¥†ÊúÄÂ§öÁßªÂä® 2 Ê¨°ÔºåÂä†‰∏äÊèíÂÖ•Êìç‰ΩúÔºåÊúÄÂ§ö‰∏â‰∏™Êìç‰Ωú„ÄÇ Èì∂Ë°åÁÆóÊ≥ïÔºàbanker methodÔºâÂØπÂä®ÊÄÅÊï∞ÁªÑÁöÑÊèíÂÖ•Êù•ËØ¥ÔºåÂ§ßÈÉ®ÂàÜÔºàÂêéÂçäÈÉ®ÂàÜÔºâÊèíÂÖ•Êìç‰ΩúÊòØ‰∏çÈúÄË¶ÅÈáçÊñ∞ÂàÜÈÖçÂÜÖÂ≠òÁöÑÔºåÊòØÂªâ‰ª∑ÁöÑÊìç‰Ωú„ÄÇËÄåÂ∞ëÈÉ®ÂàÜÊìç‰ΩúÊòØÈúÄË¶ÅÈáçÊñ∞ÂàÜÈÖçÂÜÖÂ≠òÁöÑÔºåÊòØÂ§çÊùÇÁöÑÊìç‰Ωú„ÄÇÊàë‰ª¨ÂèØ‰ª•ËØïÁùÄÊÉ≥Ë±°Âú®ÊØèÊ¨°Âªâ‰ª∑Êìç‰ΩúÁöÑÊó∂ÂÄôÂ≠òÂÇ®È¢ùÂ§ñÁöÑË¥πÁî®ÔºåÁõ∏ÂΩì‰∫éÂ≠òÊ¨æÔºåÊù•ÊîØ‰ªòÂ§çÊùÇÊìç‰ΩúÁöÑË¥πÁî®„ÄÇ Êàë‰ª¨ÂÅáËÆæ‰∏ÄÊ¨°Âü∫Êú¨ÁöÑÊìç‰ΩúË¥πÁî®ÊòØ‰∏Ä‰∏™Á°¨Â∏ÅÔºåÂΩìÊàë‰ª¨ÊèíÂÖ•‰∫Ü‰∏Ä‰∏™‰∏ãÊ†á‰∏∫ n ÁöÑÂÖÉÁ¥†Êó∂Ôºö Êàë‰ª¨Ë¶ÅËä±Ë¥πÁ¨¨‰∏Ä‰∏™Á°¨Â∏ÅÔºå‰Ωú‰∏∫Âü∫Êú¨ÁöÑÊèíÂÖ•Êìç‰ΩúËä±Ë¥π Êàë‰ª¨ËøòË¶ÅÂ≠òÂÇ®Á¨¨‰∫å‰∏™Á°¨Â∏ÅÔºå‰Ωú‰∏∫Êñ∞ÊèíÂÖ•ÁöÑ n Âú®ÈáçÊñ∞ÂàÜÈÖçÂÜÖÂ≠òÊó∂ÁßªÂä®ÂÆÉÁöÑË¥πÁî® ÊúÄÂêéÊàë‰ª¨Ë¶ÅÂ≠òÂÇ®Á¨¨‰∏â‰∏™Á°¨Â∏ÅÔºå‰Ωú‰∏∫Êï∞ÁªÑÁöÑÂâçÂçäÈÉ®ÂàÜÁöÑÊüê‰∏™ÂØπÂ∫îÂÖÉÁ¥†ÈáçÊñ∞ÂàÜÈÖçÂÜÖÂ≠òÊó∂ÁßªÂä®Ë¥πÁî® ËøôÊ†∑Êù•ËÆ°ÁÆóÔºåÊØè‰∏™ÊèíÂÖ•Êìç‰ΩúÊúÄÂ§öÈúÄË¶Å‰ªòÂá∫‰∏â‰∏™Á°¨Â∏ÅÔºåËÄåÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÊòØ‰∏çÈúÄË¶ÅÁ¨¨‰∏â‰∏™Á°¨Â∏ÅÁöÑ„ÄÇÊâÄ‰ª•Ë¥πÁî®ÊÄªÊï∞ÊòØÔºö3n-1„ÄÇ ÂäøËÉΩÁÆóÊ≥ïÔºàPotential MethodÔºâÈ¶ñÂÖàËØ¥Êòé‰∏Ä‰∏ãÔºåÁõÆÂâçÊàëÂØπËøô‰∏™ÊñπÊ≥ïËøòÊòØÊó†Ê≥ïÁõ¥ËßÇÁöÑÁêÜËß£„ÄÇÂÖàÁ•≠Âá∫Ëøô‰∏™ÂäøËÉΩÂáΩÊï∞Ôºö $$\Phi(h) = 2n-m$$ ÂÖ∂‰∏≠ n ÊòØÂΩìÂâçÊï∞ÁªÑÂÖÉÁ¥†ÁöÑ‰∏™Êï∞Ôºåm ÊòØÂΩìÂâçÊï∞ÁªÑÂÜÖÂ≠òÁ©∫Èó¥Â§ßÂ∞è„ÄÇ ÊØèÊ¨°ÊèíÂÖ•ÁöÑË¥πÁî®ÂáΩÊï∞ÂÆö‰πâ‰∏∫Ôºö $$c+\Phi(h&#39;)-\Phi(h)$$ c Ë°®Á§∫ÂΩìÂâçÊèíÂÖ•Êìç‰ΩúÁöÑÊÄªÁöÑËä±Ë¥πÔºå$\Phi(h&#39;)$ÊòØÊèíÂÖ•ÂêéÁöÑÂäøËÉΩÂáΩÊï∞Ôºå$\Phi(h)$ÊòØÊèíÂÖ•ÂâçÁöÑÂäøËÉΩÂáΩÊï∞„ÄÇ ËøôÈáåÂàÜ‰∏∫‰∏§ÁßçÊÉÖÂÜµÔºö Â¶ÇÊûún&lt;mÔºå‰∏çÂøÖÊâ©ÂÆπÔºåc=1ÔºåÂäøËÉΩÂáΩÊï∞Áõ∏Â∑Æ 2ÔºåÊâÄ‰ª•Âä†Ëµ∑Êù•ÊòØ 3 Â¶ÇÊûún=mÔºåÈÇ£‰πàÂ∞±Ë¶ÅÊâ©ÂÆπÔºåc=n+1Ôºå$\Phi(h&#39;)=2(n+1)-2n$Ôºå$\Phi(h)=2n-n$ÔºåÂä†Ëµ∑Êù•ËøòÊòØ 3 ÊâÄ‰ª•Ë¥πÁî®ÂáΩÊï∞ÂÖ∂ÂÆûÊòØ‰∏Ä‰∏™Á≠â‰∫é 3 ÁöÑÂ∏∏Êï∞ÂáΩÊï∞„ÄÇ]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âø´ÈÄüÊéíÂ∫è]]></title>
    <url>%2Fblog%2F2019%2F02%2F19%2F%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[Âø´ÈÄüÊéíÂ∫èÁÆóÊ≥ïÊòØ‰∏Ä‰∏™ÂéüÁêÜÈùûÂ∏∏ÁÆÄÂçïÊòìÊáÇÁöÑÁÆóÊ≥ïÔºå‰ΩÜÂ¶ÇÊûúÁé∞Âú∫ÊâãÂÜôÁöÑËØùÂèàÊúâÂ§öÂ∞ë‰∫∫ËÉΩÂÜôÂæóÂá∫Êù•Âë¢ÔºüÊàë‰ªäÂ§©ÂèàËØï‰∫Ü‰∏Ä‰∏ãÔºåÂèëÁé∞ËøòÊòØÂ≠òÂú®‰∏Ä‰∫õËÆ§Áü•‰∏äÁöÑÈóÆÈ¢ò„ÄÇÈ¶ñÂÖàÊàëÊòéÁôΩÂø´ÊéíÁöÑÊ†∏ÂøÉÊìç‰ΩúÊòØÔºöÈÄâÂèñ‰∏Ä‰∏™‰∏≠Êû¢ÔºåÁÑ∂ÂêéÊääÂ∞è‰∫é‰∏≠Êû¢ÁöÑÊîæÂà∞Â∑¶ËæπÔºåÂ§ß‰∫é‰∏≠Êû¢ÁöÑÊîæÂà∞Âè≥Ëæπ„ÄÇ‰ΩÜÊàëÂèëÁé∞Êó∂Èöî‰ªÖ‰ªÖ‰∏ÄÂπ¥Â§öÔºåÊàëÂ±ÖÁÑ∂Â∑≤ÁªèÂøò‰∫ÜËøô‰∏™Êìç‰ΩúÁöÑËã±ÊñáÂêçÂ≠ó‰∫Ü„ÄÇÁõ¥Âà∞ÊàëÂú®ÂÜôËøôÁØáÊñáÁ´†ÁöÑÊó∂ÂÄôÊâçÁ™ÅÁÑ∂ÊÉ≥Ëµ∑Êù•Ôºöpartition Êìç‰Ωú„ÄÇ Âú®‰ΩøÁî® partition Êìç‰ΩúÁöÑÂâçÊèê‰∏ãÔºåÈÄíÂΩíËß£ÂÜ≥ÈóÆÈ¢òÂ∞± OK ‰∫Ü„ÄÇ partition ÂÖ∑‰ΩìÊìç‰ΩúÂ¶Ç‰∏ãÔºö ÊàëÈÄâÂèñÁöÑ‰∏≠Êû¢ÊòØÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†Ôºå‰∏î‰ªéÂâçÂæÄÂêéÈÅçÂéÜÊï∞ÁªÑ„ÄÇÈÅáÂà∞Â∞è‰∫é‰∏≠Êû¢ÁöÑÔºåÊàëË¶Å‰∫§Êç¢ÂΩìÂâçÁªìÁÇπÂíå‰∏≠Êû¢„ÄÇÈÅáÂà∞Â§ß‰∫é‰∏≠Êû¢ÁöÑÔºåÁõ¥Êé•Áï•Ëøá„ÄÇ Á¨¨‰∏Ä‰∏™ÂàÜÊîØ‰πüÂ∞±ÊòØÈÅáÂà∞Â∞è‰∫é‰∏≠Êû¢ÁöÑÁªìÁÇπÔºåËøôÈáåÊâçÊòØÊìç‰ΩúÊØîËæÉÂ§çÊùÇÁöÑÈÉ®ÂàÜÔºå‰ªîÁªÜÊÉ≥ÊÉ≥ÂÖ∂ÂÆûËøôÈáåË¶Å‰∫§Êç¢‰∏§Ê¨°„ÄÇÂ∞ÜÂ∞è‰∫é‰∏≠Êû¢ÁöÑÁªìÁÇπ‰∏é‰∏≠Êû¢‰∫§Êç¢‰πãÂêéÔºå‰∏≠Êû¢Ë∑ëÂà∞‰∫ÜÊúÄÂêéÈù¢ÔºåÊ≠§Êó∂ÁöÑÁªìÊûÑÁõ∏ÂΩì‰∫éÔºöÂ∞èÂ∞èÂ∞è..Â§ßÂ§ßÂ§ß..‰∏≠Êû¢„ÄÇÊàë‰ª¨ËøòË¶ÅÂ∞Ü‰∏≠Êû¢Â°ûÂà∞‰∏≠Èó¥Âéª„ÄÇ 1234567891011121314151617181920212223242526public void qsort(int[] array, int begin, int end)&#123; if(begin&gt;=end-1)&#123; return; &#125; int pivotIndex = partition(array, begin, end); qsort(array, begin, pivotIndex); qsort(array, pivotIndex+1, end);&#125;private int partition(int[] array, int begin, int end)&#123; int pivot = array[begin]; int pivotIndex = begin; int index = begin+1; while(index&lt;end)&#123; if(array[index]&lt;pivot)&#123; int temp = array[index]; array[index] = array[pivotIndex]; array[pivotIndex++] = temp; temp = array[index]; array[index] = array[pivotIndex]; array[pivotIndex] = temp; &#125; index++; &#125; return pivotIndex;&#125; ËøòÂèØ‰ª•ÊÄùËÄÉ‰∏Ä‰∏ãÔºö ÈÄâÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÂÅö‰∏≠Êû¢Ôºå‰ªéÂêéÂæÄÂâçÈÅçÂéÜ ÈÄâÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÂÅö‰∏≠Êû¢Ôºå‰ªéÂâçÂæÄÂêéÈÅçÂéÜ ÈÄâÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÂÅö‰∏≠Êû¢Ôºå‰ªéÂêéÂæÄÂâçÈÅçÂéÜ ÊâÄ‰ª•ÊúÄÂêéÊàëÂèëÁé∞Âø´ÈÄüÊéíÂ∫èÁ°ÆÂÆûÊòØ‰∏Ä‰∏™ÁÆÄÂçïÊòìÊáÇÁöÑÁÆóÊ≥ïÔºåÈöæÁÇπÂú®‰∫é partition Êìç‰ΩúÁöÑÂÖ∑‰ΩìÈóÆÈ¢òÂÖ∑‰ΩìÂàÜÊûê„ÄÇÂõõÁ±ª partition ÂÖ®ÈÉ®ÂÜô‰∏ÄÈÅç„ÄÇÂ∫îËØ•Â∑Æ‰∏çÂ§ö‰∫Ü„ÄÇ ‰∏äÈù¢ÁöÑÊñπÊ≥ïÂΩíÊ†πÁªìÂ∫ïÈÉΩÊòØ‰ΩøÁî® ‰∏Ä‰∏™‰∏≠Êû¢ Êù•ÂàíÂàÜÔºåÂÆûÈôÖ‰∏ä‰πüÂèØ‰ª•Áî®‰∏§‰∏™ÊåáÈíàÊù•ÂàíÂàÜÔºö‰∏Ä‰∏™ËÆ∞ÂΩïÂ∞èÈÉ®ÁöÑÊú´Â∞æÔºå‰∏Ä‰∏™ËÆ∞ÂΩïÂ§ßÈÉ®ÁöÑÈ¶ñÈÉ®„ÄÇËøô‰∏§‰∏™ÊåáÈíà‰∏Ä‰∏™‰ªéÂâçÂæÄÂêéÔºå‰∏Ä‰∏™‰ªéÂêéÂæÄÂâçÔºåÁõ¥Âà∞Áõ∏ÈÅáÔºåÊú¨ËΩÆÂàíÂàÜÊìç‰ΩúÂ∞±ÁªìÊùü„ÄÇ ‰∫éÊòØÊàëÂèàÊäΩÁ©∫ÂÜô‰∫Ü‰∏Ä‰∏ãËøô‰∏™‰∏§‰∏™ÊåáÈíàÂæÄ‰∏≠Èó¥Èù†ÁöÑÔºåÁªìÊûúÂπ∂Ê≤°Êúâ‰∏ÄÈÅçÂÜôÂØπÔºåÂéüÂõ†ÊòØËæπÁïåÊ£ÄÊü•ÔºåÂ±ÖÁÑ∂Ë¶Å‰∏çÂÅúÁöÑÊ£ÄÊü•Ôºö 123456789101112131415161718192021private int partition1(int[] array, int begin, int end)&#123; int pivot = array[begin]; int smallEnd = begin; int bigBegin = end-1; while(smallEnd&lt;bigBegin)&#123; while (smallEnd&lt;bigBegin &amp;&amp; array[bigBegin]&gt;pivot)&#123; bigBegin--; &#125; if(smallEnd&lt;bigBegin)&#123; array[smallEnd++] = array[bigBegin]; &#125; while(smallEnd&lt;bigBegin &amp;&amp; array[smallEnd]&lt;pivot)&#123; smallEnd++; &#125; if(smallEnd&lt;bigBegin)&#123; array[bigBegin--] = array[smallEnd]; &#125; &#125; array[smallEnd] = pivot; return smallEnd;&#125; ËøôÊ†∑ÊÑüËßâÂ∞±Â§™‰∏çÁæé‰∫Ü„ÄÇ]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âπ∂Êü•ÈõÜ]]></title>
    <url>%2Fblog%2F2019%2F01%2F19%2F%E5%B9%B6%E6%9F%A5%E9%9B%86%2F</url>
    <content type="text"><![CDATA[Âπ∂Êü•ÈõÜ‰ªÄ‰πàÊòØÂπ∂Êü•ÈõÜÂπ∂Êü•ÈõÜÁöÑÊ†∏ÂøÉÊòØparentÊåáÈíàÔºå‰∏Ä‰∏™ÁªìÁÇπÂèØ‰ª•ÊâæÂà∞Ëá™Â∑±ÊâÄÂ±ûÁöÑÁªìÁÇπ„ÄÇ‰ªéËÄåÊääÁªìÁÇπÂΩíÁ±ª„ÄÇÊúâ‰∏§‰∏™Ê†∏ÂøÉÊìç‰ΩúÔºö UnionÔºàÁî®Êù•ÂêàÂπ∂‰∏§‰∏™Âπ∂Êü•ÈõÜÔºâ FindÔºàÁî®‰∫éÊü•Êâæ‰∏Ä‰∏™ÁªìÁÇπÁöÑparentÔºâ ÊâÄ‰ª•Âπ∂Êü•ÈõÜÂèØ‰ª•Âè´ÂÅöÔºöunion-find data structure„ÄÇ ‰ªÄ‰πàÊòØË∑ØÂæÑÂéãÁº©Êàë‰ª¨Áúã‰∏§‰∏™ÁªìÁÇπÊòØÂê¶Â±û‰∫éÂêå‰∏Ä‰∏™Âπ∂Êü•ÈõÜÔºåÂÆûÈôÖ‰∏äÂè™ÁúãÊúÄÈ°∂Â±ÇÁöÑÈÇ£‰∏™parentÔºåÂ¶ÇÊûúËøô‰∏§‰∏™ÁªìÁÇπÂ±û‰∫éÂêå‰∏Ä‰∏™ÊúÄÈ°∂Â±ÇparentÔºåÈÇ£‰πàÂÆÉ‰ª¨Â∞±Âú®Âêå‰∏Ä‰∏™Âπ∂Êü•ÈõÜ‰∏≠„ÄÇ ÊâÄ‰ª•Êàë‰ª¨ÂÆûÈôÖ‰∏äÂè™ÈúÄË¶Å‰∏§Â±ÇÁöÑÊ†ëÁªìÊûÑÔºåËÆ©ÊâÄÊúâÂÖ∂‰ªñÁªìÁÇπÁöÑparentÊåáÈíàÊåáÂêëÊúÄÈ°∂Â±ÇparentÔºåËøôÊ†∑Â∞±ËÉΩËææÂà∞ÊâÅÂπ≥ÂåñÂπ∂Êü•ÈõÜÁöÑÁõÆÁöÑÔºå‰ªéËÄå‰ΩøFindÊìç‰Ωú‰ªéO(logN)ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÂèòÊàêO(1)„ÄÇËøôÂ∞±Âè´ÔºöË∑ØÂæÑÂéãÁº© ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456public void findParent(UnionFindSetNode node)&#123; if(node.parent!=node)&#123; node.parent = findParent(node.parent); &#125; return node.parent;&#125; ËøôÊÆµ‰ª£Á†ÅÂæàÂ∑ßÂ¶ôÔºåÂèØ‰ª•Âú®Êü•ÊâæÊú¨ÁªìÁÇπÁà∂‰∫≤ÁöÑÊó∂ÂÄôÔºåÂ∞ÜË∑ØÂæÑ‰∏äÁöÑÊâÄÊúâÁ•ñÂÖàÊâÅÂπ≥Âåñ„ÄÇ ÂêàÂπ∂Êìç‰ΩúÊ†∏ÂøÉÁõÆÊ†áÊòØÔºöÂ∞ΩÂèØËÉΩÂáèÂ∞ëÊ∑±Â∫¶„ÄÇÊâÄ‰ª•ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÁÇπÊòØÔºöÊääÊ∑±Â∫¶Â∞èÁöÑÂπ∂Êü•ÈõÜÂΩíÂπ∂Âà∞Ê∑±Â∫¶Â§ßÁöÑÂπ∂Êü•ÈõÜ„ÄÇÊàë‰ª¨ÁªôÂπ∂Êü•ÈõÜÂ§öÊ∑ªÂä†‰∏Ä‰∏™Ê∑±Â∫¶Â±ûÊÄßÔºörankÔºåÊØîÂ¶Ç‰∏§Â±ÇÁöÑÂπ∂Êü•ÈõÜÔºåparent ÁöÑ rank Â∞±ÊòØ 1ÔºåÂè∂Â≠êËäÇÁÇπ‰ª¨ÁöÑ rank Â∞±ÊòØ 0„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 1234567891011121314public void union(UnionFindSetNode node1, UnionFindSetNode node2)&#123; UnionFindSetNode parent1 = findParent(node1); UnionFindSetNode parent2 = findParent(node2); if(parent1!=parent2)&#123; if(parent1.rank&gt;parent2.rank)&#123; parent2.parent = parent1; &#125;else if(parent1.rank&lt;parent2.rank)&#123; parent1.parent = parent2; &#125;else&#123; parent1.parent = parent2; parent2.rank++; &#125; &#125;&#125;]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[KMPÁÆóÊ≥ï]]></title>
    <url>%2Fblog%2F2019%2F01%2F17%2FKMP%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[KMP ÁÆóÊ≥ïKMP ÁÆóÊ≥ïÁî®Êù•Âú®‰∏Ä‰∏™ÊñáÊú¨‰∏≠Êü•ÊâæÊ®°Âºè‰∏≤ÔºåÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Ôºö ÊñáÊú¨ÂåπÈÖç‰æãÂ≠êÔºö Êàë‰ª¨Êää‰∏äÈù¢ÈÇ£‰∏™ÈïøÂ≠óÁ¨¶‰∏≤ÁöÑÁß∞‰∏∫ÊñáÊú¨Ôºå‰∏ãÈù¢Ëøô‰∏™Áü≠ÁöÑÁß∞‰∏∫Ê®°Âºè‰∏≤„ÄÇÊàë‰ª¨ÁöÑÁõÆÁöÑÊòØÊü•ÁúãABADABADÊòØÂê¶Âá∫Áé∞Âú®ÊñáÊú¨‰∏≠„ÄÇ ‰∏çÂøÖË¶ÅÁöÑÊØîËæÉÔºö Ë∑≥Ëøá‰∏çÂøÖË¶ÅÁöÑÊØîËæÉÔºö KMP ÁÆóÊ≥ïÁöÑÊ†∏ÂøÉ‰ΩúÁî®Âú®‰∫éÂ∏ÆÂä©Ê®°Âºè‰∏≤È°∫Âà©ÁöÑË∑≥ËøáÂæàÂ§ö‰∏çÂøÖË¶ÅÁöÑÊØîËæÉÔºàÊ®°Âºè‰∏≤Ê≤°Êúâ‰ªª‰ΩïÂâçÁºÄ‰∏éÊñáÊú¨ÂåπÈÖçÔºâÔºåÁõ¥Êé•ÂêéÁßªÂà∞‰∏ÄÈÉ®ÂàÜÂâçÁºÄÂ∑≤ÁªèÂåπÈÖçÁöÑ‰ΩçÁΩÆÔºåÂºÄÂßã‰∏ã‰∏ÄÊ¨°ÁöÑÊØîËæÉ„ÄÇÊõ¥ÂáÜÁ°ÆÁöÑËÆ≤ÊòØÁßªÂä®Âà∞ÔºöÊúÄÈïøÁúüÂâçÂêéÁºÄÂåπÈÖçÁöÑ‰ΩçÁΩÆÔºåÂ¶Ç‰∏äÂõæÊâÄÁ§∫ÁöÑABA„ÄÇ ‰ªÄ‰πàÊòØÁúüÂâçÂêéÁºÄÂâçÁºÄÂíåÂêéÁºÄÊàë‰ª¨ÈÉΩ‰∏çÈôåÁîüÔºåÊØîÂ¶ÇÂçïËØçABAÔºåÂÆÉÊúâ‰∏â‰∏™ÂâçÁºÄÔºöA„ÄÅAB„ÄÅABAÔºåÂíå‰∏â‰∏™ÂêéÁºÄÔºöA„ÄÅBA„ÄÅABA„ÄÇ ÁúüÂâçÂêéÁºÄÁöÑÊÑèÊÄùÊòØÔºåÂâçÂêéÁºÄÂøÖÈ°ªÊòØÂçïËØçÁöÑÁúüÂ≠êÈõÜÔºå‰πüÂ∞±ÊòØËØ¥‰∏çËÉΩÊòØÂçïËØçÊú¨Ë∫´„ÄÇÊâÄ‰ª•‰∏äÈù¢ÈÇ£‰∏™ÂçïËØçABAÁöÑÁúüÂâçÁºÄÊòØÔºöA„ÄÅABÔºåÁúüÂêéÁºÄÊòØÔºöA„ÄÅBA„ÄÇ ÈÇ£‰πàÂçïËØçABAÁúüÂâçÂêéÁºÄÁöÑÊúÄÈïøÂåπÈÖçÊòØÔºöA„ÄÇ ÈÇ£‰πàÁúüÂâçÂêéÁºÄÊòØÂê¶ÂåπÈÖçÊúâ‰ªÄ‰πàÁî®ÔºüÊàë‰ª¨‰ªîÁªÜËßÇÂØüÊñáÁ´†ÊúÄÂºÄÂ§¥ÁöÑÊñáÊú¨ÂåπÈÖç‰æãÂ≠ê„ÄÇÂú®‰∏çÂøÖË¶ÅÁöÑÊØîËæÉ‰∏≠ÔºåÊàë‰ª¨ÊãøBADABAÂíåABADABÊØîËæÉ„ÄÇËÄåËøô‰∏§‰∏™ÔºåÂâçËÄÖÊòØÊ®°Âºè‰∏≤ABADABAÈÉ®ÂàÜÁöÑÂêéÁºÄÔºåÂêéËÄÖÂàôÊòØÂâçÁºÄ„ÄÇÂ¶ÇÊûúÊàë‰ª¨ÁÆóÂæó‰∫ÜABADABAÁöÑÁúüÂâçÂêéÁºÄÁöÑÊúÄÈïøÂåπÈÖçÔºåÂ∞±Â∑≤ÁªèÁü•ÈÅì‰∫ÜBADABAÂíåABADAB‰∏çÁõ∏Á≠â„ÄÇËÄå‰∏îËøòÁü•ÈÅìADABAÂíåABADA‰πü‰∏çÁõ∏Á≠âÔºåÁ≠âÁ≠â„ÄÇ Âè™Ë¶ÅÊàë‰ª¨Áü•ÈÅì‰∫ÜÁúüÂâçÂêéÁºÄÁöÑÊúÄÈïøÂåπÈÖçÊòØ‰ªÄ‰πàÔºåÊàë‰ª¨ÂèØ‰ª•Áõ¥Êé•Ë∑≥ËøáÊâÄÊúâËøô‰∫õÊ≤°ÂøÖË¶ÅÁöÑÊØîËæÉ„ÄÇ KMP ÁöÑÊ†∏ÂøÉÂ∞±ÊòØÔºöÂú®ÊØè‰∏ÄÊ¨°Â§±ÈÖçÁöÑÊó∂ÂÄôÔºåÂà©Áî®ÊúÄÈïøÁúüÂâçÂêéÁºÄÂåπÈÖçÈïøÂ∫¶ÔºåÁõ¥Êé•Ë∑≥Ëøá‰∏çÂøÖË¶ÅÁöÑÊØîËæÉ„ÄÇ next Êï∞ÁªÑnext Êï∞ÁªÑ‰πüÂ∞±ÊòØÔºöÈÉ®ÂàÜÂåπÈÖçË°®ÔºàPartial Match TableÔºâ„ÄÇÂ∞±ÊòØ‰∏Ä‰∏™ÊúÄÈïøÁúüÂâçÂêéÁºÄÂåπÈÖçÈïøÂ∫¶Ë°®„ÄÇ È¶ñÂÖà next Êï∞ÁªÑÂè™ÈúÄË¶ÅÁî®Ê®°Âºè‰∏≤ÂæóÂá∫ÔºåÂÆÉÊòØÂØπÊ®°Âºè‰∏≤ÁöÑËß£ÊûêÔºåË∑üË¶ÅÂåπÈÖçÁöÑÊñáÊú¨Ê≤°ÊúâÂçäÊØõÈí±ÂÖ≥Á≥ª„ÄÇÂÖ∂Ê¨° next Êï∞ÁªÑËÆ∞ÂΩïÁöÑÂÖ∂ÂÆûÂ∞±ÊòØÊúÄÈïøÁúüÂâçÂêéÁºÄÂåπÈÖçÈïøÂ∫¶Ôºå‰ΩÜÈîôÂºÄ‰∫Ü‰∏Ä‰Ωç„ÄÇ ÁúüÂâçÂêéÁºÄÁöÑÊÑèÊÄùÊòØÔºåÂâçÂêéÁºÄ‰∏çËÉΩÊòØÂ≠óÁ¨¶‰∏≤Êú¨Ë∫´ÔºåÂè™ËÉΩÊòØÂ≠óÁ¨¶‰∏≤ÁöÑÁúüÂ≠êÈõÜ i 0 1 2 3 4 5 6 7 8 Ê®°Âºè‰∏≤ A B A D A B A D \0 next[i] -1 0 0 1 0 1 2 3 4 i = 0Ôºånext[0]ÔºåÊàë‰ª¨Â°´-1Ôºõ i = 1ÔºåÂâçÈù¢ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫AÔºåÂÖ∂ÊúÄÈïøÁõ∏ÂêåÁúüÂâçÂêéÁºÄÈïøÂ∫¶‰∏∫ 0ÔºåÂç≥next[1] = 0Ôºõ i = 2ÔºåÂâçÈù¢ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫ABÔºåÂÖ∂ÊúÄÈïøÁõ∏ÂêåÁúüÂâçÂêéÁºÄÈïøÂ∫¶‰∏∫ 0ÔºåÂç≥next[2] = 0Ôºõ i = 3ÔºåÂâçÈù¢ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫ABAÔºåÂÖ∂ÊúÄÈïøÁõ∏ÂêåÁúüÂâçÂêéÁºÄ‰∏∫AÔºåÂç≥next[3] = 1Ôºõ i = 4ÔºåÂâçÈù¢ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫ABADÔºåÂÖ∂ÊúÄÈïøÁõ∏ÂêåÁúüÂâçÂêéÁºÄÈïøÂ∫¶‰∏∫ 0ÔºåÂç≥next[4] = 0Ôºõ i = 5ÔºåÂâçÈù¢ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫ABADAÔºåÂÖ∂ÊúÄÈïøÁõ∏ÂêåÁúüÂâçÂêéÁºÄÈïøÂ∫¶‰∏∫AÔºåÂç≥next[5] = 1Ôºõ i = 6ÔºåÂâçÈù¢ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫ABADABÔºåÂÖ∂ÊúÄÈïøÁõ∏ÂêåÁúüÂâçÂêéÁºÄÈïøÂ∫¶‰∏∫ABÔºåÂç≥next[6] = 2Ôºõ i = 7ÔºåÂâçÈù¢ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫ABADABAÔºåÂÖ∂ÊúÄÈïøÁõ∏ÂêåÁúüÂâçÂêéÁºÄ‰∏∫ABAÔºåÂç≥next[7] = 3Ôºõ i = 8ÔºåÂâçÈù¢ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫ABADABADÔºåÂÖ∂ÊúÄÈïøÁõ∏ÂêåÁúüÂâçÂêéÁºÄ‰∏∫ABADÔºåÂç≥next[8]=4Ôºõ ËøôÂº† next Ë°®ÊûÅÂÖ∂ÊúâÁî®ÔºåÂâçÈù¢ËØ¥‰∫ÜÔºåÂú®Â≠óÁ¨¶‰∏≤ÂåπÈÖçÁöÑÊØè‰∏ÄÊ¨°Â§±ÈÖçÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨ÈÉΩÂèØ‰ª•Áî®Â∑≤ÁªèÂåπÈÖç‰∏äÁöÑËøôÊÆµÂ≠óÁ¨¶‰∏≤ÁöÑÊúÄÈïøÁúüÂâçÂêéÁºÄÂåπÈÖçÈïøÂ∫¶Êù•ÂÆö‰ΩçÂ∞ÜË¶ÅË∑≥ËΩ¨ÁöÑ‰ΩçÁΩÆ„ÄÇËøòÊòØÊãøÊúÄÂºÄÂßãÁöÑÊñáÊú¨ÂåπÈÖç‰æãÂ≠êÔºö ÂΩìÂõæ‰∏ÄÂ§±ÈÖçÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨Êü•ABADABADÁöÑÂ§±ÈÖç‰ΩçÁΩÆÁöÑ next Êï∞ÁªÑÔºå‰πüÂ∞±ÊòØnext[7]ÔºåÂæóÂà∞ABADABAÁöÑÊúÄÈïøÁúüÂâçÂêéÁºÄÂåπÈÖçÈïøÂ∫¶3ÔºåÁÑ∂ÂêéÊãø&quot;ABADABAD&quot;.charAt(3)‰πüÂ∞±ÊòØDË∑üÊñáÊú¨‰∏≠Â§±ÈÖçÂ§ÑÁöÑÂ≠óÁ¨¶&#39; &#39;ÁªßÁª≠ÂåπÈÖç„ÄÇÂ¶ÇÊûúÂèàÂ§±ÈÖçÔºåÈÇ£‰πàÈÄíÂΩíÂ§ÑÁêÜ„ÄÇÈÄíÂΩíÁöÑËæπÁïåÊòØ‰ªÄ‰πàÔºüÁ≠îÊ°àÊòØnext[0]„ÄÇ ‰ª£Á†ÅËøô‰∏™‰ª£Á†ÅÂπ∂‰∏çÈöæÂÜôÔºåÊàëÁÆÄÂçïËÆ≤‰∏Ä‰∏ã„ÄÇ È¶ñÂÖàÊàë‰ª¨ÈúÄË¶ÅÊûÑÈÄ† next Êï∞ÁªÑÔºåÈúÄË¶ÅÁöÑÂèÇÊï∞Âè™Êúâ‰∏Ä‰∏™ÔºöÊ®°Âºè‰∏≤„ÄÇ ÁÑ∂ÂêéÊàë‰ª¨‰ΩøÁî®‰∏Ä‰∏™ÊåáÈíàÈÅçÂéÜÊ®°Âºè‰∏≤ÔºåÂè¶‰∏Ä‰∏™ÊåáÈíàË¥üË¥£ËÆ∞ÂΩïÂåπÈÖçÊ∑±Â∫¶„ÄÇ ÁîüÊàê next Êï∞ÁªÑÔºå‰πüÊòØ‰∏Ä‰∏™ÂåπÈÖçÁöÑËøáÁ®ãÔºåÈÅáÂà∞‰∏çÂåπÈÖç‰πüË¶ÅË∑≥Ëøá‰∏çÂøÖË¶ÅÁöÑÊØîËæÉÔºåÊâÄ‰ª•ËøôÂÆûÈôÖ‰∏äÊòØ‰∏Ä‰∏™ÈÄíÂΩíÁöÑÈóÆÈ¢ò„ÄÇ ÂàÜÊîØÂè™Êúâ‰∏§‰∏™ÔºåÂåπÈÖçÁöÑÊó∂ÂÄôÔºöi++Ôºåj++Ôºånext[i]=j„ÄÇ‰∏çÂåπÈÖçÁöÑÊó∂ÂÄôÔºåÈÄíÂΩíÊü•Êâæ‰∏ã‰∏Ä‰∏™ÂøÖË¶ÅÁöÑÂåπÈÖçÔºöj=next[j]„ÄÇ 12345678910111213141516171819202122232425262728293031323334private int[] getNextArray(String pattern)&#123; int[] nextArray = new int[pattern.length()+1]; nextArray[0]=-1; int i=0; int j=-1; while(i&lt;pattern.length())&#123; if(j==-1 || pattern.charAt(i)==pattern.charAt(j))&#123; i++; j++; nextArray[i]=j; &#125;else&#123; j = nextArray[j]; &#125; &#125; return nextArray;&#125;public int KMP(String text, String pattern)&#123; int[] nextArray = getNextArray(pattern); int i=0; int j=0; while(i&lt;text.length() &amp;&amp; j&lt;pattern.length())&#123; if(j==-1 || text.charAt(i)==pattern.charAt(j))&#123; i++; j++; &#125;else&#123; j = nextArray[j]; &#125; &#125; if(j==pattern.length())&#123; return i-j; &#125; return -1;&#125; ÂΩìÁÑ∂ËøôÁßçÈîôÂºÄÔºåÂíånext[0]=-1ÁöÑËÆæÂÆöÔºå‰∏çÈÇ£‰πàËá™ÁÑ∂„ÄÇÂÖ∂ÂÆûÂèØ‰ª•ÊúâÊõ¥Ëá™ÁÑ∂ÁöÑËÆæËÆ°Ôºö i 0 1 2 3 4 5 6 7 8 Ê®°Âºè‰∏≤ A B A D A B A D \0 next[i] 0 0 1 0 1 2 3 4 ËøôÊ†∑‰∏Ä‰∏ÄÂØπÂ∫îÂ∞±Ë°å‰∫ÜÔºånext Êï∞ÁªÑ‰πü‰∏éÊ®°Âºè‰∏≤Á≠âÈïø„ÄÇ ËøôÁßç next Ë°®ÁöÑ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456789101112131415161718192021222324252627282930313233343536373839private int[] getNextArray(String pattern)&#123; int[] nextArray = new int[pattern.length()]; int i=1; int j=0; while(i&lt;pattern.length())&#123; while(j&gt;0 &amp;&amp; pattern.charAt(i)!=pattern.charAt(j))&#123; j = nextArray[j-1]; &#125; while(i&lt;pattern.length() &amp;&amp; pattern.charAt(i)==pattern.charAt(j))&#123; nextArray[i++] = ++j; &#125; if(j==0)&#123; nextArray[i++] = j; &#125; &#125; return nextArray;&#125;public int KMP(String text, String pattern)&#123; int[] nextArray = getNextArray(pattern); int i=0; int j=0; while(i&lt;text.length() &amp;&amp; j&lt;pattern.length())&#123; while(j&gt;0 &amp;&amp; text.charAt(i)!=pattern.charAt(j))&#123; j = nextArray[j-1]; &#125; while(i&lt;text.length() &amp;&amp; j&lt;pattern.length() &amp;&amp; text.charAt(i)==pattern.charAt(j))&#123; i++; j++; &#125; if(j==0)&#123; i++; &#125; &#125; if(j==pattern.length())&#123; return i-j; &#125; return -1;&#125; ËøôÊÆµ‰ª£Á†ÅÁúãËµ∑Êù•Ëøú‰∏çÂ¶Ç‰∏äÈù¢Á¨¨‰∏ÄÁßç next Ë°®ÁöÑ‰ª£Á†ÅÁÆÄÊ¥ÅÊ∏ÖÊô∞„ÄÇ‰∏ãÈù¢ÂÅö‰∏Ä‰∏™ÁÆÄÂåñÔºåÂéªÊéâÂÜÖÈÉ®ÁöÑÂæ™ÁéØÔºö 1234567891011121314151617181920212223242526272829303132333435private int[] getNextArray(String pattern)&#123; int[] nextArray = new int[pattern.length()]; int i=1; int j=0; while(i&lt;pattern.length())&#123; if(j&gt;0 &amp;&amp; pattern.charAt(i)!=pattern.charAt(j))&#123; j = nextArray[j-1]; &#125; else if(pattern.charAt(i)==pattern.charAt(j))&#123; nextArray[i++] = ++j; &#125; else if(j==0)&#123; nextArray[i++] = j; &#125; &#125; return nextArray;&#125;public int KMP(String text, String pattern)&#123; int[] nextArray = getNextArray(pattern); int i=0; int j=0; while(i&lt;text.length() &amp;&amp; j&lt;pattern.length())&#123; if(j&gt;0 &amp;&amp; text.charAt(i)!=pattern.charAt(j))&#123; j = nextArray[j-1]; &#125; else if(text.charAt(i)==pattern.charAt(j))&#123; i++; j++; &#125; else if(j==0)&#123; i++; &#125; &#125; if(j==pattern.length())&#123; return i-j; &#125; return -1;&#125; Áúã‰ª£Á†ÅÂæàÂÆπÊòìÁü•ÈÅìÔºåÊñáÊú¨ÁöÑÊåáÈíàÊòØÂè™Â¢û‰∏çÂáèÁöÑÔºåËÄå‰∏îÂè™Âú®Â§±ÈÖç‰∏îÂåπÈÖçÊ∑±Â∫¶Â§ß‰∫é 0ÁöÑÊó∂ÂÄôÈÄíÂΩíÂ§ÑÁêÜÂ§±ÈÖçÊÉÖÂÜµ„ÄÇ‰ΩÜÂ¶Ç‰ΩïÁ≤æÁ°ÆÂàÜÊûêÁÆóÊ≥ïÂ§çÊùÇÂ∫¶Âë¢Ôºü ÁÆóÊ≥ïÂ§çÊùÇÂ∫¶ÂàÜÊûêËøô‰∏™ÁÆóÊ≥ïÁöÑÂàÜÊûêÂ±û‰∫éÂπ≥ÊëäÂàÜÊûê„ÄÇÂºïÂÖ•‰∏Ä‰∏™ÂèòÈáè kÔºåk=2*i-j„ÄÇËßÇÂØü‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºö 1234567while(j&lt;m &amp;&amp; i&lt;n)&#123; if(0&gt;j || T[i]==P[j])&#123; i++;j++; // kÂä†1 &#125;else&#123; j = next[j]; // jËá≥Â∞ëÂáè‰∏ÄÔºåi‰∏çÂèòÔºåÈÇ£‰πàkËá≥Â∞ëÂä†1 &#125;&#125; Áî±‰∏äËø∞Ê≥®ÈáäÂàÜÊûêÂæóÂá∫Ôºök ÂçïË∞ÉÈÄíÂ¢û„ÄÇk ÁöÑÊúÄÂ§ßÂÄºÊòØ2*n+1ÔºåËÄå k ÊòØËø≠‰ª£Ê¨°Êï∞ÁöÑ‰∏äÁïåÔºåÊâÄ‰ª•ÁÆóÊ≥ïÊúÄÂùèÊó∂Èó¥ÊòØÔºö2*n+1ÔºåÊâÄ‰ª•ËøôÊòØ‰∏Ä‰∏™O(n)ÁöÑÁÆóÊ≥ï„ÄÇÂêåÁêÜÂèØÂæóÁÆóÂá∫nextË°®ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØO(m)„ÄÇÊâÄ‰ª•ÊÄªÁöÑÁÆóÊ≥ïÂ§çÊùÇÂ∫¶ÊòØO(m+n)„ÄÇ]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËìÑÊ∞¥Ê±†ÁÆóÊ≥ï]]></title>
    <url>%2Fblog%2F2019%2F01%2F15%2F%E8%93%84%E6%B0%B4%E6%B1%A0%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[ËìÑÊ∞¥Ê±†ÁÆóÊ≥ï(Reservoir Sampling)Ëøô‰∏™ÁÆóÊ≥ïÁúüÁöÑÂæàÂ•áÂ¶ôÔºåÂÆÉÁöÑÊ†∏ÂøÉÊòØ‰∏Ä‰∏™Êï∞Â≠¶ËØÅÊòé„ÄÇÂ§ñÂª∂ÔºåÊàñËÄÖËØ¥Â∫îÁî®Âú∫ÊôØÊòØÔºö $C_n^k$Ôºå‰πüÂ∞±ÊòØ‰ªéÂ§ßÂ∞è‰∏∫ n ÁöÑÊ†∑Êú¨ÈõÜ‰∏≠ÈöèÊú∫Âèñ k ‰∏™‰∏çÂêåÁöÑÊ†∑Êú¨ ÊµÅÂºèÊï∞ÊçÆÔºåÊàñËÄÖËØ¥Êó†Ê≥ïÁõ¥Êé•Ê†πÊçÆÁ¥¢ÂºïÊãøÂà∞Êï∞ÊçÆÔºàÊõ¥Âä†‰∏çÂèØËÉΩ‰∏ÄÈÅçÂä†ËΩΩÂà∞ÂÜÖÂ≠òÔºâ ÁÆóÊ≥ïÊèèËø∞ÁÆóÊ≥ïÁöÑÊèèËø∞ÂÖ∂ÂÆûÂæàÁÆÄÂçïÔºöÁª¥Âü∫ÁôæÁßëÔºöÊ∞¥Â°òÊäΩÊ†∑ 1234567ÈóÆÈ¢òÊèèËø∞Ôºö‰ªéÂåÖÂê´n‰∏™‰∏çÂêåÁöÑÈ°πÁõÆÁöÑÈõÜÂêàS‰∏≠ÈöèÊú∫ÈÄâÂèñk‰∏™‰∏çÂêåÁöÑÊ†∑Êú¨„ÄÇÁÆóÊ≥ïÔºö‰ªéS‰∏≠ÂèñÈ¶ñk‰∏™ÊîæÂÖ•[Ê∞¥Â°ò]‰∏≠ÂØπÊØè‰∏™S[j]È°πÔºàj&gt;=kÔºåÊï∞ÁªÑ‰ªé0ÂºÄÂßãÔºâÔºötrueÈöèÊú∫‰∫ßÁîü‰∏Ä‰∏™ËåÉÂõ¥‰ªé0Âà∞jÁöÑÊï¥Êï∞rtrueËã•r&lt;kÂàôÊääÊ∞¥Â°ò‰∏≠ÁöÑÁ¨¨rÈ°πÊç¢ÊàêS[j]È°πÊúÄÂêéÂæóÂà∞ÁöÑÊ∞¥Â°òÂ∞±ÊòØÊäΩÊ†∑ÁªìÊûú Ëøô‰∏™ÁÆóÊ≥ï‰øùËØÅ‰∫ÜÊØè‰∏ÄÈ°πÊúÄÂêéÂèØËÉΩÂ≠òÂú®‰∫éÊ∞¥Â°ò‰∏≠ÁöÑÊ¶ÇÁéáÈÉΩÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇ ÂçïÁúãÁÆóÊ≥ïÔºå‰Ω†ËÇØÂÆö‰∏çÁü•ÈÅì‰∏∫‰ªÄ‰πàÊòØÁ≠âÊ¶ÇÁéáÔºåÂÖ∂ÂÆûÊï∞Â≠¶ËØÅÊòéÂπ∂‰∏çÈöæÔºåËØ∑Áúã‰∏ãÈù¢ÁöÑËØÅÊòéÔºö Êï∞Â≠¶ËØÅÊòéÊàë‰ª¨ÊääÊ†∑Êú¨ÂàÜ‰∏∫‰∏§Á±ªÔºö ‰∏ÄÁ±ªÊòØÈ¶ñ k ‰∏™ÔºåÂÆÉ‰ª¨‰∏ÄÂºÄÂßãÂ∞±Âú®Ê∞¥Â°ò‰∏≠ ‰∏ÄÁ±ªÊòØÂÖ∂‰ªñÔºåÂÆÉ‰ª¨‰∏ÄÂºÄÂßãÂπ∂‰∏çÂú®Ê∞¥Â°ò‰∏≠ Êàë‰ª¨ÂèëÁé∞‰∏§‰∏™ÁÆÄÂçïÁöÑÈÄªËæëÔºö ÂØπ‰∫éÊ∞¥Â°ò‰∏≠ÁöÑÊ†∑Êú¨ÔºåÂè™Ë¶ÅÈöèÊú∫Êï∞‰∏çÈÄâÂà∞ËØ•Ê†∑Êú¨ÔºåËØ•Ê†∑Êú¨Â∞±‰∏ç‰ºöË¢´ÊõøÊç¢ Ê∞¥Â°òÁöÑÊüê‰∏™È°π‰∏ÄÊó¶Ë¢´ÊõøÊç¢ÔºåÂ∞±‰∏çÂèØËÉΩÂÜçÂõûÂà∞Ê∞¥Â°òÔºå‰∏ç‰ºöÂá∫Áé∞Ë¢´ÊõøÊç¢ÊéâÔºåÁÑ∂ÂêéÂÜçÂõûÂà∞Ê∞¥Â°òÁöÑÂ±ÄÈù¢ÔºåËøôÊ†∑Â∞±‰øùËØÅ‰∫ÜÈóÆÈ¢ò‰∏ç‰ºöËøõ‰∏ÄÊ≠•ÂèòÂæóÂ§çÊùÇ„ÄÇÊâÄ‰ª•ÔºöÊüê‰∏™È°πË¢´‰øùÁïôÁöÑÊ¶ÇÁéá = Ë¢´ÈÄâ‰∏≠Âà∞Ê∞¥Â°òÁöÑÊ¶ÇÁéá * ÂêéÁª≠‰∏çË¢´ÊõøÊç¢ÁöÑÊ¶ÇÁéá ÂàÜÁ±ªËÆ®ËÆ∫ÔºåÈ¶ñ k ‰∏™Ê†∑Êú¨ÊúÄÁªàÂ≠òÂú®‰∫éÊ∞¥Â°ò‰∏≠ÁöÑÊ¶ÇÁéáÔºåÂíåÂÖ∂‰ΩôÊ†∑Êú¨ÊúÄÁªàÂ≠òÂú®‰∫éÊ∞¥Â°ò‰∏≠ÁöÑÊ¶ÇÁéáÔºö È¶ñ k ‰∏™Ê†∑Êú¨ÔºåÈöè‰æøÈÄâ‰∏Ä‰∏™ÂÅöÁ†îÁ©∂ÂØπË±°„ÄÇË¢´ÈÄâ‰∏≠Âà∞Ê∞¥Â°òÁöÑÊ¶ÇÁéá‰∏∫Ôºö1„ÄÇÔºàÊï∞ÁªÑ‰ªé 1 ÂºÄÂßãÔºâ‰ªé j=k+1 ÂºÄÂßãËÄÉËôëÊõøÊç¢ÔºåÁ¨¨‰∏ÄÊ¨°‰∏çË¢´ÊõøÊç¢ÁöÑÊ¶ÇÁéáÊòØ$\frac{k}{k+1}$ÔºåÁ¨¨‰∫åÊ¨°‰∏çË¢´ÊõøÊç¢ÁöÑÊ¶ÇÁéáÊòØ$\frac{k+1}{k+2}$ÔºåÁ¨¨‰∏âÊ¨°...Ôºå‰∏ÄÁõ¥Âà∞ÊúÄÂêé‰∏ÄÊ¨°‰∏çË¢´ÊõøÊç¢ÁöÑÊ¶ÇÁéáÊòØ$\frac{n-1}{n}$„ÄÇÊâÄ‰ª•ËØ•È°πË¢´‰øùÁïôÁöÑÊ¶ÇÁéá = $1\times\frac{k}{k+1}\times\frac{k+1}{k+2}\times\frac{k+2}{k+3}\times\cdots\times\frac{n-1}{n}=\frac{k}{n}$ ‰∏ÄÂºÄÂßã‰∏çÂú®Ê∞¥Â°ò‰∏≠ÁöÑÈÇ£‰∏ÄÈÉ®ÂàÜÔºåÈöè‰æøÈÄâ‰∏Ä‰∏™ÂÅöÁ†îÁ©∂ÂØπË±°„ÄÇË¢´ÈÄâ‰∏≠Âà∞Ê∞¥Â°òÁöÑÊ¶ÇÁéá‰∏∫Ôºö$\frac{k}{j}$ÔºåÂêéÁª≠‰∏çË¢´ÊõøÊç¢ÁöÑÊ¶ÇÁéá$\frac{j}{j+1}$Ôºå‰∏ÄÁõ¥Âà∞$\frac{n-1}{n}$„ÄÇÊâÄ‰ª•ËØ•È°πË¢´‰øùÁïôÁöÑÊ¶ÇÁéá = $\frac{k}{j}\times\frac{j}{j+1}\times\cdots\frac{n-1}{n}=\frac{k}{n}$ Âà∞Ê≠§Êàë‰ª¨Â∞±ËØÅÊòé‰∫ÜÊâÄ‰ª•Ê†∑Êú¨ÊúÄÁªàÂ≠òÂú®‰∫éÊ∞¥Â°ò‰∏≠ÁöÑÊ¶ÇÁéáÈÉΩÊòØ$\frac{k}{n}$ÔºåËøô‰πüÂÆåÂÖ®Á¨¶Âêà‰∫ÜÊàë‰ª¨ÁöÑÊï∞Â≠¶ÊúüÊúõ„ÄÇ ‰ª£Á†ÅÂºÑ‰∏™ÊµÅÂºèÊï∞ÊçÆÊàë‰ª¨ËøôÈáåÊ≤°ÊúâÊù°‰ª∂ÔºåÂè™ËÉΩÁî®‰º™‰ª£Á†ÅÊ®°Êãü‰∏Ä‰∏ãÔºö 1234567891011121314151617181920public Data[] reservoirSampling(int k, DataStream dataStream)&#123; Data[] reservoir = new int[k]; // init pool for(int i=0;i&lt;reservoir.length;i++)&#123; reservoir[i] = dataStream.getCurrentData(); dataStream.toNext(); &#125; Random random = new Random(); for(int i=k;!dataStream.isFinish();i++)&#123; int d = random.nextInt(i+1); if(d&lt;k)&#123; reservoir[d] = dataStream.getCurrentData(); &#125; dataStream.toNext(); &#125; return reservoir;&#125;]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[$\lim\limits_{x\rightarrow 0} \frac{\sin x}{x} = 1$ÁöÑËØÅÊòé]]></title>
    <url>%2Fblog%2F2019%2F01%2F07%2F%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%9E%81%E9%99%90%E7%9A%84%E8%AF%81%E6%98%8E%2F</url>
    <content type="text"><![CDATA[È´òÊï∞‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ËØÅÊòéÔºåÂèØËÉΩÂ∞±ÊòØËøô‰∏™$\lim\limits_{x\rightarrow 0} \frac{\sin x}{x} = 1$ÁöÑËØÅÊòé‰∫Ü„ÄÇ‰∏ãÈù¢ÁªôÂá∫Ëøô‰∏™ÊûÅÈôêÁöÑËØÅÊòéÔºåÁî®Âà∞‰∫ÜËß£ÊûêÂá†‰ΩïÔºà‰ΩúÂõæÊ≥ïÔºâ„ÄÇ ‰ΩúÂõæÂ∑•ÂÖ∑ Geometry Â¶ÇÂõæÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ÔºåÊúâ‰∏Ä‰∏™Âçï‰ΩçÂúÜÔºåÂúÜÂøÉ‰∏∫ $A$ ÔºåÁ∫øÊÆµ $CE$ ÁöÑÈïøÂ∫¶Á≠â‰∫é $\sin x$ÔºåÁ∫øÊÆµ $CB$ ÊòØ Âº¶ÔºàÊàë‰ª¨‰ª§‰ªñÁ≠â‰∫é $a$ÔºâÔºåÂºß $\overset{\frown} {CB}$ ÁöÑÈïøÂ∫¶Â∞±ÊòØ $x$ÔºåÁ∫øÊÆµ DB ÁöÑÈïøÂ∫¶Á≠â‰∫é $\tan x$„ÄÇ ÂÆÉ‰ª¨ÁöÑÈïøÂ∫¶ÁöÑÂ§ßÂ∞èÂÖ≥Á≥ªÊàë‰ª¨ÂæàÂÆπÊòìÂæóÂá∫Ôºö $\sin x &lt; a$ÔºåÂõ†‰∏∫‰∏âËßíÂΩ¢ÁöÑÁõ¥ËßíËæπÂ∞è‰∫éÊñúËæπ $a &lt; x$ÔºåÂõ†‰∏∫‰∏§ÁÇπ‰πãÈó¥Á∫øÊÆµÊúÄÁü≠ $x &lt; \tan x$ÔºåËøô‰∏™Áï•ÂæÆ‰∏çÈÇ£‰πàÁõ¥Êé•ÔºåÂèØ‰ª•Áî®Èù¢ÁßØÊ≥ïÔºàÈÄöËøáÊØîËæÉÈù¢ÁßØÁªßËÄåÂæóÂà∞Ë°®ËææÂºè‰∏≠‰∏§‰∏™Êú™Áü•Êï∞ÁöÑÂ§ßÂ∞èÂÖ≥Á≥ªÔºâÔºåÊâáÂΩ¢ $CAB$ ÁöÑÈù¢ÁßØÔºö$\frac{1}{2} \cdot 1 \cdot x$ Ôºå‰∏âËßíÂΩ¢ $\triangle DAB$ ÁöÑÈù¢ÁßØÔºö$\frac{1}{2} \cdot 1 \cdot \tan x$ „ÄÇËÄå $CAB$ ÁöÑÈù¢ÁßØÂ∞è‰∫é $DAB$ ÁöÑÈù¢ÁßØ„ÄÇÊâÄ‰ª•ÂæóÂà∞ $x &lt; \tan x$ Áî±Ê≠§Êàë‰ª¨ÂæóÂà∞‰∏çÁ≠âÂºèÔºö$\sin x &lt; x &lt; \tan x$ (ÂΩì $x&gt;0$ )ÔºåÂêåÊó∂Èô§‰ª• $\sin x$ÔºåÂæóÂà∞Ôºö$1 &lt; \frac{x}{\sin x} &lt; \frac{1}{\cos x}$„ÄÇ ÂΩì $x&lt;0$ Êó∂ÔºåÊòæÁÑ∂ $\sin x &gt; x &gt; \tan x$ÔºåÂêåÊó∂Èô§‰ª• $\sin x$ÔºàÈô§‰ª•Ë¥üÊï∞Ë¶ÅÂèòÂè∑ÔºâÔºåÂæóÂà∞Ôºö$1 &lt; \frac{x}{\sin x} &lt; \frac{1}{\cos x}$„ÄÇ ‰ª§ $x\rightarrow 0^{-}$ÔºåÁî±Â§πÈÄºÂÆöÁêÜÂæóÂà∞Â∑¶ÊûÅÈôê $\lim\limits_{x\rightarrow 0^{-}} \frac{\sin x}{x} = 1$ ‰ª§ $x\rightarrow 0^{+}$ÔºåÁî±Â§πÈÄºÂÆöÁêÜÂæóÂà∞Âè≥ÊûÅÈôê $\lim\limits_{x\rightarrow 0^{+}} \frac{\sin x}{x} = 1$ ÊúÄÁªàÂèØ‰ª•ÂæóÂà∞Ôºö$\lim\limits_{x\rightarrow 0} \frac{\sin x}{x} = 1$ ÔºàÂ∑¶Âè≥ÊûÅÈôêÈÉΩÁ≠â‰∫é 1Ôºâ]]></content>
      <tags>
        <tag>Êï∞Â≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁÜüÁªÉ‰ΩøÁî®JetBrainsÂÆ∂ÁöÑIDE]]></title>
    <url>%2Fblog%2F2018%2F11%2F04%2F%E7%86%9F%E7%BB%83%E4%BD%BF%E7%94%A8JetBrains%E5%AE%B6%E7%9A%84IDE%2F</url>
    <content type="text"><![CDATA[ÈÄöÁî®Âø´Êç∑ÈîÆ Ê†ºÂºèÂåñ‰ª£Á†ÅÔºàreformat codeÔºâ:win: ctrl+alt+Lmac: command+option+L Âú®‰∏ÄË°åÁöÑ‰ªªÊÑè‰ΩçÁΩÆ‰ΩøÁî®Ôºö shift + enterÔºåÊñ∞Âª∫‰∏ã‰∏ÄË°åÂπ∂Ë∑≥Âà∞‰∏ã‰∏ÄË°å„ÄÇ ÂñÑÁî®‰ª£Á†ÅËá™Âä®Ë°•ÂÖ®ÂäüËÉΩÔºåÂèòÈáèÂêçÂíåÊñπÊ≥ïÂêçÁ≠âÂèØ‰ª•Áî® enter Ë°•ÂÖ®„ÄÇÂØºÂÖ•ÂåÖÂèØ‰ª•Áî® alt + enter„ÄÇ ‰∏ä‰∏ãÁßªÂä®‰ª£Á†ÅÔºåctrl+shift+‰∏ä‰∏ãÈîÆ Android Studio ÁîüÊàêÂáΩÊï∞Ê≥®ÈáäÔºö‰Ω†Âú®ÊñπÊ≥ïÂâçËæìÂÖ•/**ÁÑ∂Âêé‰∏ÄÂõûËΩ¶ÔºåËá™Âä®Â∏Æ‰Ω†ÁîüÊàêÊñπÊ≥ïÂíåÂèÇÊï∞ÁöÑÊ≥®Èáä„ÄÇ Intellj IdeaÂø´ÈÄüÊâìÂá∫Â∏∏Áî®ËØ≠Âè•Ôºö soutÔºöSystem.out.println(); psvmÔºö 123public static void main(String[] args) &#123;&#125; ‰ΩøÁî® IDE ÁöÑÂè≥ÈîÆ‰∏≠ÁöÑÁîüÊàê Getter Setter ÈÄâÈ°πËá™Âä®ÁîüÊàê Getter SetterÔºå‰ΩøÁî® toString Ëá™Âä®ÁîüÊàê toString„ÄÇ Ë∑≥ËΩ¨Âà∞Êé•Âè£Ôºöctrl+bÔºõ Ë∑≥ËΩ¨Âà∞ÂÆûÁé∞Á±ªÔºöctrl + alt +B ‰∏äÈù¢Ëøô‰∏™ÊåâÈíÆÂèØ‰ª•Âø´ÈÄüÁöÑÂú®ÁõÆÂΩïÊ†ë‰∏≠ÂÆö‰ΩçÂà∞ÂΩìÂâçÁ±ªÊâÄÂú®ÁöÑË∑ØÂæÑ ctrl+alt+t]]></content>
      <tags>
        <tag>Â∑•ÂÖ∑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Á≤æÈÄö‰∏ÄÊ¨æÁºñËæëÂô®‰πãsublime text 3]]></title>
    <url>%2Fblog%2F2018%2F11%2F04%2F%E7%B2%BE%E9%80%9A%E4%B8%80%E6%AC%BE%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%8Bsublime%20text%203%2F</url>
    <content type="text"><![CDATA[ÁºñËæëÂô®Â∏∏Áî®ÂäüËÉΩ Ê†ºÂºèÂåñ‰ª£Á†ÅÔºöÊ†ºÂºèÂåñ‰ª£Á†ÅÂèØ‰ª•ËÆ©‰Ω†‰∏çÁî®ÁÆ°‰ª£Á†ÅÁöÑÊ†ºÂºèÔºåÂèØ‰ª•ÊîæËÇÜÁöÑÂÜôÁ®ãÂ∫èÔºå‰Ω†ÂèØ‰ª•Â∞ëÊï≤ÂæàÂ§öÁ©∫Ê†ºÔºå‰∏çÁî®ÂÖ≥ÂøÉ‰ª£Á†ÅÁöÑÊ†ºÂºèÈóÆÈ¢òÔºåÊú∫Âô®ÁªôÂá∫ÁöÑ‰ª£Á†ÅÊ†ºÂºèÈ£éÊ†ºÁªü‰∏Ä‰∏îÊºÇ‰∫ÆÔºå‰∏ÄÈîÆËß£ÂÜ≥‰Ω†ÁöÑÊ†ºÂºèÈóÆÈ¢òÔºåÁúüÊòØÊèêÈ´òÁ†Å‰ª£Á†ÅÊïàÁéáÁöÑÈùûÂ∏∏ÈáçË¶ÅÁöÑÂäüËÉΩ„ÄÇ Êü•ÊâæÊñá‰ª∂ÔºöÊü•ÊâæÊñá‰ª∂ÊòØÂú®ÈõÜÊàêÂºÄÂèëÁöÑÊó∂ÂÄôÈùûÂ∏∏ÈáçË¶ÅÁöÑÂäüËÉΩÔºåÂΩìÊñá‰ª∂Â§öËµ∑Êù•ÁöÑÊó∂ÂÄôÔºåÂø´ÈÄüÂÆö‰ΩçÂà∞Êñá‰ª∂ÂèØ‰ª•ËäÇÁúÅÂæàÂ§öÊó∂Èó¥ÔºåÁîöËá≥ÊúâÊó∂ÂÄôÊñá‰ª∂ÂÆûÂú®Â§™Â§öÔºå‰Ω†Âè™ËÉΩÈÄöËøáÊü•ÊâæÁöÑÊñπÂºèÊâæÂà∞ÈÇ£‰∏™Êñá‰ª∂„ÄÇ Ê≠£ÂàôÂÖ®Êñá‰ª∂Êü•ÊâæÂíåÊõøÊç¢ÔºöËΩªÊùæËÆ©‰Ω†Êõ¥ÊîπÂÖ®Â±ÄÂèòÈáèÂíåÈÖçÁΩÆÔºåËøôÊòØ‰∏Ä‰∏™ÂøÖÈ°ªÁöÑÂäüËÉΩÔºåÊ≤°ÊúâÂÆÉÁÆÄÁõ¥Êó†Ê≥ïÊÉ≥Ë±°Â∑•‰ΩúÈáèÊúâÂ§öÂ§ß„ÄÇ ‰ª£Á†ÅÊî∂Áº©ÂíåÊâ©Â±ïÔºö‰ª£Á†ÅÂ§™ÈïøÊÄé‰πàÂäûÔºåÊî∂Áº©ÂíåÊâ©Â±ïÂïä„ÄÇ ÂÆâË£ÖÂç∏ËΩΩÊèí‰ª∂ cmd+shift+pÔºöÊâìÂºÄÂëΩ‰ª§ÊùøÔºåËæìÂÖ•installÔºåÁÇπÂáªÔºöPackage Control: Install PackageÈÄâÈ°πÔºåÁÑ∂ÂêéÊêúÁ¥¢‰Ω†ÊÉ≥Ë¶ÅÁöÑÊèí‰ª∂„ÄÇ Âç∏ËΩΩËØ∑Âú®ÂëΩ‰ª§ÊùøËæìÂÖ•ÔºöremoveÔºåÁÇπÂáªÔºöPackage Control: Remove PackageÈÄâÈ°π„ÄÇÂÖ∂ÂÆûÂç∏ËΩΩÊó†ÈùûÂ∞±ÊòØ‰∏§‰∏™ËØçÔºöremoveÂíåuninstallÔºåÂ§öËØïËØïÂ∞±Ë°å‰∫Ü„ÄÇ ÊâìÂºÄÂëΩ‰ª§Êùø‰πãÂêé‰ªÄ‰πàÈÉΩ‰∏çÊÉ≥Âπ≤ÔºåÊÄé‰πàÂÖ≥Èó≠ÂëΩ‰ª§ÊùøÂë¢ÔºüÂÖ∂ÂÆûÂæàÁÆÄÂçïÔºåÂÜçÊåâ‰∏ÄÊ¨°ÊâìÂºÄÂëΩ‰ª§ÊùøÁöÑÂø´Êç∑ÈîÆÂ∞±Ë°å‰∫ÜÔºåÂºÄÂÖ≥ÈÉΩÁî®Âêå‰∏Ä‰∏™ÈîÆÊàñËÄÖÊåâÈíÆÔºàÊúØËØ≠Âè´ÔºötoggleÔºåÂèØÂºÄÂèØÂÖ≥ÔºâÔºåËøôÊòØÊØîËæÉÈÄöÁî®ËÆæËÆ°ÁêÜÂøµ„ÄÇ Âü∫Êú¨Âø´Êç∑ÈîÆ ÊòæÁ§∫ÈöêËóèËèúÂçïÊ†èÔºöaltÔºåÂ¶ÇÊûú‰Ω†‰∏çÂ∞èÂøÉÊääËèúÂçïÊ†èÈöêËóè‰∫ÜÔºåÈô§‰∫ÜÁî®Âø´Êç∑ÈîÆÂî§Âá∫ÔºåËøòÁúü‰∏çÁü•ÈÅìÊúâ‰ªÄ‰πàÂÖ∂‰ªñÂäûÊ≥ï„ÄÇ ÊòæÁ§∫ÈöêËóèÁõÆÂΩïÊ†ëÔºöctrl+k+bÔºåËøô‰∏™ÂäüËÉΩÂèØ‰ª•Âú®ËèúÂçïÊ†è‰∏≠ÁöÑ view ‰∏≠ÊâæÂà∞ÔºåÊâÄ‰ª•ÊàëËßâÂæóËÆ∞‰∏çËÆ∞Êó†ÊâÄË∞ì vue Êèí‰ª∂ vue-syntax-highlightÔºöÂèØ‰ª•ËÆ©.vueÊñá‰ª∂È´ò‰∫Æ„ÄÇ HTML-CSS-JS PrettifyÔºöÂèØ‰ª•Ê†ºÂºèÂåñËøô‰∏âÁßçËØ≠Ë®ÄÁöÑ‰ª£Á†ÅÔºåÁâπÂà´ÊòØÂçïÊñá‰ª∂ÁöÑ vueÔºåÈùûÂ∏∏ÈúÄË¶ÅËøô‰∏™Êù•ÂêåÊó∂Ê†ºÂºèÂåñ‰∏âÁßçËØ≠Ë®Ä„ÄÇ‰∏çËøáÈúÄË¶ÅÈÖçÁΩÆ‰∏Ä‰∏ã„ÄÇÂ∑•ÂÖ∑Ê†èË∑ØÂæÑÔºöSublime Text -&gt; Preferences -&gt; Package Settings -&gt; HTML/CSS/JS Prettify -&gt; Plugin Options - DefaultÔºåÁÑ∂ÂêéÊêúÁ¥¢Ôºöallowed_file_extensionsÔºåÁªôËøô‰∏™ÈÖçÁΩÆÈ°πÊ∑ªÂä†‰∏Ä‰∏™vueÂç≥ÂèØÔºåË¶ÅÊ≥®ÊÑèÁöÑÊòØÊúâÂõõÂ§ÑÊúâËøô‰∏™ÈÖçÁΩÆÈ°πÔºåÂàÜÂà´ÊòØhtml„ÄÅcss„ÄÅjs„ÄÅjsonÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥ÂÆÉ‰ª¨ÂÖ®ÈÉΩËÉΩÊ†ºÂºèÂåñÔºåËá™ÁÑ∂ÊòØË¶ÅÂÖ®ÈÉΩÊ∑ªÂä†vueÔºå‰ΩÜÂÆûÈ™åËØÅÊòéÂè™Âä† html ÈáåÈù¢Â∞±Ë°å‰∫ÜÔºåÂ¶ÇÊûúÂú®ÂÖ∂‰ªñÂá†‰∏™ÈáåÈù¢Âä†ÂèçËÄåÂºïËµ∑‰∫ÜÂÜ≤Á™Å„ÄÇÁÑ∂ÂêéÊ†ºÂºèÂåñ‰ª£Á†ÅÁöÑÂø´Êç∑ÈîÆÊòØ‰ªÄ‰πàÂë¢ÔºüÂêåÊ†∑‰πüÊúâÈÖçÁΩÆÊñá‰ª∂ÁöÑÔºåÂ∑•ÂÖ∑Ê†èË∑ØÂæÑÔºöSublime Text -&gt; Preferences -&gt; Package Settings -&gt; HTML/CSS/JS Prettify -&gt; Keyboard Shortcuts - DefaultÔºåÂèØ‰ª•ÁúãÂà∞Ôºö 12345678910111213141516[&#123; &quot;keys&quot;: [&quot;super+shift+h&quot;], &quot;command&quot;: &quot;htmlprettify&quot;&#125;, &#123; &quot;keys&quot;: [&quot;super+alt+h&quot;, &quot;p&quot;], &quot;command&quot;: &quot;htmlprettify_set_prettify_prefs&quot;&#125;, &#123; &quot;keys&quot;: [&quot;super+alt+h&quot;, &quot;o&quot;], &quot;command&quot;: &quot;htmlprettify_set_plugin_options&quot;&#125;, &#123; &quot;keys&quot;: [&quot;super+alt+h&quot;, &quot;k&quot;], &quot;command&quot;: &quot;htmlprettify_set_keyboard_shortcuts&quot;&#125;, &#123; &quot;keys&quot;: [&quot;super+alt+h&quot;, &quot;n&quot;], &quot;command&quot;: &quot;htmlprettify_set_node_path&quot;&#125;] Á¨¨‰∏ÄÈ°πÂç≥‰∏∫‰ΩøÁî®Ëøô‰∏™Êèí‰ª∂ÁöÑÂø´Êç∑ÈîÆÔºå‰πüÂ∞±ÊòØÊ†ºÂºèÂåñ‰ª£Á†ÅÁöÑÂø´Êç∑ÈîÆ„ÄÇ Â∫ïÊ†èËÆæÁΩÆÊòæÁ§∫Êñá‰ª∂ÁºñÁ†ÅÂú® mac osx ‰∏ä‰∏Ä‰∏çÂ∞èÂøÉÊåâ‰∫Ü cmd+shift+cÔºåÊñá‰ª∂ÁöÑÂ≠òÂÇ®Ê†ºÂºèÁé∞Âú®ÂèòÊàê‰∫Ü GBK Ê†ºÂºèÔºåÂΩìÊàëÂÜçÊåâ‰∏ã cmd+s ‰øùÂ≠òÊó∂ÔºåÊèêÁ§∫Êàë UTF-8 Ê†ºÂºèÁöÑÊñá‰ª∂‰∏çËÉΩÁî® GBK Ê†ºÂºèÊù•‰øùÂ≠ò„ÄÇÊÄé‰πàËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÂë¢ÔºüÈ¶ñÂÖàÊàëÊÉ≥Êü•ÁúãËøô‰∏™Êñá‰ª∂ÊòØ‰ªÄ‰πàÁºñÁ†ÅÔºåSublime Text ÁöÑÈªòËÆ§ËÆæÁΩÆÊòØ‰∏çÂºÄÂêØÊòæÁ§∫ÁºñÁ†ÅÁöÑÔºåÂ¶ÇÊûúÊÉ≥ÂºÄÂêØÔºåÂèØÈÄöËøáËèúÂçï Perference ‚Üí Settings ‚Äì UserÔºåÂú®ÊâìÂºÄÁöÑÈÖçÁΩÆÊñá‰ª∂Èáå ÔºåÂú®Â§ßÊã¨Âè∑ÂêéÈù¢ÔºåÂ¢ûÂä†‰ª•‰∏ãÂÜÖÂÆπÔºö 1234// Display file encoding in the status bar&quot;show_encoding&quot;: true,// Display line endings in the status bar&quot;show_line_endings&quot;: true, Ê≠§Êó∂‰øùÂ≠òËØ•ÈÖçÁΩÆÊñá‰ª∂ÔºåÂ∞±ËÉΩÂ§üÁúãÂà∞ sublime ÊúÄÂ∫ï‰∏ã‰∏ÄË°å‰ºöÊòæÁ§∫Êñá‰ª∂ÁºñÁ†ÅÊ†ºÂºè‰∫Ü„ÄÇ‰ª•‰∏äÁöÑÈÖçÁΩÆÂÜÖÂÆπÂú® Perference ‚Üí Setting‚îÄDefault ÈÉΩÊòØ false ÁöÑ„ÄÇ ÁÑ∂ÂêéÂú®Â∫ïÊ†èÁÇπÂáªÊñá‰ª∂ÁºñÁ†ÅÔºåÁÇπÂáª reopen with encodingÔºåÁÑ∂ÂêéÈÄâÊã© utf-8ÔºåÁÑ∂Âêé cmd+w ÂÖ≥Èó≠Á™óÂè£ÔºåÁÑ∂Âêé cmd+shift+t ÈáçÊñ∞ÊâìÂºÄÂàöÂàöÂÖ≥Èó≠ÁöÑÁ™óÂè£ÔºåÂ∞±‰∏ÄÂàáÊÅ¢Â§çÊ≠£Â∏∏‰∫Ü„ÄÇ]]></content>
      <tags>
        <tag>Â∑•ÂÖ∑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄäCSAPP„Äã -- Â§ÑÁêÜÂô®‰ΩìÁ≥ªÁªìÊûÑ]]></title>
    <url>%2Fblog%2F2018%2F10%2F13%2F%E5%A4%84%E7%90%86%E5%99%A8%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[ÈòÖËØªËøôÁØáÊñáÁ´†ÂøÖÈ°ªË¶ÅÂØπÊ±áÁºñÁ†ÅÊúâË∂≥Â§üÁöÑ‰∫ÜËß£ÔºåÂ¶ÇÊûú‰Ω†ÂØπ IA32 Ê±áÁºñÁ†ÅËøò‰∏çÂ§ü‰∫ÜËß£ÔºåÂèØ‰ª•ÂÖàÁúãÁúãËøôÁØáÊñáÁ´†ÔºöÁ®ãÂ∫èÁöÑÊú∫Âô®Á∫ßË°®Á§∫ Y86 Êåá‰ª§ÈõÜ‰ΩìÁ≥ªÁªìÊûÑY86 Êåá‰ª§ÈõÜÂü∫Êú¨‰∏äÊòØ IA32 Êåá‰ª§ÈõÜÁöÑ‰∏Ä‰∏™Â≠êÈõÜ„ÄÇËøô‰∏™Êåá‰ª§ÈõÜÂ∞±ÊòØÊàë‰ª¨Â§ÑÁêÜÂô®ÂÆûÁé∞ÁöÑÁõÆÊ†á„ÄÇÂ¶Ç‰∏ãÂõæÔºö IA32 ÁöÑ movl Êåá‰ª§ÂàÜÊàê‰∫Ü 4 ‰∏™‰∏çÂêåÊåá‰ª§Ôºöirmovl„ÄÅrrmovl„ÄÅmrmovl Âíå rmmovlÔºåi Ë°®Á§∫Á´ãÂç≥Êï∞ ImmediateÔºår Ë°®Á§∫ÂØÑÂ≠òÂô® RegisterÔºåm Ë°®Á§∫Â≠òÂÇ®Âô® Memmory„ÄÇÁ¨¨‰∏Ä‰∏™Â≠óÊØçË°®Á§∫Ê∫êÔºåÁ¨¨‰∫å‰∏™Â≠óÊØçË°®Á§∫ÁõÆÁöÑ„ÄÇ ËøôÈáå‰∏çÂÆûÁé∞ÁöÑÂäüËÉΩÊúâÔºö Â≠òÂÇ®Âô®ÂºïÁî®ÊñπÂºèÊòØÁÆÄÂçïÁöÑÂü∫ÂùÄ+ÂÅèÁßªÈáèÂΩ¢ÂºèÔºå‰∏çÊîØÊåÅÂèòÂùÄÂØÑÂ≠òÂô®Ôºàsecond index registerÔºâÂíå‰ªª‰ΩïÂØÑÂ≠òÂô®‰º∏Áº©ÔºàscalingÔºâ„ÄÇÂ¶ÇÊûúÂØπÊìç‰ΩúÊï∞ÁöÑÁªìÊûÑ‰∏çÂ§™‰∫ÜËß£ÂèØ‰ª•ÁúãÁúãËøô‰∏™ÔºöÊìç‰ΩúÊï∞ÊåáÁ§∫Á¨¶ Âíå IA32 ‰∏ÄÊ†∑‰∏çÂÖÅËÆ∏‰ªé‰∏Ä‰∏™Â≠òÂÇ®Âô®Áõ¥Êé•‰º†ÈÄÅÂà∞Âè¶‰∏Ä‰∏™Â≠òÂÇ®Âô®Âú∞ÂùÄ„ÄÇ ‰∏çÂÖÅËÆ∏Á´ãÂç≥Êï∞‰º†ÈÄÅÂà∞Â≠òÂÇ®Âô® 4 ‰∏™Êï¥Êï∞Êìç‰ΩúÊåá‰ª§Ôºöaddl„ÄÅsubl„ÄÅandl„ÄÅxorl 7 ‰∏™Ë∑≥ËΩ¨Êåá‰ª§Ôºöjmp„ÄÅjle„ÄÅjl„ÄÅje„ÄÅjne„ÄÅjge„ÄÅjg„ÄÇ 6 ‰∏™Êù°‰ª∂‰º†ÈÄÅÊåá‰ª§Ôºöcmovle„ÄÅcmovl„ÄÅcmove„ÄÅcmovne„ÄÅcmovge„ÄÅcmovg„ÄÇ Âè¶Â§ñËøòÊúâÔºöcall„ÄÅret„ÄÅpushl„ÄÅpoplÔºåhalt Êåá‰ª§ÂÅúÊ≠¢Êåá‰ª§ÊâßË°å„ÄÇIA32 ‰∏≠Êúâ‰∏Ä‰∏™‰∏é‰πãÁõ∏ÂΩìÁöÑÊåá‰ª§ hltÔºåIA32 ÁöÑÂ∫îÁî®Á®ãÂ∫è‰∏çÂÖÅËÆ∏‰ΩøÁî®ËøôÊù°Êåá‰ª§ÔºåÂõ†‰∏∫ÂÆÉ‰ºöÂØºËá¥Êï¥‰∏™Á≥ªÁªüÊöÇÂÅúËøêË°å„ÄÇÂØπ‰∫é Y86 Êù•ËØ¥ÔºåÊâßË°å halt Êåá‰ª§‰ºöÂØºËá¥Â§ÑÁêÜÂô®ÂÅúÊ≠¢ÔºåÂπ∂Â∞ÜÁä∂ÊÄÅÁ†ÅËÆæÁΩÆ‰∏∫ HLT„ÄÇ Êåá‰ª§ÁºñÁ†Å‰∏é IA32 ‰∏ÄÊ†∑‰ΩøÁî®Â∞èÁ´ØÁºñÁ†Å„ÄÇ ÊØèÊù°Êåá‰ª§ÁöÑÁ¨¨‰∏Ä‰∏™Â≠óËäÇË°®ÊòéÊåá‰ª§ÁöÑÁ±ªÂûãÔºåËøô‰∏™Â≠óËäÇÂàÜ‰∏∫‰∏§ÈÉ®ÂàÜÔºåÊØèÈÉ®ÂàÜ 4 ‰ΩçÔºöÈ´ò 4 ‰ΩçÊòØ‰ª£Á†ÅÔºàcodeÔºâÈÉ®ÂàÜÔºå‰Ωé 4 ‰ΩçÊòØÂäüËÉΩÔºàfunctionÔºâÈÉ®ÂàÜ„ÄÇ‰ª£Á†ÅÂÄº‰∏∫ 0~0xB„ÄÇÂèØ‰ª•ËßÇÂØüÂà∞Ôºårrmovl‰∏éÊù°‰ª∂‰º†ÈÄÅÊåá‰ª§ÊúâÂêåÊ†∑ÁöÑ‰ª£Á†ÅÈÉ®ÂàÜÔºåÂèØ‰ª•ÊääÂÆÉÁúã‰ΩúÊòØ‰∏Ä‰∏™Êó†Êù°‰ª∂‰º†ÈÄÅ„ÄÇ ÂØÑÂ≠òÂô®ÁºñÁ†ÅÂ¶Ç‰∏ãÔºö ‰∏æ‰∏™‰æãÂ≠êÔºöÁî® 16 ËøõÂà∂Ë°®Á§∫Êåá‰ª§ rmmvol %esp, 0x12345(%edx)ÁöÑÂ≠óËäÇÁºñÁ†Å„ÄÇ ‰ªé‰∏äÈù¢Âõæ‰∏≠ÂèØ‰ª•ÁúãÂà∞Ôºårmmovl Á¨¨‰∏Ä‰∏™Â≠óËäÇ‰∏∫ 40ÔºåÁî±‰∫é%esp ÊòØ 4ÔºàÂç† 4 ‰ΩçÔºâÔºå%edx ÊòØ 2ÔºàÂç† 4 ‰ΩçÔºâÔºåÊâÄ‰ª•Á¨¨‰∫å‰∏™Â≠óËäÇÊòØ 42ÔºåÊúÄÂêéÂÜçÂä†‰∏äÂÅèÁßªÈáè 00 01 23 45ÔºåÂ∞èÁ´ØË°®Á§∫ÊòØÔºö45 23 01 00ÔºåÊâÄ‰ª•ÊúÄÂêéÂæóÂà∞Êåá‰ª§ÁöÑÁºñÁ†ÅÊòØÔºö404245230100„ÄÇ Êåá‰ª§ÈõÜÁöÑ‰∏Ä‰∏™ÈáçË¶ÅÊÄßË¥®ÊòØÂ≠óËäÇÁºñÁ†ÅÂøÖÈ°ªÊúâÂîØ‰∏ÄËß£ÈáäÔºå‰ªªÊÑè‰∏Ä‰∏™Â≠óËäÇÂ∫èÂàóË¶Å‰πàÊòØ‰∏Ä‰∏™ÂîØ‰∏ÄÁöÑÊåá‰ª§ÔºåË¶Å‰πàÊòØ‰∏Ä‰∏™‰∏çÂêàÊ≥ïÁöÑÊåá‰ª§„ÄÇ Áõ∏ÊØî‰∫é IA32ÔºåY86 Ê≤°ÈÇ£‰πàÁ¥ßÂáëÔºåIA32 ÂØπÂØÑÂ≠òÂô®Âè™Áî®‰∫Ü 3 ‰ΩçÊù•ÁºñÁ†ÅÔºå5 ‰ΩçË°®ÊòéÊåá‰ª§Á±ªÂûãÔºåÊâÄ‰ª• IA32 ËÉΩÂ∞ÜÂá∫Ê†àÂÖ•Ê†àÊîæËøõ‰∏Ä‰∏™Â≠óËäÇÈáå„ÄÇÂè¶Â§ñ IA32 ÂèØ‰ª•Â∞ÜÂ∏∏Êï∞ÂÄºÁºñÁ†ÅÊàê 1„ÄÅ2„ÄÅ4 Â≠óËäÇÔºåY86 ÊÄªÊòØÁºñÁ†ÅÊàê 4 Â≠óËäÇ„ÄÇ RISC Âíå CISC RISC: reduced instruction set computersÔºåÁ≤æÁÆÄÊåá‰ª§ÈõÜ CISC: complex instruction set computersÔºåÂ§çÊùÇÊåá‰ª§ÈõÜ Y86 ÂºÇÂ∏∏ ÂØπ‰∫é Y86ÔºåÂΩìÈÅáÂà∞Ëøô‰∫õÂºÇÂ∏∏ÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨ÁÆÄÂçïÁöÑËÆ©Â§ÑÁêÜÂô®ÂÅúÊ≠¢ÊâßË°åÊåá‰ª§„ÄÇÂú®Êõ¥ÂÆåÂñÑÁöÑËÆæËÆ°‰∏≠ÔºåÂ§ÑÁêÜÂô®ÈÄöÂ∏∏‰ºöË∞ÉÁî®‰∏Ä‰∏™ exception handlerÔºàÂºÇÂ∏∏Â§ÑÁêÜÁ®ãÂ∫èÔºâÔºåËøô‰∏™ËøáÁ®ãË¢´ÊåáÂÆöÁî®Êù•Â§ÑÁêÜÈÅáÂà∞ÁöÑÊüêÁßçÁ±ªÂûãÁöÑÂºÇÂ∏∏Ôºå‰æãÂ¶ÇÊîæÂºÉÁ®ãÂ∫èÊàñË∞ÉÁî®‰∏Ä‰∏™Áî®Êà∑Ëá™ÂÆö‰πâÁöÑ signal handlerÔºà‰ø°Âè∑Â§ÑÁêÜÁ®ãÂ∫èÔºâ„ÄÇ Y86 Á®ãÂ∫è12345678910int Sum(int *Start, int Count)&#123; int sum = 0; while (Count) &#123; sum += *Start; Start++; Count--; &#125; return sum;&#125; ÂèØ‰ª•ÁúãÂà∞ Y86 ÊúâÊó∂ÂÄôÈúÄË¶Å‰∏§Êù°Êåá‰ª§Êù•ÂÆåÊàê IA32 ‰∏ÄÊù°Êåá‰ª§Â∞±ËÉΩÂÆåÊàêÁöÑ‰∫ã„ÄÇÁÑ∂ËÄåÂ¶ÇÊûúÁî®Êï∞ÁªÑÁ¥¢ÂºïÊù•ÂÜôËøô‰∏™Á®ãÂ∫èÔºåË¶ÅËΩ¨Êç¢Êàê Y86 ‰ºöÂæàÂõ∞ÈöæÔºåÂõ†‰∏∫ Y86 Ê≤°Êúâ‰º∏Áº©ÂØªÂùÄ„ÄÇ ÂÆåÊï¥‰ª£Á†ÅÂ¶Ç‰∏ãÔºö ‰ª•.ÂºÄÂ§¥ÁöÑÊòØ assembler directiveÔºàÊ±áÁºñÂô®ÂëΩ‰ª§ÔºâÔºåÂëΩ‰ª§.pos 0ÂëäËØâÊ±áÁºñÂô®Â∫îËØ•‰ªéÂú∞ÂùÄ 0 Â§ÑÂºÄÂßã‰∫ßÁîü‰ª£Á†Å„ÄÇÁ¨¨ 3„ÄÅ4 Ë°å‰ΩøÁî®ÁöÑ Stack Ê†áÁ≠æÔºåÂú®ÊúÄÂêéÊúâÂ£∞ÊòéÔºåÂÖ∂‰ΩçÁΩÆÊòØ 0x100„ÄÇÁ¨¨ 9 Âà∞ 13 Ë°åÂ£∞Êòé‰∫Ü‰∏Ä‰∏™Êï∞ÁªÑÔºå4 Â≠óËäÇÂØπÈΩêÔºåÂÄºÂàÜÂà´ÊòØÔºö0xdÔºå0xc0Ôºå0xb00Ôºå0xa000Ôºåarray Ê†áÁ≠æÊòØËµ∑ÂùÄ„ÄÇ ÁªÜËäÇÈóÆÈ¢òÔºåpushl %espÔºàËøô‰∏™Êåá‰ª§Âè™ËÉΩÁî®Ê±áÁºñËØ≠Ë®ÄÂÜôÔºåC ËØ≠Ë®ÄÊó†Ê≥ï‰∫ßÁîüÔºâÊòØÂÖàÊää%esp ÁöÑÂÄºËΩ¨ÁßªÂà∞Ê†àÔºåËøòÊòØÂÖà%esp Âáè 4 ÂÜçÂ∞ÜÁªìÊûúËΩ¨ÁßªÂà∞Ê†àÔºåÂÆûÈôÖ‰∏ä‰∏çÂêåÁâàÊú¨ÁöÑ intel Â§ÑÁêÜÂô®ÈÉΩ‰ºö‰∫ßÁîü‰∏çÂêåÁöÑÁªìÊûúÔºåÊâÄ‰ª•‰∏Ä‰∏™ÂæàÈáçË¶ÅÁöÑÊïôËÆ≠ÊòØË¶Å‰øùËØÅÁªÜËäÇ‰∏äÁöÑ‰∏ÄË¥ØÊÄß„ÄÇ ÈÄªËæëËÆæËÆ°ÂíåÁ°¨‰ª∂ÊéßÂà∂ËØ≠Ë®Ä HCLÔºàHardware Control LanguageÔºâÈÄªËæëÈó® ÁªÑÂêàÁîµË∑ØÂíå HCL ËØ≠Ë®ÄÊûÑÂª∫‰∏Ä‰∏™ÁªÑÂêàÁîµË∑ØÊúâ‰∏§Êù°ÈôêÂà∂Ôºö ‰∏§‰∏™ÊàñÂ§ö‰∏™ÈÄªËæëÈó®ÁöÑËæìÂá∫‰∏çËÉΩËøûÊé•Âú®‰∏ÄËµ∑„ÄÇËøôÊ†∑‰ºöÂØºËá¥Á∫ø‰∏äÁöÑ‰ø°Âè∑ÁüõÁõæÔºå‰∫ßÁîü‰∏çÂêàÊ≥ïÁöÑÁîµÂéãÊàñÁîµË∑ØÊïÖÈöú„ÄÇ ÂøÖÈ°ªÊòØÊó†ÁéØÁöÑÔºå‰πüÂ∞±ÊòØ‰∏çËÉΩÂΩ¢ÊàêÂõûË∑Ø„ÄÇ ‰∏ãÈù¢ÊòØ‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠êÔºö Áî® HCL Êù•ÂÜôËøô‰∏™ÁΩëÁöÑÂáΩÊï∞Â∞±ÊòØÔºöbool eq = (a &amp;&amp; b) || (!a &amp;&amp; !b) HCL ÊòØÁî®Êù• C ËØ≠Ë®ÄÈ£éÊ†ºÁöÑËØ≠Ê≥ïÔºå‰ΩÜËøôÈáåÂêå C ËØ≠Ë®Ä‰∏ç‰∏ÄÊ†∑ÔºåËØ•ËØ≠Âè•ÁöÑÊÑèÊÄù‰∏çÊòØÊâßË°å‰∫Ü‰∏ÄÊ¨°ËÆ°ÁÆóÂπ∂Â∞ÜÁªìÊûúÊîæÂÖ•Â≠òÂÇ®Âô®ÔºåËÄåÊòØ‰ΩøÁî®‰∏Ä‰∏™ÂêçÂ≠ó eq Êù•Áß∞Ë∞ì‰∏Ä‰∏™Ë°®ËææÂºè„ÄÇ ÂÆûÈôÖ‰∏ä‰∏äÈù¢ÁöÑÁªÑÂêàÁîµË∑ØÂ∞±ÊòØÂêåÊàñÔºåÂºÇÊàñÁöÑË°®ËææÂºèÊòØÔºöbool eq = (!a &amp;&amp; b) || (a &amp;&amp; !b) Â§öË∑ØÂ§çÁî®Âô®ÔºàmultiplexorÔºåÈÄöÂ∏∏Áß∞‰∏∫ÔºöMUXÔºâÔºö bool out = (s &amp;&amp; a) || (!s &amp;&amp; b) Â≠óÁ∫ßÁöÑÁªÑÂêàÁîµË∑ØÂíå HCL Êï¥Êï∞Ë°®ËææÂºèÈÄöÂ∏∏Êàë‰ª¨ËÆæËÆ°ËÉΩÂØπÂ≠óÔºàwordÔºâËøõË°åÊìç‰ΩúÁöÑÁªÑÂêàÁîµË∑ØÔºåÂ≠óÁ∫ßÁîµË∑Ø‰∏≠Áî®Âà∞ÁöÑÂ∞±ÊòØ HCL Êï¥Êï∞Ë°®ËææÂºè‰∫Ü„ÄÇ Â≠óÁ∫ß‰∏éÁîµË∑ØÔºö bool Eq = (A == B); ‰πüÂèØ‰ª•Áî®ÂºÇÊàñÊù•ÂÆûÁé∞Ôºö Âú® HCL ‰∏≠ÔºåÂ§öË∑ØÂ§çÁî®ÂáΩÊï∞ÊòØÁî®ÊÉÖÂÜµË°®ËææÂºèÔºàcase expressionÔºâÊù•ÊèèËø∞ÁöÑ„ÄÇÊÉÖÂÜµË°®ËææÂºèÁöÑÈÄöÁî®Ê†ºÂºèÂ¶Ç‰∏ãÔºö 12345678[ select_1 : expr_1; select_2 : expr_2; . . . select_k : expr_k;] Âêå C ËØ≠Ë®ÄÁöÑ switch ËØ≠Âè•‰∏çÂêåÔºåÊàë‰ª¨‰∏çË¶ÅÊ±Ç‰∏çÂêåÁöÑÈÄâÊã©Ë°®ËææÂºè‰πãÈó¥‰∫íÊñ•„ÄÇ‰ªéÈÄªËæë‰∏äËÆ≤ÔºåËøô‰∫õÈÄâÊã©Ë°®ËææÂºèÊòØÈ°∫Â∫èÊ±ÇÂÄºÁöÑÔºå‰∏îÁ¨¨‰∏Ä‰∏™Ê±ÇÂÄº‰∏∫ 1 ÁöÑÊÉÖÂÜµÂ∞±‰ºöË¢´ÈÄâ‰∏≠„ÄÇ Â≠óÁ∫ßÂ§öË∑ØÂ§çÁî®ÁîµË∑ØÔºö Áî® HCL Êù•ÊèèËø∞Â∞±ÊòØÔºö 1234int Out = [ s: A; 1: B;]; Â§ßÂ§öÊï∞‰∫∫Á¨¨‰∏ÄÁúºÊòØÁúã‰∏çÊáÇËøô‰∏™Ë°®ËææÂºèÁöÑÔºåÂÖ∂ÂÆûÈáåÈù¢Êúâ‰∏™ÊöóÂê´ÁöÑÊù°‰ª∂ÔºöÂÖàÊâßË°å s: A; Â¶ÇÊûúÂ§±Ë¥•ÔºàÊ≤°ÊúâËæìÂá∫ AÔºâÊâç‰ºöÂÜçÊâßË°å 1: B;„ÄÇËÄå1: B;ÂÆûÈôÖ‰∏äÊòØ!s&amp;&amp;1: B;ÁöÑÁÆÄÂÜô„ÄÇÊ≤°ÊúâËæìÂá∫ A Â∞±Â∑≤Áªè‰ª£Ë°® s ÊòØ 0 ‰∫ÜÔºåÈÇ£‰πà!s Â∞±ÊòØ 1„ÄÇ ÂõõË∑ØÂ§çÁî®Âô®Ôºö 123456int Out4 = [ !s1 &amp;&amp; !s0: A; # 00 !s1 : B; # 01 !s0 : C; # 10 1 : D; # 11]; Á¨¨‰∫å‰∏™Ë°®ËææÂºèÂèØ‰ª•ÂÜôÊàê!s1ÔºåËÄå‰∏çÁî®ÂÜôÁöÑÊõ¥ÂÆåÊï¥!s1&amp;&amp;s0ÔºåÊòØÂõ†‰∏∫Âè¶‰∏ÄÁßçÂèØËÉΩs0=0Â∑≤ÁªèÂá∫Áé∞Âú®‰∫ÜÁ¨¨‰∏Ä‰∏™ÈÄâÊã©Ë°®ËææÂºè‰∫ÜÔºåËã•ËÉΩÂà∞ËææÁ¨¨‰∫å‰∏™ÈÄâÊã©Ë°®ËææÂºèÔºåÂàôs0=1„ÄÇÁ±ª‰ººÁöÑÔºåÁ¨¨‰∏â‰∏™Ë°®ËææÂºèÂèØ‰ª•ÂÜôÊàê!s0ÔºåÁ¨¨Âõõ‰∏™Ë°®ËææÂºèÂèØ‰ª•ÁÆÄÂçïÁöÑÂÜôÊàê 1„ÄÇ Êù•ÁúãÊúÄÂêé‰∏Ä‰∏™‰æãÂ≠êÔºåÂÅáËÆæÊàë‰ª¨ÊÉ≥ËÆæËÆ°‰∏Ä‰∏™ÈÄªËæëÁîµË∑ØÊù•Êâæ‰∏ÄÁªÑÂ≠ó A„ÄÅB Âíå C ‰∏≠ÁöÑÊúÄÂ∞èÂÄºÔºåÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Ôºö Áî® HCL Êù•Ë°®ËææÔºö 12345int Min3 = [ A&lt;=B &amp;&amp; A&lt;=C : A; B&lt;=A &amp;&amp; B&lt;=C : B; 1 : C;] ÁÆóÊúØÈÄªËæëÂçïÂÖÉÔºàarithmetic/logic unit, ALUÔºâ ÈõÜÂêàÂÖ≥Á≥ª Âú®Ëøô‰∏™ÁîµË∑Ø‰∏≠Ôºå‰∏§‰ΩçÁöÑ‰ø°Âè∑ code Â∞±ÂèØ‰ª•Áî®Êù•ÊéßÂà∂ÂØπ 4 ‰∏™Êï∞ÊçÆÂ≠ó A„ÄÅB„ÄÅC Âíå D ÂÅöÈÄâÊã©„ÄÇÊ†πÊçÆÂèØËÉΩÁöÑ code ÂÄºÔºåÂèØ‰ª•Áî®Áõ∏Á≠âÊµãËØïÊù•Ë°®Á§∫‰ø°Âè∑ s1 Âíå s0 ÁöÑ‰∫ßÁîüÔºö 12bool s1= code==2 || code==3;bool s0= code==1 || code==3; ËøòÊúâ‰∏ÄÁßçÊõ¥ÁÆÄÊ¥ÅÁöÑÊñπÂºèÊù•Ë°®Á§∫ËøôÊ†∑ÁöÑÂ±ûÊÄßÔºöÂΩì code Âú®ÈõÜÂêà{2,3}‰∏≠ s1 ‰∏∫ 1ÔºåËÄå code Âú®ÈõÜÂêà{1,3}‰∏≠ s0 ‰∏∫ 1Ôºö 12bool s1= code in &#123;2,3&#125;;bool s0= code in &#123;1,3&#125;; Âà§Êñ≠ÈõÜÂêàÂÖ≥Á≥ªÁöÑÈÄöÁî®Ê†ºÂºèÔºöiexpr in {iexpr1, iexpr2, ... , iexprk} Â≠òÂÇ®Âô®ÂíåÊó∂ÈíüÁªÑÂêàÁîµË∑Ø‰ªéÊú¨Ë¥®‰∏äËÆ≤Ôºå‰∏çÂ≠òÂÇ®‰ªª‰Ωï‰ø°ÊÅØÔºåÂÆÉ‰ª¨Âè™ÊòØÁÆÄÂçïÁöÑÊ†πÊçÆËæìÂÖ•‰ø°Âè∑‰∫ßÁîü‰∏Ä‰∏™ËæìÂá∫‰ø°Âè∑„ÄÇ‰∏∫‰∫Ü‰∫ßÁîüÊó∂Â∫èÁîµË∑ØÔºàsequential circuitÔºâÔºå‰πüÂ∞±ÊòØÊúâÁä∂ÊÄÅÂπ∂‰∏îÂú®Ëøô‰∏™Áä∂ÊÄÅ‰∏äËøõË°åËÆ°ÁÆóÁöÑÁ≥ªÁªüÔºåÊàë‰ª¨ÂøÖÈ°ªÂºïÂÖ•Êåâ‰ΩçÂ≠òÂÇ®‰ø°ÊÅØÁöÑËÆæÂ§á„ÄÇÂ≠òÂÇ®ËÆæÂ§áÈÉΩÊòØÁî±Âêå‰∏Ä‰∏™Êó∂ÈíüÊéßÂà∂ÔºåÊó∂ÈíüÊòØ‰∏Ä‰∏™Âë®ÊúüÊÄß‰ø°Âè∑ÔºåÂÜ≥ÂÆö‰ªÄ‰πàÊó∂ÂÄôË¶ÅÊääÊñ∞ÂÄºÂä†ËΩΩÂà∞ËÆæÂ§á‰∏≠„ÄÇËÄÉËôë‰∏§Á±ªÂ≠òÂÇ®Âô®ËÆæÂ§áÔºö Êó∂ÈíüÂØÑÂ≠òÂô®ÔºàÁÆÄÁß∞ÂØÑÂ≠òÂô®ÔºâÂ≠òÂÇ®Âçï‰∏™‰ΩçÊàñÂ≠ó„ÄÇÊó∂Èíü‰ø°Âè∑ÊéßÂà∂ÂØÑÂ≠òÂô®Âä†ËΩΩËæìÂÖ•ÂÄº„ÄÇ ÈöèÊú∫ËÆøÈóÆÂ≠òÂÇ®Âô®ÔºàÁÆÄÁß∞Â≠òÂÇ®Âô®ÔºâÂ≠òÂÇ®Â§ö‰∏™Â≠óÔºåÁî®Âú∞ÂùÄÊù•ÈÄâÊã©ËØ•ËØªÊàñËØ•ÂÜôÂì™‰∏™Â≠ó„ÄÇÈöèÊú∫ËÆøÈóÆÂ≠òÂÇ®Âô®ÁöÑ‰æãÂ≠êÂåÖÊã¨Ôºö1.Â§ÑÁêÜÂô®ÁöÑËôöÊãüÂ≠òÂÇ®Âô®Á≥ªÁªüÔºàÁî±Á°¨‰ª∂ÂíåÊìç‰ΩúÁ≥ªÁªüÁªìÂêàËµ∑Êù•‰ΩøÂ§ÑÁêÜÂô®ÂèØ‰ª•Âú®‰∏Ä‰∏™ÂæàÂ§ßÁöÑÂú∞ÂùÄÁ©∫Èó¥ÂÜÖËÆøÈóÆ‰ªªÊÑèÁöÑÂ≠óÔºåÁ°¨‰ª∂‰∏äÂåÖÊã¨Áî±ÁºìÂ≠ò„ÄÅÂÜÖÂ≠ò„ÄÅÂ§ñÂ≠òÔºâ„ÄÇ2.ÂØÑÂ≠òÂô®Êñá‰ª∂ÔºåÂú®Ê≠§ÔºåÂØÑÂ≠òÂô®Ê†áËØÜÁ¨¶‰Ωú‰∏∫Âú∞ÂùÄ„ÄÇÂú® IA32 Êàñ Y86 Â§ÑÁêÜÂô®‰∏≠ÔºåÂØÑÂ≠òÂô®Êñá‰ª∂Êúâ 8 ‰∏™Á®ãÂ∫èÂØÑÂ≠òÂô®Ôºà%eax„ÄÅ%ecx Á≠âÔºâ„ÄÇ Ê≠£Â¶ÇÊàë‰ª¨ÁúãÂà∞ÁöÑÈÇ£Ê†∑ÔºåÂú®ËØ¥Âà∞Á°¨‰ª∂ÂíåÊú∫Âô®Á∫ßÁºñÁ®ãÊó∂Ôºå‚ÄúÂØÑÂ≠òÂô®‚ÄùËøô‰∏™ËØçÊòØÊúâ‰∏§‰∏™‰∏çÂêåÁöÑÊÑèÊÄùÁöÑ„ÄÇÈúÄË¶ÅÈÅøÂÖçÊ≠ß‰πâÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨ÂàÜÂà´Áß∞ÂëºËøô‰∏§Á±ªÂØÑÂ≠òÂô®‰∏∫ÔºöÁ°¨‰ª∂ÂØÑÂ≠òÂô®ÂíåÁ®ãÂ∫èÂØÑÂ≠òÂô®„ÄÇ ‰∏ãÂõæËØ¥Êòé‰∫ÜÁ°¨‰ª∂ÂØÑÂ≠òÂô®ÊòØÂ¶Ç‰ΩïÂ∑•‰ΩúÁöÑÔºö ÂØÑÂ≠òÂô®ÊòØ‰Ωú‰∏∫ÁîµË∑Ø‰∏çÂêåÈÉ®ÂàÜ‰∏≠ÁöÑÁªÑÂêàÈÄªËæë‰πãÈó¥ÁöÑÂ±èÈöú„ÄÇÊàë‰ª¨ÁöÑ Y86 Â§ÑÁêÜÂô®‰ºöÁî®Êó∂ÈíüÂØÑÂ≠òÂô®‰øùÂ≠òÁ®ãÂ∫èËÆ°Êï∞Âô®ÔºàPCÔºâÔºåÊù°‰ª∂Á†ÅÔºàCCÔºâÂíåÁ®ãÂ∫èÁä∂ÊÄÅÔºàStatÔºâ„ÄÇ ‰∏ãÂõæÂ±ïÁ§∫‰∫Ü‰∏Ä‰∏™ÂÖ∏ÂûãÁöÑÂØÑÂ≠òÂô®Êñá‰ª∂Ôºö ÂØÑÂ≠òÂô®Êñá‰ª∂Êúâ‰∏§‰∏™ËØªÁ´ØÂè£Ôºå‰∏Ä‰∏™ÂÜôÁ´ØÂè£„ÄÇÊØè‰∏™Á´ØÂè£ÈÉΩÊúâ‰∏Ä‰∏™Âú∞ÂùÄËæìÂÖ•ÔºåÂú∞ÂùÄÊòØÂõæ 4-4 ‰∏≠ÁöÑÂØÑÂ≠òÂô®Ê†áËØÜÁ¨¶„ÄÇËøôÊ†∑‰∏Ä‰∏™Â§öÁ´ØÂè£ÈöèÊú∫ËÆøÈóÆÂ≠òÂÇ®Âô®ÂÖÅËÆ∏ÂêåÊó∂ËøõË°åÂ§ö‰∏™ËØªÂíåÂÜôÊìç‰Ωú„ÄÇ ËôΩÁÑ∂ÂØÑÂ≠òÂô®Êñá‰ª∂‰∏çÊòØÁªÑÂêàÁîµË∑ØÔºåÂõ†‰∏∫ÂÆÉÊúâÂÜÖÈÉ®Â≠òÂÇ®„ÄÇ‰∏çËøáÂú®Êàë‰ª¨ÁöÑÂÆûÁé∞‰∏≠Ôºå‰ªéÂØÑÂ≠òÂô®Êñá‰ª∂‰∏≠ËØªÊï∞ÊçÆÂ∞±Â•ΩÂÉèÂÆÉÊòØ‰∏Ä‰∏™‰ª•Âú∞ÂùÄ‰∏∫ËæìÂÖ•„ÄÅÊï∞ÊçÆ‰∏∫ËæìÂá∫ÁöÑ‰∏Ä‰∏™ÁªÑÂêàÈÄªËæëÂùó„ÄÇÂΩì srcA Êàñ srcB Ë¢´ËÆæÊàêÊüê‰∏™ÂØÑÂ≠òÂô® ID Êó∂ÔºåÂú®‰∏ÄÊÆµÂª∂Ëøü‰πãÂêéÔºåÂ≠òÂÇ®Âú®Áõ∏Â∫îÂØÑÂ≠òÂô®‰∏äÁöÑÂÄºÂ∞±‰ºöÂá∫Áé∞Âú® valA Êàñ valB ‰∏ä„ÄÇ ÂêëÂØÑÂ≠òÂô®Êñá‰ª∂ÂÜôÂÖ•Â≠óÊòØÁî±Êó∂Èíü‰ø°Âè∑ÊéßÂà∂ÁöÑÔºåÊéßÂà∂ÊñπÂºèÁ±ª‰ºº‰∫éÂ∞ÜÂÄºÂä†ËΩΩÂà∞Êó∂ÈíüÂØÑÂ≠òÂô®„ÄÇÊØèÊ¨°Êó∂Èíü‰∏äÂçáÊó∂ÔºåËæìÂÖ• valW ‰∏äÁöÑÂÄº‰ºöË¢´ÂÜôÂÖ• dstW ÊåáÊòéÁöÑÂØÑÂ≠òÂô®‰∏ä„ÄÇÂΩì dstW ËÆæ‰∏∫ÁâπÊÆäÁöÑ ID ÂÄº 0xF Êó∂Ôºå‰∏ç‰ºöÂÜô‰ªª‰ΩïÁ®ãÂ∫èÂØÑÂ≠òÂô®„ÄÇ Áî±‰∫éÂØÑÂ≠òÂô®Êñá‰ª∂Êó¢ÂèØ‰ª•ËØªÂèàÂèØ‰ª•ÂÜôÔºå‰∏Ä‰∏™ÂæàËá™ÁÑ∂ÁöÑÈóÆÈ¢òÂ∞±ÊòØÔºöÂ¶ÇÊûúÊàë‰ª¨ÂêåÊó∂ËØªÂíåÂÜô‰∏Ä‰∏™Á®ãÂ∫èÂØÑÂ≠òÂô®‰ºöÂèëÁîü‰ªÄ‰πàÔºüÁ≠îÊ°àÁÆÄÂçïÊòé‰∫ÜÔºöÊàë‰ª¨‰ºöÁúãÂà∞‰∏Ä‰∏™ÊóßÂÄºÂà∞Êñ∞ÂÄºÁöÑÂèòÂåñ„ÄÇÊâÄ‰ª•Âú®ËÆæËÆ°Â§ÑÁêÜÂô®ÁöÑÊó∂ÂÄôË¶ÅÊääËøô‰∏™ÈóÆÈ¢òËÄÉËôëËøõÂéª„ÄÇ Êàë‰ª¨ÁöÑÂ§ÑÁêÜÂô®Êúâ‰∏Ä‰∏™ÈöèÊú∫ËÆøÈóÆÂ≠òÂÇ®Âô®ÔºåÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Ôºö ÂêåÂØÑÂ≠òÂô®Êñá‰ª∂‰∏ÄÊ†∑Ôºå‰ªéÂ≠òÂÇ®Âô®‰∏≠ËØªÁöÑÊìç‰ΩúÊñπÂºèÁ±ª‰ºº‰∫éÁªÑÂêàÈÄªËæëÔºöÂ¶ÇÊûúÊàë‰ª¨Âú®ËæìÂÖ• address ‰∏äÊèê‰æõ‰∏Ä‰∏™Âú∞ÂùÄÔºåÂπ∂Â∞Ü write ÊéßÂà∂‰ø°Âè∑ËÆæÁΩÆ‰∏∫ 0ÔºåÈÇ£‰πàÁªèËøá‰∏Ä‰∫õÂª∂Ëøü‰πãÂêéÔºåÂ≠òÂÇ®Âú®ÈÇ£‰∏™Âú∞ÂùÄ‰∏äÁöÑÂÄº‰ºöÂá∫Áé∞Âú®ËæìÂá∫ data ‰∏ä„ÄÇÂ¶ÇÊûúÂú∞ÂùÄË∂ÖÂá∫‰∫ÜËåÉÂõ¥Ôºåerror ‰ø°Âè∑‰ºöÁΩÆ‰∏∫ 1ÔºåÂê¶ÂàôÂ∞±ÊòØ 0„ÄÇ ÂÜôÂ≠òÂÇ®Âô®ÊòØÁî±Êó∂ÈíüÊéßÂà∂ÁöÑÔºöÊàë‰ª¨Â∞Ü address ËÆæÁΩÆ‰∏∫ÊúüÊúõÁöÑÂú∞ÂùÄÔºåÂ∞Ü data in ËÆæÁΩÆ‰∏∫ÊúüÊúõÁöÑÂÄºÔºåËÄå write ËÆæÁΩÆ‰∏∫ 1„ÄÇÁÑ∂ÂêéÊàë‰ª¨ÊéßÂà∂Êó∂ÈíüÊó∂ÔºåÂè™Ë¶ÅÂú∞ÂùÄÊòØÂêàÊ≥ïÁöÑÔºåÂ∞±‰ºöÊõ¥Êñ∞Áõ∏Â∫îÁöÑÂú∞ÂùÄ‰∏≠ÁöÑÂÄºÔºåÂ¶ÇÊûúÊòØÈùûÊ≥ïÂú∞ÂùÄÔºåerror Â∞±‰ºöÁΩÆ‰∏∫ 1„ÄÇ Y86 ÁöÑÈ°∫Â∫èÂÆûÁé∞Â∞ÜÂ§ÑÁêÜÁªÑÁªáÊàêÈò∂ÊÆµ ÂèñÊåáÔºàfetchÔºâÔºö‰ªéÂ≠òÂÇ®Âô®ÂèñÊåá‰ª§ÔºåÂú∞ÂùÄ‰∏∫ PC ÊâÄÊåáÁöÑÂú∞ÂùÄ„ÄÇ‰ªéÊåá‰ª§‰∏≠ÊäΩÂèñÂá∫Êåá‰ª§ÊåáÁ§∫Á¨¶Â≠óËäÇÁöÑ‰∏§‰∏™Âõõ‰ΩçÈÉ®ÂàÜÔºåÁß∞‰∏∫ icodeÔºàÊåá‰ª§‰ª£Á†ÅÔºâÂíå ifunÔºàÊåá‰ª§ÂäüËÉΩÔºâ„ÄÇ ËØëÁ†ÅÔºàdecodeÔºâÔºöËØëÁ†ÅÈò∂ÊÆµ‰ªéÂØÑÂ≠òÂô®Êñá‰ª∂ÊúÄÂ§öËØªÂÖ•‰∏§‰∏™Êìç‰ΩúÊï∞ÔºåÂæóÂà∞ÂÄº valA Âíå valBÔºàÂ¶ÇÊûúÊòØ‰∏§‰∏™ÁöÑËØùÔºâ„ÄÇÈÄöÂ∏∏ÔºåÂÆÉËØªÂÖ•Êåá‰ª§ rA Âíå rB Â≠óÊÆµÊåáÊòéÁöÑÂØÑÂ≠òÂô®Ôºå‰∏çËøáÊúâ‰∫õÊåá‰ª§ÊòØËØªÂØÑÂ≠òÂô®%esp ÁöÑ„ÄÇ ÊâßË°åÔºàexecuteÔºâ ËÆøÂ≠òÔºàmemoryÔºâÔºöËÆøÂ≠òÈò∂ÊÆµÂèØ‰ª•Â∞ÜÊï∞ÊçÆÂÜôÂÖ•Â≠òÂÇ®Âô®ÔºåÊàñËÄÖ‰ªéÂ≠òÂÇ®Âô®ËØªÂá∫Êï∞ÊçÆ„ÄÇËØªÂá∫ÁöÑÂÄº‰∏∫ valM„ÄÇ ÂÜôÂõûÔºàwrite backÔºâÔºöÂÜôÂõûÈò∂ÊÆµÊúÄÂ§öÂèØ‰ª•ÂÜô‰∏§‰∏™ÁªìÊûúÂà∞ÂØÑÂ≠òÂô®Êñá‰ª∂„ÄÇ Êõ¥Êñ∞ PCÔºàPC updateÔºâÔºöÂ∞Ü PC ËÆæÁΩÆÊàê‰∏ã‰∏ÄÊù°Êåá‰ª§ÁöÑÂú∞ÂùÄ„ÄÇ Â§ÑÁêÜÂô®Êó†ÈôêÂæ™ÁéØÔºåÊâßË°åËøô‰∫õÈò∂ÊÆµ„ÄÇÂú®Êàë‰ª¨ÁÆÄÂåñÁöÑÂÆûÁé∞‰∏≠ÔºåÂèëÁîü‰ªª‰ΩïÂºÇÂ∏∏Êó∂ÔºåÂ§ÑÁêÜÂô®Â∞±‰ºöÂÅúÊ≠¢„ÄÇÊØîÂ¶ÇÔºöÂÆÉÊâßË°å halt Êåá‰ª§ÊàñÈùûÊ≥ïÊåá‰ª§ÔºåÊàñËÄÖÂÆÉËØïÂõæËØªÊàñËÄÖÂÜôÈùûÊ≥ïÂú∞ÂùÄ„ÄÇÂú®Êõ¥ÂÆåÊï¥ÁöÑËÆæËÆ°‰∏≠ÔºåÂ§ÑÁêÜÂô®‰ºöËøõÂÖ•ÂºÇÂ∏∏Â§ÑÁêÜÊ®°ÂºèÔºåÂºÄÂßãÊâßË°åÁî±ÂºÇÂ∏∏ÁöÑÁ±ªÂûãÂÜ≥ÂÆöÁöÑÁâπÊÆä‰ª£Á†Å„ÄÇ Âú®Á°¨‰ª∂‰∏äÂ§çÂà∂ÈÄªËæëÂùóÁöÑÊàêÊú¨ÊØîËΩØ‰ª∂‰∏≠ÊúâÈáçÂ§ç‰ª£Á†ÅÁöÑÊàêÊú¨Ë¶ÅÂ§ßÂæóÂ§ö„ÄÇËÄå‰∏îÂú®Á°¨‰ª∂Á≥ªÁªü‰∏≠Â§ÑÁêÜËÆ∏Â§öÁâπÊÆäÊÉÖÂÜµÂíåÁâπÊÄßË¶ÅÊØîÁî®ËΩØ‰ª∂Êù•Â§ÑÁêÜÂõ∞ÈöæÂæóÂ§ö„ÄÇ Êàë‰ª¨Èù¢‰∏¥ÁöÑ‰∏Ä‰∏™ÊåëÊàòÊòØÂ∞ÜÊØèÊù°‰∏çÂêåÊåá‰ª§ÊâÄÈúÄË¶ÅÁöÑËÆ°ÁÆóÊîæÂÖ•Âà∞‰∏äËø∞ÁöÑÈÄöÁî®Ê°ÜÊû∂‰∏≠„ÄÇÊàë‰ª¨‰ºö‰ΩøÁî®Âõæ 4-17 ‰∏≠ÊâÄÁ§∫ÁöÑ‰ª£Á†ÅÊù•ÊèèËø∞‰∏çÂêåÁöÑ Y86 Êåá‰ª§ÁöÑÂ§ÑÁêÜ„ÄÇÂõæ 4-18 Âà∞ 4-21 ÊèèËø∞‰∫Ü‰∏çÂêå Y86 Êåá‰ª§Âú®ÂêÑÈò∂ÊÆµÊòØÊÄéÊ†∑Â§ÑÁêÜÁöÑ„ÄÇ ËÆ©Êàë‰ª¨Áúã‰∏Ä‰∏™ÂÖ∑‰ΩìÁöÑ‰æãÂ≠êÔºåÂõæ 4-17 ‰∏≠ÁöÑÁ¨¨‰∏âÊù°Êåá‰ª§Ôºö Âõæ 4-17 ‰∏≠Á¨¨‰∫îÊù°Êåá‰ª§Ôºö Âõæ 4-17 ‰∏≠Á¨¨ÂÖ≠Êù°Êåá‰ª§Ôºö Âõæ 4-21 Ë°®Êòé‰∫Ü‰∏âÁ±ªÊéßÂà∂ËΩ¨‰πâÊåá‰ª§ÁöÑÂ§ÑÁêÜÔºöÂêÑÁßçË∑≥ËΩ¨„ÄÅcall Âíå ret„ÄÇ Âõæ 4-17 ‰∏≠Á¨¨ 8 Êù°Êåá‰ª§Ôºö Âõæ 4-17 ‰∏≠Á¨¨ 13 Êù°Êåá‰ª§Ôºö SEQ Á°¨‰ª∂ÁªìÊûÑ]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄäCSAPP„Äã -- Á®ãÂ∫èÁöÑÊú∫Âô®Á∫ßË°®Á§∫]]></title>
    <url>%2Fblog%2F2018%2F10%2F08%2F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA%2F</url>
    <content type="text"><![CDATA[‰ªéÁºñËØë C ËØ≠Ë®ÄÊñá‰ª∂ËØ¥Ëµ∑1$ gcc -01 -o p p1.c p2.c ‰ΩøÁî®‰∫Ü gcc ÂëΩ‰ª§Êù•ÁºñËØëÔºå‰πüÂèØ‰ª•ÁÆÄÂçïÂÜô‰ΩúÔºöcc„ÄÇ ‰ºòÂåñÂ±ÇÁ∫ß‰∏∫ 1Ôºå1 Á∫ßÊòØÊúÄ‰ΩéÁöÑÔºåÂ±ÇÁ∫ßË∂äÈ´òÁ®ãÂ∫è‰ºòÂåñË∂äÂ•ΩÔºå‰ΩÜÂ¢ûÂä†‰∫ÜÁºñËØëÊó∂Èó¥Ôºå‰πü‰ΩøË∞ÉËØïÂèòÂæóÊõ¥ÈöæÔºå‰∏îË∑üÊ∫êÁ®ãÂ∫èÂ∑ÆÂºÇÂæàÂ§ß‰∏ç‰æø‰∫éÁêÜËß£„ÄÇ ÁºñËØëÁöÑÊµÅÁ®ãÊòØÔºö È¢ÑÂ§ÑÁêÜÂô®ÔºàpreprocessorÔºâÊääËØ∏Â¶ÇÔºö#include„ÄÅ#define„ÄÅ#if„ÄÅ#else„ÄÅ#elif„ÄÅ#ifdef„ÄÅ#endifÁ≠âÈ¢ÑÁºñËØëÊåá‰ª§ÊõøÊç¢Êéâ„ÄÇ ÁºñËØëÂô®ÔºàcompilerÔºâÊää.cÊ∫êÊñá‰ª∂ÁºñËØëÊàê.sÁöÑÊ±áÁºñ‰ª£Á†ÅÊñá‰ª∂„ÄÇ Ê±áÁºñÂô®ÔºàassemblerÔºâÊääÊ±áÁºñ‰ª£Á†ÅÊñá‰ª∂ËΩ¨Êç¢ÊàêÁõ∏Â∫îÁöÑ‰∫åËøõÂà∂ÁõÆÊ†áÊñá‰ª∂.oÔºåÁõÆÊ†áÊñá‰ª∂Â∑≤ÁªèÊòØÊú∫Âô®Á†Å‰∫ÜÔºåÂè™ÊòØÊ≤°ÊúâÂ°´ÂÖ•ÂÖ®Â±ÄÂèòÈáèÁöÑÂú∞ÂùÄ„ÄÇ ÈìæÊé•Âô®ÔºàlinkerÔºâÔºåÊääÂ§öÁõÆÊ†áÊñá‰ª∂ÂíåÂ∫ìÂáΩÊï∞ÈìæÊé•Âú®‰∏ÄËµ∑ÔºåÂΩ¢ÊàêÂèØÊâßË°åÊñá‰ª∂„ÄÇ instruction set architectureÔºåISAÔºåÊåá‰ª§ÈõÜ‰ΩìÁ≥ªÁªìÊûÑÔºåÂÆö‰πâ‰∫ÜÂ§ÑÁêÜÂô®Áä∂ÊÄÅÔºåÊåá‰ª§ÁöÑÊ†ºÂºèÂíåË°å‰∏∫„ÄÇintel ÁöÑÊåá‰ª§ÈõÜÂåÖÊã¨ 32 ‰ΩçÁöÑÔºöIA32Ôºå‰ª•Âèä 64 ‰ΩçÁöÑÔºöx86-64„ÄÇ ÁºñËØëÂô®ÂÅö‰∫ÜÊï¥‰∏™ÁºñËØëÊµÅÁ®ãÁöÑÂ§ßÈÉ®ÂàÜÂ∑•‰ΩúÔºåÊ±áÁºñ‰ª£Á†ÅÂá†‰πéÂ∞±ÊòØÊú∫Âô®Á†ÅÁöÑ‰æõ‰∫∫ÈòÖËØªÁâà„ÄÇÊâÄ‰ª•ÁúãÊáÇÊ±áÁºñ‰ª£Á†ÅÊòØÂÖ≥ÈîÆ„ÄÇ IA32 Á®ãÂ∫è‰ª£Á†ÅÂíå C ËØ≠Ë®ÄÂæà‰∏çÁõ∏ÂêåÔºå‰∏Ä‰∫õÂú® C ËØ≠Ë®Ä‰∏ãÁúã‰∏çÂà∞ÁöÑÂ§ÑÁêÜÂô®Áä∂ÊÄÅÂèØ‰ª•Âú®ËøôÈáåÁúãÂà∞Ôºö Á®ãÂ∫èËÆ°Êï∞Âô®Ôºàprogram counterÔºåPCÔºå‰πüÂè´Ôºöinstructor pointerÔºåIPÔºâÂú® IA32 ‰∏≠Âè´Ôºö%eipÔºåÊåáÂá∫‰∏ã‰∏ÄÊù°Êåá‰ª§Âú®ÂÜÖÂ≠ò‰∏≠ÁöÑ‰ΩçÁΩÆ Êï¥Êï∞ÂØÑÂ≠òÂô®ÔºåÂèØ‰ª•Áî®Êù•‰øùÂ≠òÊï∞ÊçÆ Áä∂ÊÄÅÁ†ÅÂØÑÂ≠òÂô®ÔºåÂèØ‰ª•Áî®Êù•ÂÆûÁé∞Êù°‰ª∂ÊéßÂà∂‰ª£Á†ÅÂ¶ÇÔºöif Âíå while ÊµÆÁÇπÂØÑÂ≠òÂô®ÔºåÁî®Êù•ËÆ°ÁÆóÊµÆÁÇπÊï∞ ‰æãÂ≠ê1234567int accum = 0;int sum(int x, int y)&#123; int t = x + y; accum += t; return t;&#125; Â¶ÇÊûúË¶ÅÁúãÂà∞ÁºñËØëÂá∫ÁöÑÊ±áÁºñ‰ª£Á†ÅÔºåÂèØ‰ª•‰ΩøÁî®-SÈÄâÈ°πÔºö 1$ gcc -01 -S code.c ËøôÊ†∑Â∞±‰ºö‰ΩøÁºñËØëÊµÅÁ®ãÂÅúÁïôÂú® È¢ÑÂ§ÑÁêÜ-&gt;ÁºñËØë Èò∂ÊÆµÔºåËÄå‰∏çÊòØÁªßÁª≠ËøõË°åÊé•‰∏ãÊù•ÁöÑÊ±áÁºñÂíåÈìæÊé•ÔºåÁîüÊàêÁöÑÊñá‰ª∂ÊòØÔºö.sÊ±áÁºñÊñá‰ª∂„ÄÇÁºñËØëÂêéÁöÑÊ±áÁºñ‰ª£Á†Å‰∏≠‰ºöÂåÖÂê´Â¶Ç‰∏ã‰ª£Á†ÅÔºö 12345678sum: pushl %ebp movl %esp, %ebp movl 12(%ebp), %eax addl 8(%ebp), %eax addl %eax, accum popl %ebp ret ËøôÊÆµ‰ª£Á†Å‰∏≠ÁöÑÊØè‰∏ÄÂè•ÈÉΩÂØπÂ∫î‰∏Ä‰∏™Êú∫Âô®Êåá‰ª§ÔºåÊØîÂ¶Ç pushl ËøôÂè•ÁöÑÊÑèÊÄùÂ∞±ÊòØÊääÂØÑÂ≠òÂô®%ebp ÁöÑÂÜÖÂÆπ push Âà∞Á®ãÂ∫èÊ†àÔºàÂÜÖÂ≠ò‰∏≠Ôºâ‰∏ä„ÄÇÂú®Ê±áÁºñ‰ª£Á†ÅÈáåÊâÄÊúâÁöÑÂ±ÄÈÉ®ÂèòÈáèÈÉΩ‰∏çËßÅ‰∫ÜÔºåÂÖ®Â±ÄÂèòÈáèËøòÂèØ‰ª•ÁúãÂà∞ÔºåÂõ†‰∏∫ÁºñËØëÂô®ËøòÊ≤°ÊúâÂÜ≥ÂÆöËøô‰∏™ÂèòÈáèÂú®ÂÜÖÂ≠ò‰∏≠ÁöÑÂ≠òÂÇ®‰ΩçÁΩÆ„ÄÇ Â¶ÇÊûúÊàë‰ª¨‰ΩøÁî®-cÈÄâÈ°πÔºåGCC Â∞±‰ºöÊó¢ÁºñËØëÂèàÊ±áÁºñÔºö 1$ gcc -01 -c code.c ËøôÊ†∑Â∞±ÁîüÊàê‰∫ÜÁõÆÊ†áÊñá‰ª∂code.oÔºåÂú® 800bytes ÁöÑ code.o Êñá‰ª∂‰∏≠ÔºåÊúâ 17bytes ÊòØÂØπÂ∫î‰∏äÈù¢ÁöÑÊ±áÁºñ‰ª£Á†ÅÁöÑÔºö 155 89 e5 8b 45 0c 03 45 08 01 05 00 00 00 00 5d c3 ÂèØ‰ª•‰ΩøÁî®ÂèçÊ±áÁºñÂ∞ÜÈöæÊáÇÁöÑÁõÆÊ†áÊñá‰ª∂‰ª£Á†ÅËΩ¨ÊàêÊ±áÁºñ‰ª£Á†ÅÔºö 1$ objdump -d code.o IA32 Êåá‰ª§ÁöÑÈïøÂ∫¶ÊòØ 1 Âà∞ 15 Â≠óËäÇÔºåË∂äÂ∏∏Áî®ÁöÑÔºåÊìç‰ΩúÊï∞Ë∂äÂ∞ëÁöÑÊåá‰ª§Ë∂äÁü≠ÔºåÂèç‰πãÂàôË∂äÈïø„ÄÇ ÁªôÂÆö‰∏Ä‰∏™ÂºÄÂßãÁöÑ‰ΩçÁΩÆÔºåÂè™ÂØπÂ∫î‰∏ÄÁßçÊú∫Âô®Êåá‰ª§ÔºåÊØîÂ¶ÇÂè™Êúâpushl %ebpÊåá‰ª§ÊòØ‰ª• 55 ÂºÄÂ§¥ÁöÑ ÂèçÊ±áÁºñÂè™ÈúÄË¶ÅÊ†πÊçÆÁõÆÊ†áÊñá‰ª∂Â∞±ÂèØ‰ª•ÁøªËØëÂá∫Ê±áÁºñÊñá‰ª∂ ÂèçÊ±áÁºñÂá∫Êù•ÁöÑÊñá‰ª∂Ë∑üÁõ¥Êé•ÁºñËØëÁöÑÊ±áÁºñÊñá‰ª∂Êúâ‰∫õ‰∏ç‰∏ÄÊ†∑ÔºåÊØîÂ¶ÇÊâÄÊúâÊåá‰ª§ÈÉΩÁúÅÁï•‰∫ÜÂêéÁºÄl„ÄÇlÊòØÂ§ßÂ∞èÊåáÁ§∫Á¨¶ÔºåËÄåÂ§ßÂ§öÊï∞ÊÉÖÂÜµ‰∏ãÊòØÂèØ‰ª•ÁúÅÁï• l ÁöÑ„ÄÇ Â§¥‰∏§‰∏™Â±ûÊÄßË∑üÂìàÂ§´ÊõºÁºñÁ†ÅÁöÑÂéüÁêÜÊòØ‰∏ÄËá¥ÁöÑÔºåÂèØ‰ª•ËØ¥ËøôÊòØ‰∏ÄÁßçÈÄöÁî®ÁöÑÁºñÁ†ÅÂéüÂàôÔºåÁ¨¨‰∏ÄÊù°Áî®Êù•‰øùËØÅËäÇÁúÅÂ≠óËäÇÁ©∫Èó¥ÔºåÁ¨¨‰∫åÊù°Âàô‰øùËØÅÁºñÁ†ÅÁöÑÂîØ‰∏ÄÊÄß„ÄÇ ÁîüÊàêÁúüÊ≠£ÂèØÊâßË°åÁöÑÊñá‰ª∂ËøòÈúÄË¶ÅÈìæÊé•Êìç‰ΩúÔºåËÄå‰∏îÂøÖÈ°ªÂåÖÂê´ main ÂáΩÊï∞„ÄÇÂÅáËÆæÊàë‰ª¨ÁöÑmain.cÊñá‰ª∂Â¶Ç‰∏ãÔºö 123int main()&#123; return sum(1, 3);&#125; Êàë‰ª¨ÂèØ‰ª•‰ΩøÁî®Â¶Ç‰∏ãÊåá‰ª§ÁîüÊàêÂèØÊâßË°åÊñá‰ª∂Ôºö 1$ gcc -01 -o prog code.o main.c prog Êñá‰ª∂Â¢ûÈïøÂà∞‰∫Ü 9123bytesÔºåÂõ†‰∏∫ÂÆÉ‰∏ç‰ªÖÂåÖÂê´Êàë‰ª¨ÂÜôÁöÑ‰ª£Á†ÅÔºåËÄå‰∏îÂåÖÂê´‰∫ÜÁî®Êù•ÂºÄÂßãÂíåÁªìÊùüÁöÑÁ®ãÂ∫èÔºå‰ª•Âèä‰∏éÊìç‰ΩúÁ≥ªÁªüËøõË°å‰∫§‰∫íÁöÑÁ®ãÂ∫è„ÄÇ ÂèØ‰ª•ÁúãÂà∞Á¨¨ 6 Ë°åÔºåÂÖ®Â±ÄÂèòÈáèÂú®ÈìæÊé•ÁöÑÊó∂ÂÄôÂÆöÂùÄ„ÄÇ Ê±áÁºñ‰ª£Á†ÅÁöÑÊ†ºÂºèÂÅáËÆæÊàë‰ª¨Êúâ‰∏Ä‰∏™ C ËØ≠Ë®ÄÊñá‰ª∂simple.cÔºö 12345int simple(int *xp, int y) 2&#123; int t = *xp + y; *xp = t; return t;&#125; ÂèØ‰ª•ÂæóÂà∞Â¶Ç‰∏ãÊ±áÁºñ‰ª£Á†ÅÔºö 12345678910111213141516.file &quot;simple.c&quot; .text.globl simple .type simple, @functionsimple: pushl %ebp movl %esp, %ebp movl 8(%ebp), %edx movl 12(%ebp), %eax addl (%edx), %eax movl %eax, (%edx) popl %ebp ret .size simple, .-simple .ident &quot;GCC: (Ubuntu 4.3.2-1ubuntu11) 4.3.2&quot; .section .note.GNU-stack,&quot;&quot;,@progbits ÊâÄÊúâ‰ª•.ÂºÄÂ§¥ÁöÑË°åÈÉΩÊòØÁî®Êù•ÊåáÂØºÊ±áÁºñÂô®ÂíåÈìæÊé•Âô®ÁöÑÔºåÊàë‰ª¨‰∏çÁî®ÂéªÁÆ°„ÄÇËÄåËøôÊÆµ‰ª£Á†ÅÁöÑÂ§ßÊ¶ÇÊÑèÊÄùÂ¶Ç‰∏ãÔºö 123456789simple: pushl %ebp ‰øùÂ≠òÂ∏ßÊåáÈíà movl %esp, %ebp ÂàõÂª∫Êñ∞ÁöÑÂ∏ßÊåáÈíà movl 8(%ebp), %edx ‰ªéÂÜÖÂ≠ò‰∏≠ËØªÂèñxp movl 12(%ebp), %eax ‰ªéÂÜÖÂ≠ò‰∏≠ËØªÂèñy addl (%edx), %eax *xp+y=t movl %eax, (%edx) ÊäätÂ≠òÂà∞xpÊåáÂêëÁöÑÂú∞ÂùÄ‰∏≠ popl %ebp ÈáçÊñ∞Ëé∑ÂèñÂ∏ßÊåáÈíà ret ËøîÂõû ËøôÊÆµ‰ª£Á†ÅÂØπ%ebp Âíå%esp ÁöÑÊìç‰ΩúÊ∂âÂèäÂà∞‰∫ÜÁ®ãÂ∫èÊ†àÊ®°ÂûãÔºåÁúã‰∏çÊáÇÂæàÊ≠£Â∏∏ÔºåÊñáÁ´†‰∏ãÈù¢‰ºöÊúâËÆ≤Ëß£ÁöÑ„ÄÇ ATT Âíå intel Ê±áÁºñÊ†ºÂºèATT Âç≥ AT&amp;TÔºåÊòØË¥ùÂ∞îÂÆûÈ™åÂÆ§Êóó‰∏ãÁöÑÂÖ¨Âè∏„ÄÇ GCC Âíå OBJDUMP ÈªòËÆ§ÁîüÊàê ATT Ê†ºÂºèÁöÑÊ±áÁºñ‰ª£Á†ÅÔºåÂæÆËΩØÂíåÂõ†ÁâπÂ∞îÁöÑÁºñÁ®ãÂ∑•ÂÖ∑ÂàôÈªòËÆ§ÁîüÊàê intel Ê†ºÂºèÁöÑÊ±áÁºñ‰ª£Á†Å„ÄÇ ‰ΩøÁî®Â¶Ç‰∏ãÂëΩ‰ª§ÂèØ‰ª•ËÆ© GCC ÁîüÊàê intel Ê†ºÂºèÁöÑ‰ª£Á†ÅÔºö 1$ gcc -01 -S -masm=intel code.c ‰∏§ËÄÖÁöÑÂå∫Âà´Â¶Ç‰∏ãÔºö intel ‰ª£Á†ÅÁúÅÁï•‰∫ÜÁî®Êù•ÊåáÂÆöÂ§ßÂ∞èÁöÑÂêéÁºÄÔºåÊØîÂ¶Ç‰ΩøÁî®movËÄå‰∏çÊòØmovl intel ‰ª£Á†ÅÁúÅÁï•‰∫ÜÂØÑÂ≠òÂô®ÂâçÈù¢ÁöÑ%ÔºåÊØîÂ¶Ç‰ΩøÁî®espËÄå‰∏çÊòØ%esp intel ‰ª£Á†ÅÁî®‰∫Ü‰∏çÂêåÁöÑÊñπÂºèÊù•ÊèèËø∞ÂÜÖÂ≠òÂú∞ÂùÄÔºåÊØîÂ¶Ç‰ΩøÁî®DWORD PTR [ebp+8]ËÄå‰∏çÊòØ8(%ebp) intel ‰ª£Á†ÅÂ§öÊìç‰ΩúÊï∞Êåá‰ª§ÁöÑÊìç‰ΩúÊï∞È°∫Â∫èË∑ü ATT Áõ∏Âèç Áî±‰∫éÊòØÁî± 16bit Êû∂ÊûÑÊâ©Â±ïÂà∞ 32bit Êû∂ÊûÑÁöÑÔºåintel ÁÆ° 16bit Êï∞ÊçÆÁ±ªÂûãÂè´ÔºöwordÔºå32bit Êï∞ÊçÆÁ±ªÂûãÂè´Ôºödouble wordsÔºå64bit Êï∞ÊçÆÁ±ªÂûãÂè´Ôºöquad words„ÄÇ Êï∞ÊçÆÊ†ºÂºè ËÆøÈóÆÊï∞ÊçÆIA32 CPU ÂåÖÂê´‰∫Ü 8 ‰∏™ÂØÑÂ≠òÂô®ÔºåÊØè‰∏™Êúâ 32bit Â≠òÂÇ®Á©∫Èó¥ÔºåÁî®Êù•Â≠òÂÇ®Êï¥ÂΩ¢ÂÄº‰ª•ÂèäÊåáÈíà„ÄÇ x86-64 ÂàôËøõ‰∏ÄÊ≠•Êâ©Â±ï‰∫ÜËøô‰∫õÂØÑÂ≠òÂô®Ôºö ÂâçÂÖ≠‰∏™ÂØÑÂ≠òÂô®Áß∞‰∏∫ÈÄöÁî®ÂØÑÂ≠òÂô®ÔºåÊúâÂÖ∂ÁâπÂÆöÁöÑÁî®ÈÄîÔºö %rax(%eax) Áî®‰∫éÂÅöÁ¥ØÂä†ÔºåËøáÁ®ãË∞ÉÁî®ËøîÂõûÂÄº %rcx(%ecx) Áî®‰∫éËÆ°Êï∞ %rdx(%edx) Áî®‰∫é‰øùÂ≠òÊï∞ÊçÆ %rbx(%ebx) Áî®‰∫éÂÅöÂÜÖÂ≠òÊü•ÊâæÁöÑÂü∫Á°ÄÂú∞ÂùÄ %rsi(%esi) Áî®‰∫é‰øùÂ≠òÊ∫êÁ¥¢ÂºïÂÄº %rdi(%edi) Áî®‰∫é‰øùÂ≠òÁõÆÊ†áÁ¥¢ÂºïÂÄº Êìç‰ΩúÊï∞ÊåáÁ§∫Á¨¶ Êúâ‰∏âÁßçÁ±ªÂûãÁöÑÊìç‰ΩúÊï∞ÔºåÁ´ãÂç≥Êï∞(Imm)„ÄÅÂØÑÂ≠òÂô®ÂÄº(Reg)„ÄÅÂÜÖÂ≠òÂÄº(Mem)„ÄÇ mov Êåá‰ª§ pushl %ebpÊåá‰ª§Á≠â‰ª∑‰∫é‰∏ãÈù¢ÁöÑÊåá‰ª§Ôºö 12subl $4,%esp ÂáèÂ∞èÊ†àÊåáÈíàmovl %ebp,(%esp) Êää%ebp‰∏≠ÁöÑÊï∞ÊçÆÂÜôÂà∞%espÊåáÂêëÁöÑÂÜÖÂ≠ò‰∏≠ popl %eaxÊåá‰ª§Á≠â‰ª∑‰∫é‰∏ãÈù¢ÁöÑÊåá‰ª§Ôºö 12movl (%esp), %ebp Êää%espÊåáÂêëÁöÑÂÜÖÂ≠òÂú∞ÂùÄ‰∏≠ÁöÑÂÄºËØªÂà∞%eax‰∏≠addl $4, %esp Â¢ûÂä†Ê†àÊåáÈíà ÁÆóÊúØÂíåÈÄªËæëÊìç‰Ωúload effective addressÔºåleal Êåá‰ª§ÔºåÂÆûÈôÖ‰∏äÊòØ‰∏Ä‰∏™ movl Êåá‰ª§„ÄÇ Â§ö‰∏™Êìç‰ΩúÊï∞ÁöÑÊåá‰ª§ÔºåÊ≥®ÊÑè‰∏Ä‰∏ã‰∏§‰∏™Êìç‰ΩúÊï∞ÁöÑÈ°∫Â∫èÂç≥ÂèØ ‰ΩçÁßªÊìç‰Ωú‰ΩçÁßªÁöÑÂÄºÊòØÁî®‰∏Ä‰∏™ÂçïÂ≠óËäÇÊù•Ë°®Á§∫Ôºå‰∏îÊï∞ÂÄºÂè™ËÉΩÊòØ 0 Âà∞ 31ÔºåÊâÄ‰ª•Ëøô‰∏™Â≠óËäÇÂè™Êúâ‰Ωé‰∫î‰ΩçÊâç‰ºöË¢´ËÄÉËôë„ÄÇ Êâ©Â±ï‰πòÈô§Êåá‰ª§ ÊéßÂà∂Áä∂ÊÄÅÁ†Å‰ΩøÁî®ÂçïÊØîÁâπÁöÑÁä∂ÊÄÅÁ†ÅÊù•ÊèèËø∞ÁÆóÊï∞ÂíåÈÄªËæëËøêÁÆóÁöÑÁä∂ÊÄÅ„ÄÇÊúÄÂ∏∏Áî®ÁöÑÁä∂ÊÄÅÁ†ÅÂ¶Ç‰∏ãÔºö CF: carry flag Ëøõ‰ΩçÁ¨¶ÔºåÁî®Êù•Ë°®Á§∫ÊúÄÈ´ò‰ΩçÁöÑËøõ‰Ωç„ÄÇÈÄöÂ∏∏Áî®Êù•Ê£ÄÊµãÊó†Á¨¶Âè∑ËøêÁÆóÁöÑÊ∫¢Âá∫ ZF: zero flagÔºåÈõ∂Ê†áÂøóÁ¨¶ÔºåÊúÄËøëÁöÑÊìç‰Ωú‰∫ßÁîü‰∫Ü 0 SF: sign flagÔºåÁ¨¶Âè∑‰ΩçÔºåÊúÄËøëÁöÑÊìç‰Ωú‰∫ßÁîü‰∫ÜË¥üÊï∞ OF: overflow flagÔºåÊ∫¢Âá∫Á¨¶ÔºåË°•Á†ÅÊ∫¢Âá∫ÔºåÊ≠£Ë¥üÈÉΩÂèØ‰ª•ÔºåË°®Á§∫ÊúâÁ¨¶Âè∑Ê∫¢Âá∫ ‰∏æ‰∏™‰æãÂ≠êÔºöt=a+bÔºåa„ÄÅb„ÄÅt ÈÉΩÊòØÊï¥ÂΩ¢Êï∞„ÄÇ 1234CF: (unsigned)t&lt;(unsigned)a Êó†Á¨¶Âè∑Ê∫¢Âá∫ZF: (t==0) Èõ∂SF: (t&lt;0) Ë¥üÊï∞OF: (a&lt;0 == b&lt;0) &amp;&amp; (t&lt;0 != a&lt;0) ÊúâÁ¨¶Âè∑Ê∫¢Âá∫ OF ÁöÑË°®ËææÂºè‰πüÂèØ‰ª•ÂÜô‰ΩúÔºö(a&lt;0 &amp;&amp; b0) || (a&gt;0 &amp;&amp; b&gt;0 &amp;&amp; t&lt;0)Ôºå‰πüÂ∞±ÊòØËØ¥ a„ÄÅb ÈÉΩÊòØË¥üÊï∞Áõ∏Âä†Âç¥ÊòØÊ≠£Êï∞ÔºåÊàñËÄÖ a„ÄÅb ÈÉΩÊòØÊ≠£Êï∞Áõ∏Âä†Âç¥ÊòØË¥üÊï∞ÔºåËøô‰∏§ÁßçÊÉÖÂÜµÂ∞±‰ª£Ë°®Ê∫¢Âá∫‰∫Ü„ÄÇ leal Êìç‰Ωú‰∏ç‰ºöÊîπÂèòÁä∂ÊÄÅÁ†ÅÔºåÂõ†‰∏∫Ëøô‰∏™Êåá‰ª§Âè™ÊòØÁî®Êù•ËÆ°ÁÆóÂú∞ÂùÄ„ÄÇÈô§Ê≠§‰πãÂ§ñË°® 3.7 ‰∏≠ÁöÑÊâÄÊúâÊìç‰ΩúÈÉΩÂèØËÉΩÊîπÂèòÁä∂ÊÄÅÁ†Å„ÄÇ‰æãÂ¶ÇÈÄªËæëÊìç‰ΩúÔºöXORÔºå‰ºö‰Ωø CF Âíå OF ÁΩÆÈõ∂ÔºåÁßª‰ΩçÊìç‰Ωú‰ºö‰Ωø CF ÁΩÆ‰∏∫ÊúÄÂêé‰∏Ä‰∏™Áßª‰ΩçÂá∫ÂéªÁöÑ bitÔºå‰ΩÜ OF Ë¶ÅÁΩÆÈõ∂„ÄÇËá™Â¢ûÂíåËá™ÂáèÊåá‰ª§‰ºöËÆæÁΩÆ OF Âíå ZFÔºå‰∏çËÆæÁΩÆ CF„ÄÇ CMP Êåá‰ª§Á±ª‰ºº‰∫é SUB Êåá‰ª§Ôºå‰ΩÜÂè™‰øÆÊîπÁä∂ÊÄÅÁ†ÅËÄå‰∏çÊîπÂèòÂÖ∂‰ªñÂØÑÂ≠òÂô®ÔºåÂ¶ÇÊûú‰∏§‰∏™Êìç‰ΩúÊï∞Áõ∏Á≠âÔºåZF Â∞±‰ºöË¢´ËÆæÁΩÆÔºõTEST Êåá‰ª§Á±ª‰ºº‰∫é AND Êåá‰ª§Ôºå‰ΩÜÂè™‰øÆÊîπÁä∂ÊÄÅÁ†ÅËÄå‰∏çÊîπÂèòÂÖ∂‰ªñÂØÑÂ≠òÂô®ÔºåÂ¶ÇÊûú‰∏§‰∏™Êìç‰ΩúÊï∞ÊòØÈáçÂ§çÁöÑÔºö testl %eax,%eaxÔºå‰ΩúÁî®ÊòØÊ£ÄÊµã%eax ÊòØ 0ÔºåËøòÊòØÊ≠£Êï∞ÔºåËøòÊòØË¥üÊï∞„ÄÇ ËÆøÈóÆÁä∂ÊÄÅÁ†ÅÊúâ‰∏âÁßçÂ∏∏Áî®ÁöÑÊñπÂºèËÆøÈóÆÁä∂ÊÄÅÁ†ÅÔºö Ê†πÊçÆÂá†‰∏™Áä∂ÊÄÅÁ†ÅÁöÑÈÄªËæëÁªÑÂêàÔºåËÆæÁΩÆÂçï‰∏™Â≠óËäÇ‰∏∫ 0 Êàñ 1Ôºå‰πüÂ∞±ÊòØ set Êåá‰ª§ Ê†πÊçÆÁä∂ÊÄÅÁ†ÅÔºåË∑≥ËΩ¨Âà∞Á®ãÂ∫èÁöÑÂÖ∂‰ªñÂàÜÊîØ Ê†πÊçÆÁä∂ÊÄÅÁ†Å‰º†ÈÄÅÊï∞ÊçÆ ‰∏æ‰∏™‰æãÂ≠êÔºöËÆ°ÁÆóa&lt;bÔºåa Âíå b ÈÉΩÊòØ int Âûã 1234a is in %edx, b is in %eaxcmpl %eax, %edx Compare a:bsetl %al Set low order byte of %eax to 0 or 1movzbl %al, %eax Set remaining byte of %eax to 0 setl Êåá‰ª§ÊòØÔºöD &lt;- SF^OFÔºå‰πüÂ∞±ÊòØÊúâ‰∏§ÁßçÊÉÖÂÜµ‰ª£Ë°® a-b&lt;0Ôºö OF=0Ôºàa-b Ê≤°ÊúâÂèëÁîüÊ∫¢Âá∫ÔºâÔºå‰∏î SF=1Ôºàa-b ÁªìÊûú‰∏∫Ë¥üÔºâ OF=1Ôºàa-b ÂèëÁîü‰∫ÜÊ∫¢Âá∫ÔºâÔºå‰∏î SF=0Ôºàa-b ÁªìÊûú‰∏∫ÈùûË¥üÔºâ Á¨¨‰∫åÁßçÊÉÖÂÜµÊØîËæÉÂ§çÊùÇÔºåÈúÄË¶ÅÁÆÄÂçïÂàÜÊûê‰∏Ä‰∏ã„ÄÇa-b ÂèëÁîü‰∫ÜÊ∫¢Âá∫ÔºåÊúâ‰∏§ÁßçÊÉÖÂÜµÔºöÊ≠£Ê∫¢Âá∫ÂíåË¥üÊ∫¢Âá∫„ÄÇË¥üÊ∫¢Âá∫Ôºöa ÊòØË¥üÊï∞Ôºåb ÊòØÊ≠£Êï∞Ôºå‰ΩÜ a-b ÁªìÊûú‰∏∫Ê≠£ÔºàÁªìÊûúÂ∞è‰∫é‰∫ÜÊúÄÂ∞èÁöÑË¥üÊï∞ÔºåÂèëÁîüÊ∫¢Âá∫ÔºâÔºõÊ≠£Ê∫¢Âá∫Ôºöa ÊòØÊ≠£Êï∞Ôºåb ÊòØË¥üÊï∞Ôºå‰ΩÜ a-b ÁªìÊûú‰∏∫Ë¥üÔºàÁªìÊûúÂ§ß‰∫é‰∫ÜÊúÄÂ§ßÁöÑÊ≠£Êï∞ÔºåÂèëÁîüÊ∫¢Âá∫Ôºâ„ÄÇ ÊØîÂ¶ÇÔºö 123-128Ôºö 1000 0000127: 0111 1111-127: 1000 0001 a=-128, b=127, a-b=-128-127= $(1 0000 0001)_2$ , ‰ªéÁªìÊûú‰∏äÊù•ÁúãÂ∞±ÂèòÊàê‰∫Ü 1ÔºàÊ≠£Êï∞ÔºâÔºåËøôÂ∞±ÊòØË¥üÊ∫¢Âá∫ a=127, b=-127, a-b=127-(-127) = $(1111 1110)_2$ , ‰ªéÁªìÊûú‰∏äÊù•ÁúãÂ∞±ÂèòÊàê‰∫Ü -2ÔºàË¥üÊï∞ÔºâÔºåËøôÂ∞±ÊòØÊ≠£Ê∫¢Âá∫ OF=1, SF=0ÔºåÂ∞±ÊòØË¥üÊ∫¢Âá∫ÔºåËÄåË¥üÊ∫¢Âá∫‰ª£Ë°®ÁùÄ a ÊòØË¥üÊï∞Ôºåb ÊòØÊ≠£Êï∞Ôºå‰πüÂ∞±ÊòØa&lt;b ÂÖ∂‰ªñ‰∏â‰∏™ÊúâÁ¨¶Âè∑ÊØîËæÉ‰ª•Ê≠§Á±ªÊé®„ÄÇ Ë∑≥ËΩ¨Êåá‰ª§ ÂèØ‰ª•ÁúãÂà∞Êù°‰ª∂Ë∑≥ËΩ¨ÂøÖÈ°ªÊòØÁõ¥Êé•ÁöÑÔºåËÄåÊó†Êù°‰ª∂Ë∑≥ËΩ¨ÂèØ‰ª•‰ΩøÁî®Êìç‰ΩúÊï∞„ÄÇ Ë∑≥ËΩ¨‰ΩçÁΩÆÁöÑÁºñÁ†ÅÊúâ‰∏§ÁßçÔºö ÂÄüÂä© PC ‰ΩøÁî®Áõ∏ÂØπÂÆö‰Ωç ‰ΩøÁî®ÁªùÂØπÂÆö‰Ωç ÂÆû‰æãÂ¶Ç‰∏ãÔºö 12345678910jle .L2 if &lt;=, goto dest2 .L5: dest1: movl %edx, %eax sarl %eax subl %eax, %edx leal (%edx,%edx,2), %edx testl %edx, %edxjg .L5 if &gt;, goto dest1 .L2: dest2: movl %edx, %eax ÁõÆÊ†áÊñá‰ª∂ÂíåÊ±áÁºñÊñá‰ª∂ÂØπÂ∫îÂ¶Ç‰∏ãÔºö 123456788: 7e 0d jle 17 &lt;silly+0x17&gt; Target = dest2a: 89 d0 mov %edx,%eax dest1:c: d1 f8 sar %eaxe: 29 c2 sub %eax,%edx10: 8d 14 52 lea (%edx,%edx,2),%edx13: 85 d2 test %edx,%edx15: 7f f3 jg a &lt;silly+0xa&gt; Target = dest117: 89 d0 mov %edx,%eax dest2: ÂØπÂ∫îÁöÑÂÖ≥Á≥ªÊòØÔºö0xd+0xa=0x17Ôºå0xf3+0x17=0xaÔºå‰∏∫‰ªÄ‰πàÊòØÂä†‰∏ã‰∏ÄÊù°Êåá‰ª§ÁöÑÂú∞ÂùÄËÄå‰∏çÊòØÂΩìÂâçÊåá‰ª§Âë¢ÔºüËøô‰∏™‰º†ÁªüË¶ÅËøΩÊ∫ØÂà∞ËÆ°ÁÆóÊú∫ÁöÑÊó©ÊúüÂÆûÁé∞ÔºåÂΩìÊó∂ÁöÑÂ§ÑÁêÜÂô®‰ºöÂú®ÊâßË°åÊØè‰∏ÄÊù°Êåá‰ª§‰πãÂâçÂÖàÊõ¥Êñ∞‰∏Ä‰∏ã PCÔºàprogram counterÔºâ„ÄÇ 12345678804839c: 7e 0d jle 80483ab &lt;silly+0x17&gt;804839e: 89 d0 mov %edx,%eax80483a0: d1 f8 sar %eax80483a2: 29 c2 sub %eax,%edx80483a4: 8d 14 52 lea (%edx,%edx,2),%edx80483a7: 85 d2 test %edx,%edx80483a9: 7f f3 jg 804839e &lt;silly+0xa&gt;80483ab: 89 d0 mov %edx,%eax ‰ªéÂèçÊ±áÁºñ‰ª£Á†ÅÊù•ÁúãÔºåË∑≥ËΩ¨Â¶ÇÊûú‰ΩøÁî® PC Áõ∏ÂØπÂú∞ÂùÄÔºåÂàô‰∏çÁÆ°‰ª£Á†ÅÂ≠òÂÇ®Âà∞ÂÜÖÂ≠ò‰∏≠ÁöÑÂì™‰∏™‰ΩçÁΩÆÔºåË∑≥ËΩ¨ÁöÑÂú∞ÂùÄÈÉΩ‰∏çÈúÄË¶Å‰øÆÊîπÔºå‰∏îÈúÄË¶ÅÁöÑÁºñÁ†ÅÊõ¥Áü≠„ÄÇ ÁøªËØëÊù°‰ª∂ÂàÜÊîØ1234if(test-expr) then-statementelse else-statement ÂÖàÂÜôÊàêÁ≠â‰ª∑ÁöÑ goto ÁâàÊú¨ÔºåÁÑ∂ÂêéÂ∞±ÂèØ‰ª•ÂæàËΩªÊùæÁöÑËΩ¨ÊàêÊ±áÁºñ‰∫Ü 12345678t=test-expr;if(!t) goto false; then-statement goto done;false: else-statementdone: ‰ªéÊ±áÁºñÁöÑËßíÂ∫¶Áúã &amp;&amp;Áü≠Ë∑Ø ÂéüÁêÜÔºö 12345void cond(int a, int *p)&#123; if (p &amp;&amp; a &gt; 0) *p += a;&#125; 12345678910a %ebp +8, p at %ebp +12movl 8(%ebp), %edxmovl 12(%ebp), %eaxtestl %eax, %eaxje .L3testl %edx, %edxjle .L3addl %edx, (%eax).L3: ÂèØ‰ª•ÁúãÂà∞Á¨¨‰∏Ä‰∏™Êù°‰ª∂ÈÄö‰∏çËøáÁöÑÊó∂ÂÄôÂ∞±Ë∑≥Ëøá‰∫ÜÁ¨¨‰∫å‰∏™Êù°‰ª∂Âà§Êñ≠„ÄÇ Âæ™ÁéØdo while123do body-statement while(test-expr) goto ÁâàÊú¨Ôºö 12345loop: body-statement t = test-expr; if (t)goto loop; while12while (test-expr) body-statement ÂÖàËΩ¨Êàê do while ÂΩ¢ÂºèÔºö 123456if (!test-expr) goto done;do body-statement while (test-expr);done: Âú®Êää do while ËΩ¨Êàê goto ÁâàÔºö 123456789t = test-expr;if (!t) goto done;loop: body-statement t = test-expr; if (t) goto loop;done: for12for (init-expr; test-expr; update-expr) body-statement ÂÖàËΩ¨Êàê while ÂΩ¢ÂºèÔºö 12345init-expr;while (test-expr) &#123; body-statement update-expr;&#125; ÁÑ∂ÂêéËΩ¨Êàê do while ÂΩ¢ÂºèÔºö 12345678init-expr;if (!test-expr) goto done;do &#123; body-statement update-expr;&#125; while (test-expr);done: ÊúÄÂêéËΩ¨Êàê do while ÁöÑ goto ÁâàÊú¨Ôºö 1234567891011init-expr;t = test-expr;if (!t) goto done;loop: body-statement update-expr; t = test-expr; if (t) goto loop;done: Áä∂ÊÄÅËΩ¨ÁßªÊåá‰ª§ 1v = test-expr ? then-expr : else-expr; goto ÁâàÔºö 1234567if (!test-expr) goto false;v = true-expr;goto done;false: v = else-expr;done: switchswitch ‰∏ªË¶Å‰ΩøÁî®‰∫ÜË∑≥ËΩ¨Ë°®Ôºö 123456789101112131415161718192021int switch_eg(int x, int n) &#123; int result = x; switch (n) &#123; case 100: result *= 13; break; case 102: result += 10; /* Fall through */ case 103: result += 11; break; case 104: case 106: result *= result; break; default: result = 0; &#125; return result;&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142int switch_eg_impl(int x, int n) &#123; /* Table of code pointers */ static void *jt[7] = &#123; &amp;&amp;loc_A, &amp;&amp;loc_def, &amp;&amp;loc_B, &amp;&amp;loc_C, &amp;&amp;loc_D, &amp;&amp;loc_def, &amp;&amp;loc_D &#125;; unsigned index = n - 100; int result; if (index &gt; 6) goto loc_def; /* Multiway branch */ goto *jt[index]; loc_def: /* Default case*/ result = 0; goto done; loc_C: /* Case 103 */ result = x; goto rest; loc_A: /* Case 100 */ result = x * 13; goto done; loc_B: /* Case 102 */ result = x + 10; /* Fall through */ rest: /* Finish case 103 */ result += 11; goto done; loc_D: /* Cases 104, 106 */ result = x * x; /* Fall through */ done: return result;&#125; Ê±áÁºñ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö Ë∑≥ËΩ¨Ë°®ÁöÑÊ≠•ÈïøÊòØ 4 .rodata ÁöÑÊÑèÊÄùÊòØÔºöread only data ËøáÁ®ãË∞ÉÁî® Êúâ‰ª•‰∏ãÂá†‰∏™Ë¶ÅÁÇπÔºö Ê†àÊòØÂÄíÁùÄÈïøÁöÑ ÊØè‰∏™ËøáÁ®ãË∞ÉÁî®ÈÉΩÊúâ‰∏Ä‰∏™ stack frameÔºåÊ†àÂ∏ß Ê†àÈ°∂Â∏ßÁî®‰∏§‰∏™ÊåáÈíàÊù•Áª¥Êä§Ôºå‰∏Ä‰∏™ÊòØÂ∏ßËµ∑ÂùÄÔºö%ebpÔºå‰∏Ä‰∏™ÊòØÊ†àÊåáÈíàÔºö%esp ÊåáÂêëÊ†àÈ°∂„ÄÇ %esp Âú®ËøáÁ®ãËøêË°åÁöÑÊó∂ÂÄôÂèØËÉΩ‰ºöË¢´ÊäπÊéâÔºåËøôÊó∂ÂÄôÂèØ‰ª•ÈÄöËøá%ebp Êù•ÂÆö‰Ωç„ÄÇ ÂèØ‰ª•ÁúãÂà∞ËøîÂõûÂú∞ÂùÄÂú®ÊØè‰∏ÄÂ∏ßÁöÑÊúÄÂêé„ÄÇËÄåÊØè‰∏ÄÂ∏ßÁöÑÁ¨¨‰∏Ä‰∏™‰ΩçÁΩÆÂ≠òÊîæÁùÄ‰∏ä‰∏ÄÂ∏ßÁöÑÂ∏ßËµ∑ÂùÄ%ebp„ÄÇÂ∏ßÁöÑ‰∏≠Èó¥ÂàôÊîæÁΩÆÂ±ÄÈÉ®ÂèòÈáè„ÄÅËøáÁ®ãÂèÇÊï∞Á≠âÂÄº„ÄÇ Êúâ‰ª•‰∏ãÂá†ÁßçÊÉÖÂÜµ‰ºöÂ∞ÜÂ±ÄÈÉ®ÂèòÈáèÊîæÂà∞Ê†àÂ∏ß‰∏≠Ôºö Â±ÄÈÉ®ÂèòÈáèÂ§öÂà∞ÂØÑÂ≠òÂô®Êîæ‰∏ç‰∏ã Â±ÄÈÉ®ÂèòÈáèÊòØÊï∞ÁªÑÊàñËÄÖÁªìÊûÑ‰ΩìÔºåÂøÖÈ°ªÁî®Âà∞ÂºïÁî® Â±ÄÈÉ®ÂèòÈáè‰ΩøÁî®‰∫ÜÂèñÂùÄÁ¨¶&amp;ÔºåÊâÄ‰ª•Êàë‰ª¨ÂøÖÈ°ªÁªôÂÆÉÁîüÊàêÂú∞ÂùÄ ËΩ¨ÁßªÊéßÂà∂ call Êåá‰ª§ÁöÑÊïàÊûúÊòØÔºöÊääËøîÂõûÂú∞ÂùÄ push Âà∞Ê†à‰∏≠ÔºåÁÑ∂ÂêéË∑≥Âà∞Ë∞ÉÁî®Á®ãÂ∫èÁöÑÂú∞ÂùÄÔºà‰πüÂ∞±ÊòØÊää PC ËÆæÁΩÆ‰∏Ä‰∏ãÔºâ„ÄÇËøîÂõûÂú∞ÂùÄÊòØÊ±áÁºñ‰ª£Á†Å‰∏≠ call Êåá‰ª§ÂêéÈù¢ÈÇ£Êù°Êåá‰ª§ÁöÑÂú∞ÂùÄ„ÄÇ ret Êåá‰ª§ÊääÊ†àÈ°∂ÁöÑËøîÂõûÂú∞ÂùÄ pop Âá∫Êù•ÔºåÂπ∂Ë∑≥ËΩ¨Âà∞Ëøô‰∏™Âú∞ÂùÄ„ÄÇ ÂØÑÂ≠òÂô®‰ΩøÁî®‰º†Áªü%eax, %edx, %ecx ÊòØË∞ÉÁî®ËÄÖ‰øùÂ≠òÂØÑÂ≠òÂô®„ÄÇ‰πüÂ∞±ÊòØËØ¥ÂΩìËøáÁ®ã Q Ë¢´ËøáÁ®ã P Ë∞ÉÁî®ÔºåËøáÁ®ã Q ÂèØ‰ª•ÈöèÊÑèÁöÑÂÜôËøô‰∏â‰∏™ÂØÑÂ≠òÂô®ÔºåÂõ†‰∏∫Âú®Ë∞ÉÁî® Q ‰πãÂâç P ÂøÖÈ°ª‰øùÂ≠òËøô‰∏â‰∏™ÂØÑÂ≠òÂô®ÁöÑÂÄº„ÄÇ %ebx, %esi, %edi ÊòØË¢´Ë∞ÉÁî®ËÄÖ‰øùÂ≠òÂØÑÂ≠òÂô®„ÄÇ‰πüÂ∞±ÊòØËØ¥Âú®ËøáÁ®ã Q ÂÜôËøô‰∫õÂØÑÂ≠òÂô®‰πãÂâçÔºåÂøÖÈ°ª‰øùÂ≠òÈáåÈù¢ÁöÑÂÄºÔºåÂπ∂Âú® return ‰πãÂâçÊÅ¢Â§çÂéüÊ†∑„ÄÇ ËøáÁ®ãË∞ÉÁî®‰æãÂ≠ê12345678910111213141516171819int swap_add(int *xp, int *yp)&#123; int x = *xp; int y = *yp; *xp = y; *yp = x; return x + y;&#125;int caller()&#123; int arg1 = 534; int arg2 = 1057; int sum = swap_add(&amp;arg1, &amp;arg2); int diff = arg1 - arg2; return sum * diff;&#125; ‰∏Ä‰∫õÁºñÁ®ãËØ≠Ë®ÄÔºåÊØîÂ¶Ç PascalÔºåÊèê‰æõ‰∫ÜÂÄº‰º†ÂèÇÂíåÂºïÁî®‰º†ÂèÇ„ÄÇ‰ΩÜ C ËØ≠Ë®ÄÂè™ÊúâÂÄº‰º†ÂèÇÔºåC++Êèê‰æõ‰∫ÜÂºïÁî®‰º†ÂèÇ„ÄÇC ËØ≠Ë®ÄÂèØ‰ª•ÈÄöËøáÊåáÈíàÊù•ÂÆûÁé∞ÂºïÁî®‰º†ÂèÇ„ÄÇ ÊÄªÂÖ±Áî≥ËØ∑‰∫Ü 24 Â≠óËäÇÁöÑÁ©∫Èó¥Ôºå8 Â≠óËäÇÁî®Êù•Â≠òÂ±ÄÈÉ®ÂèòÈáèÔºå8 Â≠óËäÇÁî®Êù•Â≠òÂèÇÊï∞ÔºåËøòÊúâ 8 Â≠óËäÇÊú™‰ΩøÁî®„ÄÇ ‰∏∫‰ªÄ‰πàË¶ÅÊµ™Ë¥π 8 Â≠óËäÇÔºåÂéüÂõ†ÊòØÔºöÂÜÖÂ≠òÂØπÈΩê„ÄÇGCC ÈÅµÂæ™‰∏Ä‰∏™ x86 ÁºñÁ®ãÊñπÈíàÔºöÊ†àÁ©∫Èó¥ÂøÖÈ°ªÊòØ 16 ÁöÑÊï¥Êï∞ÂÄçÔºåÂåÖÊã¨‰øùÂ≠ò%ebp ÁöÑ 4 Â≠óËäÇÂíåËøîÂõûÂú∞ÂùÄÁöÑ 4 Â≠óËäÇ„ÄÇËøôÈáåÊÄªÂÖ±Âä†Ëµ∑Êù•ÊòØ 24 Â≠óËäÇÔºåÊâÄ‰ª•ÈúÄË¶ÅÈ¢ùÂ§ñÁöÑ 8 Â≠óËäÇÂ°´ÂÖÖÊàê 32 Â≠óËäÇ„ÄÇ swap_add ÁöÑÊ±áÁºñ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö ÂàÜ‰∏∫‰∏â‰∏™ÈÉ®ÂàÜÔºösetup„ÄÅbody„ÄÅfinish setup: 1234swap_add: pushl %ebp Save old %ebp movl %esp, %ebp Set %ebp as frame pointer pushl %ebx Save %ebx È¶ñÂÖàË¶Å‰øùÂ≠òË∞ÉÁî®ËÄÖÁöÑÂ∏ßÂü∫ÊåáÈíàÔºåÁÑ∂ÂêéÈáçÊñ∞ËÆæÁΩÆÂΩìÂâçÂ∏ßÂü∫ÊåáÈíàÔºåÁÑ∂ÂêéÂ¶ÇÊûúÁî®Âà∞%ebx,%esi,%edi Á≠âÂØÑÂ≠òÂô®Â∞±ÈúÄË¶Å‰øùÂ≠ò„ÄÇ body: 1234567movl 8(%ebp), %edx Get xpmovl 12(%ebp), %ecx Get ypmovl (%edx), %ebx Get xmovl (%ecx), %eax Get ymovl %eax, (%edx) Store y at xpmovl %ebx, (%ecx) Store x at ypaddl %ebx, %eax Return value = x+y Ëé∑ÂèñÂèÇÊï∞ÔºåËøõË°åËÆ°ÁÆó„ÄÇ finish: 123popl %ebx Restore %ebxpopl %ebp Restore %ebpret Return ÊÅ¢Â§ç‰∏§‰∏™ÂØÑÂ≠òÂô®ÔºåÂêåÊó∂%esp ÂõûÂà∞‰∫Ü‰∏ä‰∏Ä‰∏™Â∏ßÁöÑÊ†àÈ°∂ÔºåÊåáÂêë‰∫ÜËøîÂõûÂú∞ÂùÄÔºåÁÑ∂Âêé ret Êåá‰ª§Â∞±ÂèØ‰ª•Êää PC ÁΩÆ‰∏∫ËøîÂõûÂú∞ÂùÄ‰∫ÜÔºåËøôÊ†∑Â∞±ÂÆåÊàê‰∫ÜÊéßÂà∂ÊùÉÁöÑËΩ¨Áßª„ÄÇ ÁÑ∂ÂêéÊâßË°åË∞ÉÁî®ÂÆå swap_add ‰πãÂêéÁöÑ‰ª£Á†ÅÔºö 12345movl -4(%ebp), %edxsubl -8(%ebp), %edximull %edx, %eaxleaveret leave Êåá‰ª§ÁöÑ‰ΩúÁî®ÊòØÈáçÁΩÆÊ†àÊåáÈíàÂíåÂ∏ßÊåáÈíàÔºå‰πüÂèØ‰ª•‰ΩøÁî® popl Êù•ÈáçÁΩÆÔºåÂæàÁÆÄÂçïÔºö 1234//‰Ωø%espÊåáÂêë%ebpÁöÑÂú∞ÂùÄÔºà‰πüÂ∞±ÊòØSaved %ebpÈÇ£ÈáåÔºâmovl %ebp, %esp//poplÊåá‰ª§‰ºöÂØºËá¥%esp+4ÔºåÊâÄ‰ª•%esp‰πãÂêé‰ºöÊåáÂêë‰∏ä‰∏ÄÂ∏ßÁöÑÂ∏ßÂ∞æÔºà‰πüÂ∞±ÊòØReturn AddressÈÇ£ÈáåÔºâÔºåpoplÁöÑÂÜÖÂÆπÂàôÊîæÂà∞‰∫Ü%ebpÈáåÈù¢popl %ebp ËÄå‰πãÂêéÁöÑretÊåá‰ª§ÁªßÁª≠Â∞ÜReturn Address pop Âá∫Êù•ÔºåÂπ∂Â∞ÜReturn AddressÊîæÂà∞ PC ‰∏≠„ÄÇ ‰ªéËøô‰∏™‰æãÂ≠êÊàë‰ª¨ÂèØ‰ª•ÁúãÂá∫ÔºåÁºñËØëÂô®ÈÅµÂæ™‰∏ÄÁªÑÁÆÄÂçïÁöÑÊÉØ‰æãÊù•ÁÆ°ÁêÜÊ†àÁªìÊûÑ„ÄÇ ÈÄöËøá%ebp Âä†ÂÅèÁßªÈáèÔºà+8,+12,...ÔºâËÆøÈóÆÂèÇÊï∞ ÈÄöËøá push Êåá‰ª§ÊàñËÄÖÊ†àÊåáÈíàÂáèÂÅèÁßªÈáèÊù•ÂàÜÈÖçÊ†àÁ©∫Èó¥ Âú®ËøîÂõûÂâçÊÅ¢Â§ç‰øùÂ≠òÂ•ΩÁöÑÂØÑÂ≠òÂô®ÔºåÂπ∂‰ΩøÊ†àÊåáÈíàÊåáÂêëË∞ÉÁî®ËÄÖÁöÑËøîÂõûÂú∞ÂùÄÔºàReturn AddressÔºâ Êï∞ÁªÑ„ÄÅÂ§öÁª¥Êï∞ÁªÑ„ÄÅÁªìÊûÑ‰Ωì„ÄÅËÅîÂêà‰ΩìËøô‰∫õÈÉΩÊØîËæÉÁÆÄÂçïÔºåËøôÈáåÁï•Ëøá„ÄÇ Ë¶ÅÊ≥®ÊÑèÁöÑÁÇπÔºöÂè™Êúâ call Êâç‰ºö push ‰∏Ä‰∏™ËøîÂõûÂú∞ÂùÄÔºåÊâÄ‰ª• swap_add ÁöÑÊ†àÂ∏ß‰∏≠Âπ∂Ê≤°ÊúâËøîÂõûÂú∞ÂùÄÔºåËØ¥ÊòéÂÆÉÊ≤°ÊúâË∞ÉÁî®ÂÖ∂‰ªñÂáΩÊï∞ ÊåáÈíàÊØèÁßçÊï∞ÊçÆÁ±ªÂûãÈÉΩÊúâÂØπÂ∫îÁöÑÊåáÈíàÁ±ªÂûãÔºå‰ΩÜÊåáÈíàÁ±ªÂûã‰∏çÊòØÊú∫Âô®Á†ÅÁöÑ‰∏ÄÈÉ®ÂàÜÔºåÂè™ÊòØ C ËØ≠Ë®ÄÊèê‰æõÁöÑ‰∏ÄÁßçÊäΩË±°ÔºåÂ∏ÆÂä©Á®ãÂ∫èÂëòÈÅøÂÖçÁäØÈîô„ÄÇ ÂÜÖÂ≠òÂºïÁî®Ë∂äÁïåÂíåÁºìÂÜ≤Âå∫Ê∫¢Âá∫Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ C ËØ≠Ë®ÄÂØπÊï∞ÁªÑÂºïÁî®Ê≤°Êúâ‰ªª‰ΩïËæπÁïåÊ£ÄÊü•ÔºåËÄå‰∏îÊ†àÈáåÈù¢Êó¢‰øùÂ≠ò‰∫ÜÂ±ÄÈÉ®ÂèòÈáèÂèà‰øùÂ≠ò‰∫ÜÂØÑÂ≠òÂô®ÂÄº‰ª•ÂèäËøîÂõûÂú∞ÂùÄ„ÄÇÊâÄ‰ª•‰∏ÄÊó¶Êï∞ÁªÑË∂äÁïåÂÜôÂ∞±‰ºöÁ†¥ÂùèÊï¥‰∏™Á®ãÂ∫èÁöÑËøêË°å„ÄÇ Áúã‰∏ãÈù¢Ëøô‰∏™‰æãÂ≠êÔºö 1234567891011121314151617181920212223/* Sample implementation of library function gets() */char *gets(char *s)&#123; int c; char *dest = s; int gotchar = 0; /* Has at least one character been read? */ while ((c = getchar()) != '\n' &amp;&amp; c != EOF) &#123; *dest++ = c; /* No bounds checking! */ gotchar = 1; &#125; *dest++ = '\0'; /* Terminate string */ if (c == EOF &amp;&amp; !gotchar) return NULL; /* End of file or error */ return s;&#125;/* Read input line and write it back */void echo()&#123; char buf[8]; /* Way too small! */ gets(buf); puts(buf);&#125; ËøôÊÆµ C ËØ≠Ë®Ä‰ª£Á†ÅÂØπÂ∫îÁöÑÊ±áÁºñ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö ÂàÜÈÖçÊï∞ÁªÑÁ©∫Èó¥ÁöÑÊó∂ÂÄôÊòØÁõ¥Êé•Âõ∫ÂÆö‰∫Ü 8 Â≠óËäÇÔºåËøôÈáåÁªô buf ÂàÜÈÖçÁöÑÁ©∫Èó¥‰πüÊòØ 8 Â≠óËäÇÔºöleal -12(%ebp), %ebxÔºåÂπ∂Êää buf ‰Ωú‰∏∫ÂèÇÊï∞ÊîæÁΩÆ‰∫éÊ†àÈ°∂„ÄÇ Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ÔºåÂΩìËØªÂÜô buf[8]ÁöÑÊó∂ÂÄôÔºåÂÆûÈôÖ‰∏äÊòØÂú®ËØªÂÜôSaved %ebx„ÄÇ ÈÄöÂ∏∏ÁªôË¢´ÊîªÂáªÁöÑÁ®ãÂ∫èËæìÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåËøô‰∏™Â≠óÁ¨¶‰∏≤ÂåÖÂê´‰∫ÜÂèØÊâßË°å‰ª£Á†ÅÁöÑÂ≠óËäÇÁºñÁ†ÅÔºåÂ¶ÇÊûúÊàë‰ª¨ÈÄöËøáÁºìÂÜ≤Âå∫Ê∫¢Âá∫‰øÆÊîπ‰∫ÜËøîÂõûÂú∞ÂùÄÔºåÈÇ£‰πà ret Êåá‰ª§Â∞±ÂèØ‰ª•Ë∑≥ËΩ¨Âà∞Êàë‰ª¨ÊîªÂáª‰ª£Á†ÅÁöÑ‰ΩçÁΩÆ„ÄÇ Ë†ïËô´ÔºàwormsÔºâÂíåÁóÖÊØíÔºàvirusesÔºâÁöÑÂå∫Âà´ÔºöÁõ∏ÂêåÁÇπÔºöÈÉΩÂèØ‰ª•Â§çÂà∂Âíå‰º†Êí≠Ëá™Ë∫´Ôºå‰∏çÂêåÁÇπÔºöË†ïËô´ÂèØ‰ª•Ëá™Â∑±ËøêË°åÔºåÁóÖÊØíÊòØÊääËá™Â∑±Âä†ÂÖ•Âà∞ÂÖ∂‰ªñÁ®ãÂ∫è‰∏≠ÔºåÂåÖÊã¨Êìç‰ΩúÁ≥ªÁªü‰ª£Á†ÅÔºåÁóÖÊØíÊòØ‰∏çËÉΩÁã¨Á´ãËøêË°åÁöÑ„ÄÇ ÂØπÊäóÁºìÂÜ≤Âå∫Ê∫¢Âá∫ÊîªÂáªÁöÑÊñπÊ≥ïÊ†àÈöèÊú∫ÂåñÊîªÂáªËÄÖÈúÄË¶ÅÊèíÂÖ•ÊîªÂáª‰ª£Á†ÅÔºà‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºâÔºåÂπ∂Áü•ÈÅìÊîªÂáª‰ª£Á†ÅÁöÑ‰ΩçÁΩÆÔºà‰πüÂ∞±ÊòØÂ≠óÁ¨¶‰∏≤Â≠òÊîæÁöÑÊ†àÂú∞ÂùÄÔºâÔºåËÄå‰∏îÊåáÂêëËøôÊÆµÂ≠óÁ¨¶‰∏≤ÁöÑÊåáÈíà‰πüÊòØËøô‰∏™Â≠óÁ¨¶‰∏≤ÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇÂ¶ÇÊûúÊ†àÁöÑ‰ΩçÁΩÆÊòØÂõ∫ÂÆöÁöÑÔºåÈÇ£‰πàÂ∞±ÂæàÂÆπÊòìÁåúÂà∞ÊîªÂáª‰ª£Á†ÅÁöÑÂ≠òÊîæ‰ΩçÁΩÆ„ÄÇÁî®Â¶Ç‰∏ã‰ª£Á†ÅÂèØ‰ª•Ê£ÄÊµãÊ†àÁöÑ‰ΩçÁΩÆÔºö 12345int main() &#123; int local; printf("local at %p\n", &amp;local); return 0;&#125; Âè™ÈúÄË¶ÅÊâìÂç∞‰∏Ä‰∏™Â±ÄÈÉ®ÂèòÈáèÁöÑÂú∞ÂùÄ„ÄÇ Ê†àÈöèÊú∫ÂåñÁöÑÊÄùÊÉ≥ÊòØÁ®ãÂ∫èÊØèÊ¨°ËøêË°åÊó∂Ê†àÁöÑ‰ΩçÁΩÆÈÉΩ‰∏ç‰∏ÄÊ†∑ÔºåÂÆûÁé∞ÊñπÂºèÊòØÔºöÁ®ãÂ∫èÂºÄÂßãÊó∂ÔºåÂú®Ê†à‰∏äÂàÜÈÖç‰∏ÄÊÆµ 0~n Â≠óËäÇ‰πãÈó¥ÁöÑÈöèÊú∫Â§ßÂ∞èÁöÑÁ©∫Èó¥Ôºå‰æãÂ¶Ç‰ΩøÁî®allocaÂèØ‰ª•Âú®Ê†à‰∏äÂàÜÈÖçÁ©∫Èó¥„ÄÇÁ®ãÂ∫è‰∏ç‰ΩøÁî®ËøôÊÆµÁ©∫Èó¥ÔºåÂÆÉÁöÑ‰ΩúÁî®ÊòØ‰ΩøÂêéÁª≠Ê†àÁöÑ‰ΩçÁΩÆÂèëÁîüÂèòÂåñ„ÄÇÂàÜÈÖçÁöÑ n ÂøÖÈ°ªË∂≥Â§üÂ§ßÔºåËøôÊ†∑ÊâçËÉΩÊúâË∂≥Â§üÂ§öÁöÑÂèòÂåñÔºå‰ΩÜÂèàÂøÖÈ°ªË∂≥Â§üÂ∞èÔºåËøôÊ†∑Êâç‰∏ç‰ºöÊµ™Ë¥πÁ©∫Èó¥„ÄÇ Ê†àÈöèÊú∫ÂåñÊòØÊõ¥Â§ß‰∏ÄÁ±ªÊäÄÊúØÁöÑ‰∏ÄÁßçÔºåËøôÁ±ªÊäÄÊúØÁß∞‰∏∫ÔºöAddress-Space Layout RandomizationÔºåASLRÔºåÂú∞ÂùÄÁ©∫Èó¥Â∏ÉÂ±ÄÈöèÊú∫Âåñ„ÄÇ‰ΩÜÊîªÂáªËÄÖËøòÊòØÂèØ‰ª•ÈááÂèñ‰∏ÄÂÆöÊé™ÊñΩÊù•Â¢ûÂä†ÊîªÂáªÊàêÂäüÁéáÔºå‰∏ÄÁßçÂ∏∏ËßÅÁöÑÊâãÊÆµÂ∞±ÊòØÂú®ÊîªÂáª‰ª£Á†ÅÂâç‰∏≠ÊèíÂÖ•ÂæàÈïø‰∏ÄÊÆµÁöÑnopÊåá‰ª§ÔºåËøô‰∏™Êåá‰ª§Âè™‰ºö‰ΩøÁ®ãÂ∫èËÆ°Êï∞Âô®ÔºàPCÔºâÂä†‰∏ÄÔºåÈô§Ê≠§‰πãÂ§ñÊ≤°Êúâ‰ªª‰ΩïÂâØ‰ΩúÁî®„ÄÇÂè™Ë¶ÅÊîªÂáªËÄÖËÉΩÂ§üÁåú‰∏≠ËøôÊÆµÂ∫èÂàó‰∏≠ÁöÑÊüê‰∏™Âú∞ÂùÄÔºåÂ∞±ÂèØ‰ª•È°∫Âà©Âà∞ËææÊîªÂáª‰ª£Á†Å„ÄÇËøô‰∏™Â∫èÂàóÁöÑÂ∏∏Áî®ÊúØËØ≠ÊòØÔºönop sled Á©∫Êìç‰ΩúÈõ™Ê©á„ÄÇ Ê†àÁ†¥ÂùèÊ£ÄÊµãÂú®Â±ÄÈÉ®ÁºìÂÜ≤Âå∫ÂíåÊ†àÁä∂ÊÄÅ‰πãÈó¥ÊèíÂÖ•‰∏Ä‰∏™ÈöèÊú∫ÁöÑÈáë‰∏ùÈõÄÂÄºÔºà‰πüÂè´Âì®ÂÖµÂÄºÔºâÔºå‰∏ÄÊó¶ÂèëÁé∞Ëøô‰∏™ÂÄºË¢´ÊîπÂèòÔºåÂ∞±ËØ¥ÊòéÁºìÂÜ≤Âå∫Ê∫¢Âá∫‰∫ÜÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•Â∞ÜÁ®ãÂ∫èÂºÇÂ∏∏‰∏≠Ê≠¢„ÄÇ ÊîªÂáªËÄÖÂè™ÊúâËæìÂÖ•Â±ÄÈÉ®ÁºìÂÜ≤Âå∫ÂèòÈáèÁöÑÊùÉÈôêÔºåÊâÄ‰ª•Êó†‰ªéÂæóÁü•Èáë‰∏ùÈõÄÂÄº„ÄÇ GCC ÈªòËÆ§Â∞±‰ºöÊèíÂÖ•Èáë‰∏ùÈõÄÂÄºÔºåÂ¶ÇÊûú‰∏çÊÉ≥Ë¶ÅÂèØ‰ª•‰ΩøÁî®ÂèÇÊï∞Ôºö-fno-stack-protectorÊù•ÈòªÊ≠¢ GCC ‰∫ßÁîüËøôÁßç‰ª£Á†Å„ÄÇÂΩì‰∏ç‰ΩøÁî®Ê≠§ÂèÇÊï∞Êó∂Ôºå‰∫ßÁîü‰ª£Á†ÅÂ¶Ç‰∏ãÔºö Êåá‰ª§ÂèÇÊï∞%gs20, %eaxÊåáÊòéÈáë‰∏ùÈõÄÂÄº‰ΩøÁî® segmented addressingÔºàÊÆµÂØªÂùÄÔºâ‰ªéÂ≠òÂÇ®Âô®‰∏≠ËØªÂÖ•„ÄÇÂ∞ÜÊÆµÊ†áÂøó‰∏∫Âè™ËØªÔºåËøôÊ†∑ÊîªÂáªËÄÖÂ∞±‰∏çËÉΩÂêåÊó∂‰øÆÊîπÊÆµ‰∏≠ÁöÑÈáë‰∏ùÈõÄÂÄº„ÄÇÊúÄÂêé‰ΩøÁî®xorlÊØîËæÉÊÆµÂíåÊ†à‰∏≠ÁöÑÈáë‰∏ùÈõÄÂÄºÔºåÂ¶ÇÊûú‰∏çÁõ∏Á≠âÂàôcall __stack_chk_fail„ÄÇ ËøôÁßçÂÅöÊ≥ïÂèØ‰ª•Â∏¶Êù•ÂæàÂ∞èÁöÑÊÄßËÉΩÊçüÂ§±„ÄÇ ÈôêÂà∂ÂèØÊâßË°å‰ª£Á†ÅÂå∫ÂüüÂú®ÂÖ∏ÂûãÁöÑÁ®ãÂ∫è‰∏≠ÔºåÂè™Êúâ‰øùÂ≠òÁºñËØëÂô®‰∫ßÁîüÁöÑ‰ª£Á†ÅÁöÑÈÇ£‰∏ÄÈÉ®ÂàÜÂ≠òÂÇ®Á©∫Èó¥ÊâçÈúÄË¶ÅÊòØÂèØÊâßË°åÁöÑ„ÄÇÂÖ∂‰ªñÈÉ®ÂàÜÂèØ‰ª•Ë¢´ÈôêÂà∂‰∏∫Âè™ÂÖÅËÆ∏ËØªÂÜô„ÄÇËôöÊãüÂ≠òÂÇ®Âô®Á©∫Èó¥Âú®ÈÄªËæë‰∏äÂàÜÊàê‰∫ÜÈ°µÔºàpageÔºâÔºåÂÖ∏ÂûãÁöÑÊØèÈ°µÊòØ 2048 ÊàñËÄÖ 4096 Â≠óËäÇ„ÄÇÁî±Á°¨‰ª∂Êèê‰æõÂ≠òÂÇ®Âô®‰øùÊä§„ÄÇ‰ª•ÂâçÔºåx86 ‰ΩìÁ≥ªÁªìÊûÑÂ∞ÜËØªÂíåÊâßË°åËÆøÈóÆÊéßÂà∂ÂêàÂπ∂Êàê‰∏Ä‰∏™ 1 ‰ΩçÊ†áÂøóÔºåÊâÄ‰ª•‰ªª‰ΩïË¢´Ê†áËÆ∞‰∏∫ÂèØËØªÁöÑÈÉ®ÂàÜ‰πüÊòØÂèØÊâßË°åÁöÑÔºåÂΩìÁÑ∂‰πüÊúâÂæàÂ§öÊú∫Âà∂ÂèØ‰ª•ÈôêÂà∂‰∏Ä‰∫õÈ°µÊòØÂèØËØªÁöÑ‰ΩÜÊòØ‰∏çÂèØÊâßË°åÔºåÁÑ∂ËÄåËøô‰∫õÊú∫Âà∂ÈÉΩÂæàÊ∂àËÄóÊÄßËÉΩ„ÄÇÊúÄËøëÔºåAMDÔºàAdvanced Micro DevicesÔºâ‰∏∫ÂÆÉÁöÑ 64 ‰ΩçÂ§ÑÁêÜÂô®ÁöÑÂÜÖÂ≠òÂä†ÂÖ•‰∫Ü NX, No-eXecuteÔºå‰∏çÂèØÊâßË°å‰ΩçÔºåintel ‰πüË∑üËøõ‰∫ÜÔºåÊ£ÄÊü•È°µÊòØÂê¶ÂèØÊâßË°åÁî±Á°¨‰ª∂Êù•ÂÆåÊàêÔºåÊïàÁéá‰∏äÊ≤°Êúâ‰ªª‰ΩïÊçüÂ§±„ÄÇ]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊµÆÁÇπÊï∞ÂéüÁêÜ]]></title>
    <url>%2Fblog%2F2018%2F09%2F27%2F%E6%B5%AE%E7%82%B9%E6%95%B0%E5%8E%9F%E7%90%86%2F</url>
    <content type="text"><![CDATA[ÊµÆÁÇπÊï∞ÁöÑ‰ΩúÁî®ÔºöÂå∫Âà´‰∫éÊï¥ÂΩ¢Êï∞ÔºåÁî®Êù•Ë°®Á§∫Â∞èÊï∞„ÄÇÂèØ‰ª•Áî®Êù•Ë°®Á§∫ÂæàÂ§ßÁöÑÊï∞ÔºåÊàñËÄÖÈùûÂ∏∏Êé•Ëøë 0 ÁöÑÂ∞èÊï∞ÔºåÊàñËÄÖËøë‰ººÁöÑÂÅöÂÆûÊï∞ËÆ°ÁÆóÔºåÊµÆÁÇπÊï∞ÁöÑ‰∏ÄËà¨ÂΩ¢ÂºèÔºö$x\times 2^y$„ÄÇ IEEEÔºàpronounced ‚ÄúEye-Triple-Eee‚ÄùÔºâÊµÆÁÇπÊï∞Ê†áÂáÜ ÊòØË°å‰∏öÂÜÖÂÖ¨ËÆ§ÁöÑÊ†áÂáÜ„ÄÇ roundingÔºöwhen a number cannot be represented exactly in the format and hence must be adjusted upward or downward„ÄÇÂèØ‰ª•ÁøªËØë‰∏∫ÔºöËàçÂÖ•„ÄÇ ÂçÅËøõÂà∂ÁöÑÂ∞èÊï∞Ë°®Á§∫Ôºö$d_m d_{m-1} \cdots d_1 d_0 . d_{-1} d_{-2} \cdots d_{-n}$ÔºåÂÜôÊàêÊï∞Â≠¶Ë°®ËææÂºèÔºö $$d = \sum_{i=-n}^m 10^i \times d_i$$ Áõ∏Â∫îÁöÑÔºå‰∫åËøõÂà∂‰πüÂèØ‰ª•ÂÜôÊàêËøôÁßçÂΩ¢ÂºèÔºö $$b = \sum_{i=-n}^m 2^i \times b_i$$ ÊµÆÁÇπÊï∞ÁöÑË°®Á§∫IEEE ÊµÆÁÇπÊï∞ÁöÑÊ†ºÂºèÔºö$V = (-1)^s \times M \times 2^E$ s ÊòØÁ¨¶Âè∑ÔºàSignÔºâÔºås ‰∏∫ 0 Êó∂ÊòØÊ≠£Ôºås ‰∏∫ 1 Êó∂ÊòØË¥ü M ÊòØÊúâÊïàÊï∞Â≠óÔºàSignificandÔºåÂç≥ Â∞æÊï∞Ôºâ E ÊòØ ÊåáÊï∞ÔºåExponentÔºå‰πüÂè´ ÂπÇÊï∞ÔºåÈò∂Á†Å ÈöêÂê´ÁöÑ Âü∫Êï∞ ÊòØ 2 ‰∏ãÂõæÊòØÊµÆÁÇπÊï∞ÁöÑÂÜÖÂ≠òÂàÜÂ∏ÉÊ®°ÂûãÔºåÈ¶ñÂÖàÊòØÁ¨¶Âè∑ÂüüÔºåÁÑ∂ÂêéÊòØÊåáÊï∞ÂüüÔºåÊúÄÂêéÊòØÂàÜÊï∞ÂüüÔºö Á¨¶Âè∑‰Ωç s ‰∏™ÔºåÁ¨¶Âè∑‰ΩçÂè™ÈúÄË¶Å‰∏Ä‰ΩçÔºås=1 ÊåáÊï∞‰Ωç k ‰∏™ÔºåÊåáÊï∞Âüü $exp=e_{k-1}\cdots e_1 e_0$ÔºåÁî®Êù•ËÆ°ÁÆóÊåáÊï∞ E ÂàÜÊï∞‰∏∫ n ‰∏™ÔºåÂàÜÊï∞Âüü $frac=f_{n-1}\cdots f_1 f_0$ÔºåÁî®Êù•ËÆ°ÁÆóÊúâÊïàÊï∞Â≠ó M 32 ‰ΩçÊµÆÁÇπÊï∞ÔºàÂçïÁ≤æÂ∫¶Ôºåfloat ÂûãÔºâ‰∏≠Ôºås=1Ôºåk=8Ôºån=23Ôºõ64 ‰ΩçÊµÆÁÇπÊï∞ÔºàÂèåÁ≤æÂ∫¶Ôºådouble ÂûãÔºâ‰∏≠Ôºås=1Ôºåk=11Ôºån=52„ÄÇ Ê≠£Â∏∏ÂåñÂÄºÔºàNormalized ValuesÔºâÂΩì $exp$ ÂüüÊó¢‰∏çÊòØÂÖ® 0Ôºå‰πü‰∏çÊòØÂÖ® 1 ÁöÑÊó∂ÂÄôÔºåÂ∞±ÊòØÊ≠£Â∏∏ÂåñÂÄº„ÄÇ $E = e - Bias$ÔºåÂÖ∂‰∏≠ $e$ Â∞±ÊòØ $exp$ ÂüüÔºö$e_{k-1}\cdots e_1e_0$ ÁöÑÂÄºÔºàÈô§ÂéªÂÖ® 0 ÂíåÂÖ® 1 ‰πãÂêéÔºåÂèñÂÄºËåÉÂõ¥ÊòØ 1 Âà∞$2^k-2$ÔºâÔºå$Bias=2^{k-1}-1$ÔºàÂçïÁ≤æÂ∫¶ÁöÑÊó∂ÂÄôÊòØ 127ÔºåÂèåÁ≤æÂ∫¶ÁöÑÊó∂ÂÄôÊòØ 1023ÔºâÔºåÈÇ£‰πà $E$ ÁöÑÂèñÂÄºËåÉÂõ¥ÔºåÂçïÁ≤æÂ∫¶ÁöÑÊó∂ÂÄôÊòØÔºö-126 ~ +127ÔºåÂèåÁ≤æÂ∫¶ÁöÑÊó∂ÂÄôÊòØÔºö-1022 ~ +1023ÔºåÂÖ∂ÂÆû $E$ ÁöÑÁÆóÊ≥ïÂ∞±ÊòØ ÁßªÁ†Å ÁöÑËÆ°ÁÆóÊñπÊ≥ï„ÄÇ $M = 1+f$Ôºå$0\le f\lt 1$ÔºåÂÜÖÂ≠òÈáåÂè™ËÆ∞ÂΩï fÔºåËÄå 1 ‰Ωú‰∏∫‰∏Ä‰∏™ÂâçÂØºÂÄºËÆ°ÁÆóÊó∂ÂÄôÂÜçÂä†‰∏äÔºåÊâÄ‰ª• f ÊòØÂàÜÊï∞Âüü $frac$ ÁöÑ $0.f_{n-1}\cdots f_1f_0$ ËøôÁßçÂΩ¢Âºè ÈùûÊ≠£Â∏∏ÂåñÂÄºÔºàDenormalized ValuesÔºâÂΩìÊåáÊï∞ÂüüÂÖ® 0ÔºåÂ∞±ÊòØÈùûÊ≠£Â∏∏ÂåñÊ†ºÂºè„ÄÇ Âú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºåÊåáÊï∞ÂÄºÊòØ $E = 1-Bias$Ôºå‰πüÂ∞±ÊòØÂõ∫ÂÆö‰∫ÜÔºåÊúâÊïàÊï∞Â≠óÂÄº $M = f$ ‰πüÂ∞±ÊòØÊ≤°ÊúâÂâçÂØº 1 ‰∫Ü„ÄÇËøô‰∏™Ê†ºÂºè‰∏ãÂèØ‰ª•Ë°®Á§∫ 0ÔºåÂõ†‰∏∫Ê≠£Â∏∏ÂåñÂÄº‰∏≠Ôºå‰∏ÄÂÆöÊúâÔºö $M\ge 1$ÔºåÊâÄ‰ª•Êàë‰ª¨Êó†Ê≥ïÂú®Ê≠£Â∏∏ÂåñÂÄºÊ†ºÂºè‰∏ãË°®Á§∫ 0„ÄÇÂΩìÁ¨¶Âè∑‰ΩçÊòØ 0ÔºåÊúâÊïàÊï∞Â≠ó $M=f=0$ÔºåÊàë‰ª¨ÂæóÂà∞ÁöÑÂ∞±ÊòØ+0.0ÔºåÂΩìÁ¨¶Âè∑‰ΩçÊòØ 1 ÁöÑÊó∂ÂÄôÂ∞±ÊòØ-0.0„ÄÇ Èô§‰∫ÜÂèØ‰ª•Ë°®Á§∫ 0ÔºåËøô‰∏™Ê†ºÂºèÁöÑÂè¶‰∏Ä‰∏™‰ΩúÁî®Â∞±ÊòØÁî®Êù•Ë°®Á§∫ÈùûÂ∏∏Êé•Ëøë 0 ÁöÑÊï∞„ÄÇ ÁâπÊÆäÂÄºÔºàSpecial ValuesÔºâÂΩìÊåáÊï∞ÂüüÂÖ® 1 ÁöÑÊó∂ÂÄôÔºå‰∏îÂàÜÊï∞ÂüüÊòØÂÖ® 0ÔºåÂ∞±Ë°®Á§∫Êó†Á©∑Â§ßÔºåÂ¶ÇÊûúÁ¨¶Âè∑Âüü‰∏∫ 0ÔºåË°®Á§∫ $+\infty$ÔºåÂ¶ÇÊûúÁ¨¶Âè∑‰ΩçÊòØ 1ÔºåÂàôË°®Á§∫ $-\infty$„ÄÇÊó†Á©∑Â§ßÂèØ‰ª•‰Ωú‰∏∫Ê∫¢Âá∫ÁöÑÁªìÊûúÔºåÂΩìÊàë‰ª¨Áî®‰∏§‰∏™ÂæàÂ§ßÁöÑÊï∞Áõ∏‰πòÔºåÊàñËÄÖÈô§‰ª• 0Ôºõ ÂΩìÊåáÊï∞ÂüüÂÖ® 1Ôºå‰∏îÂàÜÊï∞ÂüüÂπ∂ÈùûÂÖ® 0 ÁöÑÊó∂ÂÄôÔºåÁªìÊûúÂèØ‰ª•Âè´ÂÅöÔºöNaNÔºàNot a Number ÁöÑÁÆÄÂÜôÔºâÔºåËøôÁßçÂÄºÁî®Êù•Ë°®Á§∫‰∏çËÉΩÁî®ÂÆûÊï∞ÊàñËÄÖÊó†Á©∑Â§ßË°®Á§∫ÁöÑËÆ°ÁÆóÁªìÊûúÔºåÊØîÂ¶ÇËÆ°ÁÆóÔºö$\sqrt{-1}$ ÊàñËÄÖ $\infty - \infty$„ÄÇ ÁªºÂêàÁêÜËß£‰∏ãÂõæÊòØ‰∏âÁ±ªÊµÆÁÇπÊï∞Âú®Êï∞ËΩ¥‰∏äÁöÑÊòæÁ§∫Ôºö ÂèØ‰ª•ÁúãÂà∞ÈùûÊ≠£Â∏∏ÂåñÂÄºÈõÜ‰∏≠Âú® 0 ÈôÑËøëÔºåÊ≠£Â∏∏ÂåñÂÄºÊï£Â∏ÉÂú®Êï¥‰∏™Êï∞ËΩ¥ÁöÑÁ©∫Èó¥ÔºåÁâπÊÆäÂÄºÂàôÂè™Ë°®Á§∫‰∏§‰∏™Êó†Á©∑ÂÄº„ÄÇ ‰∏ãÂõæÊòØÊµÆÁÇπÊï∞‰∏âÁßçÁ±ªÂûãÁöÑÂÖâÊªëË°îÊé•Ôºö ÁúãÂÆåÊµÆÁÇπÊï∞ÁöÑËÆæËÆ°ÂíåÊûÑÈÄ†Êàë‰ª¨ÂèØ‰ª•ÂèëÁé∞‰ª•‰∏ãËøô‰∫õÁâπÁÇπÔºö ‰ªéÁºñÁ†Å‰∏äÊúâÊïàÊï∞Â≠óÂüüÈááÁî®‰∫ÜÊó†Á¨¶Âè∑Êï¥Êï∞ÁºñÁ†ÅÔºåËÄåÊåáÊï∞ÂüüÈááÁî®‰∫ÜÁßªÁ†ÅÁºñÁ†Å ÈùûÊ≠£Â∏∏ÂåñÂÄºÂùáÂåÄÂàÜÂ∏ÉÂú® 0 ÈôÑËøë Ê≠£Â∏∏ÂåñÂÄºÁöÑÈó¥ÈöîÈöèÁùÄ $2^E$ ÂèòÂ§ßËÄåÈÄêÊ∏êÂèòÂ§ßÔºå‰πüÂ∞±ÊòØÁ≤æÂ∫¶ÈÄêÊ∏êÈôç‰Ωé Á≤æÂ∫¶ÊòØÂàÜÁªÑÁöÑÔºå‰ª• $2^E$ Â¢ûÂä† 1 ‰∏∫‰∏ÄÁªÑÔºåÊØèÁªÑÊúâ $2^n$ ‰∏™Êï∞Ôºàn ÊòØÊúâÊïàÊï∞Â≠óÂüüÁöÑ‰ΩçÊï∞Ôºâ ÊúÄÈ´òÁ≤æÂ∫¶Â∞±ÊòØ‰∏§‰∏™ÈùûÊ≠£Â∏∏ÂåñÂÄºÁöÑÈó¥ÈöîÔºåÊúÄ‰ΩéÁ≤æÂ∫¶ÊòØÊúÄÂ§ßÁöÑ‰∏ÄÁªÑÊ≠£Â∏∏ÂåñÂÄºÁöÑÁõ∏ÈÇª‰∏§Êï∞ÁöÑÈó¥Èöî„ÄÇ ÈùûÊ≠£Â∏∏ÂåñÂÄºÊåâÁÖßÁ≤æÂ∫¶Âè™Âç†‰∏ÄÁªÑÔºåÊ≠£Â∏∏ÂåñÂÄºÁöÑÊï∞ÈáèÊòØÈùûÊ≠£Â∏∏ÂåñÂÄºÊï∞ÈáèÁöÑ $2^{k}-2$ ÂÄç Ê≠£Â∏∏ÂåñÂÄºÁöÑÁ¨¨‰∏ÄÁªÑÁöÑÁ≤æÂ∫¶ÂíåÈùûÊ≠£Â∏∏ÂåñÂÄºÁöÑÁ≤æÂ∫¶‰∏ÄÊ†∑Ôºå‰πüÂ∞±ÊòØÂÆûÁé∞‰∫ÜÊó†ÁºùË°îÊé• ÊµÆÁÇπÊï∞ÁöÑËÆ°ÁÆóËàçÂÖ• Rounding Áª¥Âü∫ÁôæÁßë ÂêÑÁßç Rounding ÂêàÈõÜÂõæ ÊµÆÁÇπÊï∞‰∏≠‰ΩøÁî®ÁöÑÊòØÔºöËàçÂÖ•Âà∞ÊúÄËøëÁöÑÂÅ∂Êï∞ÔºåÂõ†‰∏∫ËàçÂÖ•ÁªìÊûúÊîæÂ§ßÂíåÁº©Â∞èÂêÑÂç† 50%ÁöÑÊ¶ÇÁéáÔºåËøôÊ†∑Â∞±ÂèØ‰ª•Èò≤Ê≠¢ÊúÄÁªàÁªìÊûúÂÅèÂ§ßÊàñËÄÖÂÅèÂ∞è„ÄÇ ‰∏ãÈù¢ÊòØÊääÊµÆÁÇπÊï∞ËàçÂÖ•Âà∞Â∞èÊï∞ÁÇπÂêé‰∏§‰ΩçÊï∞Ôºö $10.00011_2(2\frac{3}{32})$ -&gt; $10.00_2(2)$ ‰∏çÂà∞‰∏ÄÂçäÔºåÊ≠£Â∏∏ÂõõËàç‰∫îÂÖ•$10.00110_2(2\frac{3}{16})$ -&gt; $10.01_2(2\frac{1}{4})$ Ë∂ÖËøá‰∏ÄÂçäÔºåÊ≠£Â∏∏ÂõõËàç‰∫îÂÖ•$10.11100_2(2\frac{7}{8})$ -&gt; $11.00_2(3)$ Ê≠£Â•Ω‰∏ÄÂçäÔºå‰øùËØÅÊúÄÂêé‰∏Ä‰ΩçÊòØÂÅ∂Êï∞ÔºåÊâÄ‰ª•Âêë‰∏äËàçÂÖ•$10.10100_2(2\frac{5}{8})$ -&gt; $10.10_2(2\frac{1}{2})$ Ê≠£Â•Ω‰∏ÄÂçäÔºå‰øùËØÅÊúÄÂêé‰∏Ä‰ΩçÊòØÂÅ∂Êï∞ÔºåÊâÄ‰ª•Âêë‰∏ãËàçÂÖ• ÊµÆÁÇπÊï∞Âä†ÂáèËøêÁÆóÂü∫Êú¨ÊÄßË¥® Áõ∏Âä†ÂèØËÉΩ‰∫ßÁîü infinity ÊàñËÄÖ NaN ‰∏çÊª°Ë∂≥‰∫§Êç¢ÂæãÔºå‰∏çÊª°Ë∂≥ÁªìÂêàÂæãÔºàÂõ†‰∏∫ËàçÂÖ•‰ºöÈÄ†ÊàêÁ≤æÂ∫¶‰∏äÁöÑÊçüÂ§±Ôºâ Âä†‰∏ä 0 Á≠â‰∫éÂéüÊù•ÁöÑÊï∞ Èô§‰∫Ü infinity Âíå NaNÔºåÊØè‰∏™ÂÖÉÁ¥†ÈÉΩÊúâÂØπÂ∫îÁöÑÁõ∏ÂèçÊï∞ Èô§‰∫Ü infinity Âíå NaNÔºåÊª°Ë∂≥ÂçïË∞ÉÊÄßÔºåÂç≥ $a\ge b \rightarrow a+c\ge b+c$ 1234567891011121314#include &lt;iostream&gt;using namespace std;int main()&#123; // ÊµÆÁÇπÊï∞Âä†Ê≥ï‰∏çÊª°Ë∂≥‰∫§Êç¢Âæã cout &lt;&lt; 3.14 + 1e20 - 1e20 &lt;&lt; endl; cout &lt;&lt; 1e20 - 1e20 + 3.14 &lt;&lt; endl; // ÊµÆÁÇπÊï∞Âä†Ê≥ï‰∏çÊª°Ë∂≥ÁªìÂêàÂæã cout &lt;&lt; (3.14 + 1e20) - 1e20 &lt;&lt; endl; cout &lt;&lt; 3.14 + (1e20 - 1e20) &lt;&lt; endl; return 0;&#125; ËøêË°åÁªìÊûú: 123403.1403.14 ÂÖ∑‰ΩìÁªÜËäÇËÆæ‰∏§‰∏™ÊµÆÁÇπÊï∞ $x$ Âíå $y$Ôºö $$\begin{cases}x=(-1)^{s_x} M_x 2^{E_x} \y=(-1)^{s_y} M_y 2^{E_y}\end{cases}$$ ÂàôÊµÆÁÇπÊï∞Âä†ÂáèËøêÁÆóÁªìÊûú‰∏∫Ôºö $$x\pm y = \left((-1)^{s_x}M_x 2^{E_x-E_y} \pm (-1)^{s_y}M_y \right)2^{E_y}$$ ÂØπÈò∂ÔºöÈ¶ñÂÖàË¶ÅÊääÊåáÊï∞‰ΩçÔºàÈò∂Á†ÅÔºâË∞ÉÊàê‰∏ÄÊ†∑ÔºåÂπ∂Áõ∏Â∫îÁöÑ‰Ωø M Áßª‰ΩçÔºåÁî±‰∫éÊúâÊïàÂüüÂ∑¶Áßª‰ºöÂºïËµ∑ÊúÄÈ´òÊúâÊïà‰Ωç‰∏¢Â§±ÔºåËØØÂ∑ÆÂ§ßÔºåÊâÄ‰ª•ÈááÁî®Âè≥ÁßªÔºåÊ≠§Êó∂Èò∂Á†ÅË¶ÅÂ¢ûÂä†„ÄÇÊâÄ‰ª•ÂØπÈò∂ÂéüÂàôÊòØÔºöÂ∞èÈò∂ÂêëÂ§ßÈò∂ÁúãÈΩê„ÄÇ ÊúâÊïàÊï∞Âä†ÂáèÔºöÁÆÄÂçïÁöÑÊó†Á¨¶Âè∑Êï∞Â≠óÁõ∏Âä†Âáè„ÄÇ ËßÑÊ†ºÂåñÔºöÊúâÊïàÊï∞Ê±ÇÂíåÁªìÊûúÂèØËÉΩÂ§ß‰∫é 1ÔºåÈÇ£‰πàÂ∞±ÂêëÂè≥ËßÑÊ†ºÂåñÔºöÂ∞æÊï∞Âè≥Áßª 1 ‰ΩçÔºåÈò∂Á†ÅÂä† 1„ÄÇ ËàçÂÖ•ÔºöÂØπ‰∫éÂè≥ÁßªÂá∫ÂéªÁöÑ‰ΩçÔºåÈááÂèñËàçÂÖ• Ê£ÄÊü•Èò∂Á†ÅÊòØÂê¶Ê∫¢Âá∫Ôºö Èò∂Á†Å‰∏ãÊ∫¢ÔºöËøêÁÆóÁªìÊûú‰∏∫ÈùûËßÑÊ†ºÂåñÊï∞ Èò∂Á†Å‰∏äÊ∫¢ÔºöÁΩÆÊ∫¢Âá∫Ê†áÂøó ÊµÆÁÇπÊï∞Âä†ÂáèÂÆû‰æã$x=3.14, y=2.718$ Ê±Ç $z=x+y$„ÄÇ È¶ñÂÖàÁÆóÂá∫ $x$ Âíå $y$ ÁöÑÂÜÖÂ≠òË°®Á§∫Ôºö $x = 3+0.14$Ôºå3 ÁöÑ‰∫åËøõÂà∂Ë°®Á§∫ÊòØ11Ôºå0.14 ÁöÑ‰∫åËøõÂà∂Ë¶ÅÁ®çÂæÆËÆ°ÁÆó‰∏Ä‰∏ãÔºåÊàë‰ª¨ËÆ© 0.14 ‰∏çÊñ≠ÁöÑ‰πò‰ª• 2Ôºà‰πüÂ∞±ÊòØÂ∑¶ÁßªÔºâÔºåÂæóÂà∞ÁöÑÊï¥Êï∞‰ΩçÈÉ®ÂàÜÂ∞±ÊòØÂÖ∂‰∫åËøõÂà∂ÂÄºÁöÑ‰∏Ä‰ΩçÔºö 12345670.14 * 2 = 0.28 00.28 * 2 = 0.56 00.56 * 2 = 1.12 10.12 * 2 = 0.24 0... Êàë‰ª¨ÂèØ‰ª•ÂÜô‰∏™Á®ãÂ∫èÊù•ÂÆåÊàêËøô‰∏™ËÆ°ÁÆóÂ∑•‰ΩúÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstdlib&gt;#include &lt;cmath&gt;using namespace std;// Ëé∑ÂèñÊï¥ÂΩ¢Êï∞ÁöÑ‰ΩçÊï∞int getDigits(int num)&#123; int count = 1; while(num/10&gt;0)&#123; num %= 10; count++; &#125; return count;&#125;/** * Ëé∑ÂèñÂ∞èÊï∞ÁöÑ‰∫åËøõÂà∂Ë°®Á§∫ * @params precision ‰∫åËøõÂà∂Ë°®Á§∫Á≤æÁ°ÆÂà∞Â§öÂ∞ë‰Ωç * @params num Â∞èÊï∞ÁöÑÊï¥Êï∞Ë°®Á§∫ */char* getFloatBitset(int precision, int num)&#123; char* res = new char[precision]; int digits = getDigits(num); int mod = pow(10, digits); char printFormat[50]; sprintf(printFormat,"%%0.%df",2); // cout &lt;&lt; printFormat &lt;&lt;endl; for(int i=0;i&lt;precision;i++)&#123; printf(printFormat, num*1.0/mod); cout &lt;&lt; " * 2 = "; num &lt;&lt;= 1; if(num &gt;= mod)&#123; printf(printFormat, num*1.0/mod); cout &lt;&lt; " 1" &lt;&lt; endl; num %= mod; res[i] = '1'; &#125;else&#123; printf(printFormat, num*1.0/mod); cout &lt;&lt; " 0" &lt;&lt; endl; res[i] = '0'; &#125; &#125; return res;&#125;/** * Ëé∑ÂèñÂ∞èÊï∞ÁöÑ‰∫åËøõÂà∂Ë°®Á§∫ * @params precision ‰∫åËøõÂà∂Ë°®Á§∫Á≤æÁ°ÆÂà∞Â§öÂ∞ë‰Ωç * @params num ÊµÆÁÇπÂûãÂ∞èÊï∞ * @params digits ËæìÂÖ•ÁöÑÊó∂ÂÄôÊµÆÁÇπÂûãÂ∞èÊï∞ÁöÑ‰ΩçÊï∞ */char* getFloatBitset2(int precision, float num, int digits)&#123; char* res = new char[precision]; int mod = pow(10,digits); // cout&lt;&lt;mod&lt;&lt;endl; char printFormat[50]; sprintf(printFormat,"%%0.%df",2); for(int i=0;i&lt;precision;i++)&#123; printf(printFormat, num); cout &lt;&lt; " * 2 = "; num*=2; num = round(num*mod)/mod; if(num &gt;= 1)&#123; printf(printFormat, num); cout &lt;&lt; " 1" &lt;&lt; endl; num -= 1; res[i] = '1'; &#125;else&#123; printf(printFormat, num); cout &lt;&lt; " 0" &lt;&lt; endl; res[i] = '0'; &#125; &#125; return res;&#125;int main(int argc, char* argv[])&#123; // char* res = getFloatBitset(atoi(argv[1]), atoi(argv[2])); char* res = getFloatBitset2(atoi(argv[1]), atof(argv[2]), atoi(argv[3])); cout &lt;&lt; res &lt;&lt; endl; return 0;&#125; ‰∏äÈù¢‰ª£Á†Å‰øùÂ≠òÊàêÔºöfloat2Bitset.cppÊñá‰ª∂ÔºåÁÑ∂ÂêéÁºñËØëÔºåÂπ∂‰ΩøÁî®Ôºö 12$ g++ -o float2Bitset float2Bitset.cpp$ ./float2Bitset 23 0.14 2 Â∞èÊï∞‰ΩçÁ≤æÁ°ÆÂà∞ 23 ‰ΩçÁöÑËØùÔºå3.14 ÁöÑÂÆöÁÇπÊµÆÁÇπÊï∞Ë°®Á§∫ÊòØÔºö11.00100011110101110000101„ÄÇ ËΩ¨ÊàêÊµÆÁÇπÊï∞ÔºåÈ¶ñÂÖàËßÑÊ†ºÂåñ MÔºåÈÇ£‰πàÊï¥‰ΩìË¶ÅÂè≥Áßª 1 ‰ΩçÔºåÊåáÊï∞ÊòØ 1ÔºåÁî± $E = e-Bias$Ôºå$E=1$, $Bias=127$ Âæó $e=128$Ôºå‰πüÂ∞±ÊòØÔºö1000 0000„ÄÇ ÊúÄÁªà 3.14 ÁöÑÂÜÖÂ≠òË°®Á§∫ÊòØÔºö $$\underbrace{0}_{Sign}~\underbrace{10000000}_{Exponent}~~\underbrace{10010001111010111000011}_{Significand}$$ ÂêåÊ†∑ÁöÑÊñπÊ≥ïÂæóÂà∞ 2.718 ÁöÑÂÜÖÂ≠òË°®Á§∫Ôºö $$\underbrace{0}_{Sign}~\underbrace{10000000}_{Exponent}~~\underbrace{01011011111001110110110}_{Significand}$$ Ëøô‰∏§‰∏™Êï∞ÊÅ∞Â•ΩÊòØÂêåÈò∂ÁöÑÔºåÈÇ£‰πàÂ∞±‰∏çÈúÄË¶ÅÂØπÈò∂Êìç‰Ωú‰∫Ü„ÄÇÂ∞Ü M Áõ∏Âä†Ôºå‰ΩÜËøô‰∏™Êï∞Â§™Èïø‰∫ÜÁúãÁùÄÁúºËä±ÔºåÊàë‰ª¨ÂÜô‰∏™Âä†Ê≥ïÁ®ãÂ∫èÔºö 1234567891011121314151617181920212223242526272829303132333435#include &lt;iostream&gt;using namespace std;// Â∞Ü‰∏§‰∏™Áõ∏Âêå‰ΩçÊï∞ÁöÑ‰∫åËøõÂà∂Êï∞Áõ∏Âä†char* addBitset(char num1[], char num2[], int length)&#123; char* res = new char[length+2]; res[length+1] = '\0'; int carry = 0; for(int i=length-1;i&gt;=0;i--)&#123; res[i+1] = num1[i]-'0'+num2[i]-'0'+carry+'0'; carry = 0; if(res[i+1]&gt;'1')&#123; res[i+1] -= 2; carry = 1; &#125; &#125; if(carry)&#123; res[0]='1'; &#125;else&#123; res[0]='0'; &#125; return res;&#125;int main(int argc, char* argv[])&#123; int i=0; while(argv[1][i]!='\0')&#123; i++; &#125; cout &lt;&lt; i &lt;&lt;endl; char* res = addBitset(argv[1], argv[2], i); cout &lt;&lt; res &lt;&lt; endl; return 0;&#125; ‰∏äËø∞‰ª£Á†Å‰øùÂ≠òÊàêÔºöaddBitset.cppÔºåÁºñËØëÂπ∂‰ΩøÁî®ËØ•Á®ãÂ∫èÔºö 12$ g++ -o addBitset addBitset.cpp$ ./addBitset 10010001111010111000011 01011011111001110110110 Áõ∏Âä†ÁªìÊûúÁ≠â‰∫éÔºö0 11101101110100101111001ÔºåÊúÄÈ´ò‰ΩçÊ≤°Êúâ‰∫ßÁîüËøõ‰ΩçÔºåËøôÈáåÁî®‰∫Ü‰∏Ä‰∏™ 0 Êù•‰ª£ÊõøÔºå‰ΩÜ‰∏§‰∏™ÂâçÂØº 1 Áõ∏Âä†‰∫ßÁîü‰∫ÜËøõ‰ΩçÔºåÊâÄ‰ª•ËøòÈúÄË¶ÅÂØπ M Âè≥ÂΩí‰∏Ä‰∏ãÔºåÂÜçÂØπÊåáÊï∞Âä† 1„ÄÇÊâÄ‰ª•Âä†Ê≥ïÁªìÊûúÁöÑÊµÆÁÇπÊï∞Ë°®Á§∫ÊòØÔºö $$\underbrace{0}_{Sign}~\underbrace{10000001}_{Exponent}~~\underbrace{01110110111010010111101}_{Significand}$$ Ëøô‰∏™Êï∞ÁöÑÂçÅËøõÂà∂Ë°®Á§∫ÁöÑËÆ°ÁÆóÊñπÊ≥ïÊòØÔºö$$2^2 \times (1+0\times (\frac{1}{2})^1 + 1\times (\frac{1}{2})^2 + 1\times (\frac{1}{2})^3 +1\times (\frac{1}{2})^4+0\times(\frac{1}{2})^5+\cdots)$$ Êàë‰ª¨‰æùÁÑ∂ÈááÁî®Á®ãÂ∫èÊù•ËÆ°ÁÆóËøô‰∏ÄÈïø‰∏≤‰∫åËøõÂà∂ÂØπÂ∫îÁöÑÂçÅËøõÂà∂Â∞èÊï∞Ôºö 1234567891011121314151617181920212223242526272829#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstdlib&gt;#include &lt;cmath&gt;using namespace std;double bitset2Float(char* num1, int length)&#123; double res = 0.0; int count=1; for(int i=0;i&lt;length;i++)&#123; double temp = (num1[i]-'0')/pow(2,count); // cout &lt;&lt; temp &lt;&lt; endl; res += temp; count++; &#125; return res;&#125;int main(int argc, char* argv[])&#123; int i=0; while(argv[1][i]!='\0')&#123; i++; &#125; double res = bitset2Float(argv[1],i); cout &lt;&lt; res &lt;&lt; endl; return 0;&#125; ‰∏äËø∞‰ª£Á†Å‰øùÂ≠ò‰∏∫ÔºöBitset2float.cppÔºåÁºñËØëÂπ∂ÊâßË°åÔºö 12$ g++ -o Bitset2float Bitset2float.cpp$ ./Bitset2float 01110110111010010111101 ÂØπÂæóÂà∞ÁªìÊûúÔºö0.4645Ôºå$1.4645\times 2^2 = 5.858$ÔºåËÄå $3.14+2.718=5.858$ÔºåËøôÂ∞±ËØ¥ÊòéÊàë‰ª¨ÁöÑËÆ°ÁÆóÊó†ËØØ„ÄÇ ÁÆóÊ≥ïÊµÅÁ®ãÂõæ Ëøô‰∏™ÊµÅÁ®ãÂõæÂπ∂‰∏çÊòØÂÆåÁæéÁöÑÔºåÁúüÂÆûÁöÑÊµÆÁÇπÊï∞ÊµÅÁ®ãÂõæÂíåÊµÆÁÇπÊï∞ËÆ°ÁÆóÁîµË∑ØÊØîËøô‰∏™Â§çÊùÇ„ÄÇÂè¶Â§ñÊàëÂøòÁîª‰∫Ü‰∏Ä‰∏™‰∏úË•øÔºåËøô‰∏™ÂõæÊúÄÂêéÂ∫îËØ•Âä†‰∏äÊ∫¢Âá∫Â§ÑÁêÜÊ®°ÂùóÔºåE ÂèØËÉΩ‰ºö‰∏äÊ∫¢ÔºàÂΩì E Âä† 1 ÁöÑÊó∂ÂÄôÔºâÔºå‰πüÂèØËÉΩ‰ºö‰∏ãÊ∫¢ÔºàÂΩì E Âáè 1 ÁöÑÊó∂ÂÄôÔºâ„ÄÇ ÊúÄÂêéËøô‰∏™ÊµÅÁ®ãÂõæ‰∏≠Ê≤°ÊúâÂØπÁâπÊÆäÂÄºÁöÑÂà§Êñ≠ÔºåÊØîÂ¶ÇÔºö$\infty - \infty = NaN$, $\infty + \infty = \infty$, $NaN + ‰ªª‰ΩïÊï∞ = NaN$„ÄÇ ‰∫ÜËß£‰∫ÜÊµÆÁÇπÊï∞Âä†Ê≥ïÁöÑÊµÅÁ®ã‰πãÂêéÔºåÊúÄÂêéÊàë‰ª¨ÂõûÂà∞ÊúÄ‰∏äÈù¢ËØ¥ÁöÑ ÊµÆÁÇπÊï∞Âä†ÂáèÊ≥ï‰∏çÊª°Ë∂≥‰∫§Êç¢ÂæãÂíåÁªìÂêàÂæãÔºå‰ªéËÆ°ÁÆóÁªÜËäÇÂàÜÊûê‰∏∫‰ªÄ‰πà‰∏çË°å„ÄÇ È¶ñÂÖà 3.14 ÁöÑÊµÆÁÇπÊï∞Ë°®Á§∫Êàë‰ª¨Â∑≤ÁªèËÆ°ÁÆóËøá‰∫ÜÔºåÈÇ£‰πà 1e20 ÁöÑÊµÆÁÇπÊï∞ÊòØÂ§öÂ∞ëÂë¢Ôºü1e20 ‰πüÂ∞±ÊòØ $10^{20}$ÔºåÁî®ËæóËΩ¨Áõ∏Èô§Ê≥ïÂèØ‰ª•ÂæóÂà∞ÂÖ∂‰∫åËøõÂà∂Ë°®Á§∫„ÄÇÊàë‰ª¨ËøôÈáå‰ΩøÁî®ËÆ°ÁÆóÂô®Â∑•ÂÖ∑ ÂæàÈÅóÊÜæÁöÑÊòØ 64bit Âè™ËÉΩÊëÜÁöÑ‰∏ã $10^{19}$„ÄÇÊàëËØï‰∫Ü‰∏Ä‰∏ãÊääÊ∫êÁ®ãÂ∫è‰∏≠ÁöÑ 1e20 Êç¢Êàê 1e19 ‰πüÊòØÂêåÊ†∑ÁöÑÁªìÊûú„ÄÇÊâÄ‰ª•Êàë‰ª¨Â∞±‰ΩøÁî® 1e19 Êù•ÂàÜÊûêËøôÈÅìÈ¢ò„ÄÇ È¶ñÂÖàÊòØ M ËßÑÊ†ºÂåñÔºåM Âè≥Áßª 63 ‰ΩçÔºåE Âä† 63ÔºåËàçÂÖ• MÔºåÈÇ£‰πà 1e19 ÊúÄÁªàÁöÑÂèåÁ≤æÂ∫¶ÊµÆÁÇπÊï∞Ë°®Á§∫ÊòØÔºö0 10000111110 0001010110001110010001100000100100010011110100000000 Â∞èÈò∂ÂêëÂ§ßÈò∂ÁúãÈΩêÔºå3.14 ÁöÑÈò∂ÊòØ 1ÔºåM ÈúÄË¶ÅÂè≥Áßª 62 ‰ΩçÔºåËÄå M ÁöÑÁ≤æÂ∫¶Êâç 52ÔºåÂèØÊÉ≥ËÄåÁü• M Â∞±ÊòØ 0 ‰∫Ü„ÄÇÈÇ£‰πà 3.14 + 1e19 ÁöÑÁªìÊûúÂ∞±ÊòØ 1e19„ÄÇ1e20 Â∞±Êõ¥Âä†‰∏çÁî®ËØ¥‰∫Ü„ÄÇ ÊµÆÁÇπÊï∞‰πòÈô§Âü∫Êú¨ÊÄßË¥® Áõ∏‰πòÂèØËÉΩ‰∫ßÁîü infinity ÊàñËÄÖ NaN ‰∏çÊª°Ë∂≥‰∫§Êç¢ÂæãÔºåÁªìÂêàÂæãÔºåÂàÜÈÖçÁéáÔºàÂõ†‰∏∫Ê∫¢Âá∫‰ºöÈÄ†ÊàêÁ®ãÂ∫èÊó†Ê≥ïËÆ°ÁÆóÂá∫Ê≠£Á°ÆÁöÑÁªìÊûúÔºâ ‰πò‰ª• 1 ‰ºöÁ≠â‰∫éÂéüÊù•ÁöÑÊï∞ Èô§‰∫Ü infinity Âíå NaNÔºåÊª°Ë∂≥ÂçïË∞ÉÊÄßÔºö$a\ge b \rightarrow a\times c \ge b \times c$ ÂÖ∑‰ΩìÁªÜËäÇËÆæ‰∏§‰∏™ÊµÆÁÇπÊï∞ $x$ Âíå $y$ Ôºö $$\begin{cases}x = \pm M_x 2^{E_x} \y = \pm M_y 2^{E_y}\end{cases}$$ ÂàôÊµÆÁÇπÊï∞‰πòÈô§ËøêÁÆóÁªìÊûúÊòØÔºö $$xy = \pm (M_x\times M_y)2^{E_x\pm E_y}$$ ËÆ°ÁÆóÈò∂Á†ÅÔºåÂà§Êñ≠ÊòØÂê¶Ê∫¢Âá∫ Ê±ÇÊúâÊïàÊï∞ÁöÑ‰πòÁßØ ÊúâÊïàÊï∞ËàçÂÖ• ËÆ°ÁÆóÁ¨¶Âè∑‰Ωç ÊµÆÁÇπÊï∞ËøòÊúâÁõ∏ÂΩìÂ§öÁöÑÁªÜËäÇÔºåÂèØ‰ª•ÂèÇËÄÉÔºöIEEE 754]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wsl oh my zsh Â≠óÁ¨¶‰π±Á†ÅÈóÆÈ¢ò]]></title>
    <url>%2Fblog%2F2018%2F09%2F20%2Fwsl-oh-my-zsh%E5%AD%97%E4%BD%93%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[ÂÆâË£Ö oh my zshÈ¶ñÂÖàÊ£ÄÊü•Ëá™Â∑±ÊúâÊ≤°Êúâ zshÔºö 1cat /etc/shells Â¶ÇÊûúÊúâÁöÑËØùÂ∞±‰∏ãËΩΩoh my zsh ËÆæÁΩÆÈªòËÆ§ shell1chsh -s /bin/zsh ÊúâÂèØËÉΩ‰ºöÈÅáÂà∞ËÆæÁΩÆ‰∏çÊàêÂäüÁöÑÈóÆÈ¢òÔºåÈÇ£‰πàÊàë‰ª¨ÂèØ‰ª•ÊâãÂä®‰øÆÊîπ/etc/passwdÔºåÊâæÂà∞Ëá™Â∑±ÈÇ£‰∏ÄÊù°ÈÖçÁΩÆ‰ø°ÊÅØÔºåÊääÈªòËÆ§ shell ÊîπÊàê/bin/zshÂ∞± OK ‰∫Ü„ÄÇ Â≠ó‰ΩìÈóÆÈ¢ò-&gt;Á≠â‰∏Ä‰∫õÂÖ∂‰ªñÂ≠óÁ¨¶ÂèØËÉΩÊòæÁ§∫‰∏çÂá∫Êù•ÔºåËøôÊòØÂ≠ó‰ΩìÂØºËá¥ÁöÑ„ÄÇgoogle ‰∏Ä‰∏ãÔºöwsl oh my zsh fontÔºåÊâæÂà∞Ôºöhttps://github.com/Microsoft/WSL/issues/1517Ôºå‰∏ãËΩΩÂπ∂ËÆæÁΩÆÂ≠ó‰Ωì‰∏∫ÔºöDejaVuSansMono„ÄÇ ÊÄé‰πàËÆæÁΩÆÂ≠ó‰ΩìÂè≥ÈîÆÊ†áÈ¢òÊ†èÔºåËøõÂÖ•Â±ûÊÄß]]></content>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wsl‰øÆÊîπÂè≥ÈîÆbashÂõæÊ†á]]></title>
    <url>%2Fblog%2F2018%2F09%2F19%2Fwsl%E4%BF%AE%E6%94%B9%E5%8F%B3%E9%94%AEbash%E5%9B%BE%E6%A0%87%2F</url>
    <content type="text"><![CDATA[‰ΩøÁî® windows subsystem for linux (ÁÆÄÁß∞ÔºöWSL) ÁöÑÊó∂ÂÄôÔºåÈÅáÂà∞‰∏Ä‰∏™Â∞èÈóÆÈ¢òÔºåÂú®Êñá‰ª∂ÁÆ°ÁêÜÂô®‰∏≠Âè≥ÈîÆÔºåÂî§Âá∫ bashÔºåÂèëÁé∞ÂõæÊ†á‰∏çÂØπÔºö ÁÇπÂáª‰πãÂêéÂèØ‰ª•ÁúãÂà∞Ë∞ÉÁî®ÁöÑÊòØÂì™‰∏™Á®ãÂ∫èÔºö google ‰∏Ä‰∏ãÔºöwindows Âè≥ÈîÆÂõæÊ†áÔºåÊêúÂà∞ÁôæÂ∫¶ÁªèÈ™åÔºöhttps://jingyan.baidu.com/article/7c6fb428321b4a80642c90fd.htmlÔºåÁÖßÁùÄ‰øÆÊîπÂ∞±Ë°å‰∫Ü„ÄÇ Â¶ÇÂõæÔºö ÈÇ£‰πàÊîπÊàê‰ªÄ‰πàÂë¢Ôºügoogle ‰∏Ä‰∏ãÔºöwsl bash iconÔºåÊêúÂà∞Ôºöhttps://github.com/Microsoft/WSL/issues/1269ÔºåÁÑ∂ÂêéÂèàÂú®Ëøô‰∏™È°µÈù¢ÊâæÂà∞‰∫ÜËøô‰∏™Ôºöhttps://github.com/cmderdev/cmder/issues/1063#issuecomment-401947209 Êää icon Êç¢ÊàêÔºö 1C:\Program Files\WindowsApps\CanonicalGroupLimited.UbuntuonWindows_1804.2018.817.0_x64__79rhkp1fndgsc\ubuntu.exe ÂÜçÁÇπÂáªÂè≥ÈîÆÔºåÂ∞±ËÉΩÁúãÂà∞Ëøô‰∏™ÂõæÊ†á‰∫Ü„ÄÇ Èô§‰∫Ü‰øÆÊîπÂè≥ÈîÆÊòæÁ§∫ÁöÑ iconÔºåËøòÂèØ‰ª•‰øÆÊîπÂè≥ÈîÆÊòæÁ§∫ÁöÑÂêçÂ≠óÔºå‰ª•ÂèäËøêË°åÁöÑÁõÆÊ†áÁ®ãÂ∫è„ÄÇ Êîπ‰∏∫Ôºö 1C:\Program Files\WindowsApps\CanonicalGroupLimited.UbuntuonWindows_1804.2018.817.0_x64__79rhkp1fndgsc\ubuntu.exe ‰ΩÜÂèëÁé∞Êó†Ê≥ïÊääÂ∑•‰ΩúÁõÆÂΩïÂÆöÂà∞ÂΩìÂâçÂè≥ÈîÆÁöÑÁõÆÂΩïÔºåÈúÄË¶ÅÂä†‰∏Ä‰∏™runÔºö 1C:\Program Files\WindowsApps\CanonicalGroupLimited.UbuntuonWindows_1804.2018.817.0_x64__79rhkp1fndgsc\ubuntu.exe run]]></content>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁºñÁ®ãÁè†ÁéëÁ≥ªÂàóÁ¨îËÆ∞ -- Á¨¨‰∫åÁ´† ÂïäÂìàÔºÅÁÆóÊ≥ï]]></title>
    <url>%2Fblog%2F2018%2F06%2F28%2F%E7%BC%96%E7%A8%8B%E7%8F%A0%E7%8E%91%E7%AC%AC%E4%BA%8C%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[Êú¨‰π¶ÁöÑÂè¶‰∏Ä‰∏™‰∏≠ÂøÉÊÄùÊÉ≥ÊòæËÄåÊòìËßÅÔºöËâØÂ•ΩÁöÑÁÆóÊ≥ïÊòØÁ®ãÂ∫èÊÄßËÉΩÊèêÂçáÁöÑÂÖ≥ÈîÆ„ÄÇ ‰∏ãÈù¢ËøòÊòØÈÄöËøáÊé¢ËÆ®Âá†‰∏™ÂÆû‰æãÔºåÊù•È¢Ü‰ºö‰∏Ä‰∏ãÁÆóÊ≥ïÁöÑÈáçË¶ÅÊÄß„ÄÇ ‰∏â‰∏™ÈóÆÈ¢òA. ÁªôÂÆö‰∏Ä‰∏™ÊúÄÂ§öÂåÖÂê´ 40 ‰∫ø‰∏™ÈöèÊú∫ÊéíÂàóÁöÑ 32 ‰ΩçÊï¥Êï∞ÁöÑÈ°∫Â∫èÊñá‰ª∂ÔºåÊâæÂá∫‰∏Ä‰∏™‰∏çÂú®Êñá‰ª∂‰∏≠ÁöÑ 32 ‰ΩçÊï¥Êï∞(Âú®Êñá‰ª∂‰∏≠Ëá≥Â∞ëÁº∫Â§±‰∏Ä‰∏™ËøôÊ†∑ÁöÑÊï∞ - - ‰∏∫‰ªÄ‰πà? )„ÄÇÂú®ÂÖ∑ÊúâË∂≥Â§üÂÜÖÂ≠òÁöÑÊÉÖÂÜµ‰∏ãÔºåÂ¶Ç‰ΩïËß£ÂÜ≥ËØ•ÈóÆÈ¢ò?Â¶ÇÊûúÊúâÂá†‰∏™Â§ñÈÉ®ÁöÑ‚Äú‰∏¥Êó∂‚ÄùÊñá‰ª∂ÂèØÁî®Ôºå‰ΩÜÊòØ‰ªÖÊúâÂá†ÁôæÂ≠óËäÇÁöÑÂÜÖÂ≠òÔºåÂèàËØ•Â¶Ç‰ΩïËß£ÂÜ≥ËØ•ÈóÆÈ¢ò? Ëá≥Â∞ëÁº∫Â§±‰∏Ä‰∏™ËøôÊ†∑ÁöÑÊï∞ÊòØÂõ†‰∏∫Ôºö32 ‰ΩçÊó†Á¨¶Âè∑Êï¥Êï∞ÁöÑË°®Á§∫ËåÉÂõ¥ÊòØ0 Âà∞ 4,294,967,295ÔºåÊØî 40 ‰∫øÂ§ßÔºö„ÄÇÂ¶ÇÊûúÊúâË∂≥Â§üÁöÑÂÜÖÂ≠òÔºåÂèØ‰ª•ÈááÁî®Á¨¨‰∏ÄÁ´†ÁöÑ‰ΩçÂõæË°®Á§∫Ê≥ïÔºåÈúÄË¶ÅÁöÑÂÜÖÂ≠òÊòØÔºö4 000 000 000/8 = 500 000 000Ôºå500MB ÁöÑÂÜÖÂ≠ò„ÄÇËÄå‰∏îÊàë‰ª¨ÈúÄË¶Å‰ΩøÁî®‰∫åÂàÜÊü•ÊâæÊù•Âä†ÈÄüÊü•ÊâæËøáÁ®ãÔºåÈ°∫Â∫èÈÅçÂéÜ 500MB ÁöÑÁ©∫Èó¥ÊòØÂæàÊÖ¢ÁöÑ„ÄÇ‰ΩøÁî®‰∫åÂàÜÊü•ÊâæÂØπËøôÁßçÈáèÂ§ßÁöÑÊï∞ÊçÆÈõÜÊòØÈùûÂ∏∏ÈáçË¶ÅÁöÑÊâãÊÆµÔºå‰ΩÜ ‰∫åÂàÜÊü•ÊâæÁöÑÂü∫Á°ÄÊòØÊï∞ÊçÆÈõÜÊúâÂ∫è„ÄÇÊâÄ‰ª•ÂàùÁúãËøôÈáåÊòØÊ≤°Ê≥ïÁõ¥Êé•‰ΩøÁî®‰∫åÂàÜÊ≥ïÁöÑÔºå‰ΩÜÊòØÂ¶ÇÊûúÊàë‰ª¨ËøôÊ†∑ÊÉ≥Ôºö32 ‰ΩçÊï¥Êï∞ÁöÑÊØè‰∏Ä‰Ωç‰∏çÊòØ 0 Â∞±ÊòØ 1ÔºåÊàë‰ª¨ÊåâÁÖßÁ¨¨ 1 ‰ΩçÂàíÂàÜÁöÑËØùÔºåÂ∞±ÂèØ‰ª•ÂàíÂàÜÂá∫‰∏§‰∏™ÈõÜÂêàÔºàÈúÄË¶ÅÈÅçÂéÜÂÖ®ÈÉ®Êï∞ÊçÆ‰∏ÄÈÅçÔºâÔºåÂ¶ÇÊûúÊüê‰∏™ÈõÜÂêàÂ∞è‰∫é $2^{31}$ ‰∏™Êï∞Â∞±ÈÄâ‰∏≠Êàê‰∏∫Êàë‰ª¨‰∏ã‰∏ÄÊ¨°ÂàíÂàÜÁöÑÂØπË±°ÔºàÂ¶ÇÊûú‰∏§‰∏™ÈõÜÂêàÈÉΩÂ∞è‰∫é $2^{31}$ Â∞±Èöè‰æøÈÄâ‰∏Ä‰∏™ÔºâÔºåÁõ¥Âà∞Êàë‰ª¨ÂæóÂà∞‰∏Ä‰∏™Á©∫ÈõÜÔºåËÄåËøô‰∏™Á©∫ÈõÜ‰∏≠Êú¨Êù•Â∫îËØ•Â≠òÂú®ÁöÑÈÇ£‰∫õÊï∞ÔºåÂ∞±ÊòØÁº∫Â§±ÁöÑÊï∞‰∫Ü„ÄÇÂú®ÂàíÂàÜÈõÜÂêàÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨ÂÆûÈôÖ‰∏äË¶ÅÊääÊï∞ÊçÆÂ≠òÂà∞Á°¨Áõò‰∏≠ÔºåÂèØ‰ª•‰ΩøÁî® buffer Êù•ÂáèÂ∞ë IO Ê¨°Êï∞„ÄÇÊúÄÂùèÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØ‰∏Ä‰∏™Á≠âÊØîÊï∞ÂàóÔºö$$n+\frac{1}{2}n+\cdots+1 = 2n$$ ÂèØËßÅËøôÈáåÁöÑ‰∫åÂàÜÊ≥ïÂπ∂Ê≤°ÊúâËµ∑Âà∞logNÁöÑÊïàÊûú„ÄÇÈúÄË¶ÅÈÅçÂéÜÁöÑ‰∫åÂàÜÊ≥ïËøòÁÆó‰ªÄ‰πà‰∫åÂàÜÊ≥ïÂë¢Ôºü‰ΩÜÂ∫ÜÂπ∏ÁöÑÊòØÔºåÊàë‰ª¨Ëá≥Â∞ëÂèØ‰ª•Ëß£ÂÜ≥Ëøô‰∏ÄÈ¢ò„ÄÇ B. Â∞Ü‰∏Ä‰∏™ n ÂÖÉ‰∏ÄÁª¥ÂêëÈáèÂ∑¶ÊóãËΩ¨ i ‰∏™‰ΩçÁΩÆ„ÄÇ‰æãÂ¶ÇÔºåÂΩì n=8 ‰∏î i=3 Êó∂ÔºåÂêëÈáè abcdefgh ÊóãËΩ¨‰∏∫ defghabc„ÄÇÁÆÄÂçïÁöÑ‰ª£Á†Å‰ΩøÁî®‰∏Ä‰∏™ n ÂÖÉÁöÑ‰∏≠Èó¥ÂêëÈáèÂú® n Ê≠•ÂÜÖÂÆåÊàêËØ•Â∑•‰Ωú„ÄÇ‰Ω†ËÉΩÂê¶‰ªÖ‰ΩøÁî®Êï∞ÂçÅ‰∏™È¢ùÂ§ñÂ≠óËäÇÁöÑÂ≠òÂÇ®Á©∫Èó¥ÔºåÂú®Ê≠£ÊØî‰∫é n ÁöÑÊó∂Èó¥ÂÜÖÂÆåÊàêÂêëÈáèÁöÑÊóãËΩ¨Ôºü ÊñπÊ≥ï 1ÔºöÂ∞ÜÂâç i ‰∏™ÂÖÉÁ¥†Â§çÂà∂Âà∞‰∏Ä‰∏™‰∏¥Êó∂Á©∫Èó¥Ôºå‰Ωô‰∏ãÁöÑ n-i ‰∏™ÂÖÉÁ¥†ÂêëÂ∑¶Áßª i ‰∏™‰ΩçÁΩÆÔºåÊúÄÂêéÂ∞ÜÊúÄÂàùÁöÑ i ‰∏™ÂÖÉÁ¥†‰ªé‰∏¥Êó∂Á©∫Èó¥Â§çÂà∂Âà∞ x ‰∏≠‰Ωô‰∏ãÁöÑ‰ΩçÁΩÆ„ÄÇÊó∂Èó¥Â§çÊùÇÂ∫¶Ôºö2i+(n-i)=n+iÔºå‰πüÂ∞±ÊòØ O(n)ÔºõÁ©∫Èó¥Â§çÊùÇÂ∫¶ÔºöiÔºå‰πüÂ∞±ÊòØ O(n)„ÄÇ ÊñπÊ≥ï 2Ôºö‰ΩøÁî®Á±ª‰ººÊñπÊ≥ï 1 ÁöÑÂäûÊ≥ïÔºå‰ΩÜÂè™‰ΩøÁî®‰∏Ä‰∏™ÂÖÉÁ¥†Â§ßÂ∞èÁöÑ‰∏¥Êó∂Á©∫Èó¥ÔºåÊØèÊ¨°Âè™ÁßªÂä®‰∏Ä‰ΩçÔºåÊÄªÂÖ±ÈúÄË¶ÅÁßªÂä® i Ê¨°„ÄÇÊó∂Èó¥Â§çÊùÇÂ∫¶Ôºö(n+1)*iÔºå‰πüÂ∞±ÊòØ O(n^2)ÔºõÁ©∫Èó¥Â§çÊùÇÂ∫¶ÔºöO(1)„ÄÇ ÊñπÊ≥ï 3ÔºöÊùÇÊäÄÁÆóÊ≥ï„ÄÇÁ¨¨‰∏ÄÊ≠•ÔºöÁßªÂä®x[0]Âà∞‰∏¥Êó∂ÂèòÈáè tÔºåÁÑ∂ÂêéÁßªÂä®x[i]Âà∞x[0]Ôºåx[2i]Âà∞x[i]Ôºå‰æùÊ≠§Á±ªÊé®ÔºàÂ∞Ü x ‰∏≠ÁöÑÊâÄÊúâ‰∏ãÊ†áÂØπ n ÂèñÊ®°ÔºâÔºåÁõ¥Ëá≥ËøîÂõûÂà∞Âèñx[0]‰∏≠ÁöÑÂÖÉÁ¥†ÔºåÊ≠§Êó∂Êîπ‰∏∫‰ªé t ÂèñÂÄºÁÑ∂ÂêéÁªàÊ≠¢ËøáÁ®ã„ÄÇÁ¨¨‰∫åÊ≠•ÔºöÂ¶ÇÊûúËØ•ËøáÁ®ãÊ≤°ÊúâÁßªÂä®ÂÖ®ÈÉ®ÂÖÉÁ¥†ÔºåÂ∞±‰ªéx[1]ÂºÄÂßãÂÜçÊ¨°ËøõË°åÁßªÂä®ÔºàÊâßË°åÁ¨¨‰∏ÄÊ≠•ÁöÑÁÆóÊ≥ïÊìç‰ΩúÔºâÔºåÁõ¥Âà∞ÊâÄÊúâÁöÑÂÖÉÁ¥†ÈÉΩÂ∑≤ÁªèÁßªÂä®‰∏∫Ê≠¢„ÄÇ Ëøô‰∏™ÁÆóÊ≥ïÁöÑÊ†∏ÂøÉÊÄùÊÉ≥Â∫îËØ•ÊòØËøôÊ†∑ÁöÑÔºöÂ∞ÜËØ•Êï∞ÁªÑÂ∫èÂàóÁúãÊàêÊòØ‰∏Ä‰∏™ÁéØÁä∂ÈòüÂàóÔºåÊØèÊ¨°ÊâßË°åÁ¨¨‰∏ÄÊ≠•ÁöÑÁÆóÊ≥ïÈÉΩÂèØ‰ª•‰Ωø‰∏ÄÁªÑÂÖÉÁ¥†ËêΩÂà∞ÂÆÉ‰ª¨ÊúÄÁªàÁöÑ‰ΩçÁΩÆ‰∏äÔºåËÄåÂèà‰∏çÂΩ±ÂìçÂà∞ÂÖ∂ÂÆÉÂÖÉÁ¥†„ÄÇ Á¨¨‰∫åÊ≠•ÊâßË°åÁöÑÊ¨°Êï∞ÊòØGCD(n,i)Ôºàn Âíå i ÁöÑÊúÄÂ§ßÂÖ¨Á∫¶Êï∞Ôºâ„ÄÇËøôÊ†∑‰∏ÄÊù•Êàë‰ª¨Â∞±‰∏çÁî®ËÆ∞ÂΩïÂÖÉÁ¥†ÊòØÂê¶ÁßªÂä®ËøáËøô‰∏™Áä∂ÊÄÅ‰∫ÜÔºåÁõ¥Êé•Â∞±ÂèØ‰ª•Áü•ÈÅìÂæ™ÁéØÂ§öÂ∞ëÊ¨°„ÄÇ ËØ•ÁÆóÊ≥ïÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶Ôºön+GCD(n,i)Ôºå‰πüÂ∞±ÊòØ O(n)„ÄÇÁ©∫Èó¥Â§çÊùÇÂ∫¶ÔºöO(1)„ÄÇ Ëøô‰∏™ÁÆóÊ≥ïËôΩÁÑ∂Ë°®Áé∞‰∏çÈîôÔºå‰ΩÜÊòØ‰∏ç‰æø‰∫éÁêÜËß£„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142#include &lt;iostream&gt;using namespace std;int gcd(int a, int b)&#123; return a%b?gcd(b, a%b): b;&#125;int a[20];void acrobat()&#123; int n=20, i=6; int temp; for(int j=0;j&lt;gcd(n,i);j++)&#123; temp = a[j]; int count=0; while(1)&#123; if(i*(count+1)%n == 0)&#123; a[j+i*count%n] = temp; break; &#125;else&#123; a[j+i*count%n] = a[j+i*(count+1)%n]; count++; &#125; &#125; &#125;&#125;int main()&#123; for(int i=0;i&lt;20;i++)&#123; a[i] = i; &#125; acrobat(); cout &lt;&lt; "out" &lt;&lt; endl; for(int i=0;i&lt;20;i++)&#123; cout &lt;&lt; a[i] &lt;&lt; endl; &#125; return 0;&#125; ÊñπÊ≥ï 4ÔºöÈÄíÂΩíÁÆóÊ≥ï„ÄÇÊóãËΩ¨ÂêëÈáè x ÂÖ∂ÂÆûÂ∞±ÊòØ‰∫§Êç¢ÂêëÈáè ab ÁöÑ‰∏§ÊÆµÔºåÂæóÂà∞ÂêëÈáè ba„ÄÇËøôÈáå a ‰ª£Ë°® x ‰∏≠ÁöÑÂâç i ‰∏™ÂÖÉÁ¥†„ÄÇÂÅáËÆæ a ÊØî b Áü≠ÔºåÂ∞Ü b ÂàÜ‰∏∫$b_l$Âíå$b_r$Ôºå‰ΩøÂæó$b_r$ÂÖ∑Êúâ‰∏é a Áõ∏ÂêåÁöÑÈïøÂ∫¶„ÄÇ‰∫§Êç¢ a Âíå$b_r$Ôºå‰πüÂ∞±Â∞Ü$ab_l b_r$ËΩ¨Êç¢‰∏∫$b_r b_l a$„ÄÇÂ∫èÂàó a Ê≠§Êó∂Â∑≤Â§Ñ‰∫éÂÖ∂ÊúÄÁªàÁöÑ‰ΩçÁΩÆÔºåÂõ†Ê≠§Áé∞Âú®ÁöÑÈóÆÈ¢òÂ∞±ÈõÜ‰∏≠Âà∞‰∫§Êç¢ b ÁöÑÈÉ®ÂàÜ„ÄÇÁî±‰∫éÊñ∞ÁöÑÈóÆÈ¢ò‰∏éÂéüÊù•ÁöÑÈóÆÈ¢òÂÖ∑ÊúâÁõ∏ÂêåÁöÑÂΩ¢ÂºèÔºåÊàë‰ª¨ÂèØ‰ª•ÈÄíÂΩíËß£ÂÜ≥„ÄÇ 1234567891011121314151617181920212223//ÂàÜÂà´‰ªéiÂíåj‰ΩçÁΩÆÂºÄÂßãÔºå‰∫§Êç¢k‰∏™ÂÖÉÁ¥†inline void swap(int a[], int i, int j, int k)&#123; for(int p=0;p&lt;k;p++)&#123; int temp = a[i+p]; a[i+p] = a[j+p]; a[j+p] = temp; &#125;&#125;//‰ªéi‰ΩçÁΩÆÂºÄÂßãÔºåÂ§ÑÁêÜÂ∑¶leniÔºåÂè≥lenjÁöÑÊóãËΩ¨void first(int a[], int i, int leni, int lenj)&#123; if(leni == lenj)&#123; swap(a, i, i+leni, leni); return; &#125; if(leni&lt;lenj)&#123; swap(a, i, i+lenj, leni); first(a, i, leni, lenj-leni); &#125;else&#123; swap(a, i, i+leni, lenj); first(a, i+lenj, leni-lenj, lenj); &#125;&#125; ÊñπÊ≥ï 5Ôºö‰∏âÊ¨°ÁøªËΩ¨: $(a^r b^r)^r = ba$„ÄÇ‰ªé ab ÂºÄÂßãÔºåÈ¶ñÂÖàÂØπ a Ê±ÇÈÄÜÔºåÂæóÂà∞$a^r b$ÔºåÁÑ∂ÂêéÂØπ b Ê±ÇÈÄÜÔºåÂæóÂà∞$a^r b^r$„ÄÇÊúÄÂêéÂØπÊï¥‰ΩìÊ±ÇÈÄÜÔºåÂæóÂà∞$(a^r b^r)^r$ÔºåÊ≠§Êó∂ÊÅ∞Â•ΩÂ∞±ÊòØ ab„ÄÇ 123reverse(0, i-1) /* cbadefgh */reverse(i, n-1) /* cbahgfed */reverse(0, n-1) /* defghabc */ 123456789101112131415//‰ªéi‰ΩçÁΩÆÂºÄÂßãÔºåÂà∞j‰ΩçÁΩÆÁªìÊùü(ÂåÖÂê´j)ÔºåÁøªËΩ¨Ëøô‰∏ÄÊÆµÁöÑa‰∏≠ÁöÑÂÖÉÁ¥†inline void reverse(int a[], int i, int j)&#123; for(int k=0;k&lt;(j+1-i)/2;k++)&#123; int temp = a[k+i]; a[k+i] = a[j-k]; a[j-k] = temp; &#125;&#125;//i‰ΩçÁΩÆÊòØbÊÆµÁöÑÂºÄÂßãÔºåÊÄªÈïøÂ∫¶nvoid res(int a[], int i, int n)&#123; reverse(a, 0, i-1); reverse(a, i, n-1); reverse(a, 0, n-1);&#125; C. ÁªôÂÆö‰∏Ä‰∏™Ëã±ËØ≠Â≠óÂÖ∏ÔºåÊâæÂá∫ÂÖ∂‰∏≠ÁöÑÊâÄÊúâÂèò‰ΩçËØçÈõÜÂêà„ÄÇ‰æãÂ¶ÇÔºå‚Äúpots‚Äù„ÄÅ‚Äústop‚Äù„ÄÅ‚Äútops‚Äù‰∫í‰∏∫Âèò‰ΩçËØçÔºåÂõ†Ê≠§ÊØè‰∏Ä‰∏™ÂçïËØçÈÉΩÂèØ‰ª•ÈÄöËøáÊîπÂèòÂÖ∂‰ªñÂçïËØç‰∏≠Â≠óÊØçÁöÑÈ°∫Â∫èÊù•ÂæóÂà∞„ÄÇ]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁºñÁ®ãÁè†ÁéëÁ≥ªÂàóÁ¨îËÆ∞ -- Á¨¨‰∏ÄÁ´† ÂºÄÁØá]]></title>
    <url>%2Fblog%2F2018%2F06%2F22%2F%E7%BC%96%E7%A8%8B%E7%8F%A0%E7%8E%91%E7%AC%AC%E4%B8%80%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[Êú¨‰π¶ÁöÑ‰∏≠ÂøÉÊÄùÊÉ≥ÔºöÂØπÂÆû‰æãÁ†îÁ©∂ÁöÑÊ∑±ÂÖ•ÊÄùËÄÉ‰∏ç‰ªÖÊúâË∂£ÔºåËÄå‰∏îÂèØ‰ª•Ëé∑ÂæóÂÆûÈôÖÁöÑÁõäÂ§Ñ„ÄÇ ËßÑÂæãÂíåÊô∫ÊÖßÈÉΩÈöêËóèÂú®ÂÆû‰æã‰πã‰∏≠ÔºåËÄåÊàë‰ª¨ÈÄöËøáÂÆû‰æãÊù•Á™•Êé¢ÂÆÉ‰ª¨„ÄÇÂÆû‰æãÊòØÈÅìÁöÑËΩΩ‰Ωì„ÄÇ ÂºÄÁØáÊòéÁ°ÆÈóÆÈ¢òÔºå‰∏ÄÊó¶ÈóÆÈ¢òÊòéÁ°ÆÔºåËøôÂú∫ÊàòÂΩπÂ∞±ÊàêÂäü‰∫Ü 90%„ÄÇ Á°ÆÂÆöÁî®Êà∑ÁöÑÁúüÂÆûÈúÄÊ±ÇÊòØÁ®ãÂ∫èËÆæËÆ°ÁöÑÊ†πÊú¨„ÄÇ ÁÆÄÂçïÁöÑÁ®ãÂ∫èÈÄöÂ∏∏ÊØîÂÖ∑ÊúâÁõ∏ÂêåÂäüËÉΩÁöÑÂ§çÊùÇÁ®ãÂ∫èÊõ¥ÂèØÈù†„ÄÅÊõ¥ÂÆâÂÖ®„ÄÅÊõ¥ÂÅ•Â£Æ„ÄÅÊõ¥È´òÊïàÔºåËÄå‰∏îÊòì‰∫éÂÆûÁé∞ÂíåÁª¥Êä§„ÄÇÂõ†‰∏∫ÁÆÄÂçïÁöÑÁ®ãÂ∫èÂæÄÂæÄÊõ¥ÂÖ∑ÊúâÊ¶ÇÊã¨ÊÄß„ÄÅÊõ¥ÊäΩË±°„ÄÅÊõ¥ËÉΩÊ¥ûÊÇâÈóÆÈ¢òÁöÑÊú¨Ë¥®„ÄÇ ÂÖ∑‰ΩìÈóÆÈ¢òÂÖ∑‰ΩìÂàÜÊûêAÔºöÊÄéÊ†∑Áªô‰∏Ä‰∏™Á£ÅÁõòÊñá‰ª∂ÊéíÂ∫èÔºüBÔºö‰∏∫‰ªÄ‰πàÈùûË¶ÅËá™Â∑±ÂÜôÊéíÂ∫èÁ®ãÂ∫èÂë¢Ôºü‰∏∫‰ªÄ‰πà‰∏çÁî®Á≥ªÁªüÊèê‰æõÁöÑÊéíÂ∫èÁ®ãÂ∫èÂë¢ÔºüAÔºöÊàëÈúÄË¶ÅÂú®‰∏Ä‰∏™Â§ßÁ≥ªÁªü‰∏≠ÊéíÂ∫è„ÄÇÁî±‰∫é‰∏çÊòéÁöÑÊäÄÊúØÂéüÂõ†ÔºåÊàë‰∏çËÉΩ‰ΩøÁî®Á≥ªÁªü‰∏≠ÁöÑÊñá‰ª∂ÊéíÂ∫èÁ®ãÂ∫è„ÄÇBÔºöÈúÄË¶ÅÊéíÂ∫èÁöÑÂÜÖÂÆπÊòØ‰ªÄ‰πàÔºüÊñá‰ª∂‰∏≠ÊúâÂ§öÂ∞ëÊù°ËÆ∞ÂΩïÔºüÊØèÊù°ËÆ∞ÂΩïÁöÑÊ†ºÂºèÊòØ‰ªÄ‰πàÔºüAÔºöÊñá‰ª∂ÊúÄÂ§öÂåÖÂê´ 1 ÂçÉ‰∏áÊù°ËÆ∞ÂΩïÔºåÊØèÊù°ËÆ∞ÂΩïÈÉΩÊòØ 7 ‰ΩçÁöÑÊï¥Êï∞„ÄÇBÔºöÁ≠â‰∏Ä‰∏ãÔºåÊó¢ÁÑ∂Êñá‰ª∂Ëøô‰πàÂ∞èÔºå‰ΩïÂøÖÈùûË¶ÅÂú®ÈùûË¶ÅÂú®Á£ÅÁõò‰∏äËøõË°åÊéíÂ∫èÂë¢Ôºü‰∏∫‰ªÄ‰πà‰∏çÂú®ÂÜÖÂ≠òÈáåËøõË°åÊéíÂ∫èÂë¢ÔºüAÔºöÂ∞ΩÁÆ°Êú∫Âô®ÊúâËÆ∏Â§öÂÖÜÂ≠óËäÇÁöÑÂÜÖÂ≠òÔºå‰ΩÜÊéíÂ∫èÂäüËÉΩÂè™ÊòØÂ§ßÁ≥ªÁªü‰∏≠ÁöÑ‰∏ÄÈÉ®ÂàÜÔºåÊâÄ‰ª•‰º∞ËÆ°Âà∞Êó∂ÂÄôÂè™Êúâ 1MB ÁöÑÂÜÖÂ≠òÂèØÁî®„ÄÇBÔºö‰Ω†ËøòËÉΩÂëäËØâÊàëÂÖ∂‰ªñ‰∏Ä‰∫õ‰∏éËÆ∞ÂΩïÁõ∏ÂÖ≥ÁöÑ‰ø°ÊÅØÂêóÔºüAÔºöÊØèÊù°ËÆ∞ÂΩïÈÉΩÊòØ 7 ‰ΩçÁöÑÊ≠£Êï¥Êï∞ÔºåÂÜçÊó†ÂÖ∂‰ªñÁõ∏ÂÖ≥Êï∞ÊçÆ„ÄÇÊØè‰∏™Êï¥Êï∞ÊúÄÂ§öÂá∫Áé∞‰∏ÄÊ¨°„ÄÇ ÂÆûÈôÖ‰∏äÈóÆ‰∫ÜËøô‰πàÂ§öÔºåÊèêÈóÆËÄÖÈÉΩÊ≤°Êúâ‰∏ªÂä®Â∞ÜËá™Â∑±ÁöÑÈóÆÈ¢òÊó†‰øùÁïôÁöÑÂëäËØâË¢´Ê±ÇÂä©ÂØπË±°ÔºåÂèçËÄåÊòØË¢´Ê±ÇÂä©ÂØπË±°ËÄêÂøÉÁöÑ‰∏ÄÁÇπ‰∏ÄÁÇπËØ¢ÈóÆ„ÄÇÈóÆÈ¢òÁöÑÁúüÂÆûËÉåÊôØÊòØËøôÊ†∑ÁöÑÔºö Âú®ÁæéÂõΩÔºåÁîµËØùÂè∑Á†ÅÁî± 3 ‰ΩçÂå∫Âè∑ÂêéÂÜçË∑ü 7 ‰ΩçÊï∞Â≠óÁªÑÊàêÔºåÊã®ÊâìÂê´ÂÖçË¥πÂå∫Âè∑ 800ÔºàÂΩìÊó∂Âè™ÊúâËøô‰∏Ä‰∏™Âè∑Á†ÅÔºâÁöÑÁîµËØùÊòØ‰∏çÊî∂Ë¥πÁöÑ„ÄÇËøô‰ΩçÁ®ãÂ∫èÂëòÊ≠£Âú®ÂºÄÂèëËøôÁ±ªÊï∞ÊçÆÂ∫ìÂ§ÑÁêÜÁ≥ªÁªüÁöÑ‰∏ÄÂ∞èÈÉ®ÂàÜÔºåÈúÄË¶ÅÊéíÂ∫èÁöÑÊï¥Êï∞Â∞±ÊòØÂÖçË¥πÁîµËØùÂè∑Á†Å„ÄÇËæìÂÖ•Êñá‰ª∂ÊòØÁîµËØùÂè∑Á†ÅÂàóË°®ÔºåÂè∑Á†ÅÈáçÂ§çÂá∫Áé∞ÁÆóÂá∫Èîô„ÄÇÊúüÊúõÁöÑËæìÂá∫Êñá‰ª∂ÊòØ‰ª•ÂçáÂ∫èÊéíÂàóÁöÑÁîµËØùÂè∑Á†ÅÂàóË°®„ÄÇÂ∫îÁî®ËÉåÊôØÂêåÊó∂ÂÆö‰πâ‰∫ÜÁõ∏Â∫îÁöÑÊÄßËÉΩÈúÄÊ±Ç„ÄÇÂΩì‰∏éÁ≥ªÁªüÁöÑ‰ºöËØùÊó∂Èó¥ËæÉÈïøÊó∂ÔºåÁî®Êà∑Â§ßÁ∫¶ÊØèÂ∞èÊó∂ËØ∑Ê±Ç‰∏ÄÊ¨°ÊúâÂ∫èÊñá‰ª∂ÔºåÂπ∂‰∏îÂú®ÊéíÂ∫èÊú™ÂÆåÊàê‰πãÂâç‰ªÄ‰πàÈÉΩÂÅö‰∏ç‰∫Ü„ÄÇÂõ†Ê≠§ÔºåÊéíÂ∫èÊúÄÂ§öÂè™ÂÖÅËÆ∏ÊâßË°åÂá†ÂàÜÈíüÔºå10 ÁßíÈíüÊòØÊØîËæÉÁêÜÊÉ≥ÁöÑËøêË°åÊó∂Èó¥„ÄÇ ÂáÜÁ°ÆÁöÑÈóÆÈ¢òÊèèËø∞ËæìÂÖ•Ôºö ‰∏Ä‰∏™ÊúÄÂ§öÂåÖÂê´ n ‰∏™Ê≠£Êï¥Êï∞ÁöÑÊñá‰ª∂ÔºåÊØè‰∏™Êï∞ÈÉΩÂ∞è‰∫é nÔºåÂÖ∂‰∏≠ n=$10^7$„ÄÇÂ¶ÇÊûúÂú®ËæìÂÖ•Êñá‰ª∂‰∏≠Êúâ‰ªª‰ΩïÊï¥Êï∞ÈáçÂ§çÂá∫Áé∞Â∞±ÊòØËá¥ÂëΩÈîôËØØ„ÄÇÊ≤°ÊúâÂÖ∂‰ªñÊï∞ÊçÆ‰∏éËØ•Êï¥Êï∞Áõ∏ÂÖ≥ËÅî„ÄÇ ËæìÂá∫Ôºö ÊåâÂçáÂ∫èÊéíÂàóÁöÑËæìÂÖ•Êï¥Êï∞ÁöÑÂàóË°®„ÄÇ Á∫¶ÊùüÔºö ÊúÄÂ§öÊúâÔºàÂ§ßÁ∫¶Ôºâ1MB ÁöÑÂÜÖÂ≠òÂèØÁî®ÔºåÊúâÂÖÖË∂≥ÁöÑÁ£ÅÁõòÂ≠òÂÇ®Á©∫Èó¥„ÄÇËøêË°åÊó∂Èó¥ÊúÄÂ§öÂá†ÂàÜÈíüÔºåËøêË°åÊó∂Èó¥‰∏∫ 10 ÁßíÈíüÂ∞±‰∏çÈúÄË¶ÅÂÜç‰ºòÂåñ‰∫Ü„ÄÇ Á®ãÂ∫èËÆæËÆ°‰º†ÁªüÁöÑÊéíÂ∫èÊúâÂΩíÂπ∂ÊéíÂ∫è„ÄÅÂø´ÈÄüÊéíÂ∫èÔºå‰∏ÄËà¨‰∫∫ÊÉ≥Âà∞ÁöÑÈÉΩÊòØ‰ΩøÁî®‰∏Ä‰∏™ 4 Â≠óËäÇÁöÑ int ÂûãÊù•Ë°®Á§∫Êï∞ÊçÆÔºå‰ΩÜ 1000 ‰∏áÁöÑÊï∞ÊçÆÂ∞±ÈúÄË¶Å 40MB ÁöÑÂÜÖÂ≠òÔºåÊâÄ‰ª•ÈúÄË¶ÅËá≥Â∞ë 40 Ë∂üÊéíÂ∫èÔºåÈúÄË¶ÅËØªÂèñËæìÂÖ•Êñá‰ª∂Ëá≥Â∞ë 40 Ê¨°ÔºåËøôÂ∞Ü‰ºöÊòØÈùûÂ∏∏Â§ßÁöÑÂºÄÈîÄ„ÄÇ ÂæàÊòæÁÑ∂ÔºåÊàë‰ª¨ÁúüÊ≠£Ë¶ÅÂÅöÁöÑÂ∫îËØ•ÊòØÂéãÁº©Êï∞ÊçÆË°®Á§∫ÔºåÂ¶ÇÊûúËÉΩËÆ©ÊâÄÊúâÊï∞ÊçÆ‰∏ÄÊ¨°ËØªÂÖ•ÂÜÖÂ≠òÔºà‰ªÖ 1MBÔºâÂ∞±Â•Ω‰∫Ü„ÄÇËÄÉËôëÂà∞Ëøô‰∏ÄÈ¢òÁöÑÁâπÊÆäÊÄßÔºåÊàë‰ª¨‰ΩøÁî®ÈïøÂ∫¶‰∏∫ 1000 ‰∏á‰ΩçÁöÑ‰ΩçÂõæÊù•Ë°®Á§∫ÊâÄÊúâÊï∞ÊçÆÔºåÊØè‰∏™Êï¥Êï∞ÈÉΩÂè™Âç† 1bitÔºåÂèØ‰ª•ËØ¥ÊòØÊûÅÈôêÁöÑÊï∞ÊçÆË°®Á§∫Ê≥ï‰∫Ü„ÄÇËøôÊ†∑‰∏ÄÊù•Êàë‰ª¨Âè™ÈúÄË¶Å 125 ‰∏á‰∏™Â≠óËäÇÔºå‰πüÂ∞±ÊòØ 1.25MB ÂÜÖÂ≠ò„ÄÇÊª°Ë∂≥‰∫Ü‰∏ÄÊ¨°ËØªÂÖ•ÂÜÖÂ≠òÁöÑË¶ÅÊ±Ç„ÄÇ ËøôÁßçÊï∞ÊçÆË°®Á§∫ÔºåÂà©Áî®‰∫ÜËØ•ÈóÆÈ¢òÁöÑ‰∏â‰∏™Âú®ÊéíÂ∫èÈóÆÈ¢ò‰∏≠‰∏çÂ∏∏ËßÅÁöÑÂ±ûÊÄßÔºö ËæìÂÖ•Êï∞ÊçÆÈôêÂà∂Âú®Áõ∏ÂØπËæÉÂ∞èÁöÑËåÉÂõ¥ÂÜÖ Êï∞ÊçÆÊ≤°ÊúâÈáçÂ§ç ÂØπÊØèÊù°ËÆ∞ÂΩïËÄåË®ÄÔºåÈô§‰∫ÜÂçï‰∏ÄÊï¥Êï∞Â§ñÔºåÊ≤°Êúâ‰ªª‰ΩïÂÖ∂‰ªñÂÖ≥ËÅîÊï∞ÊçÆ ÊéíÂ∫è‰º™‰ª£Á†ÅÔºö 12345678910/* phase 1: initialize set to empty */for i = [0, n) bit[i]=0/* phase 2: insert present elements into the set */for each i in the input file bit[i]=1/* phase 3: write sorted output */for i = [0, n) if b[i]==1 write i on the output file Êó∂Èó¥-Á©∫Èó¥Êäò‰∏≠‰∏éÂèåËµ¢Ôºö ÈöèÁùÄÁé∞Âú®Â≠òÂÇ®Âô®ÁöÑÁ©∫Èó¥Ë∂äÊù•Ë∂äÂ§ßÔºåÊàë‰ª¨ÂæÄÂæÄÂÄæÂêë‰∫éÁî®Á©∫Èó¥Êç¢Êó∂Èó¥ÁöÑÁÆóÊ≥ïÔºåËøôÁßçÊäò‰∏≠ÈùûÂ∏∏Â∏∏ËßÅ„ÄÇ‰ΩÜÂáèÂ∞ëÁ®ãÂ∫èÁöÑËøêË°åÁ©∫Èó¥ÈúÄÊ±Ç‰πü‰ºöÂáèÂ∞ëÂÖ∂ËøêË°åÊó∂Èó¥„ÄÇÁ©∫Èó¥ÈúÄÊ±ÇÁöÑÂáèÂ∞ë‰πãÊâÄ‰ª•‰ºöÂØºËá¥ËøêË°åÊó∂Èó¥ÁöÑÂáèÂ∞ëÔºåÊúâ‰∏§‰∏™ÂéüÂõ†ÔºöÈúÄË¶ÅÂ§ÑÁêÜÁöÑÊï∞ÊçÆÂèòÂ∞ë‰∫ÜÔºåÊÑèÂë≥ÁùÄÂ§ÑÁêÜËøô‰∫õÊï∞ÊçÆÊâÄÈúÄÁöÑÊó∂Èó¥‰πüÂèòÂ∞ë‰∫Ü„ÄÇÂêåÊó∂ÂèØ‰ª•Â∞ÜËøô‰∫õÊï∞ÊçÆ‰øùÂ≠òÂú®ÂÜÖÂ≠ò‰∏≠ËÄå‰∏çÊòØÁ£ÅÁõò‰∏äÔºåËøõ‰∏ÄÊ≠•ÈÅøÂÖç‰∫ÜÁ£ÅÁõòËÆøÈóÆÁöÑÊó∂Èó¥ÔºàIO ÊòØÂ∑®Â§ßÁöÑÂºÄÈîÄÔºåÁΩëÁªú‰º†ÈÄíÊï∞ÊçÆÊòØÊõ¥Â§ßÁöÑÂºÄÈîÄÔºâ„ÄÇÂΩìÁÑ∂‰∫ÜÔºåÂè™ÊúâÂú®ËÆæËÆ°ËøúÈùûÊúÄ‰ºòÁöÑÊó∂ÂÄôÔºåÊâçÊúâÂèØËÉΩÊó∂Á©∫ÂèåËµ¢„ÄÇ Êäò‰∏≠Âú®ÊâÄÊúâÂ∑•Á®ãÈ¢ÜÂüüÈÉΩÂ≠òÂú®„ÄÇ‰æãÂ¶ÇÔºåÊ±ΩËΩ¶ËÆæËÆ°ËÄÖÂèØËÉΩ‰ºöÈÄöËøáÂ¢ûÂä†Ê≤âÈáçÁöÑÈÉ®‰ª∂ÔºåÁî®Ë°åÈ©∂ÈáåÁ®ãÁöÑÂáèÂ∞ëÊù•Êç¢ÂèñÊõ¥Âø´ÁöÑÂä†ÈÄü„ÄÇ‰ΩÜÂèåËµ¢ÊòØÊõ¥Â•ΩÁöÑÁªìÊûú„ÄÇÊàëÂØπËá™Â∑±È©æÈ©∂ËøáÁöÑ‰∏ÄËæÜÂ∞èËΩøËΩ¶ÂÅöËøá‰∏ÄÁï™Á†îÁ©∂ÔºåÊàëËßÇÂØüÂà∞Ôºö‚ÄúËΩøËΩ¶Âü∫Êú¨ÁªìÊûÑÈáçÈáèÁöÑÂáèÂ∞ë‰ºö‰ΩøÂêÑÂ∫ïÁõòÈÉ®‰ª∂ÁöÑÈáçÈáèËøõ‰∏ÄÊ≠•ÂáèÂ∞ë--ÁîöËá≥Ê∂àÈô§‰∫ÜÂØπÊüê‰∫õÂ∫ïÁõòÈÉ®‰ª∂ÁöÑÈúÄÊ±ÇÔºå‰æãÂ¶ÇËΩ¨ÂêëÂä©ÂäõÁ≥ªÁªü„ÄÇ‚Äù ÁúüÂÆû‰ª£Á†Å1234567891011121314151617181920212223242526272829303132#define BITSPERWORD 32#define SHIFT 5#define MASK 0x1F#define N 10000000int a[N/BITSPERWORD];void set(int i)&#123; a[i&gt;&gt;SHIFT] |= (1&lt;&lt;(i&amp;MASK));&#125;void clear(int i)&#123; a[i&gt;&gt;SHIFT] &amp;= ~(1&lt;&lt;(i&amp;MASK));&#125;void test(int i)&#123; return a[i&gt;&gt;SHIFT] &amp; (1&lt;&lt;(i&amp;MASK));&#125;int main()&#123; int i; for(i=0;i&lt;N;i++)&#123; clear(i); &#125; while(scanf("%d", &amp;i)!=EOF)&#123; set(i); &#125; for(i=0;i&lt;N;i++)&#123; if(test(i))&#123; printf("%d\n", i); &#125; &#125; return 0;&#125; ÂØπÁßª‰ΩçÊìç‰ΩúÁÜüÊÇâÁöÑËØùÂ∞±‰ºöÁü•ÈÅìÔºåi&gt;&gt;SHIFTÁöÑÊÑèÊÄùÂ∞±ÊòØi/32„ÄÇa[i&gt;&gt;SHIFT]‰πüÂ∞±ÊòØÂÆö‰ΩçÂà∞ i ÊâÄÂ±ûÁöÑÊï∞ÁªÑÂçïÂÖÉÔºàÊØè‰∏™Êï∞ÁªÑÂçïÂÖÉ 4 ‰∏™Â≠óËäÇÔºâ„ÄÇËÄåi&amp;MASKÁöÑÊÑèÊÄùÊòØi%32ÔºåÁÑ∂Âêé(1&lt;&lt;(i&amp;MASK))Â∞±ÂÆö‰Ωç‰∫Ü i Âú®ÊâÄÂ±ûÁöÑÊï∞ÁªÑÂçïÂÖÉ‰∏≠ÁöÑÂÖ∑‰Ωì‰ΩçÁΩÆ„ÄÇ ‰ΩÜÊàë‰ª¨Êâã‰∏äÊ≤°ÊúâÊï∞ÊçÆÊù•ÊµãËØïÊàë‰ª¨ÁöÑ‰ª£Á†ÅÊòØÂê¶Ê≠£Á°ÆÔºåÊµãËØïÊï∞ÊçÆÂèØ‰ª•Áî®ÈöèÊú∫ÁîüÊàêÁöÑÂäûÊ≥ï‰∫ßÁîüÔºåÂÖ∑‰Ωì‰ºöÂú®„ÄäÁºñÁ®ãÁè†ÁéëÁ¨¨ 12 Á´† ÂèñÊ†∑ÈóÆÈ¢ò„Äã‰∏≠ËÆ≤Ëß£„ÄÇ Êé•‰∏ãÊù•Êàë‰ª¨Êù•ÁúãÁúã‰π†È¢òÔºö ‰π†È¢ò Â¶ÇÊûú‰∏çÁº∫ÂÜÖÂ≠òÔºåÂ¶Ç‰Ωï‰ΩøÁî®‰∏Ä‰∏™ÂÖ∑ÊúâÂ∫ìÁöÑËØ≠Ë®ÄÊù•ÂÆûÁé∞‰∏ÄÁßçÊéíÂ∫èÁÆóÊ≥ï‰ª•Ë°®Á§∫ÂíåÊéíÂ∫èÈõÜÂêàÔºü ‰ΩøÁî® C ËØ≠Ë®ÄÁöÑÊ†áÂáÜÂ∫ìÂáΩÊï∞qsort: 1234567891011121314151617int intcompare(int *x, int *y)&#123; return *x - *y;&#125;int a[10000000];int main()&#123; int n=0; while(scanf("%d",&amp;a[n])!=EOF)&#123; n++; &#125; qsort(a, n, sizeof(int), intcompare); for(int i=0;i&lt;n;i++)&#123; printf("%d", a[i]); &#125; return 0;&#125; ‰ΩøÁî® C++ÁöÑÊ†áÂáÜÊ®°ÊùøÂ∫ì‰∏≠ÁöÑÂÆπÂô®setÊù•ÂÆåÊàêÁõ∏Âêå‰ªªÂä°Ôºö 123456789101112int main()&#123; set&lt;int&gt; S; int i; set&lt;int&gt;::iterator j; while(cin &gt;&gt; i)&#123; S.insert(i); &#125; for(j=S.begin();j&lt;S.end();j++)&#123; cout &lt;&lt; *j &lt;&lt; endl; &#125; return 0;&#125; Â¶Ç‰Ωï‰ΩøÁî®‰ΩçÈÄªËæëËøêÁÆóÔºà‰æãÂ¶Ç‰∏é„ÄÅÊàñ„ÄÅÁßª‰ΩçÔºâÊù•ÂÆûÁé∞‰ΩçÂêëÈáèÔºü ‰ª£Á†Å‰∏äÈù¢Â∑≤ÁªèÁªôÂá∫ÔºöÁúüÂÆû‰ª£Á†Å ËøêË°åÊó∂ÊïàÁéáÊòØËÆæËÆ°ÁõÆÊ†áÁöÑ‰∏Ä‰∏™ÈáçË¶ÅÁªÑÊàêÈÉ®ÂàÜÔºåÊâÄÂæóÂà∞ÁöÑÁ®ãÂ∫èÈúÄË¶ÅË∂≥Â§üÈ´òÊïà„ÄÇÂú®‰Ω†Ëá™Â∑±ÁöÑÁ≥ªÁªü‰∏äÂÆûÁé∞‰ΩçÂõæÊéíÂ∫èÂπ∂Â∫¶ÈáèÂÖ∂ËøêË°åÊó∂Èó¥„ÄÇËØ•Êó∂Èó¥‰∏éÁ≥ªÁªüÊéíÂ∫èÁöÑËøêË°åÊó∂Èó¥‰ª•Âèä‰π†È¢ò 1 ‰∏≠ÊéíÂ∫èÁöÑËøêË°åÊó∂Èó¥Áõ∏ÊØîÂ¶Ç‰ΩïÔºüÂÅáËÆæ n ‰∏∫ 10000000Ôºå‰∏îËæìÂÖ•Êñá‰ª∂ÂåÖÂê´ 10000000 ‰∏™Êï¥Êï∞„ÄÇ Â¶ÇÊûúËÆ§ÁúüËÄÉËôë‰∫Ü‰π†È¢ò 3Ôºå‰Ω†Â∞Ü‰ºöÁîüÊàêÂ∞è‰∫é n ‰∏îÊ≤°ÊúâÈáçÂ§çÁöÑ k ‰∏™Êï¥Êï∞ÁöÑÈóÆÈ¢ò„ÄÇÊúÄÁÆÄÂçïÁöÑÊñπÊ≥ïÂ∞±ÊòØ‰ΩøÁî®Ââç k ‰∏™Ê≠£Êï¥Êï∞„ÄÇËøô‰∏™ÊûÅÁ´ØÁöÑÊï∞ÊçÆÈõÜÂêàÂ∞Ü‰∏ç‰ºöÊòéÊòæÂú∞ÊîπÂèò‰ΩçÂõæÊñπÊ≥ïÁöÑËøêË°åÊó∂Èó¥Ôºå‰ΩÜÊòØÂèØËÉΩ‰ºöÊ≠™Êõ≤Á≥ªÁªüÊéíÂ∫èÁöÑËøêË°åÊó∂Èó¥„ÄÇÂ¶Ç‰ΩïÁîüÊàê‰Ωç‰∫é 0 Ëá≥ n-1 ‰πãÈó¥ÁöÑ k ‰∏™‰∏çÂêåÁöÑÈöèÊú∫È°∫Â∫èÁöÑÈöèÊú∫Êï¥Êï∞ÔºüÂ∞ΩÈáè‰Ωø‰Ω†ÁöÑÁ®ãÂ∫èÁÆÄÁü≠‰∏îÈ´òÊïà„ÄÇ ÈÇ£‰∏™Á®ãÂ∫èÂëòËØ¥‰ªñÊúâ 1MB ÁöÑÂÜÖÂ≠òÁ©∫Èó¥ÂèØÁî®Ôºå‰ΩÜÊòØÊàë‰ª¨Ê¶ÇË¶ÅÊèèËø∞ÁöÑ‰ª£Á†ÅÈúÄË¶Å 1.25MB ÂÜÖÂ≠ò„ÄÇ‰ªñÂèØ‰ª•‰∏çË¥πÂäõÁöÑÁ¥¢ÂèñÂà∞È¢ùÂ§ñÁöÑÁ©∫Èó¥„ÄÇÂ¶ÇÊûú 1MB Á©∫Èó¥ÊòØ‰∏•Ê†ºÁöÑËæπÁïåÔºå‰Ω†‰ºöÊé®ËçêÂ¶Ç‰ΩïÂ§ÑÁêÜÂë¢Ôºü‰Ω†ÁöÑÁÆóÊ≥ïÁöÑËøêË°åÊó∂Èó¥ÂèàÊòØÂ§öÂ∞ëÔºü ‰ΩøÁî®‰ΩçÂõæË°®Á§∫ 1 000 ‰∏á‰∏™Êï∞ÈúÄË¶Å 1000 ‰∏á‰∏™‰ΩçÔºåÊàñËÄÖËØ¥ 125 ‰∏áÂ≠óËäÇ„ÄÇËÄÉËôëÂà∞Ê≤°Êúâ‰ª•Êï∞Â≠ó 0 Êàñ 1 ÊâìÂ§¥ÁöÑÁîµËØùÂè∑Á†ÅÔºåÊàë‰ª¨ÂèØ‰ª•Â∞ÜÂÜÖÂ≠òÈúÄÊ±ÇÈôç‰Ωé‰∏∫ 100 ‰∏áÂ≠óËäÇ„ÄÇÂè¶‰∏ÄÁßçÂÅöÊ≥ïÊòØÈááÁî®‰∏§Ë∂üÁÆóÊ≥ïÔºåÈ¶ñÂÖà‰ΩøÁî®5 000 000/8=625 000 ‰∏™Â≠óÁöÑÂ≠òÂÇ®Á©∫Èó¥Êù•ÊéíÂ∫è 0~4 999 999 ‰πãÈó¥ÁöÑÊï¥Êï∞ÔºåÁÑ∂ÂêéÂú®Á¨¨‰∫åË∂üÊéíÂ∫è 5 000 000~9 999 999 ÁöÑÊï¥Êï∞„ÄÇk Ë∂üÁÆóÊ≥ïÂèØ‰ª•Âú® kn ÁöÑÊó∂Èó¥ÂºÄÈîÄÂíå n/k ÁöÑÁ©∫Èó¥ÂºÄÈîÄÂÜÖÂÆåÊàêÂØπÊúÄÂ§ö n ‰∏™Â∞è‰∫é n ÁöÑÊó†ÈáçÂ§çÊ≠£Êï¥Êï∞ÁöÑÊéíÂ∫è„ÄÇ Â¶ÇÊûúÈÇ£‰∏™Á®ãÂ∫èÂëòËØ¥ÁöÑ‰∏çÊòØÊØè‰∏™Êï¥Êï∞ÊúÄÂ§öÂá∫Áé∞‰∏ÄÊ¨°ÔºåËÄåÊòØÊØè‰∏™Êï¥Êï∞ÊúÄÂ§öÂá∫Áé∞ 10 Ê¨°Ôºå‰Ω†ÂèàÂ¶Ç‰ΩïÂª∫ËÆÆ‰ªñÂë¢Ôºü‰Ω†ÁöÑËß£ÂÜ≥ÊñπÊ°àÂ¶Ç‰ΩïÈöèÁùÄÂèØÁî®Â≠òÂÇ®Á©∫Èó¥ÊÄªÈáèÁöÑÂèòÂåñËÄåÂèòÂåñÔºü Â¶ÇÊûúÊØè‰∏™Êï¥Êï∞ÊúÄÂ§öÂá∫Áé∞ 10 Ê¨°ÔºåÈÇ£‰πàÊàë‰ª¨Â∞±ÂèØ‰ª•‰ΩøÁî® 4 ‰ΩçÁöÑÂçäÂ≠óËäÇÊù•ÁªüËÆ°ÂÆÉÂá∫Áé∞ÁöÑÊ¨°Êï∞„ÄÇÂà©Áî®‰π†È¢ò 5 ÁöÑÁ≠îÊ°àÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî® 10 000 000/2 ‰∏™Â≠óËäÇÂú® 1 Ë∂üÂÜÖÂÆåÊàêÂØπÊï¥‰∏™Êñá‰ª∂ÁöÑÊéíÂ∫èÔºåÊàñ‰ΩøÁî® 10 000 000/2k ‰∏™Â≠óËäÇÂú® k Ë∂üÂÜÖÂÆåÊàêÂØπÊï¥‰∏™Êñá‰ª∂ÁöÑÊéíÂ∫è„ÄÇ ‰ΩøÁî®Êõ¥Â§öÁöÑÁ©∫Èó¥Êù•Êç¢ÂèñÊõ¥Â∞ëÁöÑËøêË°åÊó∂Èó¥Â≠òÂú®‰∏Ä‰∏™ÈóÆÈ¢òÔºöÂàùÂßãÂåñÁ©∫Èó¥Êú¨Ë∫´ÈúÄË¶ÅÊ∂àËÄóÂ§ßÈáèÁöÑÊó∂Èó¥„ÄÇËØ¥ÊòéÂ¶Ç‰ΩïËÆæËÆ°‰∏ÄÁßçÊäÄÊúØÔºåÂú®Á¨¨‰∏ÄÊ¨°ËÆøÈóÆÂêëÈáèÁöÑÈ°πÊó∂Â∞ÜÂÖ∂ÂàùÂßãÂåñ‰∏∫ 0„ÄÇ‰Ω†ÁöÑÊñπÊ°àÂ∫îËØ•‰ΩøÁî®Â∏∏ÈáèÊó∂Èó¥ËøõË°åÂàùÂßãÂåñÂíåÂêëÈáèËÆøÈóÆÔºå‰ΩøÁî®ÁöÑÈ¢ùÂ§ñÁ©∫Èó¥Â∫îÊ≠£ÊØî‰∫éÂêëÈáèÁöÑÂ§ßÂ∞è„ÄÇÂõ†‰∏∫ËØ•ÊñπÊ≥ïÈÄöËøáËøõ‰∏ÄÊ≠•Â¢ûÂä†Á©∫Èó¥Êù•ÂáèÂ∞ëÂáèÂ∞ëÂàùÂßãÂåñÁöÑÊó∂Èó¥ÔºåÊâÄ‰ª•‰ªÖÂú®Á©∫Èó¥ÂæàÂªâ‰ª∑„ÄÅÊó∂Èó¥ÂæàÂÆùË¥µ‰∏îÂêëÈáèÂæàÁ®ÄÁñèÁöÑÊÉÖÂÜµ‰∏ãÊâçËÄÉËôë‰ΩøÁî®„ÄÇ ÂÄüÂä©‰∫é‰∏§‰∏™È¢ùÂ§ñÁöÑ n ÂÖÉÂêëÈáè from„ÄÅto Âíå‰∏Ä‰∏™Êï¥Êï∞ topÔºåfrom Âíå to ‰πüÈÉΩÊ≤°ÊúâÂàùÂßãÂåñËøáÔºåtop ÂàùÂßãÂåñ‰∏∫ 0„ÄÇÂΩìÊàë‰ª¨ËÆøÈóÆÁ¥¢Âºï‰∏∫ i ÁöÑ data ÂÖÉÁ¥†ÔºåÊÉ≥Ë¶ÅÁü•ÈÅìdata[i]ÊúâÊ≤°ÊúâÂàùÂßãÂåñËøá„ÄÇÂ¶ÇÊûúfrom[i]&lt;top‰∏îto[from[i]]=iÔºåÈÇ£‰πàËØ¥ÊòéÂ∑≤ÁªèÂàùÂßãÂåñËøá„ÄÇto Êï∞ÁªÑÂ∞±ÊòØÁî®Êù•ËÆ∞ÂΩïÂ∑≤ÁªèËÆøÈóÆËøáÂì™‰∫õ data ÂÖÉÁ¥†ÁöÑÔºåÂÆûÈôÖ‰∏ä to Êï∞ÁªÑÂèØ‰ª•ÊòØ‰∏Ä‰∏™Âä®ÊÄÅÊï∞ÁªÑ&gt;)„ÄÇ ‰∏ãÈù¢‰ª£Á†ÅÂÆûÁé∞ÂØπ data[i]ÁöÑÈ¶ñÊ¨°ËÆøÈóÆÔºö 1234from[i] = top;to[top] = i;data[i] = 0;top++; Âú®ÊàêÊú¨‰ΩéÂªâÁöÑÈöîÊó•ÈÄÅËææÊó∂‰ª£‰πãÂâçÔºåÂïÜÂ∫óÂÖÅËÆ∏È°æÂÆ¢ÈÄöËøáÁîµËØùËÆ¢Ë¥≠ÂïÜÂìÅÔºåÂπ∂Âú®Âá†Â§©Âêé‰∏äÈó®Ëá™Âèñ„ÄÇÂïÜÂ∫óÁöÑÊï∞ÊçÆÂ∫ì‰ΩøÁî®ÂÆ¢Êà∑ÁöÑÁîµËØùÂè∑Á†Å‰Ωú‰∏∫ÂÖ∂Ê£ÄÁ¥¢ÁöÑ‰∏ªÂÖ≥ÈîÆÂ≠óÔºàÂÆ¢Êà∑Áü•ÈÅì‰ªñ‰ª¨Ëá™Â∑±ÁöÑÁîµËØùÂè∑Á†ÅÔºåËÄå‰∏îËøô‰∫õÂÖ≥ÈîÆÂ≠óÂá†‰πéÈÉΩÊòØÂîØ‰∏ÄÁöÑÔºâ„ÄÇ‰Ω†Â¶Ç‰ΩïÁªÑÁªáÂïÜÂ∫óÁöÑÊï∞ÊçÆÂ∫ìÔºå‰ª•ÂÖÅËÆ∏È´òÊïàÁöÑÊèíÂÖ•ÂíåÊ£ÄÁ¥¢Êìç‰ΩúÔºü ÂïÜÂ∫óÂ∞ÜÁ∫∏Ë¥®ËÆ¢ÂçïË°®Ê†ºÊîæÂú® 10x10 ÁöÑÁÆ±Êï∞ÁªÑ‰∏≠Ôºå‰ΩøÁî®ÂÆ¢Êà∑ÁîµËØùÂè∑Á†ÅÁöÑÊúÄÂêé‰∏§‰Ωç‰Ωú‰∏∫Êï£ÂàóÁ¥¢Âºï„ÄÇÂΩìÂÆ¢Êà∑ÊâìÁîµËØù‰∏ãËÆ¢ÂçïÊó∂ÔºåÂ∞ÜËÆ¢ÂçïÊîæÂà∞ÈÄÇÂΩìÁöÑÁÆ±‰∏≠„ÄÇÂΩìÂÆ¢Êà∑Êù•ÂèñÂïÜÂìÅÊó∂ÔºåÈîÄÂîÆ‰∫∫ÂëòÈ°∫Â∫èÊêúÁ¥¢ÂØπÂ∫îÁÆ±‰∏≠ÁöÑËÆ¢Âçï--ËøôÂ∞±ÊòØÁªèÂÖ∏ÁöÑ‚ÄúÁî®È°∫Â∫èÊêúÁ¥¢Êù•Ëß£ÂÜ≥ÂÜ≤Á™ÅÁöÑÂºÄÊîæÊï£Âàó‚Äù„ÄÇÁîµËØùÂè∑Á†ÅÁöÑÊúÄÂêé‰∏§‰ΩçÊï∞Â≠óÈùûÂ∏∏Êé•Ëøë‰∫éÈöèÊú∫ÔºåÂõ†Ê≠§ÊòØÈùûÂ∏∏ÁêÜÊÉ≥ÁöÑÊï£ÂàóÂáΩÊï∞ÔºåËÄåÊúÄÂâçÈù¢ÁöÑ‰∏§‰ΩçÊï∞Â≠óÂàôÂæà‰∏çÁêÜÊÉ≥ - - ‰∏∫‰ªÄ‰πà?‰∏Ä‰∫õÂ∏ÇÊîøÊú∫ÂÖ≥‰ΩøÁî®Á±ª‰ººÁöÑÊñπÊ°àÂú®ËÆ∞‰∫ãÊú¨‰∏≠ËÆ∞ÂΩï‰ø°ÊÅØ„ÄÇ Âú® 20 ‰∏ñÁ∫™ 80 Âπ¥‰ª£Êó©ÊúüÔºåÊ¥õÂÖãÂ∏åÂæ∑ÂÖ¨Âè∏Âä†Âà©Á¶èÂ∞º‰∫öÂ∑ûÊ°ëÂ∞ºÁª¥Â∞îÂ∏ÇÂ∑•ÂéÇÁöÑÂ∑•Á®ãÂ∏àÊØèÂ§©ÈÉΩË¶ÅÂ∞ÜËÆ∏Â§öÁî±ËÆ°ÁÆóÊú∫ËæÖÂä©ËÆæËÆ°ÔºàCADÔºâÁ≥ªÁªüÁîüÊàêÁöÑÂõæÁ∫∏‰ªéÂ∑•ÂéÇÈÄÅÂà∞‰Ωç‰∫éÂú£ÂÖãÈ≤ÅÊñØÂ∏ÇÁöÑÊµãËØïÁ´ô„ÄÇËôΩÁÑ∂‰ªÖÊúâ 40 ÂÖ¨ÈáåËøúÔºå‰ΩÜ‰ΩøÁî®Ê±ΩËΩ¶Âø´ÈÄíÊúçÂä°ÊØèÂ§©ÈÉΩÈúÄË¶Å‰∏Ä‰∏™Â§öÂ∞èÊó∂ÁöÑÊó∂Èó¥ÔºàÁî±‰∫é‰∫§ÈÄöÈòªÂ°ûÂíåÂ±±Ë∑ØÂ¥éÂ≤ñÔºâÔºåËä±Ë¥π 100 ÁæéÂÖÉ„ÄÇËØ∑ÁªôÂá∫Êñ∞ÁöÑÊï∞ÊçÆ‰º†ËæìÊñπÊ°àÂπ∂‰º∞ËÆ°ÊØè‰∏ÄÁßçÊñπÊ°àÁöÑË¥πÁî®„ÄÇ ‰∏§Âú∞ÁöÑËÆ°ÁÆóÊú∫ÂéüÂÖàÊòØÈÄöËøáÂæÆÊ≥¢ËøûÊé•ÁöÑÔºå‰ΩÜÊòØÂΩìÊó∂ÊµãËØïÁ´ôÊâìÂç∞ÂõæÁ∫∏ÊâÄÈúÄÁöÑÊâìÂç∞Êú∫Âç¥ÈùûÂ∏∏ÊòÇË¥µ„ÄÇÂõ†Ê≠§ÔºåËØ•Âõ¢ÈòüÂú®‰∏ªÂéÇÁªòÂà∂ÂõæÁ∫∏ÔºåÁÑ∂ÂêéÊãçÊëÑ‰∏ãÊù•Âπ∂ÈÄöËøá‰ø°È∏ΩÊää 35 ÊØ´Á±≥ÁöÑÂ∫ïÁâáÈÄÅÂà∞ÊµãËØïÁ´ôÔºåÂú®ÊµãËØïÁ´ôËøõË°åÊîæÂ§ßÂπ∂ÊâìÂç∞ÊàêÂõæÁâá„ÄÇÈ∏ΩÂ≠êÊù•Âõû‰∏Ä.Ê¨°ÈúÄË¶Å 45 ÂàÜÈíüÔºåÊòØÊ±ΩËΩ¶ÊâÄÈúÄÊó∂Èó¥ÁöÑ‰∏ÄÂçäÔºåÂπ∂‰∏îÊØèÂ§©Âè™ÈúÄË¶ÅËä±Ë¥πÂá†ÁæéÂÖÉ„ÄÇÂú®È°πÁõÆÂºÄÂèëÁöÑ 16 ‰∏™Êúà‰∏≠Ôºå‰ø°È∏Ω‰º†ÈÄÅ‰∫ÜÂá†ÁôæÂç∑Â∫ïÁâáÔºå‰ªÖ‰∏¢Â§±‰∫Ü‰∏§Âç∑(ÂΩìÂú∞ÊúâÈπ∞ÔºåÂõ†Ê≠§Ê≤°ÊúâËÆ©‰ø°È∏Ω‰º†ÈÄÅÊú∫ÂØÜÊï∞ÊçÆ)„ÄÇÁî±‰∫éÁé∞Âú®ÊâìÂç∞Êú∫ÊØîËæÉ‰æøÂÆúÔºåÂõ†Ê≠§ÂèØ‰ª•‰ΩøÁî®ÂæÆÊ≥¢ÈìæË∑ØËß£ÂÜ≥ËØ•ÈóÆÈ¢ò„ÄÇ ËΩΩ‰∫∫Ëà™Â§©ÁöÑÂÖàÈ©±‰ª¨ÂæàÂø´Â∞±ÊÑèËØÜÂà∞ÈúÄË¶ÅÂú®Â§ñÂ§™Á©∫ÁöÑÊûÅÁ´ØÁéØÂ¢É‰∏ãÂÆûÁé∞È°∫Âà©‰π¶ÂÜô„ÄÇÊ∞ëÈó¥Áõõ‰º†ÁæéÂõΩÂõΩÂÆ∂ÂÆáËà™Â±Ä(NASA)Ëä±Ë¥π 100 ‰∏áÁæéÂÖÉÁ†îÂèëÂá∫‰∫Ü‰∏ÄÁßçÁâπÊÆäÁöÑÈí¢Á¨îÊù•Ëß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢ò„ÄÇÈÇ£‰πàÔºåÂâçËãèËÅîÂèà‰ºöÂ¶Ç‰ΩïËß£ÂÜ≥Áõ∏ÂêåÁöÑÈóÆÈ¢òÂë¢? ÁúãËøá‰∏âÂÇªÂ§ßÈóπÂÆùËé±ÂùûÁöÑÈÉΩÁü•ÈÅìÔºåÂâçËãèËÅîÁî®ÁöÑÊòØÈìÖÁ¨îÔºå‰ΩÜÈìÖÁ¨îÁöÑÁ¢éÂ±ëÁî±‰∫éÂ§±ÈáçÊºÇÊµÆÂú®Á©∫‰∏≠‰ºöÊòØÂæàÈ∫ªÁÉ¶ÁöÑÈóÆÈ¢ò„ÄÇ]]></content>
      <tags>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄäAPUE-3rd„Äã ËØª‰π¶Á¨îËÆ∞ -- File I/O]]></title>
    <url>%2Fblog%2F2018%2F05%2F28%2FAPUE-File-IO%2F</url>
    <content type="text"><![CDATA[ÂâçË®ÄËøôÁ´†ËÆ≤ÁöÑÊòØÊñá‰ª∂ IOÔºåÂÖ∂‰∏≠ÊúâÂá†‰∏™ÈùûÂ∏∏ÈáçË¶ÅÁöÑÊ¶ÇÂøµÔºö File DesriptorsÔºåÊñá‰ª∂ÊèèËø∞Á¨¶ current file offsetÔºåÂΩìÂâçÊñá‰ª∂ÂÅèÁßªÈáè File Sharing Data StructureÔºåÊñá‰ª∂ÂÖ±‰∫´Êï∞ÊçÆÊ®°Âûã file descriptor flags ÔºåÊñá‰ª∂ÊèèËø∞‰Ωç file status flags ÔºåÊñá‰ª∂Áä∂ÊÄÅ‰Ωç File Descriptors ÂØπÂÜÖÊ†∏Êù•ËØ¥ÔºåÊâÄÊúâ ÊâìÂºÄÁöÑÊñá‰ª∂ ÈÉΩ‰ΩøÁî® file descriptor ÂºïÁî®„ÄÇ Êñá‰ª∂ÊèèËø∞Á¨¶ÊòØ‰∏Ä‰∏™ÈùûË¥üÊï¥Êï∞„ÄÇÂΩìÊàë‰ª¨ÊâìÂºÄ‰∏Ä‰∏™Â≠òÂú®ÁöÑÊñá‰ª∂ÊàñËÄÖÂàõÂª∫‰∏Ä‰∏™Êñ∞Êñá‰ª∂ÔºåÂÜÖÊ†∏ËøîÂõû‰∏Ä‰∏™Êñá‰ª∂ÊèèËø∞Á¨¶ÁªôËøõÁ®ã„ÄÇ ÂΩìÊàë‰ª¨ÊÉ≥Ë¶ÅËØªÊàñËÄÖÂÜô‰∏Ä‰∏™Êñá‰ª∂ÔºåÊàë‰ª¨ÈÄöËøáÊñá‰ª∂ÊèèËø∞Á¨¶Êù•Á°ÆÂÆöËøô‰∏™Êñá‰ª∂ÔºåÊñá‰ª∂ÊèèËø∞Á¨¶ÊòØË¢´ open ÊàñËÄÖ creat ËøîÂõûÁöÑÔºåÁÑ∂Âêé‰Ωú‰∏∫ read ÊàñËÄÖ write ÁöÑ‰∏Ä‰∏™ÂèÇÊï∞„ÄÇ Êñá‰ª∂ÊèèËø∞Á¨¶ÈÉΩ‰ΩøÁî®Â∞ΩÂèØËÉΩÂ∞èÁöÑÈùûË¥üÊï¥Êï∞ÔºåFile descriptors range from 0 through OPEN_MAX‚àí1. Êúâ‰∏â‰∏™ magic numberÔºå0 ‰ª£Ë°® STDIN_FILENOÔºå1 ‰ª£Ë°® STDOUT_FILENOÔºå2 ‰ª£Ë°® STDERR_FILENO„ÄÇËôΩÁÑ∂ËøôÂ∑≤ÁªèÊòØ POSIX.1 ÊâÄÂÆö‰πâÁöÑÊ†áÂáÜÔºå‰ΩÜ‰∏∫‰∫ÜÁ®ãÂ∫èÁöÑÂèØËØªÊÄßÔºåËøòÊòØ‰∏çÂª∫ËÆÆÁõ¥Êé•ÂÜôÊï∞Â≠ó„ÄÇËøô‰∏â‰∏™Â∏∏ÈáèÂÆö‰πâÂú®&lt;unistd.h&gt;‰∏≠„ÄÇ open and openat FunctionsA file is opened or created by calling either the open function or the openat function. 1234#include &lt;fcntl.h&gt;int open(const char *path, int oflag, ... /* mode_t mode */ );int openat(int fd, const char *path, int oflag, ... /* mode_t mode */ );// Both return: file descriptor if OK, ‚àí1 on error ÊúÄÂêé‰∏Ä‰∏™ÂèÇÊï∞ÊòØ...ÔºåËøôÊòØ ISO C ÂÆö‰πâÂâ©‰∏ãÁöÑÂ§ö‰∏™ÂèÇÊï∞ÁöÑÊñπÂºè„ÄÇÂØπËøô‰∫õÂáΩÊï∞Êù•ËØ¥ÔºåÂè™ÊúâÂΩìÊñ∞Êñá‰ª∂Ë¢´ÂàõÂª∫Êó∂ÔºåÊúÄÂêé‰∏Ä‰∏™ÂèÇÊï∞ÊâçË¢´‰ΩøÁî®ÔºåÂêéÈù¢Êàë‰ª¨‰ºöËÆ≤„ÄÇÂú®Ëøô‰∏™ÂéüÂûã‰∏≠Êàë‰ª¨ÊääËøô‰∏™ÂèÇÊï∞ÂÜô‰Ωú‰∏Ä‰∏™Ê≥®Èáä„ÄÇ path Ëøô‰∏™ÂèÇÊï∞ÊòØË¶ÅÊâìÂºÄÊàñËÄÖË¶ÅÂàõÂª∫ÁöÑÊñá‰ª∂ÁöÑÂêçÂ≠ó„ÄÇËøô‰∏™ÂáΩÊï∞ÊúâÂ§öÁßçÊìç‰ΩúÔºåÂÆöÂú®Âú® oflag ÂèÇÊï∞Èáå„ÄÇËøô‰∏™ÂèÇÊï∞Áî±‰∏ãÂàó‰∏Ä‰∏™ÊàñËÄÖÂ§ö‰∏™ÂÆö‰πâÂú®&lt;fcntl.h&gt;Â§¥Êñá‰ª∂‰∏≠ÁöÑÂ∏∏ÈáèÈÄöËøá Êàñ(‰∏ÄÁßçÈÄªËæëÊìç‰Ωú) Êìç‰ΩúÊûÑÊàêÔºö O_RDONLY Open for reading only O_WRONLY Open for writing only O_RDWR Open for reading and writing Most implementations define O_RDONLY as 0, O_WRONLY as 1, and O_RDWR as 2, for compatibility with older programs. ‰∏∫‰∫ÜÂÖºÂÆπËÄÅÁ®ãÂ∫èÔºåËÆ∏Â§öÂÆûÁé∞ÂÆö‰πâ O_RDONLY as 0, O_WRONLY as 1, and O_RDWR as 2„ÄÇ O_EXEC Open for execute only O_SEARCH Open for search only(applies to directories) The purpose of the O_SEARCH constant is to evaluate search permissions at the time a directory is opened. Further operations using the directory‚Äôs file descriptor will not reevaluate permission to search the directory. None of the versions of the operating systems covered in this book support O_SEARCH yet. One and only one of the previous five constants must be specified. The following constants are optional: ‰∏äÈù¢ÁöÑ‰∫î‰∏™Â∏∏ÈáèÊúâ‰∏îÂè™Êúâ‰∏Ä‰∏™ÂøÖÈ°ªË¢´ÊòéÁ°Æ„ÄÇÊé•‰∏ãÊù•ÁöÑÊòØÂèØÈÄâÂ∏∏ÈáèÔºö O_APPEND Append to the end of file on each write. We describe this option in detail in Section 3.11. O_CLOEXEC Set the FD_CLOEXEC file descriptor flag. We discuss file descriptor flags in Section 3.14. O_CREAT Create the file if it doesn‚Äôt exist. This option requires a third argument to the open function (a fourth argument to the openat function) ‚Äî the mode, which specifies the access permission bits of the new file. (When we describe a file‚Äôs access permission bits in Section 4.5, we‚Äôll see how to specify the mode and how it can be modified by the umask value of a process.) ÂàõÂª∫‰∏Ä‰∏™Êñá‰ª∂ÔºåÂ¶ÇÊûú‰∏çÂ≠òÂú®„ÄÇËøô‰∏™Êìç‰ΩúÈúÄË¶Å open ÂáΩÊï∞ÁöÑÁ¨¨‰∏â‰∏™ÂèÇÊï∞Ôºàopenat ÂáΩÊï∞ÁöÑÁ¨¨Âõõ‰∏™ÂèÇÊï∞Ôºâ‚Äî modeÔºåÂÆÉÊòéÁ°Æ‰∫ÜËøô‰∏™Êñ∞Êñá‰ª∂ÁöÑËÆøÈóÆÊùÉÈôê‰Ωç„ÄÇÔºàÂΩìÊàë‰ª¨Âú®Á¨¨ 4.5 Á´†ËäÇËÆ®ËÆ∫Êñá‰ª∂ÁöÑËÆøÈóÆÊùÉÈôê‰ΩçÔºåÊàë‰ª¨Â∞ÜÁúãÂà∞Â¶Ç‰ΩïÊòéÁ°Æ modeÔºå‰ª•ÂèäÂÆÉÂ¶Ç‰Ωï‰øÆÊîπËøõÁ®ãÁöÑ umask ÂÄº„ÄÇÔºâ O_DIRECTORY Generate an error if path doesn‚Äôt refer to a directory. O_EXCL Generate an error if O_CREAT is also specified and the file already exists. This test for whether the file already exists and the creation of the file if it doesn‚Äôt exist is an atomic operation. We describe atomic operations in more detail in Section 3.11. Â¶ÇÊûú O_CREAT Ë¢´‰ΩøÁî®‰∫Ü‰∏îÊñá‰ª∂Â∑≤ÁªèÂ≠òÂú®Â∞±‰ºöÁîüÊàê‰∏Ä‰∏™ÈîôËØØ„ÄÇËøô‰∏™Â∏∏ÈáèÁöÑ‰ΩúÁî®ÊòØÊ£ÄÊµãÊñá‰ª∂ÊòØÂê¶Â≠òÂú®Â¶ÇÊûúÊñá‰ª∂‰∏çÂ≠òÂú®Â∞±ÂàõÂª∫ÔºåËøôÊòØ‰∏Ä‰∏™ÂéüÂ≠êÊìç‰Ωú„ÄÇÊàë‰ª¨Â∞ÜÂú®Á¨¨ 3.11 Á´†ËäÇËÆ®ËÆ∫Êõ¥Â§öÂéüÂ≠êÊìç‰ΩúÁöÑÁªÜËäÇ„ÄÇ O_NOCTTY If path refers to a terminal device, do not allocate the device as the controlling terminal for this process. We talk about controlling terminals in Section 9.6. Â¶ÇÊûúËøô‰∏™Ë∑ØÂæÑÊåáÂêëÁöÑÊòØÁªàÁ´ØËÆæÂ§áÔºåÂàô‰∏çÂ∞ÜËøô‰∏™ËÆæÂ§áÂàÜÈÖç‰∏∫Ê≠§ËøõÁ®ãÁöÑÊéßÂà∂ÁªàÁ´Ø„ÄÇ O_NONBLOCK If path refers to a FIFO, a block special file, or a character special file, this option sets the nonblocking mode for both the opening of the file and subsequent I/O. We describe this mode in Section 14.2. Â¶ÇÊûú path ÊåáÂêë FIFOÔºàÂÖàËøõÂÖàÂá∫ÔºâÔºå‰∏Ä‰∏™ÂùóÁâπÊÆäÊñá‰ª∂Ôºå‰∏Ä‰∏™Â≠óÁ¨¶ÁâπÊÆäÊñá‰ª∂ÔºåËøô‰∏™ÈÄâÈ°πËÆæÁΩÆ‰∫ÜÈùûÈòªÂ°ûÊ®°Âºè‰∏∫Êú¨Ê¨°ÁöÑÊâìÂºÄÊìç‰ΩúÂíåÂêéÁª≠ÁöÑ I/O Êìç‰Ωú„ÄÇ In earlier releases of System V, the O_NDELAY (no delay) flag was introduced. This option is similar to the O_NONBLOCK (nonblocking) option, but an ambiguity was introduced in the return value from a read operation. The no-delay option causes a read operation to return 0 if there is no data to be read from a pipe, FIFO, or device, but this conflicts with a return value of 0, indicating an end of file. SVR4-based systems still support the no-delay option, with the old semantics, but new applications should use the nonblocking option instead. Âú®Êó©ÊúüÁöÑ System VÔºåÊúâ‰∏Ä‰∏™ O_NDELAY(no delay)Á¨¶Âè∑„ÄÇËøô‰∏™Á¨¶Âè∑Âíå O_NONBLOCK(nonblocking)ÈÄâÈ°πÁõ∏‰ººÔºå‰ΩÜ‰ªñÁöÑËØªÊìç‰ΩúËøîÂõûÂÄºÂÖ∑Êúâ‰∫å‰πâÊÄß„ÄÇÂ¶ÇÊûúÁÆ°ÈÅìÔºåÂÖàËøõÂÖàÂá∫ÔºåÊàñËÄÖËÆæÂ§áÊ≤°ÊúâÊï∞ÊçÆÂèØËØªÔºåno-delay ÈÄâÈ°πÂ∞±‰ºöÈÄ†Êàê read Êìç‰ΩúËøîÂõû 0ÔºåËøô‰∏é end of file ÈÄ†ÊàêÁöÑËøîÂõûÂÄº 0 ÂÜ≤Á™Å‰∫Ü„ÄÇËôΩÁÑ∂Âü∫‰∫é SVR4 ÁöÑÁ≥ªÁªüËøòÊîØÊåÅËøô‰∏™ no-delay ÈÄâÈ°πÔºå‰ΩÜÊñ∞ÁöÑÂ∫îÁî®Â∫îËØ•‰ΩøÁî® nonblocking ÈÄâÈ°π„ÄÇ O_SYNC Have each write wait for physical I/O to complete, including I/O necessary to update file attributes modified as a result of the write. We use this option in Section 3.14. ‰ΩøÊØèÊ¨° write ÈÉΩÁ≠âÁâ©ÁêÜ I/O ÂÆåÊàêÔºåÂåÖÊã¨Êõ¥Êñ∞Êñá‰ª∂Â±ûÊÄßÊâÄÈúÄË¶ÅÁöÑ I/O„ÄÇ O_TTY_INIT When opening a terminal device that is not already open, set the nonstandard termios parameters to values that result in behavior that conforms to the Single UNIX Specification. We discuss the termios structure when we discuss terminal I/O in Chapter 18. ÂΩìÊâìÂºÄ‰∏Ä‰∏™Êñ∞ÁöÑÁªàÁ´ØËÆæÂ§áÁöÑÊó∂ÂÄôÔºåËÆæÁΩÆÈùûÊ†áÂáÜÂèÇÊï∞ termios„ÄÇ The following two flags are also optional. They are part of the synchronized input and output option of the Single UNIX Specification (and thus POSIX.1). O_DSYNC Have each write wait for physical I/O to complete, but don‚Äôt wait for file attributes to be updated if they don‚Äôt affect the ability to read the data just written. ËÆ©ÊâÄÊúâ write ÈÉΩÁ≠âÂæÖÁâ©ÁêÜ I/O ÂÆåÊàêÔºå‰ΩÜÊòØ‰∏çÁî®Á≠âÊñá‰ª∂Â±ûÊÄßÊõ¥Êñ∞ÔºåÂ¶ÇÊûú‰∏çÂΩ±ÂìçÂàöÂàöÂÜôÂÆåÁöÑÊï∞ÊçÆÁöÑËØªÊìç‰ΩúÁöÑËØù„ÄÇ O_RSYNC Have each read operation on the file descriptor wait until any pending writes for the same portion of the file are complete. ‰ΩøÊØè‰∏™‰ΩøÁî®Êñá‰ª∂ÊèèËø∞Á¨¶ÁöÑÁöÑËØªÊìç‰ΩúÁ≠âÂæÖÔºåÁõ¥Âà∞ÂØπÊñá‰ª∂ÁöÑÂêå‰∏ÄÈÉ®ÂàÜÁöÑÊâÄÊúâÂÜôÊìç‰ΩúÂÆåÊàê„ÄÇ Solaris 10 supports all three synchronization flags. Historically, FreeBSD (and thus Mac OS X) have used the O_FSYNC flag, which has the same behavior as O_SYNC. Because the two flags are equivalent, they define the flags to have the same value. FreeBSD 8.0 doesn‚Äôt support the O_DSYNC or O_RSYNC flags. Mac OS X doesn‚Äôt support the O_RSYNC flag, but defines the O_DSYNC flag, treating it the same as the O_SYNC flag. Linux 3.2.0 supports the O_DSYNC flag, but treats the O_RSYNC flag the same as O_SYNC. The file descriptor returned by open and openat is guaranteed to be the lowest- numbered unused descriptor. This fact is used by some applications to open a new file on standard input, standard output, or standard error. For example, an application might close standard output‚Äînormally, file descriptor 1‚Äîand then open another file, knowing that it will be opened on file descriptor 1. We‚Äôll see a better way to guarantee that a file is open on a given descriptor in Section 3.12, when we explore the dup2 function. The fd parameter distinguishes the openat function from the open function. There are three possibilities: The path parameter specifies an absolute pathname. In this case, the fd parameter is ignored and the openat function behaves like the open function. The path parameter specifies a relative pathname and the fd parameter is a file descriptor that specifies the starting location in the file system where the relative pathname is to be evaluated. The fd parameter is obtained by opening the directory where the relative pathname is to be evaluated. The path parameter specifies a relative pathname and the fd parameter has the special value AT_FDCWD. In this case, the pathname is evaluated starting in the current working directory and the openat function behaves like the open function. The openat function is one of a class of functions added to the latest version of POSIX.1 to address two problems. First, it gives threads a way to use relative pathnames to open files in directories other than the current working directory. As we‚Äôll see in Chapter 11, all threads in the same process share the same current working directory, so this makes it difficult for multiple threads in the same process to work in different directories at the same time. Second, it provides a way to avoid time-of-check- to-time-of-use (TOCTTOU) errors. openat ÂáΩÊï∞ÊòØÂú®ÊúÄÂêé‰∏Ä‰∏™ÁâàÊú¨ÁöÑ POSIX.1 Âä†ÂÖ•ÁöÑÔºå‰∏∫‰∫ÜËß£ÂÜ≥‰∏§‰∏™ÈóÆÈ¢ò„ÄÇÈ¶ñÂÖàÔºåÂÆÉÁªôÁ∫øÁ®ã‰ª•Áõ∏ÂØπË∑ØÂæÑËÄåÈùûÂΩìÂâçË∑ØÂæÑ„ÄÇÊàë‰ª¨Â∞ÜÂú®Á¨¨ 11 Á´†ÁúãÂà∞ÔºåÂú®Âêå‰∏ÄËøõÁ®ã‰∏≠ÁöÑÊâÄÊúâÁ∫øÁ®ãÂÖ±‰∫´Âêå‰∏Ä‰∏™ÂΩìÂâçÁõÆÂΩïÔºåÊâÄ‰ª•Ë¶ÅËÆ©Âêå‰∏ÄËøõÁ®ã‰∏≠ÁöÑÂ§öÁ∫øÁ®ãÂêåÊó∂Âú®‰∏çÂêåÁöÑÁõÆÂΩïÂ∑•‰ΩúÊòØÈùûÂ∏∏Âõ∞ÈöæÁöÑ„ÄÇÁ¨¨‰∫åÔºåÂÆÉÊèê‰æõ‰∫ÜÈÅøÂÖç time-of-check-to-time-of-useÔºàTOCTTOUÔºâ ÈîôËØØ„ÄÇ The basic idea behind TOCTTOU errors is that a program is vulnerable if it makes two file-based function calls where the second call depends on the results of the first call. Because the two calls are not atomic, the file can change between the two calls, thereby invalidating the results of the first call, leading to a program error. TOCTTOU errors in the file system namespace generally deal with attempts to subvert file system permissions by tricking a privileged program into either reducing permissions on a privileged file or modifying a privileged file to open up a security hole. Wei and Pu [2005] discuss TOCTTOU weaknesses in the UNIX file system interface. TOCTTOU ÈîôËØØÁöÑÊÑèÊÄùÊòØÔºå‰∏Ä‰∏™Ë∞ÉÁî®Ê®™Âèâ‰∏ÄËÑöÂΩ±Âìç‰∫ÜÂè¶‰∏Ä‰∏™Ë∞ÉÁî®ÔºåÊú¨Êù•Âè¶‰∏Ä‰∏™Ë∞ÉÁî®Â∫îËØ•ÊòØ‰∏Ä‰∏™ÂéüÂ≠êÊìç‰Ωú„ÄÇ Filename and Pathname TruncationWhat happens if NAME_MAX is 14 and we try to create a new file in the current directory with a filename containing 15 characters? Traditionally, early releases of System V, such as SVR2, allowed this to happen, silently truncating the filename beyond the 14th character. BSD-derived systems, in contrast, returned an error status, with errno set to ENAMETOOLONG. Silently truncating the filename presents a problem that affects more than simply the creation of new files. If NAME_MAX is 14 and a file exists whose name is exactly 14 characters, any function that accepts a pathname argument, such as open or stat, has no way to determine what the original name of the file was, as the original name might have been truncated. Â¶ÇÊûú NAME_MAX ÊòØ 14 ÊÄé‰πàÂäûÔºü‰º†Áªü‰∏äÔºåÊó©ÊúüÁöÑ System V Á≥ªÁªüÔºåÂÖÅËÆ∏ËøôÂèëÁîüÔºåÈùôÈªòÁöÑÂ∞ÜÊñá‰ª∂ÂêçÊà™Êñ≠Êàê 14 Â≠óÁ¨¶„ÄÇÁõ∏ÂèçÁöÑÔºåBSD Ê¥æÁîüÁöÑÁ≥ªÁªüÔºåËøîÂõû‰∏Ä‰∏™ÈîôËØØÁä∂ÊÄÅÔºåÂπ∂Êää errno ËÆæÁΩÆÊàê ENAMETOOLONG„ÄÇÈùôÈªòÁöÑÊà™Êñ≠Êñá‰ª∂ÂêçÂëàÁé∞ÁöÑÈóÆÈ¢ò‰∏ç‰ªÖ‰ªÖÊòØÂàõÂª∫‰∫Ü‰∏Ä‰∏™Êñ∞Êñá‰ª∂„ÄÇÂ¶ÇÊûú NAME_MAX ÊòØ 14 ‰∏îÊñá‰ª∂Â≠òÂú®Ôºå‰∏îÂÆÉÁöÑÂêçÂ≠óÂ∞±ÊòØ 14 Â≠óÁ¨¶Ôºå‰ªª‰ΩïÊé•Êî∂‰∏Ä‰∏™Ë∑ØÂæÑÂêç‰Ωú‰∏∫ÂèÇÊï∞ÁöÑÂáΩÊï∞ÔºåÊØîÂ¶Ç open ÊàñËÄÖ statÔºåÊ≤°ÂäûÊ≥ïÂà§Êñ≠Êñá‰ª∂ÂéüÊù•ÁöÑÂêçÂ≠óÊòØ‰ªÄ‰πàÔºåÂõ†‰∏∫ÂéüÂßãÊñá‰ª∂ÂêçÂèØËÉΩÂ∑≤ÁªèË¢´Êà™Êñ≠„ÄÇ With POSIX.1, the constant _POSIX_NO_TRUNC determines whether long filenames and long components of pathnames are truncated or an error is returned. As we saw in Chapter 2, this value can vary based on the type of the file system, and we can use fpathconf or pathconf to query a directory to see which behavior is supported. Âú® POSIX.1 Ê†áÂáÜÈáåÔºåÂ∏∏Èáè _POSIX_NO_TRUNC ÂÜ≥ÂÆöÈïøÊñá‰ª∂ÂêçÂíåË∑ØÂæÑÂêç‰∏≠ÈïøÁöÑÁªÑ‰ª∂ÊòØÂê¶Ë¢´Êà™Êñ≠ÊàñËÄÖÊòØÂê¶ËøîÂõû‰∏Ä‰∏™ÈîôËØØ„ÄÇÊ≠£Â¶ÇÊàë‰ª¨Âú®Á¨¨‰∫åÁ´†‰∏≠ÁúãÂà∞ÁöÑÔºåËøô‰∏™ÂÄºÂú®Êñá‰ª∂Á≥ªÁªü‰∏≠ÊòØÈùûÂ∏∏Âü∫Êú¨ÁöÑÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî® fpathconf Êàñ pathconfÊü•ËØ¢‰∏Ä‰∏™ÁõÆÂΩïÁúãÁúãÂÆÉÊîØÊåÅÂì™ÁßçË°å‰∏∫„ÄÇ Whether an error is returned is largely historical. For example, SVR4-based systems do not generate an error for the traditional System V file system, S5. For the BSD-style file system (known as UFS), however, SVR4-based systems do generate an error. Figure 2.20 illustrates another example: Solaris will return an error for UFS, but not for PCFS, the DOS-compatible file system, as DOS silently truncates filenames that don‚Äôt fit in an 8.3 format. BSD-derived systems and Linux always return an error. If _POSIX_NO_TRUNC is in effect, errno is set to ENAMETOOLONG, and an error status is returned if any filename component of the pathname exceeds NAME_MAX. Most modern file systems support a maximum of 255 characters for filenames. Because filenames are usually shorter than this limit, this constraint tends to not present problems for most applications. creat FunctionA new file can also be created by calling the creat function. 123#include &lt;fcntl.h&gt;int creat(const char *path, mode_t mode);// Returns: file descriptor opened for write-only if OK, ‚àí1 on error Note that this function is equivalent to 1open(path, O_WRONLY | O_CREAT | O_TRUNC, mode); Historically, in early versions of the UNIX System, the second argument to open could be only 0, 1, or 2. There was no way to open a file that didn‚Äôt already exist. Therefore, a separate system call, creat, was needed to create new files. With the O_CREAT and O_TRUNC options now provided by open, a separate creat function is no longer needed. Ëøô‰∏™ÂáΩÊï∞ËØûÁîüÁöÑÂéüÂõ†ÊòØÔºöÂéÜÂè≤‰∏ä open ÂáΩÊï∞ÁöÑÁ¨¨‰∫å‰∏™ÂèÇÊï∞Âè™ÊîØÊåÅ 0Ôºå1Ôºå2 Ëøô‰∏â‰∏™ÂÄºÔºå‰πüÂ∞±ÊòØËØªÔºåÂÜôÔºåËØªÂÜô„ÄÇÊ≤°ÂäûÊ≥ïÊâìÂºÄ‰∏Ä‰∏™‰∏çÂ≠òÂú®ÁöÑÊñá‰ª∂„ÄÇËÄåÁé∞Âú®Êúâ‰∫Ü O_CREAT and O_TRUNC optionsÔºåcreat ÂáΩÊï∞‰πüÂ∞±Ê≤°ÊúâÂ≠òÂú®ÁöÑÂøÖË¶Å‰∫Ü„ÄÇ We‚Äôll show how to specify mode in Section 4.5 when we describe a file‚Äôs access permissions in detail. One deficiency with creat is that the file is opened only for writing. Before the new version of open was provided, if we were creating a temporary file that we wanted to write and then read back, we had to call creat, close, and then open. A better way is to use the open function, as in 1open(path, O_RDWR | O_CREAT | O_TRUNC, mode); close FunctionAn open file is closed by calling the close function. 1234#include &lt;unistd.h&gt;// Returns: 0 if OK, ‚àí1 on errorint close(int fd); Closing a file also releases any record locks that the process may have on the file. We‚Äôll discuss this point further in Section 14.3. ÂÖ≥Èó≠‰∏Ä‰∏™Êñá‰ª∂ÂêåÊ†∑‰ºöÈáäÊîæËøõÁ®ãÂØπËØ•Êñá‰ª∂ÁöÑÊâÄÊúâÈîÅ„ÄÇ When a process terminates, all of its open files are closed automatically by the kernel. Many programs take advantage of this fact and don‚Äôt explicitly close open files. See the program in Figure 1.4, for example. ÂΩì‰∏Ä‰∏™ËøõÁ®ãÁªàÊ≠¢ÔºåÊâÄÊúâÂÆÉÊâìÂºÄÁöÑÊñá‰ª∂ÈÉΩ‰ºöË¢´ÂÜÖÊ†∏Ëá™Âä®ÂÖ≥Èó≠„ÄÇËÆ∏Â§öÁ®ãÂ∫èÂà©Áî®‰∫ÜËøô‰∏ÄÁÇπÔºå‰∏çÊòéÁ°ÆÂÖ≥Èó≠Êñá‰ª∂„ÄÇ lseek FunctionEvery open file has an associated ‚Äúcurrent file offset,‚Äù normally a non-negative integer that measures the number of bytes from the beginning of the file. (We describe some exceptions to the ‚Äò‚Äònon-negative‚Äô‚Äô qualifier later in this section.) Read and write operations normally start at the current file offset and cause the offset to be incremented by the number of bytes read or written. By default, this offset is initialized to 0 when a file is opened, unless the O_APPEND option is specified. ÊØè‰∏™ÊâìÂºÄÁöÑÊñá‰ª∂ÈÉΩ‰∏é &quot;current file offset&quot;ÂÖ≥ËÅîÔºåÊ≠£Â∏∏ÊÉÖÂÜµ‰∏ãÂÆÉÊòØ‰∏Ä‰∏™ÈùûË¥üÊï¥ÂΩ¢Êï∞ÔºåË°®Á§∫‰ªéÊñá‰ª∂ÂºÄÂßãÂà∞ÁõÆÂâç‰ΩçÁΩÆÁöÑÂ≠óËäÇÊï∞„ÄÇËØªÂíåÂÜôÊìç‰ΩúÈÉΩÊòØ‰ªé current file offset ÂºÄÂßãÁöÑÔºåÂπ∂‰∏î‰ºöËÆ© offset Â¢ûÂä†ÔºåÈöèÁùÄËØªÂíåÂÜôÁöÑËøõË°å„ÄÇÈªòËÆ§ÁöÑÔºåÂΩìÊñá‰ª∂Ë¢´ÊâìÂºÄÊó∂ÔºåËøô‰∏™‰ΩçÁßªÂàùÂßãÂåñÊó∂ 0ÔºåÈô§ÈùûÊåáÊòé‰∫Ü O_APPEND ÈÄâÈ°π„ÄÇ An open file‚Äôs offset can be set explicitly by calling lseek. ÈÄöËøáË∞ÉÁî® lseek ÂáΩÊï∞Ôºå‰∏Ä‰∏™ÊâìÂºÄÁöÑÊñá‰ª∂ÁöÑ offset ÂèØ‰ª•Ë¢´ËÆæÂÆö„ÄÇ 123#include &lt;unistd.h&gt;off_t lseek(int fd, off_t offset, int whence);// Returns: new file offset if OK, ‚àí1 on error The interpretation of the offset depends on the value of the whence argument. If whence is SEEK_SET, the file‚Äôs offset is set to offset bytes from the beginning of the file. If whence is SEEK_CUR, the file‚Äôs offset is set to its current value plus the offset. The offset can be positive or negative. If whence is SEEK_END, the file‚Äôs offset is set to the size of the file plus the offset. The offset can be positive or negative. Because a successful call to lseek returns the new file offset, we can seek zero bytes from the current position to determine the current offset: 12off_t currpos;currpos = lseek(fd, 0, SEEK_CUR); This technique can also be used to determine if a file is capable of seeking. If the file descriptor refers to a pipe, FIFO, or socket, lseek sets errno to ESPIPE and returns ‚àí1. The three symbolic constants‚ÄîSEEK_SET, SEEK_CUR, and SEEK_END‚Äîwere introduced with System V. Prior to this, whence was specified as 0 (absolute), 1 (relative to the current offset), or 2 (relative to the end of file). Much software still exists with these numbers hard coded. The character l in the name lseek means ‚Äò‚Äòlong integer.‚Äô‚Äô Before the introduction of the off_t data type, the offset argument and the return value were long integers. lseek was introduced with Version 7 when long integers were added to C. (Similar functionality was provided in Version 6 by the functions seek and tell.) ExampleThe program in Figure 3.1 tests its standard input to see whether it is capable of seeking. Figure 3.1 Test whether standard input is capable of seeking 123456789#include "apue.h"int main(void)&#123; if (lseek(STDIN_FILENO, 0, SEEK_CUR) == -1) printf("cannot seek\n"); else printf("seek OK\n"); exit(0);&#125; Normally, a file‚Äôs current offset must be a non-negative integer. It is possible, however, that certain devices could allow negative offsets. But for regular files, the offset must be non-negative. Because negative offsets are possible, we should be careful to compare the return value from lseek as being equal to or not equal to ‚àí1, rather than testing whether it is less than 0. The /dev/kmem device on FreeBSD for the Intel x86 processor supports negative offsets. Because the offset (off_t) is a signed data type (Figure 2.21), we lose a factor of 2 in the maximum file size. If off_t is a 32-bit integer, the maximum file size is $2^{31}$‚àí1 bytes. lseek only records the current file offset within the kernel ‚Äî it does not cause any I/O to take place. This offset is then used by the next read or write operation. The file‚Äôs offset can be greater than the file‚Äôs current size, in which case the next write to the file will extend the file. This is referred to as creating a hole in a file and is allowed. Any bytes in a file that have not been written are read back as 0. Êñá‰ª∂ÂÅèÁßªÈáèÂèØ‰ª•Â§ß‰∫éÊñá‰ª∂ÁöÑÁõÆÂâçÂ§ßÂ∞èÔºåÂú®ËøôÁßçÊÉÖÂÜµ‰∏ã‰∏ã‰∏ÄÊ¨°ÂÜôÊñá‰ª∂Â∞ÜÊâ©Â±ïÊñá‰ª∂„ÄÇ‰πüÂ∞±ÊòØËØ¥Âú®Êñá‰ª∂‰∏≠ÂàõÂª∫‰∏Ä‰∏™Á©∫Ê¥ûÊòØË¢´ÂÖÅËÆ∏ÁöÑ„ÄÇÂú®Êñá‰ª∂‰∏≠‰ªª‰ΩïÊ≤°Ë¢´ÂÜôÂÖ•ÁöÑÈÉ®ÂàÜÈÉΩÂ∞ÜË¢´ËØª‰Ωú 0„ÄÇ A hole in a file isn‚Äôt required to have storage backing it on disk. Depending on the file system implementation, when you write after seeking past the end of a file, new disk blocks might be allocated to store the data, but there is no need to allocate disk blocks for the data between the old end of file and the location where you start writing. Êñá‰ª∂‰∏≠ÁöÑÁ©∫Ê¥ûÂπ∂‰∏çÈúÄË¶ÅÂ≠òÂÇ®Âà∞Á£ÅÁõò‰∏ä„ÄÇÊ†πÊçÆÊñá‰ª∂Á≥ªÁªüÁöÑÂÆûÁé∞ÔºåÂΩì‰Ω†Âú® end of file ‰πãÂêéÂÜôÔºå‰∏∫‰∫ÜÂ≠òÂÇ®Êï∞ÊçÆÊñ∞ÁöÑÁ£ÅÁõòÁ©∫Èó¥ÂèØËÉΩ‰ºöÂàÜÈÖçÔºå‰ΩÜÊ≤°ÊúâÂøÖË¶ÅÂàÜÈÖçÁ£ÅÁõòÂùóÁªô end of file Âíå‰Ω†ÂºÄÂßãÂÜôÁöÑÂú∞Êñπ‰πãÈó¥ÁöÑËøô‰∫õÊï∞ÊçÆ„ÄÇ ExampleThe program shown in Figure 3.2 creates a file with a hole in it. Figure 3.2 Create a file with a hole in it 1234567891011121314151617181920#include "apue.h"#include &lt;fcntl.h&gt;char buf1[] = "abcdefghij";char buf2[] = "ABCDEFGHIJ";int main(void)&#123; int fd; if ((fd = creat("file.hole", FILE_MODE)) &lt; 0) err_sys("creat error"); if (write(fd, buf1, 10) != 10) err_sys("buf1 write error"); /* offset now = 10 */ if (lseek(fd, 16384, SEEK_SET) == -1) err_sys("lseek error"); /* offset now = 16384 */ if (write(fd, buf2, 10) != 10) err_sys("buf2 write error"); /* offset now = 16394 */ exit(0);&#125; read FunctionData is read from an open file with the read function. 12#include &lt;unistd.h&gt;ssize_t read(int fd, void *buf, size_t nbytes); Returns: numbers of bytes read, 0 if end of file, -1 on error If the read is successful, the number of bytes read is returned. If the end of file is encountered, 0 is returned. There are several cases in which the number of bytes actually read is less than the amount requested: Êúâ‰ª•‰∏ãÂá†ÁßçÊÉÖÂÜµÔºåread ËØªÂèñÁöÑÂ≠óËäÇ‰ºöÊØîÊåáÂÆöÁöÑÂ≠óËäÇÊï∞Â∞ë When reading from a regular file, if the end of file is reached before the requested number of bytes has been read. For example, if 30 bytes remain until the end of file and we try to read 100 bytes, read returns 30. The next time we call read, it will return 0 (end of file). When reading from a terminal device. Normally, up to one line is read at a time. (We‚Äôll see how to change this default in Chapter 18.) When reading from a network. Buffering within the network may cause less than the requested amount to be returned. When reading from a pipe or FIFO. If the pipe contains fewer bytes than requested, read will return only what is available. When reading from a record-oriented device. Some record-oriented devices, such as magnetic tape, can return up to a single record at a time. When interrupted by a signal and a partial amount of data has already been read. We discuss this further in Section 10.5. The read operation starts at the file‚Äôs current offset. Before a successful return, the offset is incremented by the number of bytes actually read. read Êìç‰ΩúÊòØ‰ªéÊñá‰ª∂ÁöÑÂΩìÂâçÂÅèÁßªÈáèÂºÄÂßãÁöÑ„ÄÇÂú®ÊàêÂäüËøîÂõûÂâçÔºåÂÅèÁßªÈáè‰ºöÈöèËØªÂèñÁöÑÂ≠óËäÇÂ¢ûÂä†„ÄÇ POSIX.1 changed the prototype for this function in several ways. The classic definition is 1int read(int fd, char *buf, unsigned nbytes); First, the second argument was changed from char _ to void _ to be consistentwith ISO C: the type void * is used for generic pointers. Next, the return value was required to be a signed integer (ssize_t) to return a positive byte count, 0 (for end of file), or ‚àí1 (for an error). Finally, the third argument historically has been an unsigned integer, to allow a 16-bit implementation to read or write up to 65,534 bytes at a time. With the 1990 POSIX.1 standard, the primitive system data type ssize_t was introduced to provide the signed return value, and the unsigned size_t was used for the third argument. (Recall the SSIZE_MAX constant from Section 2.5.2.) write FunctionData is written to an open file with the write function. 12#include &lt;unistd.h&gt;ssize_t write(int fd, const void *buf, size_t nbytes); The return value is usually equal to the nbytes argument; otherwise, an error has occurred. A common cause for a write error is either filling up a disk or exceeding the file size limit for a given process (Section 7.11 and Exercise 10.11). ËøîÂõûÂÄº‰∏ÄËà¨‰ºöÁ≠â‰∫énbytesËøô‰∏™ÂèÇÊï∞ÁöÑÂ§ßÂ∞èÔºåÂê¶ÂàôÂ∞±ÊòØÂá∫Èîô‰∫Ü„ÄÇ‰∏ÄËà¨ÂØºËá¥ÂÜôÈîôËØØÁöÑÂéüÂõ†ÊòØÁ£ÅÁõòÊª°‰∫ÜÊàñËÄÖË∂ÖÂá∫ÁªôÂÆöËøõÁ®ãÁöÑÊñá‰ª∂Â§ßÂ∞èÈôêÂà∂„ÄÇ For a regular file, the write operation starts at the file‚Äôs current offset. If the O_APPEND option was specified when the file was opened, the file‚Äôs offset is set to the current end of file before each write operation. After a successful write, the file‚Äôs offset is incremented by the number of bytes actually written. I/O EfficiencyThe program in Figure 3.5 copies a file, using only the read and write functions. Figure 3.5 Copy standard input to standard output 12345678910111213#include &quot;apue.h&quot;#define BUFFSIZE 4096int main(void)&#123; int n; char buf[BUFFSIZE]; while ((n = read(STDIN_FILENO, buf, BUFFSIZE)) &gt; 0) if (write(STDOUT_FILENO, buf, n) != n) err_sys(&quot;write error&quot;); if (n &lt; 0) err_sys(&quot;read error&quot;); exit(0);&#125; The following caveats apply to this program. It reads from standard input and writes to standard output, assuming that these have been set up by the shell before this program is executed. Indeed, all normal UNIX system shells provide a way to open a file for reading on standard input and to create (or rewrite) a file on standard output. This prevents the program from having to open the input and output files, and allows the user to take advantage of the shell‚Äôs I/O redirection facilities. The program doesn‚Äôt close the input file or output file. Instead, the program uses the feature of the UNIX kernel that closes all open file descriptors in a process when that process terminates. This example works for both text files and binary files, since there is no difference between the two to the UNIX kernel. One question we haven‚Äôt answered, however, is how we chose the BUFFSIZE value. Before answering that, let‚Äôs run the program using different values for BUFFSIZE. Figure 3.6 shows the results for reading a 516,581,760-byte file, using 20 different buffer sizes. The file was read using the program shown in Figure 3.5, with standard output redirected to /dev/null. The file system used for this test was the Linux ext4 file system with 4,096-byte blocks. (The st_blksize value, which we describe in Section 4.12, is 4,096.) This accounts for the minimum in the system time occurring at the few timing measurements starting around a BUFFSIZE of 4,096. Increasing the buffer size beyond this limit has little positive effect. Most file systems support some kind of read-ahead to improve performance. When sequential reads are detected, the system tries to read in more data than an application requests, assuming that the application will read it shortly. The effect of read-ahead can be seen in Figure 3.6, where the elapsed time for buffer sizes as small as 32 bytes is as good as the elapsed time for larger buffer sizes. We‚Äôll return to this timing example later in the text. In Section 3.14, we show the effect of synchronous writes; in Section 5.8, we compare these unbuffered I/O times with the standard I/O library. Beware when trying to measure the performance of programs that read and write files. The operating system will try to cache the file incore, so if you measure the performance of the program repeatedly, the successive timings will likely be better than the first. This improvement occurs because the first run causes the file to be entered into the system‚Äôs cache, and successive runs access the file from the system‚Äôs cache instead of from the disk. (The term incore means in main memory. Back in the day, a computer‚Äôs main memory was built out of ferrite core. This is where the phrase ‚Äò‚Äòcore dump‚Äô‚Äô comes from: the main memory image of a program stored in a file on disk for diagnosis.) In the tests reported in Figure 3.6, each run with a different buffer size was made using a different copy of the file so that the current run didn‚Äôt find the data in the cache from the previous run. The files are large enough that they all don‚Äôt remain in the cache (the test system was configured with 6 GB of RAM). File SharingThe UNIX System supports the sharing of open files among different processes. Before describing the dup function, we need to describe this sharing. To do this, we‚Äôll examine the data structures used by the kernel for all I/O. The following description is conceptual; it may or may not match a particular implementation. Refer to Bach [1986] for a discussion of these structures in System V. McKusick et al. [1996] describe these structures in 4.4BSD. McKusick and Neville-Neil [2005] cover FreeBSD 5.2. For a similar discussion of Solaris, see McDougall and Mauro [2007]. The Linux 2.6 kernel architecture is discussed in Bovet and Cesati [2006]. The kernel uses three data structures to represent an open file, and the relationships among them determine the effect one process has on another with regard to file sharing. Every process has an entry in the process table. Within each process table entry is a table of open file descriptors, which we can think of as a vector, with one entry per descriptor. Associated with each file descriptor are The file descriptor flags (close-on-exec; refer to Figure 3.7 and Section 3.14) A pointer to a file table entry The kernel maintains a file table for all open files. Each file table entry contains The file status flags for the file, such as read, write, append, sync, and nonblocking; more on these in Section 3.14 The current file offset A pointer to the v-node table entry for the file Each open file (or device) has a v-node structure that contains information about the type of file and pointers to functions that operate on the file. For most files, the v-node also contains the i-node for the file. This information is read from disk when the file is opened, so that all the pertinent information about the file is readily available. For example, the i-node contains the owner of the file, the size of the file, pointers to where the actual data blocks for the file are located on disk, and so on. (We talk more about i-nodes in Section 4.14 when we describe the typical UNIX file system in more detail.) Linux has no v-node. Instead, a generic i-node structure is used. Although the implementations differ, the v-node is conceptually the same as a generic i-node. Both point to an i-node structure specific to the file system. We‚Äôre ignoring some implementation details that don‚Äôt affect our discussion. For example, the table of open file descriptors can be stored in the user area (a separate per- process structure that can be paged out) instead of the process table. Also, these tables can be implemented in numerous ways‚Äîthey need not be arrays; one alternate implementation is a linked lists of structures. Regardless of the implementation details, the general concepts remain the same. Figure 3.7 shows a pictorial arrangement of these three tables for a single process that has two different files open: one file is open on standard input (file descriptor 0), and the other is open on standard output (file descriptor 1). The arrangement of these three tables has existed since the early versions of the UNIX System [Thompson 1978]. This arrangement is critical to the way files are shared among processes. We‚Äôll return to this figure in later chapters, when we describe additional ways that files are shared. The v-node was invented to provide support for multiple file system types on a single computer system. This work was done independently by Peter Weinberger (Bell Laboratories) and Bill Joy (Sun Microsystems). Sun called this the Virtual File System and called the file system‚Äìindependent portion of the i-node the v-node [Kleiman 1986]. The v-node propagated through various vendor implementations as support for Sun‚Äôs Network File System (NFS) was added. The first release from Berkeley to provide v-nodes was the 4.3BSD Reno release, when NFS was added. In SVR4, the v-node replaced the file system‚Äìindependent i-node of SVR3. Solaris is derived from SVR4 and, therefore, uses v-nodes. Instead of splitting the data structures into a v-node and an i-node, Linux uses a file system‚Äìindependent i-node and a file system‚Äìdependent i-node. If two independent processes have the same file open, we could have the arrangement shown in Figure 3.8. We assume here that the first process has the file open on descriptor 3 and that the second process has that same file open on descriptor 4. Each process that opens the file gets its own file table entry, but only a single v-node table entry is required for a given file. One reason each process gets its own file table entry is so that each process has its own current offset for the file. Given these data structures, we now need to be more specific about what happens with certain operations that we‚Äôve already described. After each write is complete, the current file offset in the file table entry is incremented by the number of bytes written. If this causes the current file offset to exceed the current file size, the current file size in the i-node table entry is set to the current file offset (for example, the file is extended). If a file is opened with the O_APPEND flag, a corresponding flag is set in the file status flags of the file table entry. Each time a write is performed for a file with this append flag set, the current file offset in the file table entry is first set to the current file size from the i-node table entry. This forces every write to be appended to the current end of file. Â¶ÇÊûú‰∏Ä‰∏™Êñá‰ª∂ÊâìÂºÄÊó∂‰ΩøÁî®O_APPENDÊ†áÂøóÔºåÁõ∏Â∫îÁöÑÊ†áÂøó‰ºöËÆæÁΩÆÂà∞Êñá‰ª∂Ë°®È°πÁöÑÊñá‰ª∂Áä∂ÊÄÅÁ¨¶„ÄÇÊØèÊ¨°ËøõË°åÂÜôÊìç‰ΩúÊó∂ÔºåÊñá‰ª∂Ë°®È°πÂ∞±‰ºöÈ¶ñÂÖàÂ∞ÜÂΩìÂâçÊñá‰ª∂ÂÅèÁßªÈáèËÆæÁΩÆ‰∏∫ i ÁªìÁÇπË°®È°πÁöÑÂΩìÂâçÊñá‰ª∂Â§ßÂ∞è„ÄÇËøôÊ†∑Â∞±ÂèØ‰ª•Âº∫Âà∂ÊØèÊ¨°ÈÉΩÂÜôÂà∞Êñá‰ª∂Êú´Â∞æ‰∫Ü„ÄÇ If a file is positioned to its current end of file using lseek, all that happens is the current file offset in the file table entry is set to the current file size from the i-node table entry. (Note that this is not the same as if the file was opened with the O_APPEND flag, as we will see in Section 3.11.) The lseek function modifies only the current file offset in the file table entry. No I/O takes place. It is possible for more than one file descriptor entry to point to the same file table entry, as we‚Äôll see when we discuss the dup function in Section 3.12. This also happens after a fork when the parent and the child share the same file table entry for each open descriptor (Section 8.3). Note the difference in scope between the file descriptor flags and the file status flags. The former apply only to a single descriptor in a single process, whereas the latter apply to all descriptors in any process that point to the given file table entry. When we describe the fcntl function in Section 3.14, we‚Äôll see how to fetch and modify both the file descriptor flags and the file status flags. Everything that we‚Äôve described so far in this section works fine for multiple processes that are reading the same file. Each process has its own file table entry with its own current file offset. Unexpected results can arise, however, when multiple processes write to the same file. To see how to avoid some surprises, we need to understand the concept of atomic operations. Atomic OperationsAppending to a FileConsider a single process that wants to append to the end of a file. Older versions of the UNIX System didn‚Äôt support the O_APPEND option to open, so the program was coded as follows: 1234if (lseek(fd, 0L, 2) &lt; 0) /* position to EOF */ err_sys("lseek error");if (write(fd, buf, 100) != 100) /* and write */ err_sys("write error"); This works fine for a single process, but problems arise if multiple processes use this technique to append to the same file. (This scenario can arise if multiple instances of the same program are appending messages to a log file, for example.) Assume that two independent processes, A and B, are appending to the same file. Each has opened the file but without the O_APPEND flag. This gives us the same picture as Figure 3.8. Each process has its own file table entry, but they share a single v-node table entry. Assume that process A does the lseek and that this sets the current offset for the file for process A to byte offset 1,500 (the current end of file). Then the kernel switches processes, and B continues running. Process B then does the lseek, which sets the current offset for the file for process B to byte offset 1,500 also (the current end of file). Then B calls write, which increments B‚Äôs current file offset for the file to 1,600. Because the file‚Äôs size has been extended, the kernel also updates the current file size in the v-node to 1,600. Then the kernel switches processes and A resumes. When A calls write, the data is written starting at the current file offset for A, which is byte offset 1,500. This overwrites the data that B wrote to the file. The problem here is that our logical operation of ‚Äò‚Äòposition to the end of file and write‚Äô‚Äô requires two separate function calls (as we‚Äôve shown it). The solution is to have the positioning to the current end of file and the write be an atomic operation with regard to other processes. Any operation that requires more than one function call cannot be atomic, as there is always the possibility that the kernel might temporarily suspend the process between the two function calls (as we assumed previously). The UNIX System provides an atomic way to do this operation if we set the O_APPEND flag when a file is opened. As we described in the previous section, this causes the kernel to position the file to its current end of file before each write. We no longer have to call lseek before each write. pread and pwrite FunctionsThe Single UNIX Specification includes two functions that allow applications to seek and perform I/O atomically: pread and pwrite. 1234567#include &lt;unistd.h&gt;// Returns: number of bytes read, 0 if end of file, ‚àí1 on errorssize_t pread(int fd, void *buf, size_t nbytes, off_t offset);// Returns: number of bytes written if OK, ‚àí1 on errorssize_t pwrite(int fd, const void *buf, size_t nbytes, off_t offset); Calling pread is equivalent to calling lseek followed by a call to read, with the following exceptions. There is no way to interrupt the two operations that occur when we call pread. The current file offset is not updated. Calling pwrite is equivalent to calling lseek followed by a call to write, with similar exceptions. Creating a FileWe saw another example of an atomic operation when we described the O_CREAT and O_EXCL options for the open function. When both of these options are specified, the open will fail if the file already exists. We also said that the check for the existence of the file and the creation of the file was performed as an atomic operation. If we didn‚Äôt have this atomic operation, we might try 1234567if ((fd = open(path, O_WRONLY)) &lt; 0) &#123; if (errno == ENOENT) &#123; if ((fd = creat(path, mode)) &lt; 0) err_sys("creat error"); &#125; else &#123; err_sys("open error");&#125; &#125; The problem occurs if the file is created by another process between the open and the creat. If the file is created by another process between these two function calls, and if that other process writes something to the file, that data is erased when this creat is executed. Combining the test for existence and the creation into a single atomic operation avoids this problem. In general, the term atomic operation refers to an operation that might be composed of multiple steps. If the operation is performed atomically, either all the steps are performed (on success) or none are performed (on failure). It must not be possible for only a subset of the steps to be performed. We‚Äôll return to the topic of atomic operations when we describe the link function (Section 4.15) and record locking (Section 14.3). dup and dup2 FunctionsAn existing file descriptor is duplicated by either of the following functions: 12345#include &lt;unistd.h&gt;// Both return: new file descriptor if OK, ‚àí1 on errorint dup(int fd);int dup2(int fd, int fd2); The new file descriptor returned by dup is guaranteed to be the lowest-numbered available file descriptor. With dup2, we specify the value of the new descriptor with the fd2 argument. If fd2 is already open, it is first closed. If fd equals fd2, then dup2 returns fd2 without closing it. Otherwise, the FD_CLOEXEC file descriptor flag is cleared for fd2, so that fd2 is left open if the process calls exec. The new file descriptor that is returned as the value of the functions shares the same file table entry as the fd argument. We show this in Figure 3.9. In this figure, we assume that when it‚Äôs started, the process executes 1newfd = dup(1); We assume that the next available descriptor is 3 (which it probably is, since 0, 1, and 2 are opened by the shell). Because both descriptors point to the same file table entry, they share the same file status flags‚Äîread, write, append, and so on‚Äîand the same current file offset. Each descriptor has its own set of file descriptor flags. As we describe in Section 3.14, the close-on-exec file descriptor flag for the new descriptor is always cleared by the dup functions. Another way to duplicate a descriptor is with the fcntl function, which we describe in Section 3.14. Indeed, the call 1dup(fd); is equivalent to 1fcntl(fd, F_DUPFD, 0); Similarly, the call 1dup2(fd, fd2); is equivalent to 12close(fd2);fcntl(fd, F_DUPFD, fd2); In this last case, the dup2 is not exactly the same as a close followed by an fcntl. The differences are as follows: dup2 is an atomic operation, whereas the alternate form involves two function calls. It is possible in the latter case to have a signal catcher called between the close and the fcntl that could modify the file descriptors. (We describe signals in Chapter 10.) The same problem could occur if a different thread changes the file descriptors. (We describe threads in Chapter 11.) There are some errno differences between dup2 and fcntl. The dup2 system call originated with Version 7 and propagated through the BSD releases. The fcntl method for duplicating file descriptors appeared with System III and continued with SystemV. SVR3.2 picked up the dup2 function, and 4.2BSD picked up the fcntl function and the F_DUPFD functionality. POSIX.1 requires both dup2 and the F_DUPFD feature of fcntl. sync, fsync, and fdatasync FunctionsTraditional implementations of the UNIX System have a buffer cache or page cache in the kernel through which most disk I/O passes. When we write data to a file, the data is normally copied by the kernel into one of its buffers and queued for writing to disk at some later time. This is called delayed write. (Chapter 3 of Bach [1986] discusses this buffer cache in detail.) The kernel eventually writes all the delayed-write blocks to disk, normally when it needs to reuse the buffer for some other disk block. To ensure consistency of the file system on disk with the contents of the buffer cache, the sync, fsync, and fdatasync functions are provided. 1234567#include &lt;unistd.h&gt;// Both Returns: 0 if OK, ‚àí1 on errorint fsync(int fd);int fdatasync(int fd);void sync(void); The sync function simply queues all the modified block buffers for writing and returns; it does not wait for the disk writes to take place. The function sync is normally called periodically (usually every 30 seconds) from a system daemon, often called update. This guarantees regular flushing of the kernel‚Äôs block buffers. The command sync(1) also calls the sync function. The function fsync refers only to a single file, specified by the file descriptor fd, and waits for the disk writes to complete before returning. This function is used when an application, such as a database, needs to be sure that the modified blocks have been written to the disk. The fdatasync function is similar to fsync, but it affects only the data portions of a file. With fsync, the file‚Äôs attributes are also updated synchronously. All four of the platforms described in this book support sync and fsync. However, FreeBSD 8.0 does not support fdatasync. fcntl FunctionThe fcntl function can change the properties of a file that is already open. 1234#include &lt;fcntl.h&gt;// Returns: depends on cmd if OK (see following), ‚àí1 on errorint fcntl(int fd, int cmd, ... /* int arg */ ); In the examples in this section, the third argument is always an integer, corresponding to the comment in the function prototype just shown. When we describe record locking in Section 14.3, however, the third argument becomes a pointer to a structure. The fcntl function is used for five different purposes. Duplicate an existing descriptor (cmd = F_DUPFD or F_DUPFD_CLOEXEC) Get/set file descriptor flags (cmd = F_GETFD or F_SETFD) Get/set file status flags (cmd = F_GETFL or F_SETFL) Get/set asynchronous I/O ownership (cmd = F_GETOWN or F_SETOWN) Get/set record locks (cmd = F_GETLK, F_SETLK, or F_SETLKW) We‚Äôll now describe the first 8 of these 11 cmd values. (We‚Äôll wait until Section 14.3 to describe the last 3, which deal with record locking.) Refer to Figure 3.7, as we‚Äôll discuss both the file descriptor flags associated with each file descriptor in the process table entry and the file status flags associated with each file table entry. F_DUPFD Duplicate the file descriptor fd. The new file descriptor is returned as the value of the function. It is the lowest-numbered descriptor that is not already open, and that is greater than or equal to the third argument (taken as an integer). The new descriptor shares the same file table entry as fd. (Refer to Figure 3.9.) But the new descriptor has its own set of file descriptor flags, and its FD_CLOEXEC file descriptor flag is cleared. (This means that the descriptor is left open across an exec, which we discuss in Chapter 8.) F_DUPFD_CLOEXEC Duplicate the file descriptor and set the FD_CLOEXEC file descriptor flag associated with the new descriptor. Returns the new file descriptor. F_GETFD Return the file descriptor flags for fd as the value of the function. Currently, only one file descriptor flag is defined: the FD_CLOEXEC flag. F_SETFD Set the file descriptor flags for fd. The new flag value is set from the third argument (taken as an integer). Be aware that some existing programs that deal with the file descriptor flags don‚Äôt use the constant FD_CLOEXEC. Instead, these programs set the flag to either 0 (don‚Äôt close-on-exec, the default) or 1 (do close-on-exec). F_GETFL Return the file status flags for fd as the value of the function. We described the file status flags when we described the open function. They are listed in Figure 3.10. Unfortunately, the five access-mode flags‚ÄîO_RDONLY, O_WRONLY, O_RDWR, O_EXEC, and O_SEARCH‚Äîare not separate bits that can be tested. (As we mentioned earlier, the first three often have the values 0, 1, and 2, respectively, for historical reasons. Also, these five values are mutually exclusive; a file can have only one of them enabled.) Therefore, we must first use the O_ACCMODE mask to obtain the access-mode bits and then compare the result against any of the five values. F_SETFL Set the file status flags to the value of the third argument (taken as an integer). The only flags that can be changed are O_APPEND, O_NONBLOCK, O_SYNC, O_DSYNC, O_RSYNC, O_FSYNC, and O_ASYNC. F_GETOWN Get the process ID or process group ID currently receiving the SIGIO and SIGURG signals. We describe these asynchronous I/O signals in Section 14.5.2. F_SETOWN Set the process ID or process group ID to receive the SIGIO and SIGURG signals. A positive arg specifies a process ID. A negative arg implies a process group ID equal to the absolute value of arg. The return value from fcntl depends on the command. All commands return ‚àí1 on an error or some other value if OK. The following four commands have special return values: F_DUPFD, F_GETFD, F_GETFL, and F_GETOWN. The first command returns the new file descriptor, the next two return the corresponding flags, and the final command returns a positive process ID or a negative process group ID. ExampleThe program in Figure 3.11 takes a single command-line argument that specifies a file descriptor and prints a description of selected file flags for that descriptor. Figure 3.11 Print file flags for specified descriptor 1234567891011121314151617181920212223242526272829303132333435#include "include/apue.h"#include &lt;fcntl.h&gt;int main(int argc, char *argv[])&#123; int val; if (argc != 2) err_quit("usage: a.out &lt;descriptor#&gt;"); if ((val = fcntl(atoi(argv[1]), F_GETFL, 0)) &lt; 0) err_sys("fcntl error for fd %d", atoi(argv[1])); switch (val &amp; O_ACCMODE) &#123; case O_RDONLY: printf("read only"); break; case O_WRONLY: printf("write only"); break; case O_RDWR: printf("read write"); break; default: err_dump("unknown access mode"); &#125; if (val &amp; O_APPEND) printf(", append"); if (val &amp; O_NONBLOCK) printf(", nonblocking"); if (val &amp; O_SYNC) printf(", synchronous writes"); #if !defined(_POSIX_C_SOURCE) &amp;&amp; defined(O_FSYNC) &amp;&amp; (O_FSYNC != O_SYNC) if (val &amp; O_FSYNC) printf(", synchronous writes"); #endif putchar('\n'); exit(0);&#125; Note that we use the feature test macro _POSIX_C_SOURCE and conditionally compile the file access flags that are not part of POSIX.1. The following script shows the operation of the program, when invoked from bash (the Bourne-again shell). Results will vary, depending on which shell you use. 123456789‚ûú apue.3e ./fig3.11 0 &lt; /dev/ttyread only‚ûú apue.3e ./fig3.11 1 &gt; temp.foo‚ûú apue.3e cat temp.foowrite only‚ûú apue.3e ./fig3.11 2 2&gt;&gt;temp.foowrite only, append‚ûú apue.3e ./fig3.11 5 5&lt;&gt;temp.fooread write The clause 5&lt;&gt;temp.foo opens the file temp.foo for reading and writing on file descriptor 5. ExampleWhen we modify either the file descriptor flags or the file status flags, we must be careful to fetch the existing flag value, modify it as desired, and then set the new flag value. We can‚Äôt simply issue an F_SETFD or an F_SETFL command, as this could turn off flag bits that were previously set. Figure 3.12 shows a function that sets one or more of the file status flags for a descriptor. Figure 3.12 Turn on one or more of the file status flags for a descriptor 1234567891011#include "apue.h"#include &lt;fcntl.h&gt;void set_fl(int fd, int flags) /* flags are file status flags to turn on */&#123; int val; if ((val = fcntl(fd, F_GETFL, 0)) &lt; 0) err_sys("fcntl F_GETFL error"); val |= flags; /* turn on flags */ if (fcntl(fd, F_SETFL, val) &lt; 0) err_sys("fcntl F_SETFL error");&#125; If we change the middle statement to 1val &amp;= ÃÉflags; /* turn flags off */ we have a function named clr_fl, which we‚Äôll use in some later examples. This statement logically ANDs the one‚Äôs complement of flags with the current val. If we add the line 1set_fl(STDOUT_FILENO, O_SYNC); to the beginning of the program shown in Figure 3.5, we‚Äôll turn on the synchronous- write flag. This causes each write to wait for the data to be written to disk before returning. Normally in the UNIX System, a write only queues the data for writing; the actual disk write operation can take place sometime later. A database system is a likely candidate for using O_SYNC, so that it knows on return from a write that the data is actually on the disk, in case of an abnormal system failure. We expect the O_SYNC flag to increase the system and clock times when the program runs. To test this, we can run the program in Figure 3.5, copying 492.6 MB of data from one file on disk to another and compare this with a version that does the same thing with the O_SYNC flag set. The results from a Linux system using the ext4 file system are shown in Figure 3.13. The six rows in Figure 3.13 were all measured with a BUFFSIZE of 4,096 bytes. The results in Figure 3.6 were measured while reading a disk file and writing to /dev/null, so there was no disk output. The second row in Figure 3.13 corresponds to reading a disk file and writing to another disk file. This is why the first and second rows in Figure 3.13 are different. The system time increases when we write to a disk file, because the kernel now copies the data from our process and queues the data for writing by the disk driver. We expect the clock time to increase as well when we write to a disk file. When we enable synchronous writes, the system and clock times should increase significantly. As the third row shows, the system time for writing synchronously is not much more expensive than when we used delayed writes. This implies that the Linux operating system is doing the same amount of work for delayed and synchronous writes (which is unlikely), or else the O_SYNC flag isn‚Äôt having the desired effect. In this case, the Linux operating system isn‚Äôt allowing us to set the O_SYNC flag using fcntl, instead failing without returning an error (but it would have honored the flag if we were able to specify it when the file was opened). The clock time in the last three rows reflects the extra time needed to wait for all of the writes to be committed to disk. After writing a file synchronously, we expect that a call to fsync will have no effect. This case is supposed to be represented by the last row in Figure 3.13, but since the O_SYNC flag isn‚Äôt having the intended effect, the last row behaves the same way as the fifth row. Figure 3.14 shows timing results for the same tests run on Mac OS X 10.6.8, which uses the HFS file system. Note that the times match our expectations: synchronous writes are far more expensive than delayed writes, and using fsync with synchronous writes makes very little difference. Note also that adding a call to fsync at the end of the delayed writes makes little measurable difference. It is likely that the operating system flushed previously written data to disk as we were writing new data to the file, so by the time that we called fsync, very little work was left to be done. Compare fsync and fdatasync, both of which update a file‚Äôs contents when we say so, with the O_SYNC flag, which updates a file‚Äôs contents every time we write to the file. The performance of each alternative will depend on many factors, including the underlying operating system implementation, the speed of the disk drive, and the type of the file system. With this example, we see the need for fcntl. Our program operates on a descriptor (standard output), never knowing the name of the file that was opened on that descriptor. We can‚Äôt set the O_SYNC flag when the file is opened, since the shell opened the file. With fcntl, we can modify the properties of a descriptor, knowing only the descriptor for the open file. We‚Äôll see another need for fcntl when we describe nonblocking pipes (Section 15.2), since all we have with a pipe is a descriptor. ioctl FunctionThe ioctl function has always been the catchall for I/O operations. Anything that couldn‚Äôt be expressed using one of the other functions in this chapter usually ended up being specified with an ioctl. Terminal I/O was the biggest user of this function. (When we get to Chapter 18, we‚Äôll see that POSIX.1 has replaced the terminal I/O operations with separate functions.) 12345#include &lt;unistd.h&gt; /* System V */#include &lt;sys/ioctl.h&gt; /* BSD and Linux */// Returns: ‚àí1 on error, something else if OKint ioctl(int fd, int request, ...); The ioctl function was included in the Single UNIX Specification only as an extension for dealing with STREAMS devices [Rago 1993], but it was moved to obsolescent status in SUSv4. UNIX System implementations use ioctl for many miscellaneous device operations. Some implementations have even extended it for use with regular files. The prototype that we show corresponds to POSIX.1. FreeBSD 8.0 and Mac OS X 10.6.8 declare the second argument as an unsigned long. This detail doesn‚Äôt matter, since the second argument is always a #defined name from a header. For the ISO C prototype, an ellipsis is used for the remaining arguments. Normally, however, there is only one more argument, and it‚Äôs usually a pointer to a variable or a structure. In this prototype, we show only the headers required for the function itself. Normally, additional device-specific headers are required. For example, the ioctl commands for terminal I/O, beyond the basic operations specified by POSIX.1, all require the &lt;termios.h&gt; header. Each device driver can define its own set of ioctl commands. The system, however, provides generic ioctl commands for different classes of devices. Examples of some of the categories for these generic ioctl commands supported in FreeBSD are summarized in Figure 3.15. The mag tape operations allow us to write end-of-file marks on a tape, rewind a tape, space forward over a specified number of files or records, and the like. None of these operations is easily expressed in terms of the other functions in the chapter (read, write, lseek, and so on), so the easiest way to handle these devices has always been to access their operations using ioctl. We use the ioctl function in Section 18.12 to fetch and set the size of a terminal‚Äôs window, and in Section 19.7 when we access the advanced features of pseudo terminals. /dev/fdNewer systems provide a directory named /dev/fd whose entries are files named 0, 1, 2, and so on. Opening the file /dev/fd/n is equivalent to duplicating descriptor n, assuming that descriptor n is open. The /dev/fd feature was developed by Tom Duff and appeared in the 8th Edition of the Research UNIX System. It is supported by all of the systems described in this book: FreeBSD 8.0, Linux 3.2.0, Mac OS X 10.6.8, and Solaris 10. It is not part of POSIX.1. In the function call 1fd = open("/dev/fd/0", mode); most systems ignore the specified mode, whereas others require that it be a subset of the mode used when the referenced file (standard input, in this case) was originally opened. Because the previous open is equivalent to 1fd = dup(0); the descriptors 0 and fd share the same file table entry (Figure 3.9). For example, if descriptor 0 was opened read-only, we can only read on fd. Even if the system ignores the open mode and the call 1fd = open("/dev/fd/0", O_RDWR); succeeds, we still can‚Äôt write to fd. The Linux implementation of /dev/fd is an exception. It maps file descriptors into symbolic links pointing to the underlying physical files. When you open /dev/fd/0, for example, you are really opening the file associated with your standard input. Thus the mode of the new file descriptor returned is unrelated to the mode of the /dev/fd file descriptor. We can also call creat with a /dev/fd pathname argument as well as specify O_CREAT in a call to open. This allows a program that calls creat to still work if the pathname argument is /dev/fd/1, for example. Beware of doing this on Linux. Because the Linux implementation uses symbolic links to the real files, using creat on a /dev/fd file will result in the underlying file being truncated. Some systems provide the pathnames /dev/stdin, /dev/stdout, and /dev/stderr. These pathnames are equivalent to /dev/fd/0, /dev/fd/1, and /dev/fd/2, respectively. The main use of the /dev/fd files is from the shell. It allows programs that use pathname arguments to handle standard input and standard output in the same manner as other pathnames. For example, the cat(1) program specifically looks for an input filename of - and uses it to mean standard input. The command 1filter file2 | cat file1 - file3 | lpr is an example. First, cat reads file1, then its standard input (the output of the filter program on file2), and then file3. If /dev/fd is supported, the special handling of - can be removed from cat, and we can enter 1filter file2 | cat file1 /dev/fd/0 file3 | lpr The special meaning of - as a command-line argument to refer to the standard input or the standard output is a kludge that has crept into many programs. There are also problems if we specify - as the first file, as it looks like the start of another command-line option. Using /dev/fd is a step toward uniformity and cleanliness. SummaryThis chapter has described the basic I/O functions provided by the UNIX System. These are often called the unbuffered I/O functions because each read or write invokes a system call into the kernel. Using only read and write, we looked at the effect of various I/O sizes on the amount of time required to read a file. We also looked at several ways to flush written data to disk and their effect on application performance. Atomic operations were introduced when multiple processes append to the same file and when multiple processes create the same file. We also looked at the data structures used by the kernel to share information about open files. We‚Äôll return to these data structures later in the text. We also described the ioctl and fcntl functions. We return to both of these functions later in the book. In Chapter 14, we‚Äôll use fcntl for record locking. In Chapter 18 and Chapter 19, we‚Äôll use ioctl when we deal with terminal devices. Exercises When reading or writing a disk file, are the functions described in this chapter really unbuffered? Explain. Write your own dup2 function that behaves the same way as the dup2 function described in Section 3.12, without calling the fcntl function. Be sure to handle errors correctly. Assume that a process executes the following three function calls: 123fd1 = open(path, oflags);fd2 = dup(fd1);fd3 = open(path, oflags); Draw the resulting picture, similar to Figure 3.9. Which descriptors are affected by an fcntl on fd1 with a command of F_SETFD? Which descriptors are affected by an fcntl on fd1 with a command of F_SETFL? The following sequence of code has been observed in various programs: 1234dup2(fd, 0);dup2(fd, 1);dup2(fd, 2);if (fd &gt; 2) close(fd); To see why the if test is needed, assume that fd is 1 and draw a picture of what happens to the three descriptor entries and the corresponding file table entry with each call to dup2. Then assume that fd is 3 and draw the same picture.]]></content>
      <tags>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄäAPUE-3rd„Äã ËØª‰π¶Á¨îËÆ∞ -- Unix System Overview]]></title>
    <url>%2Fblog%2F2018%2F05%2F22%2FAPUE-Unix-System-Overview%2F</url>
    <content type="text"><![CDATA[Preperation Before Classapue ÁºñÁ®ãÁéØÂ¢ÉÊê≠Âª∫ Figure 1.3 List all the files in a directory 12345678910111213141516#include "apue.h"#include &lt;dirent.h&gt;int main(int argc, char *argv[])&#123; DIR *dp; struct dirent *dirp; if (argc != 2) err_quit("usage: ls directory_name"); if ((dp = opendir(argv[1])) == NULL) err_sys("can‚Äôt open %s", argv[1]); while ((dirp = readdir(dp)) != NULL) printf("%s\n", dirp-&gt;d_name); closedir(dp); exit(0);&#125; ËøôÈáåÁÆÄÂçïËØ¥‰∏Ä‰∏ã apue ÁöÑÁºñÁ®ãÁéØÂ¢ÉÊê≠Âª∫ÔºåÂÆûÈôÖ‰∏äÂè™ÈúÄË¶ÅÁî®Âà∞‰∏ÄÁÇπÁÇπmake„ÄÅÁéØÂ¢ÉÂèòÈáèÂíågcc ÂëΩ‰ª§ÁöÑÁü•ËØÜ„ÄÇ È¶ñÂÖàËøõÂÖ•Ôºöhttp://www.apuebook.com/ ÈÄâÊã© 2013 Âπ¥Âá∫ÁâàÁöÑ apue3ÔºåÁÑ∂ÂêéÁÇπÂáª source codeÔºåÁÑ∂ÂêéÊ†πÊçÆÊèêÁ§∫ÁÇπÂáª here ‰∏ãËΩΩ„ÄÇ ÊãøÂà∞ÁºñÁ®ãÁéØÂ¢ÉÁöÑÊ∫êÁ†Å‰πãÂêéÔºåËß£ÂéãËøõÂÖ•ÁõÆÂΩïÔºå‰ΩøÁî® make ÂëΩ‰ª§ÁºñËØëÂæóÂà∞ libapue.aÔºåËøôÊòØ‰∏™ÈùôÊÄÅÂ∫ìÔºåÁîüÊàêÂú® lib ÁõÆÂΩï‰∏ã„ÄÇÁÑ∂ÂêéÂ∞Ü include ÁõÆÂΩï‰∏ãÁöÑ apue.h Ëøô‰∏™Â§¥Êñá‰ª∂Âíå libapue.a Ëøô‰∏™ÈùôÊÄÅÂ∫ìÂàÜÂà´ÊîæÁΩÆÂú®/usr/include/Âíå/usr/local/lib/‰∏ãÈù¢ÔºàËøô‰∏§‰∏™Ë∑ØÂæÑÂ∞±ÊòØÂÜôÂÖ•ÁéØÂ¢ÉÂèòÈáèÁöÑË∑ØÂæÑÔºågcc ÂëΩ‰ª§‰ºöÂú®ÁºñËØëÁöÑÊó∂ÂÄôÊêúÂØªËøô‰∏§‰∏™Ë∑ØÂæÑÔºâ„ÄÇ ÁÑ∂Âêé‰ΩøÁî®gcc -o main.o main.c -lapueÁºñËØëÂæóÂà∞ main.oÔºåÂõ†‰∏∫‰∏ä‰∏ÄÊ≠•Êàë‰ª¨Â∞Ü apue.h Âíå libapue.a ÊîæÂÖ•‰∫ÜÁéØÂ¢ÉÂèòÈáèË∑ØÂæÑ‰∏ãÈù¢ÔºåÊâÄ‰ª•Êàë‰ª¨‰ΩøÁî®ÂÆÉ‰ª¨ÁöÑÊó∂ÂÄôÈÉΩ‰∏çÁî®ÂÜçÊåáÊòéÂÖ∂Ë∑ØÂæÑ‰∫Ü„ÄÇ ÁÑ∂ÂêéËøêË°å main.oÔºö./main.o .ÔºåÂ∞ÜÂΩìÂâçÁõÆÂΩï‰∏ãÁöÑÊâÄÊúâÊñá‰ª∂ÂêçÊâìÂç∞Âá∫Êù•„ÄÇ Â¶ÇÊûúÁºñËØëÂ§±Ë¥•Ôºå‰ΩøÁî® make clean ÂèØ‰ª•Ê∏ÖÁ©∫ÁºñËØëÁªìÊûúÔºåÁÑ∂ÂêéÂ∞±ÂèØ‰ª•‰ΩøÁî® make ÈáçÊñ∞ÁºñËØë‰∫Ü„ÄÇ‰∏çË¶ÅÂ∞ÜÁ®ãÂ∫èÂëΩÂêç‰∏∫.cpp Êñá‰ª∂ÔºåËøôÊ†∑ÁöÑËØùÂç≥‰æø‰Ω†‰ΩøÁî® gcc ÁºñËØë myls.cppÔºå‰πü‰ºöÂá∫ÈîôÔºåÊõ¥‰∏çË¶Å‰ΩøÁî® g++ÂéªÁºñËØë myls.cppÔºåÂõ†‰∏∫Â∫ìÊòØÁî® gcc ÁºñËØëÁöÑ„ÄÇ When the program is done, it calls the function exit with an argument of 0. The function exit terminates a program. By convention, an argument of 0 means OK, and an argument between 1 and 255 means that an error occurred. man ÂëΩ‰ª§man ÂëΩ‰ª§ÊòØ unix Á≥ªÁªü‰∏≠ÁöÑ‰∏Ä‰∏™ÈùûÂ∏∏ÈáçË¶ÅÁöÑÂëΩ‰ª§ÔºåÂÆÉÊèê‰æõ‰∫ÜÊâÄÊúâÂëΩ‰ª§ÁöÑËØ¶ÁªÜÁöÑ‰ΩøÁî®ÊñπÊ≥ï„ÄÇ Historically, UNIX systems lumped all eight sections together into what was called the UNIX Programmer&#39;s Manual. As the page count increased, the trend changed to distributing the sections among separate manuals: one for users, one for programmers, and one for system administrators, for example. Some UNIX systems further divide the manual pages within a given section, using an uppercase letter. For example, all the standard input/output (I/O) functions in AT&amp;T [1990e] are indicated as being in Section 3S, as in fopen(3S). Other systems have replaced the numeric sections with alphabetic ones, such as C for commands. Unix Architecture‰∏ãÂõæÊ∏ÖÊô∞ÁöÑÊèèËø∞‰∫Ü Unix ÁöÑÊû∂ÊûÑÔºö Âõæ‰∏≠ÊúÄÈáçË¶ÅÁöÑ‰∏§‰∏™Ê¶ÇÂøµÊòØÔºöÂÜÖÊ†∏ÂíåÁ≥ªÁªüË∞ÉÁî®Ôºå‰∏ãÈù¢ÊòØÂØπËøô‰∏§‰∏™Ê¶ÇÂøµÁöÑÁÆÄÂçï‰ªãÁªçÔºö kernel: In a strict sense, an operating system can be defined as the software that controls the hardware resources of the computer and provides an environment under which programs can run. system calls: The interface to the kernel is a layer of software called the system calls . ShellA shell is a command-line interpreter that reads user input and executes commands. The user input to a shell is normally from the terminal (an interactive shell) or sometimes from a file (called a shell script). The system knows which shell to execute for us based on the final field in our entry in the password file. bash: The Bourne-again shell is the GNU shell provided with all Linux systems. It was designed to be POSIX conformant, while still remaining compatible with the Bourne shell. It supports features from both the C shell and the Korn shell. Files and DirectoriesÊñá‰ª∂Á≥ªÁªüÊòØ Unix Á≥ªÁªü‰∏≠‰∏Ä‰∏™ÈùûÂ∏∏ÈáçË¶ÅÁöÑÈÉ®ÂàÜÔºåÈáåÈù¢ÊúâËÆ∏Â§öÂæàÈáçË¶ÅÁöÑËÆæËÆ°„ÄÇÊñá‰ª∂Á≥ªÁªü‰ªéÈÄªËæëÂ±ÇÈù¢‰∏äÁúãÊòØ‰∏Ä‰∏™Ê†ëÁä∂ÁªìÊûÑÔºåÊâÄÊúâÊñá‰ª∂ÂíåÁõÆÂΩïÈÉΩ‰ªéÂ±û‰∫é‰∏Ä‰∏™Ê†πÁõÆÂΩï„ÄÇ root: Everything starts in the directory called root, whose name is the single character /. directory: A directory is a file that contains directory entries. Logically, we can think of each directory entry as containing a filename along with a structure of information describing the attributes of the file. The attributes of a file are such things as the type of file (regular file, directory), the size of the file, the owner of the file, permissions for the file (whether other users may access this file), and when the file was last modified. We make a distinction between the logical view of a directory entry and the way it is actually stored on disk. Most implementations of UNIX file systems don&#39;t store attributes in the directory entries themselves, because of the difficulty of keeping them in synch when a file has multiple hard links. Êñá‰ª∂ÂêçÂíåË∑ØÂæÑÂêçËøôÈáåÈù¢‰πüÊúâËÆ≤Á©∂Ôºö Êñá‰ª∂Âêç‰∏≠‰∏çËÉΩÂåÖÂê´ÊñúÊù†ÂíåÁ©∫Â≠óÁ¨¶: The only two characters that cannot appear in a filename are the slash character (/) and the null character. The slash separates the filenames that form a pathname (described next) and the null character terminates a pathname. dot Âíå dot-dot: Two filenames are automatically created whenever a new directory is created: . (called dot) and .. (called dot-dot). Dot refers to the current directory, and dot-dot refers to the parent directory. In the root directory, dot-dot is the same as dot. Áõ∏ÂØπË∑ØÂæÑÂíåÁªùÂØπË∑ØÂæÑ: A sequence of one or more filenames, separated by slashes and optionally starting with a slash, forms a pathname. A pathname that begins with a slash is called an absolute pathname; otherwise, it&#39;s called a relative pathname. Relative pathnames refer to files relative to the current directory. Êàë‰ª¨‰∏çÁü•ÈÅìÂΩ¢Â¶ÇÔºö/usr/local/lib/helloÁöÑË∑ØÂæÑ‰∏≠ hello ÊòØÁõÆÂΩïËøòÊòØÊôÆÈÄöÊñá‰ª∂ÔºåÂìàÂìàÔºåÊàëËßâÂæó unix ÂΩìÂàùÂú®ËÆæËÆ°‰∏äÂ∫îËØ•Âº∫Âà∂ÁõÆÂΩïÂøÖÈ°ª‰ª•ÊñúÊù†ÁªìÂ∞æ„ÄÇ ËøòÊúâ‰∏§‰∏™ÊØîËæÉÁâπÊÆäÁöÑÁõÆÂΩïÔºö working directory: Every process has a working directory, sometimes called the current working directory. This is the directory from which all relative pathnames are interpreted. A process can change its working directory with the chdir function. home directory: When we log in, the working directory is set to our home directory. Our home directory is obtained from our entry in the password file. File Descriptorsfile descriptor: File descriptors are normally small non-negative integers that the kernel uses to identify the files accessed by a process. Whenever it opens an existing file or creates a new file, the kernel returns a file descriptor that we use when we want to read or write the file. Standard Input, Standard Output, and Standard Error: By convention, all shells open three descriptors whenever a new program is run: standard input, standard output, and standard error. If nothing special is done, as in the simple command 1ls then all three are connected to the terminal. Most shells provide a way to redirect any or all of these three descriptors to any file. For example, 1ls &gt; file.list executes the ls command with its standard output redirected to the file named file.list. stdin ÁöÑÊñá‰ª∂ÊèèËø∞Á¨¶ÊòØ 0Ôºåstdout ÁöÑÊñá‰ª∂ÊèèËø∞Á¨¶ÊòØ 1Ôºåstderr ÁöÑÊñá‰ª∂ÊèèËø∞Á¨¶ÊòØ 2„ÄÇall three are connected to the terminalÔºåÊ≠§ terminal ÈùûÂΩº terminalÔºåËøôÈáåÊåáÁöÑÊòØÁ°¨‰ª∂ÁªàÁ´ØÔºåstdin ÁöÑÈªòËÆ§ËæìÂÖ•ÂØπË±°ÊòØ keyboardÔºåstdout Âíå stderr ÁöÑÈªòËÆ§ËæìÂá∫ÂØπË±°ÊòØ screen„ÄÇ RedirectionTo redirect a file descriptor, we use N&gt;, where N is a file descriptor. If there&#39;s no file descriptor, then stdout is used, like in echo hello &gt; new-file. Â∞Ü stderr ÈáçÂÆöÂêëÂà∞Êñá‰ª∂Ôºö 1command1 2&gt; error.log Â∞Ü stderr ÈáçÂÆöÂêëÂà∞ stdoutÔºö 1command-name 2&gt;&amp;1 Â∞Ü stdout Âíå stderr ÈÉΩÈáçÂÆöÂêëÂà∞Êñá‰ª∂Ôºö 1command-name &amp;&gt;file ÊàñËÄÖËøô‰πàÂÜôÔºö 1command &gt; file-name 2&gt;&amp;1 ‰∏çËÉΩË∞ÉÊç¢È°∫Â∫èÔºöcommand 2&gt;&amp;1 &gt; file-nameÔºåËøôÊ†∑ÂÜôÂ∞±Èîô‰∫Ü„ÄÇ The wrong version points stderr at stdout (which outputs to the shell), then redirects stdout to the file. Thus only stdout is pointing at the file, because stderr is pointing to the ‚Äúold‚Äù stdout. Figure 1.4 Copy standard input to standard output 12345678910111213#include "apue.h"#define BUFFSIZE 4096int main(void)&#123; int n; char buf[BUFFSIZE]; while ((n = read(STDIN_FILENO, buf, BUFFSIZE)) &gt; 0) if (write(STDOUT_FILENO, buf, n) != n) err_sys("write error"); if (n &lt; 0) err_sys("read error"); exit(0);&#125; The &lt;unistd.h&gt; header, included by apue.h, and the two constants STDIN_FILENO and STDOUT_FILENO are part of the POSIX standard (about which we‚Äôll have a lot more to say in the next chapter). This header contains function prototypes for many of the UNIX system services, such as the read and write functions that we call. The constants STDIN_FILENO and STDOUT_FILENO are defined in &lt;unistd.h&gt; and specify the file descriptors for standard input and standard output. The read function returns the number of bytes that are read, and this value is used as the number of bytes to write. When the end of the input file is encountered, read returns 0 and the program stops. If a read error occurs, read returns ‚àí1. Most of the system functions return ‚àí1 when an error occurs. If we compile the program into the standard name (a.out) and execute it as 1./a.out &gt; data standard input is the terminal, standard output is redirected to the file data, and standard error is also the terminal. If this output file doesn‚Äôt exist, the shell creates it by default. The program copies lines that we type to the standard output until we type the end-of-file character (usually Control-D). The notation ÀÜD is used to indicate a control character. Control characters are special characters formed by holding down the control key‚Äîoften labeled Control or Ctrl‚Äîon your keyboard and then pressing another key at the same time. Control-D, or ÀÜD, is the default end-of-file character. If we run 1./a.out &lt; infile &gt; outfile then the file named infile will be copied to the file named outfile. The standard I/O functions provide a buffered interface to the unbuffered I/O functions. Using standard I/O relieves us from having to choose optimal buffer sizes, such as the BUFFSIZE constant in Figure 1.4. The standard I/O functions also simplify dealing with lines of input (a common occurrence in UNIX applications). The fgets function, for example, reads an entire line. The read function, in contrast, reads a specified number of bytes. The most common standard I/O function is printf. In programs that call printf, we‚Äôll always include &lt;stdio.h&gt; as this header contains the function prototypes for all the standard I/O functions. Figure 1.5 Copy standard input to standard output, using standard I/O 1234567891011#include "apue.h"int main(void)&#123; int c; while ((c = getc(stdin)) != EOF) if (putc(c, stdout) == EOF) err_sys("output error"); if (ferror(stdin)) err_sys("input error"); exit(0);&#125; The function getc reads one character at a time, and this character is written by putc. After the last byte of input has been read, getc returns the constant EOF (defined in &lt;stdio.h&gt;). The standard I/O constants stdin and stdout are also defined in the &lt;stdio.h&gt; header and refer to the standard input and standard output. Programs and Processesprogram: A program is an executable file residing on disk in a directory. A program is read into memory and is executed by the kernel as a result of one of the seven exec functions.process: An executing instance of a program is called a process, a term used on almost every page of this text. Some operating systems use the term task to refer to a program that is being executed. The UNIX System guarantees that every process has a unique numeric identifier called the process ID. The process ID is always a non-negative integer. Figure 1.6 Print the process ID 123456#include "apue.h"int main(void)&#123; printf("hello world from process ID %ld\n", (long)getpid()); exit(0);&#125; ËæìÂá∫ÁªìÊûúÔºö 1234‚ûú apue.3e ./fig1.6hello world from process ID 8080‚ûú apue.3e ./fig1.6hello world from process ID 8086 Process ControlThere are three primary functions for process control: fork, exec, and waitpid. (The exec function has seven variants, but we often refer to them collectively as simply the exec function.) Figure 1.7 Read commands from standard input and execute them 1234567891011121314151617181920212223242526272829#include "apue.h"#include &lt;sys/wait.h&gt;int main(void)&#123; char buf[MAXLINE]; /* from apue.h */ pid_t pid; int status; printf("%% "); /* print prompt (printf requires %% to print %) */ while (fgets(buf, MAXLINE, stdin) != NULL) &#123; if (buf[strlen(buf) - 1] == '\n') buf[strlen(buf) - 1] = 0; /* replace newline with null */ if ((pid = fork()) &lt; 0) &#123; err_sys("fork error"); &#125; else if (pid == 0) &#123; /* child */ execlp(buf, buf, (char *)0); // or // execlp(buf, buf, (char *)NULL); err_ret("couldn‚Äôt execute: %s", buf); exit(127); &#125; /* parent */ if ((pid = waitpid(pid, &amp;status, 0)) &lt; 0) err_sys("waitpid error"); printf("%% "); &#125; exit(0);&#125; There are several features to consider in this 30-line program. We use the standard I/O function fgets to read one line at a time from the standard input. When we type the end-of-file character (which is often Control-D) as the first character of a line, fgets returns a null pointer, the loop stops, and the process terminates. Because each line returned by fgets is terminated with a newline character, followed by a null byte, we use the standard C function strlen to calculate the length of the string, and then replace the newline with a null byte. We do this because the execlp function wants a null-terminated argument, not a newline-terminated argument. We call fork to create a new process, which is a copy of the caller. We say that the caller is the parent and that the newly created process is the child. Then fork returns the non-negative process ID of the new child process to the parent, and returns 0 to the child. Because fork creates a new process, we say that it is called once‚Äîby the parent‚Äîbut returns twice‚Äîin the parent and in the child. In the child, we call execlp to execute the command that was read from the standard input. This replaces the child process with the new program file. The combination of fork followed by exec is called spawning a new process on some operating systems. In the UNIX System, the two parts are separated into individual functions Because the child calls execlp to execute the new program file, the parent wants to wait for the child to terminate. This is done by calling waitpid, specifying which process to wait for: the pid argument, which is the process ID of the child. The waitpid function also returns the termination status of the child‚Äîthe status variable‚Äîbut in this simple program, we don‚Äôt do anything with this value. We could examine it to determine how the child terminated. The most fundamental limitation of this program is that we can&#39;t pass arguments to the command we execute. We can&#39;t, for example, specify the name of a directory to list. We can execute ls only on the working directory. To allow arguments would require that we parse the input line, separating the arguments by some convention, probably spaces or tabs, and then pass each argument as a separate parameter to the execlp function. Nevertheless, this program is still a useful demonstration of the UNIX System&#39;s process control functions. If we run this program, we get the following result. Note that our program has a different prompt‚Äîthe percent sign‚Äîto distinguish it from the shell&#39;s prompt. 12345678$ ./fig1.7% pwd/Users/liuqinh2s/Downloads/apue.3e% wholiuqinh2s console May 21 12:09liuqinh2s ttys000 May 21 12:10% date2018Âπ¥ 5Êúà24Êó• ÊòüÊúüÂõõ 15Êó∂26ÂàÜ59Áßí CST ThreadsAll threads within a process share the same address space, file descriptors, stacks, and process-related attributes. Each thread executes on its own stack, although any thread can access the stacks of other threads in the same process. Because they can access the same memory, the threads need to synchronize access to shared data among themselves to avoid inconsistencies. Like processes, threads are identified by IDs. Thread IDs, however, are local to a process. A thread ID from one process has no meaning in another process. We use thread IDs to refer to specific threads as we manipulate the threads within a process. threads were added to the UNIX System long after the process model was established Error HandlingWhen an error occurs in one of the UNIX System functions, a negative value is often returned, and the integer errno is usually set to a value that tells why. For example, the open function returns either a non-negative file descriptor if all is OK or ‚àí1 if an error occurs. An error from open has about 15 possible errno values, such as file doesn‚Äôt exist, permission problem, and so on. Some functions use a convention other than returning a negative value. For example, most functions that return a pointer to an object return a null pointer to indicate an error. The file &lt;errno.h&gt; defines the symbol errno and constants for each value that errno can assume. Each of these constants begins with the character E. Also, the first page of Section 2 of the UNIX system manuals, named intro(2), usually lists all these error constants. For example, if errno is equal to the constant EACCES, this indicates a permission problem, such as insufficient permission to open the requested file. On Linux, the error constants are listed in the errno(3) manual page. POSIX and ISO C define errno as a symbol expanding into a modifiable lvalue of type integer. This can be either an integer that contains the error number or a function that returns a pointer to the error number. The historical definition is 1extern int errno; But in an environment that supports threads, the process address space is shared among multiple threads, and each thread needs its own local copy of errno to prevent one thread from interfering with another. Linux, for example, supports multithreaded access to errno by defining it as 12extern int *__errno_location(void);#define errno (*__errno_location()) There are two rules to be aware of with respect to errno. First, its value is never cleared by a routine if an error does not occur. Therefore, we should examine its value only when the return value from a function indicates that an error occurred. Second, the value of errno is never set to 0 by any of the functions, and none of the constants defined in &lt;errno.h&gt; has a value of 0. Two functions are defined by the C standard to help with printing error messages. 123#include &lt;string.h&gt;char *strerror(int errnum); //Returns: pointer to message string This function maps errnum, which is typically the errno value, into an error message string and returns a pointer to the string. The perror function produces an error message on the standard error, based on the current value of errno, and returns. 123#include &lt;stdio.h&gt;void perror(const char* msg); It outputs the string pointed to by msg, followed by a colon and a space, followed by the error message corresponding to the value of errno, followed by a newline. Figure 1.8 Demonstrate strerror and perror 123456789#include "apue.h"#include &lt;errno.h&gt;int main(int argc, char *argv[])&#123; fprintf(stderr, "EACCES: %s\n", strerror(EACCES)); errno = ENOENT; perror(argv[0]); exit(0);&#125; ËæìÂá∫ÁªìÊûúÔºö 123$ ./fig1.8EACCES: Permission denied./fig1.8: No such file or directory argv[0] Ë°®Á§∫ËæìÂÖ•ÁöÑÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞Ôºå‰πüÂ∞±ÊòØÂëΩ‰ª§Âêç Error RecoveryThe errors defined in &lt;errno.h&gt; can be divided into two categories: fatal and nonfatal. A fatal error has no recovery action. The best we can do is print an error message on the user&#39;s screen or to a log file, and then exit. Nonfatal errors, on the other hand, can sometimes be dealt with more robustly. Most nonfatal errors are temporary, such as a resource shortage, and might not occur when there is less activity on the system. Resource-related nonfatal errors include EAGAIN, ENFILE, ENOBUFS, ENOLCK, ENOSPC, EWOULDBLOCK, and sometimes ENOMEM. EBUSY can be treated as nonfatal when it indicates that a shared resource is in use. Sometimes, EINTR can be treated as a nonfatal error when it interrupts a slow system call. The typical recovery action for a resource-related nonfatal error is to delay and retry later. This technique can be applied in other circumstances. For example, if an error indicates that a network connection is no longer functioning, it might be possible for the application to delay a short time and then reestablish the connection. Some applications use an exponential backoff algorithm, waiting a longer period of time in each subsequent iteration. User IdentificationPassword File/etc/passwd: When we log in to a UNIX system, we enter our login name, followed by our password. The system then looks up our login name in its password file, usually the file /etc/passwd. If we look at our entry in the password file, we see that it&#39;s composed of seven colon-separated fields: the login name, encrypted password, numeric user ID (205), numeric group ID (105), a comment field, home directory (/home/sar), and shell program (/bin/ksh). ÂØÜÁ†ÅÊñá‰ª∂ÁöÑÊù°ÁõÆÁöÑÊ†ºÂºèÂ¶Ç‰∏ãÔºö 1ÁôªÂΩïÂêç:Âä†ÂØÜËøáÁöÑÂØÜÁ†Å:user ID:group ID:Ê≥®Ëß£:homeÁõÆÂΩï:shell All contemporary systems have moved the encrypted password to a different file. 1sar:x:205:105:Stephen Rago:/home/sar:/bin/ksh Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞Ëøô‰∏™Êñá‰ª∂ÂæàÂÖ≥ÈîÆÔºåÂõ†‰∏∫‰ªñÈÖçÁΩÆ‰∫ÜÊàë‰ª¨ÁöÑÂæàÂ§ö‰ø°ÊÅØÔºåÊØîÂ¶Ç home ÁõÆÂΩïÔºåÈªòËÆ§ÁöÑ shell„ÄÇ User IDThe user ID from our entry in the password file is a numeric value that identifies us to the system. This user ID is assigned by the system administrator when our login name is assigned, and we cannot change it. The user ID is normally assigned to be unique for every user. We&#39;ll see how the kernel uses the user ID to check whether we have the appropriate permissions to perform certain operations. We call the user whose user ID is 0 either root or the superuser. The entry in the password file normally has a login name of root, and we refer to the special privileges of this user as superuser privileges. As we&#39;ll see in Chapter 4, if a process has superuser privileges, most file permission checks are bypassed. Some operating system functions are restricted to the superuser. The superuser has free rein over the system. Client versions of Mac OS X ship with the superuser account disabled; server versions ship with the account already enabled. Instructions are available on Apple‚Äôs Web site describing how to enable it. See http://support.apple.com/kb/HT1528. Group IDOur entry in the password file also specifies our numeric group ID. This, too, is assigned by the system administrator when our login name is assigned. Typically, the password file contains multiple entries that specify the same group ID. Groups are normally used to collect users together into projects or departments. This allows the sharing of resources, such as files, among members of the same group. We‚Äôll see in Section 4.5 that we can set the permissions on a file so that all members of a group can access the file, whereas others outside the group cannot. There is also a group file that maps group names into numeric group IDs. The group file is usually /etc/group. ‰∏∫‰Ωï‰ΩøÁî®Êï∞Â≠óÂûã IDÔºå‰∏ªË¶ÅÂéüÂõ†Â¶Ç‰∏ãÔºö The use of numeric user IDs and numeric group IDs for permissions is historical. With every file on disk, the file system stores both the user ID and the group ID of a file‚Äôs owner. Storing both of these values requires only four bytes, assuming that each is stored as a two-byte integer. If the full ASCII login name and group name were used instead, additional disk space would be required. In addition, comparing strings during permission checks is more expensive than comparing integers. Users, however, work better with names than with numbers, so the password file maintains the mapping between login names and user IDs, and the group file provides the mapping between group names and group IDs. The ls -l command, for example, prints the login name of the owner of a file, using the password file to map the numeric user ID into the corresponding login name. Early UNIX systems used 16-bit integers to represent user and group IDs. Contemporary UNIX systems use 32-bit integers. Figure 1.9 Print user ID and group ID 1234567#include "apue.h"int main(void)&#123; printf("uid = %d, gid = %d\n", getuid(), getgid()); exit(0);&#125; Supplementary Group IDssupplementary groupÔºöIn addition to the group ID specified in the password file for a login name, most versions of the UNIX System allow a user to belong to other groups. This practice started with 4.2BSD, which allowed a user to belong to up to 16 additional groups. These supplementary group IDs are obtained at login time by reading the file /etc/group and finding the first 16 entries that list the user as a member. As we shall see in the next chapter, POSIX requires that a system support at least 8 supplementary groups per process, but most systems support at least 16. /etc/groupÊ†ºÂºèÂ¶Ç‰∏ãÔºö 12_analyticsusers:*:250:_analyticsd,_networkd,_timed_analyticsd:*:263:_analyticsd Ëß£ÈáäÔºö 1ÁªÑÂêç:Âè£‰ª§:ÁªÑID:ÁªÑÂÜÖÁî®Êà∑ÂàóË°® SignalSignals are a technique used to notify a process that some condition has occurred. For example, if a process divides by zero, the signal whose name is SIGFPE (floating-point exception) is sent to the process. The process has three choices for dealing with the signal. Ignore the signal. This option isn&#39;t recommended for signals that denote a hardware exception, such as dividing by zero or referencing memory outside the address space of the process, as the results are undefined. Let the default action occur. For a divide-by-zero condition, the default is to terminate the process. Provide a function that is called when the signal occurs (this is called ‚Äúcatching‚Äù the signal). By providing a function of our own, we&#39;ll know when the signal occurs and we can handle it as we wish. Many conditions generate signals. Two terminal keys, called the interrupt key‚Äîoften the DELETE key or Control-C‚Äîand the quit key‚Äîoften Control-backslash‚Äîare used to interrupt the currently running process. Another way to generate a signal is by calling the kill function. We can call this function from a process to send a signal to another process. Naturally, there are limitations: we have to be the owner of the other process (or the superuser) to be able to send it a signal. Figure 1.10 Read commands from standard input and execute them 12345678910111213141516171819202122232425262728293031323334353637#include "apue.h"#include &lt;sys/wait.h&gt;static void sig_int(int); /* our signal-catching function */int main(void) &#123; char buf[MAXLINE]; /* from apue.h */ pid_t pid; int status; if (signal(SIGINT, sig_int) == SIG_ERR) err_sys("signal error"); printf("%% "); /* print prompt (printf requires %% to print %) */ while (fgets(buf, MAXLINE, stdin) != NULL) &#123; if (buf[strlen(buf) - 1] == '\n') buf[strlen(buf) - 1] = 0; /* replace newline with null */ if ((pid = fork()) &lt; 0) &#123; err_sys("fork error"); &#125; else if (pid == 0) &#123; /* child */ execlp(buf, buf, (char *) 0); // or // execlp(buf, buf, (char *)NULL); err_ret("couldn‚Äôt execute: %s", buf); exit(127); &#125; /* parent */ if ((pid = waitpid(pid, &amp;status, 0)) &lt; 0) err_sys("waitpid error"); printf("%% "); &#125; exit(0);&#125;void sig_int(int signo) &#123; printf("interrupt\n%% ");&#125; ËøôÊÆµ‰ª£Á†Å‰ΩøÁî®Ëá™Â∑±ÂÆö‰πâÁöÑsig_intÂáΩÊï∞ÊçïËé∑ SIGINT ‰ø°Âè∑Ôºå‰ΩÜÂ¶ÇÊûú‰Ω†Êåâ^CÔºå‰ª£Á†Å‰æùÁÑ∂‰ºöÁªìÊùü„ÄÇÂéüÂõ†ÊòØ^C ‰πüËÉΩÂÉè^D ‰∏ÄÊ†∑ËÆ©fgetsÂáΩÊï∞ËøîÂõû‰∏Ä‰∏™ NULL„ÄÇÂè¶Â§ñÂ∞±ÁÆó while ÊòØ‰∏™Ê≠ªÂæ™ÁéØÔºö 1234while(1)&#123; printf("ÂºÄÂßã‰ºëÁú†‰∏ÄÁßíÈíü...\n"); sleep(1);&#125; ÂΩì‰Ω†ÊåâÁ¨¨‰∫åÊ¨°^C ÁöÑÊó∂ÂÄôÔºåÁ®ãÂ∫è‰æùÁÑ∂‰ºöÈÄÄÂá∫ÔºåËøôÂ∞±ËØ¥ÊòéËøô‰∏™signal(SIGINT, sig_int)ÊòØ‰∏ÄÊ¨°ÊÄßÁöÑ„ÄÇÁÑ∂ÂêéÊàëÂ∞ÜÂÖ∂ÂÜôÂú®‰∫ÜÂæ™ÁéØ‰∏≠Ôºå 123456while (1) &#123; if (signal(SIGINT, sig_int) == SIG_ERR) err_sys("signal error"); printf("ÂºÄÂßã‰ºëÁú†‰∏ÄÁßíÈíü...\n"); sleep(1);&#125; Êó†ËÆ∫‰Ω†ÊåâÂ§öÂ∞ëÊ¨°^C ÈÉΩÊó†Ê≥ïÈÄÄÂá∫‰∫ÜÔºåÂè¶Â§ñËøòÊúâ‰∏Ä‰∏™Áé∞Ë±°ÔºåÊØèÊ¨°Êåâ^CÂºÄÂßã‰ºëÁú†‰∏ÄÁßíÈíü...‰ºöÁ´ãÈ©¨ÊâìÂç∞Âá∫Êù•„ÄÇ Time ValuesHistorically, UNIX systems have maintained two different time values: Calendar time. This value counts the number of seconds since the Epoch: 00:00:00 January 1, 1970,Coordinated Universal Time (UTC). (Older manuals refer to UTC as Greenwich Mean Time.) These time values are used to record the time when a file was last modified, for example. The primitive system data type time_t holds these time values. Process time. This is also called CPU time and measures the central processor resources used by a process. Process time is measured in clock ticks, which have historically been 50, 60, or 100 ticks per second. The primitive system data type clock_t holds these time values. (We‚Äôll show how to obtain the number of clock ticks per second with the sysconf function in Section 2.5.4.) Êúâ‰∏§ÁßçÁ±ªÂûãÁöÑÊó∂Èó¥ÔºöÊó•ÂéÜÊó∂Èó¥ÂíåËøõÁ®ãÊó∂Èó¥ÔºåÊó•ÂéÜÊó∂Èó¥‰πüÂ∞±ÊòØ UTC„ÄÇ When we measure the execution time of a process, as in Section 3.9, we‚Äôll see that the UNIX System maintains three values for a process: Clock time User CPU time System CPU time The clock time, sometimes called wall clock time, is the amount of time the process takes to run, and its value depends on the number of other processes being run on the system. Whenever we report the clock time, the measurements are made with no other activities on the system. The user CPU time is the CPU time attributed to user instructions. The system CPU time is the CPU time attributed to the kernel when it executes on behalf of the process. For example, whenever a process executes a system service, such as read or write, the time spent within the kernel performing that system service is charged to the process. The sum of user CPU time and system CPU time is often called the CPU time. Â∫¶ÈáèËøõÁ®ãÊâßË°åÊó∂Èó¥ÔºåÊúâ‰∏âÁßçÔºö Â¢ô‰∏äÊó∂ÈíüÔºå‰πüÂ∞±ÊòØËøõÁ®ãÊâßË°åËä±Ë¥πÁöÑÊÄªÊó∂Èó¥„ÄÇ Áî®Êà∑ CPU Êó∂Èó¥ÔºåÊòØÁî®Êà∑Ê®°ÂºèÔºàÈùûÂÜÖÊ†∏Ôºâ‰∏ãÁöÑ CPU ‰ΩøÁî®Êó∂Èó¥ Á≥ªÁªü CPU Êó∂Èó¥ÔºåÊòØËøõÁ®ãËøõÂÖ•ÂÜÖÊ†∏ÊâßË°åÁöÑ CPU ‰ΩøÁî®Êó∂Èó¥ It is easy to measure the clock time, user time, and system time of any process: simply execute the time(1) command, with the argument to the time command being the command we want to measure. For example: 12$ cd /usr/include$ time -p grep _POSIX_SOURCE */*.h &gt; /dev/null ÁªìÊûúÔºö 123real 0m0.81suser 0m0.11ssys 0m0.07s The output format from the time command depends on the shell being used, because some shells don‚Äôt run /usr/bin/time, but instead have a separate built-in function to measure the time it takes commands to run. time ÂëΩ‰ª§ÁöÑËæìÂá∫Ê†ºÂºèÂèñÂÜ≥‰∫é‰ΩøÁî®‰ªÄ‰πà shellÔºåÂõ†‰∏∫Êúâ‰∫õ shell Âπ∂‰∏çËøêË°åÔºö/usr/bin/timeÔºåËÄåÊòØËøêË°åËá™Â∑±ÂÜÖÁΩÆÁöÑ‰∏Ä‰∏™ time ÂáΩÊï∞„ÄÇ]]></content>
      <tags>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mathjaxÂ∏∏Áî®ÂÖ¨ÂºèËÆ∞ÂΩï]]></title>
    <url>%2Fblog%2F2018%2F04%2F30%2Fmathjax%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[ËßíÂ∫¶ËÆ∞Ê≥ï Â∫¶Êï∞Ôºö$60^\circ$Ôºå$60^\circ$ Â∫¶Êï∞ÂàÜÔºö$60^\prime$Ôºå$60^\prime$ ÂºßÂ∫¶Ôºö$\frac{\pi}{2}$Ôºå$\frac{\pi}{2}$ ËßíÂ∫¶ËÆ∞Ê≥ïÔºö$\angle A$Ôºå$\angle A$ ‰∏âÈáçÁéØÁßØÂàÜÊó†Ê≥ïÊ∏≤ÊüìÁöÑÈóÆÈ¢òÂú®ÁΩë‰∏äÊâæ‰∫ÜÂçäÂ§©ËµÑÊñôÊúÄÁªàËß£ÂÜ≥‰∫ÜÔºåÂèÇËÄÉËøô‰∏™Á≠îÊ°àÔºöHow do you render a closed surface double integral?ÔºåÂÅöÊ≥ïÊòØÁõ¥Êé•‰ΩøÁî® Unicode ÁºñÁ†ÅÔºö\unicode{x222F}Ôºå‰∏âÈáçÁéØÁßØÂàÜÁöÑÁºñÁ†ÅÔºåÂèÇËÄÉËøôÈáåÔºöunicode-search.netÔºåÊâÄ‰ª•Âè™Ë¶ÅÂ∞Ü$\oiiint$Êç¢Êàê$\unicode{x2230}$Âç≥ÂèØÊ≠£Á°ÆÊòæÁ§∫‰∏âÈáçÁéØÁßØÂàÜ„ÄÇÂ¶Ç‰∏ãÔºö $$\unicode{x2230}$$ Ë°åÂÜÖ limit1$\lim\limits_&#123;x\rightarrow 0&#125; \frac&#123;\sin x&#125;&#123;x&#125; = 1$ ÊïàÊûúÔºö$\lim\limits_{x\rightarrow 0} \frac{\sin x}{x} = 1$ 1$\lim_&#123;x\rightarrow 0&#125; \frac&#123;\sin x&#125;&#123;x&#125; = 1$ ÊïàÊûúÔºö$\lim_{x\rightarrow 0} \frac{\sin x}{x} = 1$ Âá≠‰∏™‰∫∫ÂñúÂ•ΩÔºåÊàëÂ∞±Êõ¥ÂñúÊ¨¢Á¨¨‰∏ÄÁßç„ÄÇ Âºß1$\overset&#123;\frown&#125; &#123;AB&#125;$ $\overset{\frown} {AB}$]]></content>
      <tags>
        <tag>Â∑•ÂÖ∑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êï∞Â≠¶Âü∫Á°ÄÂÖ¨ÂºèÊé®ÂØº]]></title>
    <url>%2Fblog%2F2018%2F04%2F25%2F%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©ÁúãÂà∞‰∏ãÈù¢Ëøô‰∏™ÂÖ¨ÂºèÔºåÁ™ÅÁÑ∂ÊÉ≥ÊàëÂ•ΩÂÉè‰∏ç‰ºöÊé®ÂØºÂïäÔºö $\sin(\beta-\alpha) = \sin\beta\cos\alpha - \cos\beta\sin\alpha$ ÈÅÇÊÉ≥Â¶Ç‰ΩïÊé®ÂØºÔºåÂú® youtube ‰∏äÊâæ‰∫Ü‰∏Ä‰∏™ËßÜÈ¢ëÔºö‰∏âËßíÂáΩÊï∞Ê≠£‰ΩôÂº¶ÂíåËßíÂÖ¨ÂºèÊé®ÂØº ÊÄùË∑ØÊòØÂÖàÊé®ÂØºÂá∫Ôºö$\cos(\beta-\alpha) = \cos\alpha\cos\beta + \sin\alpha\sin\beta$ ÁÑ∂ÂêéÊ†πÊçÆËøô‰∏™ÂÜçÁªìÂêàÊ≠£Âº¶‰ΩôÂº¶‰πãÈó¥ÁöÑÂÖ≥Á≥ªÂ∞±ÂæàÂÆπÊòìÊé® $\sin(\beta-\alpha) = \sin\beta\cos\alpha - \cos\beta\sin\alpha$ ÈÇ£‰πàÊÄé‰πàÊé®ÂØº‰∏äÈù¢Ëøô‰∏™ÂÖ¨ÂºèÂë¢Ôºü ÈúÄË¶ÅÁî®Âà∞Ëß£ÊûêÂá†‰ΩïÔºö ÁªìÂêà ÂãæËÇ°ÂÆöÁêÜ Âíå ‰ΩôÂº¶ÂÆöÁêÜ ÂèØ‰ª•Êé®ÂØºÂá∫„ÄÇ ËøôÈáå‰∏çÁªôÂá∫ÂãæËÇ°ÂÆöÁêÜÂíå‰ΩôÂº¶ÂÆöÁêÜÁöÑËØÅÊòéÔºåÊÑüÂÖ¥Ë∂£ÁöÑÂèØ‰ª•Ëá™Â∑±ËØÅ„ÄÇ Ê†πÊçÆÂãæËÇ°ÂÆöÁêÜÔºö $$\begin{align}\overline{PQ}^2&amp;= (\sin\alpha - \sin\beta)^2 + (\cos\beta - \cos\alpha)^2 \newline&amp;= 2 - 2(\cos\alpha\cos\beta + \sin\alpha\sin\beta) \newline\end{align}$$ Ê†πÊçÆ‰ΩôÂº¶ÂÆöÁêÜÔºà$a^2 = b^2 + c^2 -2ab\cos A$ÔºâÔºö $$\begin{align}\overline{PQ}^2&amp; = 1^2 + 1^2 - 2\cdot1\cdot1\cdot\cos(\alpha-\beta)\end{align}$$ Áî±Ê≠§Êé®Âá∫Ôºö $$\cos(\alpha-\beta) = \sin\alpha\sin\beta+\cos\alpha\cos\beta$$ ‰πüÂç≥Ôºö $$\cos(\beta-\alpha) = \sin\alpha\sin\beta+\cos\alpha\cos\beta$$ ÁÑ∂ÂêéÔºö $$\begin{align}\sin(\beta-\alpha)&amp;= \cos(\frac{\pi}{2}-(\beta-\alpha)) \newline&amp;= \cos((\frac{\pi}{2}+\alpha) - \beta) \newline&amp;= \sin(\frac{\pi}{2}+\alpha)\sin\beta + \cos(\frac{\pi}{2}+\alpha)\cos\beta \newline&amp;= \cos\alpha\sin\beta - \sin\alpha\cos\beta \newline&amp;= \sin\beta\cos\alpha - \cos\beta\sin\alpha\end{align}$$]]></content>
      <tags>
        <tag>Êï∞Â≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Override Overload Overwrite]]></title>
    <url>%2Fblog%2F2017%2F11%2F14%2FOverride-Overload-Overwrite%2F</url>
    <content type="text"><![CDATA[Êàë‰ª¨ÈÉΩÁü•ÈÅìÊúâ‰∫õ‰∏úË•øÂÆπÊòìÊ∑∑Ê∑ÜÔºåÂú®Âä†‰∏ä‰∏≠ÊñáÁøªËØëÂæó‰π±‰∏ÉÂÖ´Á≥üÔºåÊõ¥Âä†ËÆ©‰∫∫Âõ∞ÊÉë„ÄÇ‰ªäÂ§©ÊàëË¶ÅËÆ≤ÁöÑËøô‰∏â‰ΩçÂèØÂ∞±ÁúüÊòØÁªù‰∫Ü„ÄÇ ÂÆÉ‰ª¨ÊòØÔºöOverride„ÄÅOverload„ÄÅOverwrite„ÄÇ ËøôÊòØÊàëÊü•ÊúâÈÅìËØçÂÖ∏Êó∂ÂÄôÁúãÂà∞ÁöÑÂèØÊÄï‰∏ÄÂπïÔºö Override ‰∏Ä‰∏™Êää‰∏â‰∏™ÂêçÂ≠óÈÉΩÂç†‰∫ÜÔºå‰Ω†ÊÄï‰∏çÊÄïÔºüÂèçÊ≠£ÊàëÊòØÁúãÁöÑÂøÉÈáå‰∏ÄÁ¥ß„ÄÇ Â¶ÇÊûúÊääÊ¶ÇÂøµÈÉΩÁÖÆÊàê‰∫Ü‰∏ÄÈîÖÁ≤•ÔºåÈÇ£Ëøò‰∏çÂ¶Ç‰∏çË¶ÅËÆ∞Ëøô‰∫õÊ¶ÇÂøµÔºå‰Ω†Â∫îËØ•ÂêëÊõ¥Ê∑±Â±ÇÊ¨°ÂéªÊé¢ÂØª„ÄÇÂ∞±Ëøô‰∏â‰∏™ÁöÑÂå∫Âà´Êù•ËØ¥ÔºåÊàëËßâÂæó‰∏ªË¶ÅÁêÜËß£‰∏§‰∏™Ê¶ÇÂøµÂ∞±Ë°å‰∫ÜÔºö ÂáΩÊï∞Á≠æÂêçÔºàsignatureÔºâ Â§öÊÄÅÔºàpolymorphism„ÄÅpolymorphicÔºâ ÂáΩÊï∞Á≠æÂêçÂáΩÊï∞Á≠æÂêçÊòØ‰ªÄ‰πàÔºåÂÖ∂ÂÆûÂ∞±ÊòØÁî®Êù•Âå∫Âà´ÂáΩÊï∞ÁöÑÔºå‰∏§‰∏™ÂáΩÊï∞ÊÄé‰πàÊ†∑ËÆ§ÂÆöÊòØ‰∏çÂêåÁöÑ‰∏§‰∏™ÂáΩÊï∞Âë¢ÔºåÂè™Êúâ‰∏§‰∏™ÊñπÈù¢Ôºö ÂáΩÊï∞Âêç ÂèÇÊï∞ Êúâ‰∫∫ËØ¥ËøòÊúâËøîÂõûÂÄºÂïäÔºå‰∏çË°åÔºåËøîÂõûÂÄº‰∏çËÉΩ‰Ωú‰∏∫ÂáΩÊï∞Á≠æÂêçÁöÑ‰∏ÄÈÉ®ÂàÜÔºåÂõ†‰∏∫‰Ω†Ë∞ÉÁî®‰∏Ä‰∏™ÂáΩÊï∞ÁöÑÊó∂ÂÄôÔºåËøîÂõûÂÄºÊ†πÊú¨‰∏çËÉΩÂ∏ÆÂä©ÁºñËØëÂô®Êù•ËØÜÂà´‰Ω†Áî®ÁöÑÊòØÂì™‰∏™ÂáΩÊï∞ÔºåÊØîÂ¶ÇÔºö 1234int func(int a, int b);float func(int a, int b);func(); ËØ∑ÈóÆÊàë‰ΩøÁî®ÁöÑÊòØÂì™‰∏™ÂáΩÊï∞Ôºü‰Ω†ÁúãËøîÂõûÂÄºÁ°ÆÂÆû‰∏çË°åÂêß„ÄÇ Â§öÊÄÅÂ§öÊÄÅÊòØÈù¢ÂêëÂØπË±°ÁºñÁ®ãÁöÑÊ¶ÇÂøµÔºå‰Ω†ÂèØ‰ª•ÁúãÁúãÂÆÉÁöÑÂáÜÁ°ÆÂÆö‰πâÔºö PolymorphismÔºåÂÆö‰πâÂæàÁÆÄÁü≠Ôºöpolymorphism is the provision of a single interface to entities of different types. Â¶ÇÊûúÁà∂Á±ªÊúâ‰∏Ä‰∏™ÂáΩÊï∞ÔºåÂ≠êÁ±ª‰πüÂÆö‰πâ‰∫Ü‰∏Ä‰∏™ÂÆåÂÖ®Áõ∏ÂêåÁöÑÂáΩÊï∞ÔºàÂáΩÊï∞Á≠æÂêçÁõ∏ÂêåÔºâÔºåÈÇ£‰πà‰Ω†ÂèØ‰ª•Áî®Áà∂Á±ªÊåáÈíàÔºàÊàñËÄÖËØ¥Áà∂Á±ªÂØπË±°Ôºâ‰Ωú‰∏∫Áªü‰∏ÄÁöÑÊé•Âè£ÔºåÊù•Ë∞ÉÁî®Â≠êÁ±ªÁöÑÊñπÊ≥ï„ÄÇÊØîÂ¶ÇÔºö 123456789101112131415161718192021222324252627class Vehicle&#123; public void move()&#123; System.out.println(‚ÄúVehicles can move!!‚Äù); &#125;&#125;class MotorBike extends Vehicle&#123; public void move()&#123; System.out.println(‚ÄúMotorBike can move and accelerate too!!‚Äù); &#125;&#125;class Car extends Vehicle&#123; public void move()&#123; System.out.println(‚ÄúHi! I am a car!‚Äù); &#125;&#125;class Test&#123; public static void main(String[] args)&#123; Vehicle vh = new MotorBike(); vh.move(); // prints MotorBike can move and accelerate too!! vh = new Vehicle(); vh.move(); // prints Vehicles can move!! vh = new Car(); vh.move(); // prints Hi! I am a car! &#125;&#125; Â§öÊÄÅÁöÑÂ•ΩÂ§ÑÊòØÂèØ‰ª•Êâ©Â±ïÂïäÔºåÊØîÂ¶ÇÊàëÂêéÊù•ÂèàÂ§ö‰∫Ü‰∏™ truck Á±ªÔºåÊàë‰∏çÈúÄË¶ÅÂéªÂä®Â∑≤ÁªèÂÜôÂ•ΩÁöÑ‰ª£Á†ÅÔºåÂè™Ë¶ÅÊää truck Ê®°ÂùóÂÜôÂ•ΩÔºåÂä†ËøõÂéªÂ∞±Ë°å‰∫Ü„ÄÇ Override„ÄÅOverload„ÄÅOverwrite ÁöÑÂå∫Âà´Â•Ω‰∫ÜÔºåÁü•ÈÅì‰∫ÜËøô‰∏§‰∏™Ê¶ÇÂøµÔºåÊàë‰ª¨ÂÜçÊù•ÁúãÁúã‰∏äÈù¢ÁöÑÈÇ£‰∏â‰∏™Ê∑∑Âú®‰∏ÄËµ∑ÁöÑ‰∏úË•øÔºö OverrideÔºàÊé®ÁøªÔºåÂØπËã±ÊñáÊÑèÊÄùÂ∞±ÊòØËøô‰∏™Ôºâsubclass method overrides base class method means: in different range (in derived class and base class) the same function signature the base class method is virtualÔºàif in C++Ôºâ overloadÔºàË∂ÖËΩΩÔºâfunction overloading means: the same range (in the same class) the same function name but different function signature overwriteÔºàÈáçÂÜôÔºâsubclass method hides base class method means: in different range (in derived class and base class) the same function name Êàë‰ª¨Â∫îËØ•ËÆ∞‰ΩèÂè™Êúâ Override ÊâçË∑üÂ§öÊÄÅÊúâÂÖ≥„ÄÇ Overload ÊòØÊú¨ class ÈáåÈù¢ÁöÑ‰∏çÂêåÂáΩÊï∞ÔºàÂè™‰∏çËøáÂáΩÊï∞Âêç‰∏ÄÊ†∑ÁΩ¢‰∫ÜÔºåÂÖ∂ÂÆûÊòØ‰∏§‰∏™‰∏çÂêåÁöÑÂáΩÊï∞ÔºåÁúã‰∏§‰∏™ÂáΩÊï∞ÊòØÂê¶ÊòØÂêå‰∏Ä‰∏™ÂáΩÊï∞Â∞±ÁúãÂáΩÊï∞Á≠æÂêçÂ∞±Ë°å‰∫ÜÔºâÔºåÂÖ∂ÂÆûÊ≤°Âï•Á®ÄÂ•áÁöÑÔºå‰∏çÂ∞±ÊòØÂáΩÊï∞Âêç‰∏ÄÊ†∑Âòõ„ÄÇÂáΩÊï∞Á≠æÂêç‰∏ÄÊ†∑ÔºåÂå∫ÂàÜÂá∫ÊòØÁî®Áà∂Á±ªËøòÊòØÂ≠êÁ±ªÁöÑÂáΩÊï∞ÔºåËøôÊâçÊòØÈù¢ÂêëÂØπË±°ÂíåÂ§öÊÄÅË¶ÅËß£ÂÜ≥ÁöÑÈóÆÈ¢ò„ÄÇ Override Âíå Overwrite ÁöÑÂå∫Âà´ ÊØîËæÉÂÆπÊòìÊ∑∑Ê∑ÜÁöÑÂÖ∂ÂÆûÊòØ Override Âíå OverwriteÔºå‰ΩÜ‰Ω†Âè™Ë¶ÅÊ≠ªËÆ∞‰ΩèÔºöOverride ÂøÖÈ°ªÂáΩÊï∞Á≠æÂêçË¶Å‰∏ÄÊ†∑ÔºåËÄå Overwrite Âè™ÈúÄÂáΩÊï∞Âêç‰∏ÄÊ†∑Âç≥ÂèØ„ÄÇÂè¶Â§ñ C++ ‰∏≠‰∏ÄÂÆöË¶ÅÁî® virtual ÊâçÁÆó OverrideÔºåËÄå Java ÈªòËÆ§Â∞±ÊòØ OverrideÔºå‰∏çÈúÄË¶Å‰øÆÈ•∞ËØç„ÄÇ ËøôÈáåÂÖ≥‰∫é Java Âíå C++ Èù¢ÂêëÂØπË±°ÁöÑÁªÜËäÇÂå∫Âà´ÂèØ‰ª•ÂÜô‰∏ÄÂ§ßÂ†ÜÔºåÊØîÂ¶ÇÔºöC++ class ÂêéÈù¢ÊòØË¶ÅÂä†ÂàÜÂè∑ÁöÑÔºåËÄå Java ‰∏çÈúÄË¶ÅÔºõ‰ΩÜ Java ÁöÑÁ±ªÂêçÊòØÂíåÊñá‰ª∂ÂêçË¶Å‰∏ÄËá¥ÁöÑÔºåËÄå‰∏îÂè™ËÉΩÊúâ‰∏Ä‰∏™ public Á±ªÔºåËÄå C++‰∏çÈúÄË¶ÅÔºõJava Áõ¥Êé•Â∞±ËÉΩÁî® OverrideÔºåËÄå C++ÂøÖÈ°ªË¶Å‰ΩøÁî® virtual ÂÖ≥ÈîÆÂ≠óÔºàËôöÂáΩÊï∞ÔºâÊâçËÉΩ‰ΩøÁî® OverrideÔºõJava ÁöÑÊäΩË±°ÊñπÊ≥ïË∑ü C++ÁöÑÁ∫ØËôöÂáΩÊï∞ÂØπÂ∫î„ÄÇJava ÊòØÂçïÁªßÊâøÔºåÁî±Êé•Âè£Êù•ÂÆûÁé∞‚ÄúÂ§öÁªßÊâø‚ÄùÔºåC++ÊòØÂ§öÁªßÊâøÔºåÊ≤°ÊúâÊé•Âè£ÔºåÂè™ÊúâÊäΩË±°Á±ª„ÄÇC++ËøòÊúâ‰∏™ËôöÂü∫Á±ªÁöÑÊ¶ÇÂøµ„ÄÇÂÖ∑‰ΩìÁöÑÂÜôÊ≥ï‰∏äËøòÊúâÂæàÂ§öÁöÑ‰∏çÂêåÔºåÂ§öÁî®Ëøô‰∏§ÁßçËØ≠Ë®ÄÂÜôÈù¢ÂêëÂØπË±°ÁöÑ‰ª£Á†ÅÔºåÂ∞±ÊÖ¢ÊÖ¢‰ºöÁü•ÈÅì‰∫Ü„ÄÇ C++ Êúâ‰∏Ä‰∏™ virtual ÂÖ≥ÈîÆÂ≠óÂíå virtual table Ëøô‰∏™Ê¶ÇÂøµÔºåÊ≤°ÊúâÂä† virtual ÁöÑÁà∂Á±ªÂáΩÊï∞ÊòØ‰∏çÂèØËÉΩÂΩ¢ÊàêÂ§öÊÄÅÁöÑÔºåÂ¶ÇÊûúËøôÊó∂ÂÄô‰Ω†Á¢∞Âà∞Áà∂Á±ªÂíåÂ≠êÁ±ª‰∏§‰∏™ÈáåÈù¢ÊúâÂêåÂêçÁöÑÂáΩÊï∞ÔºåÈÇ£‰πàÂ∞±Â±û‰∫é Overwrite Ëøô‰∏™Ê¶ÇÂøµ‰∫ÜÔºå‰Ω†ÂÖ∂ÂÆû‰πüÂèØ‰ª•Áß∞ËøôÁßçË¶ÜÁõñÊéâÁà∂Á±ªÂáΩÊï∞ÁöÑË°å‰∏∫‰∏∫Ôºöhide ÈöêËóè„ÄÇJava ËøôÁßçËØ≠Ë®ÄÈáåÈù¢Ê≤°Êúâ virtual Ëøô‰∏ÄÂ•óÔºåJava ‰πüÂèØ‰ª•Ë°®Áé∞Âá∫ OverwriteÔºå‰ΩÜË¶ÅÊ≥®ÊÑèÂáΩÊï∞Á≠æÂêçÂ¶ÇÊûú‰∏ÄÊ†∑ÁöÑËØùÔºåÈÇ£Âèà‰∏çÂè´ Overwrite ‰∫ÜÔºåÂ∫îËØ•Âè´ Override ‰∫ÜÔºàJava Â¶ÇÊûúË¶ÅÂú®Â≠êÁ±ª‰∏≠‰ΩøÁî®Áà∂Á±ªÁöÑÂêåÂáΩÊï∞Á≠æÂêçÊñπÊ≥ïÔºåÂàôÂøÖÈ°ª‰ΩøÁî® super ÂÖ≥ÈîÆÂ≠óÔºâ„ÄÇËÄå C++ ‰∏ç‰∏ÄÊ†∑ÔºåÂç≥‰æøÊòØÂáΩÊï∞Á≠æÂêç‰∏ÄÊ†∑ÔºåÂ¶ÇÊûúÂâçÈù¢‰∏çÂä† virtual ÊòØ‰∏çËÉΩÂè´ Override ÁöÑÔºå‰ªçÁÑ∂Â±û‰∫é Overwrite ÁöÑÊ¶ÇÂøµ„ÄÇËØ∑Áúã‰∏ãÈù¢ÁöÑ‰æãÂ≠êÔºö Áî® C++ ÂÜôÁöÑËØùÔºö 12345678910111213141516171819202122232425#include &lt;iostream&gt;using std::cout;using std::endl;class A&#123;public: void func(int a)&#123; cout &lt;&lt; "A" &lt;&lt; endl; &#125;&#125;;class B:public A&#123;public: void func(int a)&#123; cout &lt;&lt; "B" &lt;&lt; endl; &#125;&#125;;int main()&#123; A *a = new B(); a-&gt;func(1); ((B*)a)-&gt;func(1); return 0;&#125; ÁªìÊûúËæìÂá∫Ôºö 12AB ÂèØ‰ª•ÁúãÂà∞ÔºåC++ÂøÖÈ°ªË¶ÅÁî®Â≠êÁ±ªÁ±ªÂûãÁöÑÊåáÈíàÊâçËÉΩËÆøÈóÆÂà∞Â≠êÁ±ªÁöÑÈÉ®ÂàÜÔºàÂª∫ËÆÆÁúã‰∏ÄÊú¨‰π¶ÔºåÂè´ÔºöInside the C++ Object ModelÔºå‰∏≠ÊñáÂè´ÔºöÊ∑±ÂÖ• C++ÂØπË±°Ê®°ÂûãÔºåÈáåÈù¢ËÆ≤ÂØπË±°ÁöÑÂÜÖÂ≠òÂ∏ÉÂ±ÄËÆ≤ÁöÑÂæàÊ∏ÖÊ•öÔºâÔºåjava ‰πü‰∏ÄÊ†∑ÔºåÂøÖÈ°ªËΩ¨ÊàêÂ≠êÁ±ªÂûãÁöÑÊåáÈíàÊâçËÉΩËÆøÈóÆÔºåÂê¶Âàô IDE ‰ºöÊä•ÈîôÊèêÁ§∫‰Ω†„ÄÇ Java ‰ª£Á†ÅÔºö 1234567891011121314151617181920public class test &#123; class A&#123; void func(int a)&#123; System.out.println("A"); &#125; &#125; class B extends A&#123; void func(int a, int b)&#123; System.out.println("B"); &#125; &#125; public static void main(String[] args)&#123; test t = new test(); A a = t.new B(); a.fun(1); ((B)a).func(1,2); &#125;&#125; ÁªìÊûúËæìÂá∫Ôºö 12AB ‰∏∫‰ªÄ‰πà Java ‰ª£Á†ÅÈáå‰∏çÂÉè C++ ‰ª£Á†ÅÈáåÈù¢ÈÇ£Ê†∑Ôºå‰ΩøÁî®‰∏§‰∏™ÂáΩÊï∞Á≠æÂêçÁõ∏ÂêåÁöÑÂáΩÊï∞ÔºüÂõ†‰∏∫ÂâçÈù¢ËØ¥Ëøá‰∫ÜÔºåÈÇ£Ê†∑ÁöÑËØùÂ∞±ÂèòÊàê Override ‰∫ÜÔºåÂè™ÊúâÂú® C++ ÈáåÊâçËÉΩÂÆûÁé∞ÂáΩÊï∞Á≠æÂêçÁõ∏ÂêåÁöÑ OverwriteÔºà‰∏ç‰ΩøÁî® virtual Âç≥ÂèØÔºâ„ÄÇ]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Inside the C++ Object Model Á≥ªÂàóÁ¨îËÆ∞ Âõõ -- The Semantics of Function]]></title>
    <url>%2Fblog%2F2017%2F10%2F23%2FThe-Semantics-of-Function%2F</url>
    <content type="text"><![CDATA[c++ÊîØÊåÅ‰∏âÁßçÁ±ªÂûãÁöÑÊàêÂëòÂáΩÊï∞ÔºåÂàÜÂà´‰∏∫ static,nostatic,virtual„ÄÇÊØè‰∏ÄÁßçË∞ÉÁî®ÊñπÂºèÈÉΩ‰∏çÂ∞ΩÁõ∏Âêå„ÄÇ nonstatic member functionC++ÁöÑËÆæËÆ°ÂáÜÂàô‰πã‰∏ÄÂ∞±ÊòØ:nonstatic member function Ëá≥Â∞ëÂøÖÈ°ªÂíå‰∏ÄËà¨ÁöÑ nonmember function ÊúâÁõ∏ÂêåÁöÑÊïàÁéá„ÄÇÂÆûÈôÖ‰∏äÔºånonstatic member function ‰ºöË¢´ÁºñËØëÂô®ËøõË°åÂ¶Ç‰∏ãÁöÑËΩ¨Êç¢ÔºåÂèòÊàê‰∏Ä‰∏™ÊôÆÈÄöÂáΩÊï∞: 1Type1 X::foo(Type2 arg1) &#123; ... &#125; ‰ºöË¢´ËΩ¨Êç¢‰∏∫Â¶Ç‰∏ãÁöÑÊôÆÈÄöÂáΩÊï∞: 1void foo(X *const this, Type1 &amp;__result, Type2 arg1) &#123; ... &#125; ÊîπÂÜôÂáΩÊï∞ÂéüÂûãÔºåÂú®ÂèÇÊï∞‰∏≠Â¢ûÂä† this ÊåáÈíàÔºåÂØπÊØè‰∏Ä‰∏™‚Äùnonstatic data member ÁöÑÂ≠òÂèñÊìç‰Ωú‚ÄùÊîπ‰∏∫Áî± this ÊåáÈíàÊù•Â≠òÂèñ Â∞Ü member function ÈáçÂÜô‰∏∫‰∏Ä‰∏™Â§ñÈÉ®ÂáΩÊï∞ÔºåÁªèËøá‚Äùmangling‚ÄùÂ§ÑÁêÜÔºà‰∏çÈúÄË¶ÅÂ§ÑÁêÜÁöÑÂä†‰∏ä extern ‚ÄúC‚ÄùÔºâ ÂÆûÈôÖ‰∏äÔºåÊôÆÈÄöÂáΩÊï∞„ÄÅÊôÆÈÄöÊàêÂëòÂáΩÊï∞„ÄÅÈùôÊÄÅÊàêÂëòÂáΩÊï∞Âà∞ÊúÄÂêéÈÉΩ‰ºöÂèòÊàê‰∏é C ËØ≠Ë®ÄÂáΩÊï∞Á±ª‰ººÁöÑÊôÆÈÄöÂáΩÊï∞ÔºåÂè™ÊòØÁºñËØëÂô®Âú®Ëøô‰∫õ‰∏çÂêåÁ±ªÂûãÁöÑÂáΩÊï∞Ë∫´‰∏äÂÅö‰∫Ü‰∏çÂêåÁöÑÊâ©Â±ïÔºåÂπ∂ÊîæÂú®‰∏çÂêåÁöÑ scope ÈáåÈù¢ËÄåÂ∑≤„ÄÇ ÁºñËØëÂô®ÂÜÖÈÉ®‰ºöÂ∞ÜÊàêÂëòÂáΩÊï∞Á≠â‰ª∑ËΩ¨Êç¢‰∏∫ÈùûÊàêÂëòÂáΩÊï∞ÔºåÂÖ∑‰ΩìÊòØËøôÊ†∑ÂÅöÁöÑ: 1.ÊîπÂÜôÊàêÂëòÂáΩÊï∞ÁöÑÁ≠æÂêçÔºå‰ΩøÂæóÂÖ∂ÂèØ‰ª•Êé•Âèó‰∏Ä‰∏™È¢ùÂ§ñÂèÇÊï∞ÔºåËøô‰∏™È¢ùÂ§ñÂèÇÊï∞Âç≥ÊòØ this ÊåáÈíàÔºö 123float Point::X();//ÊàêÂëòÂáΩÊï∞XË¢´ÊèíÂÖ•È¢ùÂ§ñÂèÇÊï∞thisfloat Point:: X(Point* this ); ÂΩìÁÑ∂Â¶ÇÊûúÊàêÂëòÂáΩÊï∞ÊòØ const ÁöÑÔºåÊèíÂÖ•ÁöÑÂèÇÊï∞Á±ªÂûãÂ∞Ü‰∏∫ const Point* Á±ªÂûã„ÄÇ 2.Â∞ÜÊØè‰∏Ä‰∏™ÂØπÈùûÈùôÊÄÅÊï∞ÊçÆÊàêÂëòÁöÑÊìç‰ΩúÈÉΩÊîπÂÜô‰∏∫ÁªèËøá this Êìç‰Ωú„ÄÇ 3.Â∞ÜÊàêÂëòÂáΩÊï∞ÂÜôÊàê‰∏Ä‰∏™Â§ñÈÉ®ÂáΩÊï∞ÔºåÂØπÂáΩÊï∞ÂêçËøõË°å‚Äúmangling‚ÄùÂ§ÑÁêÜÔºå‰Ωø‰πãÊàê‰∏∫Áã¨‰∏ÄÊó†‰∫åÁöÑÂêçÁß∞„ÄÇ ÂèØ‰ª•ÁúãÂá∫ÔºåÂ∞Ü‰∏Ä‰∏™ÊàêÂëòÂáΩÊï∞ÊîπÂÜôÊàê‰∏Ä‰∏™Â§ñÈÉ®ÂáΩÊï∞ÁöÑÂÖ≥ÈîÆÂú®‰∫é‰∏§ÁÇπÔºå‰∏ÄÊòØÁªôÂáΩÊï∞Êèê‰æõ‰∏Ä‰∏™ÂèØ‰ª•Áõ¥Êé•ËØªÂÜôÊàêÂëòÊï∞ÊçÆÁöÑÈÄöÈÅìÔºõ‰∫åÊòØËß£ÂÜ≥Â•ΩÊúâÂèØËÉΩÂ∏¶Êù•ÁöÑÂêçÂ≠óÂÜ≤Á™Å„ÄÇÁ¨¨‰∏ÄÁÇπÈÄöËøáÁªôÂáΩÊï∞Êèê‰æõ‰∏Ä‰∏™È¢ùÂ§ñÁöÑÊåáÈíàÂèÇÊï∞Êù•Ëß£ÂÜ≥ÔºåÁ¨¨‰∫åÁÇπÂàôÊòØÈÄöËøá‰∏ÄÂÆöÁöÑËßÑÂàôÂ∞ÜÂêçÂ≠óËΩ¨Êç¢Ôºå‰Ωø‰πãÁã¨‰∏ÄÊó†‰∫å„ÄÇ ‰∫éÊòØÂú® VC ‰∏≠ÂØπ‰∫é‰∏äÈù¢ÁöÑ‰æãÂ≠ê‰∏≠ÁöÑÊàêÂëòÂáΩÊï∞ÁöÑË∞ÉÁî®Â∞ÜÂèëÁîüÂ¶Ç‰∏ãÁöÑËΩ¨Êç¢Ôºö 1234//p-&gt;X();Ë¢´ËΩ¨Âåñ‰∏∫?X@Point@@QAEMXZ(p);//obj.X();Ë¢´ËΩ¨Âåñ‰∏∫?X@Point@@QAEMXZ(&amp;obj); Ë¶ÜÁõñÔºàoverrideÔºâ„ÄÅÈáçËΩΩÔºàoverloadÔºâ„ÄÅÈöêËóèÔºàhide, overwriteÔºâÁöÑÂå∫Âà´Ôºö Ë¶ÜÁõñÔºà‰πüÂè´ÈáçÂÜôÔºâÊòØÊåáÂú®Ê¥æÁîüÁ±ª‰∏≠ÈáçÊñ∞ÂØπÂü∫Á±ª‰∏≠ÁöÑËôöÂáΩÊï∞ÔºàÊ≥®ÊÑèÊòØËôöÂáΩÊï∞ÔºâÈáçÊñ∞ÂÆûÁé∞„ÄÇÂç≥ÂáΩÊï∞ÂêçÂíåÂèÇÊï∞ÈÉΩ‰∏ÄÊ†∑ÔºàÂáΩÊï∞Á≠æÂêç‰∏ÄÊ†∑ÔºâÔºåÂè™ÊòØÂáΩÊï∞ÁöÑÂÆûÁé∞‰Ωì‰∏ç‰∏ÄÊ†∑„ÄÇ ÈáçËΩΩÊòØÊåá Âú®Âêå‰∏Ä‰∏™Á±ª‰∏≠ ‰∏çÂêåÁöÑÂáΩÊï∞‰ΩøÁî®Áõ∏ÂêåÁöÑÂáΩÊï∞ÂêçÔºå‰ΩÜÊòØÂáΩÊï∞ÁöÑÂèÇÊï∞‰∏™Êï∞ÊàñÁ±ªÂûã‰∏çÂêå„ÄÇË∞ÉÁî®ÁöÑÊó∂ÂÄôÊ†πÊçÆÂáΩÊï∞ÁöÑÂèÇÊï∞Êù•Âå∫Âà´‰∏çÂêåÁöÑÂáΩÊï∞„ÄÇ ÈöêËóèÊòØÊåáÊ¥æÁîüÁ±ª‰∏≠ÁöÑÂáΩÊï∞ÊääÂü∫Á±ª‰∏≠Áõ∏ÂêåÂêçÂ≠óÁöÑÂáΩÊï∞Â±èËîΩÊéâ‰∫Ü„ÄÇÈöêËóè‰∏éÂè¶Â§ñ‰∏§‰∏™Ê¶ÇÂøµË°®Èù¢‰∏äÁúãÊù•ÂæàÂÉèÔºåÂæàÈöæÂå∫ÂàÜÔºåÂÖ∂ÂÆû‰ªñ‰ª¨ÁöÑÂÖ≥ÈîÆÂå∫Âà´Â∞±ÊòØÂú®Â§öÊÄÅÁöÑÂÆûÁé∞‰∏ä„ÄÇ C++Â§öÊÄÅÔºàpolymorphismÔºâË°®Á§∫‚Äù‰ª•‰∏Ä‰∏™ public base class ÁöÑÊåáÈíàÔºàÊàñËÄÖ referenceÔºâÔºåÂØªÂùÄÂá∫‰∏Ä‰∏™ derived class object‚Äù Êàë‰∏ìÈó®ÂÜô‰∫Ü‰∏ÄÁØáÂÖ≥‰∫éËøô‰∫õÂÆπÊòìÂºÑÊ∑∑ÁöÑÊ¶ÇÂøµÁöÑÊñáÁ´†ÔºöOverride Overload Overwrite Virtual Member FunctionÂ¶ÇÊûú function()ÊòØ‰∏Ä‰∏™ËôöÊãüÂáΩÊï∞ÔºåÈÇ£‰πàÁî®ÊåáÈíàÊàñÂºïÁî®ËøõË°åÁöÑË∞ÉÁî®Â∞ÜÂèëÁîü‰∏ÄÁÇπÁâπÂà´ÁöÑËΩ¨Êç¢‚Äî‚Äî‰∏Ä‰∏™‰∏≠Èó¥Â±ÇË¢´ÂºïÂÖ•ËøõÊù•„ÄÇ‰æãÂ¶ÇÔºö 123// p-&gt;function()//Â∞ÜËΩ¨Âåñ‰∏∫(*p-&gt;vptr[1])(p); ÂÖ∂‰∏≠ vptr ‰∏∫ÊåáÂêëËôöÂáΩÊï∞Ë°®ÁöÑÊåáÈíàÔºåÂÆÉÁî±ÁºñËØëÂô®‰∫ßÁîü„ÄÇvptr ‰πüË¶ÅËøõË°åÂêçÂ≠óÂ§ÑÁêÜÔºåÂõ†‰∏∫‰∏Ä‰∏™ÁªßÊâø‰ΩìÁ≥ªÂèØËÉΩÊúâÂ§ö‰∏™ vptr„ÄÇ 1 ÊòØËôöÂáΩÊï∞Âú®ËôöÂáΩÊï∞Ë°®‰∏≠ÁöÑÁ¥¢ÂºïÔºåÈÄöËøáÂÆÉÂÖ≥ËÅîÂà∞ËôöÂáΩÊï∞ function(). ‰ΩïÊó∂ÂèëÁîüËøôÁßçËΩ¨Êç¢ÔºüÁ≠îÊ°àÊòØÂú®ÂøÖÈúÄÁöÑÊó∂ÂÄô -- ‰∏Ä‰∏™ÂÜçÁÜüÊÇâ‰∏çËøáÁöÑÁ≠îÊ°à„ÄÇÂΩìÈÄöËøáÊåáÈíàË∞ÉÁî®ÁöÑÊó∂ÂÄôÔºåË¶ÅË∞ÉÁî®ÁöÑÂáΩÊï∞ÂÆû‰ΩìÊó†Ê≥ïÂú®ÁºñËØëÊúüÂÜ≥ÂÆöÔºåÂøÖÈúÄÂæÖÂà∞ÊâßË°åÊúüÊâçËÉΩËé∑ÂæóÔºåÊâÄ‰ª•‰∏äÈù¢ÂºïÂÖ•‰∏Ä‰∏™Èó¥Êé•Â±ÇÁöÑËΩ¨Êç¢ÂøÖ‰∏çÂèØÂ∞ë„ÄÇ‰ΩÜÊòØÂΩìÊàë‰ª¨ÈÄöËøáÂØπË±°Ôºà‰∏çÊòØÂºïÁî®Ôºå‰πü‰∏çÊòØÊåáÈíàÔºâÊù•Ë∞ÉÁî®ÁöÑÊó∂ÂÄôÔºåËøõË°å‰∏äÈù¢ÁöÑËΩ¨Êç¢Â∞±ÊòæÂæóÂ§ö‰Ωô‰∫ÜÔºåÂõ†‰∏∫Âú®ÁºñËØëÂô®Ë¶ÅË∞ÉÁî®ÁöÑÂáΩÊï∞ÂÆû‰ΩìÂ∑≤ÁªèË¢´ÂÜ≥ÂÆö„ÄÇÊ≠§Êó∂Ë∞ÉÁî®ÂèëÁîüÁöÑËΩ¨Êç¢Ôºå‰∏é‰∏Ä‰∏™ÈùûÈùôÊÄÅÊàêÂëòÂáΩÊï∞(Nonstatic Member Functions)Ë∞ÉÁî®ÂèëÁîüÁöÑËΩ¨Êç¢‰∏ÄËá¥„ÄÇp.function()ÁöÑÂ§ÑÁêÜÂ∞±Ë∑üÈùûÈùôÊÄÅÊàêÂëòÂáΩÊï∞‰∏ÄÊ†∑‰∫Ü„ÄÇ Static Member Function ‰∏çËÉΩÂ§üÁõ¥Êé•Â≠òÂèñÂÖ∂Á±ª‰∏≠ÁöÑÈùûÈùôÊÄÅÊàêÂëòÔºànostatic membersÔºâÔºåÂåÖÊã¨‰∏çËÉΩË∞ÉÁî®ÈùûÈùôÊÄÅÊàêÂëòÂáΩÊï∞(Nonstatic Member Functions)„ÄÇ ‰∏çËÉΩÂ£∞Êòé‰∏∫ const„ÄÅvolatile Êàñ virtual ÂèÇÊï∞Ê≤°Êúâ this ÂèØ‰ª•‰∏çÁî®ÂØπË±°ËÆøÈóÆÔºåÁõ¥Êé• Á±ªÂêç::ÈùôÊÄÅÊàêÂëòÂáΩÊï∞ ËÆøÈóÆÔºåÂΩìÁÑ∂ÔºåÈÄöËøáÂØπË±°Ë∞ÉÁî®‰πüË¢´ÂÖÅËÆ∏ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÈÄöËøá‰∏Ä‰∏™Ë°®ËææÂºèÊàñÂáΩÊï∞ÂØπÈùôÊÄÅÊàêÂëòÂáΩÊï∞ËøõË°åË∞ÉÁî®ÔºåË¢´ C++ Standard Ë¶ÅÊ±ÇÂØπË°®ËææÂºèËøõË°åÊ±ÇÂÄº„ÄÇÂ¶ÇÔºö 12(a+=b).static_fuc();func().static_fuc(); ËôΩÁÑ∂ÁúÅÂéªÂØπ a+b Ê±ÇÂÄºÂØπ‰∫é static_fuc()ÁöÑË∞ÉÁî®Âπ∂Ê≤°ÊúâÂΩ±ÂìçÔºå‰ΩÜÊòØÁ®ãÂ∫èÂëòËÇØÂÆö‰ºöËÆ§‰∏∫Ë°®ËææÂºè a+=b Â∑≤ÁªèÊâßË°åÔºå‰∏ÄÊó¶ÁºñËØëÂô®‰∏∫‰∫ÜÊïàÁéáÁúÅÂéª‰∫ÜËøô‰∏ÄÊ≠•ÔºåÂæàÈöæËØ¥‰ºöÊµ™Ë¥πÂ§öÂ∞ëÁ®ãÂ∫èÂëòÂ§öÂ∞ëÊó∂Èó¥ÂéªÊü•ÊâæËøô‰∏™ bug„ÄÇËøôÊó†ÁñëÊòØ‰∏Ä‰∏™ÊòéÊô∫ÁöÑËßÑÂÆö„ÄÇfunc()ËøîÂõû‰∏Ä‰∏™ÂØπË±°„ÄÇ vtable ÁöÑÂÜÖÂÆπÔºö virtual class offsetÔºàÊúâËôöÂü∫Á±ªÊâçÊúâÔºâ topoffset typeinfo ÁªßÊâøÂü∫Á±ªÊâÄÂ£∞ÊòéÁöÑËôöÂáΩÊï∞ÂÆû‰æãÔºåÊàñËÄÖÊòØË¶ÜÁõñÔºàoverrideÔºâÂü∫Á±ªÁöÑËôöÂáΩÊï∞ Êñ∞ÁöÑËôöÂáΩÊï∞ÔºàÊàñËÄÖÊòØÁ∫ØËôöÂáΩÊï∞Âç†‰ΩçÔºâ ËôöÂáΩÊï∞Ë°®ÁöÑÊûÑÈÄ†Êå∫ÁÆÄÂçïÁöÑÔºö ‰ªéÂÜÖÂ≠òÂ∏ÉÂ±ÄÁöÑËßíÂ∫¶ÁúãÔºåÁ±ªÂØπË±°ÁªßÊâøÂü∫Á±ªÁöÑÊó∂ÂÄôÂè™ÊääÂü∫Á±ªÁöÑ nonstatic data member Âíå member functionÔºàÂáΩÊï∞ÂÖ•Âè£Ôºå‰πüÂèØ‰ª•ËØ¥ÊòØÂáΩÊï∞ÊåáÈíàÔºâ ÊîæËøõËá™Â∑±ÂÜÖÂ≠òÈáåÔºåstatic data member Âíå static function ÈÉΩÂú® global address ÈáåÈù¢„ÄÇÁÑ∂ÂêéÂ∞±ÊòØËôöÂáΩÊï∞Ë°®ÊòØÂ§çÂà∂‰∫Ü‰∏Ä‰ªΩÂü∫Á±ªÁöÑËôöÂáΩÊï∞Ë°®ÔºåÁÑ∂ÂêéÊää virtual ÂÆûÁé∞‰∫ÜÁöÑÈÉ®ÂàÜÊõøÊç¢ÊéâÔºåÊ≤°ÂÆûÁé∞ÁöÑÂ∞±‰∏çÊîπÔºå‰æùÁÑ∂Áî®Áà∂Á±ªÁöÑ„ÄÇÁÑ∂ÂêéËôöÂáΩÊï∞Ë°®ÊåáÈíàËá™ÁÑ∂‰πüË¶Å‰∏ç‰∏ÄÊ†∑ÔºåÊØïÁ´üÊåáÂêëÁöÑÂÜÖÂ≠òÂú∞ÂùÄ‰∏ç‰∏ÄÊ†∑ÔºåÂØπÂêß„ÄÇ]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Inside the C++ Object Model Á≥ªÂàóÁ¨îËÆ∞ ‰∏â -- The Semantics of Data]]></title>
    <url>%2Fblog%2F2017%2F10%2F21%2FThe-Semantics-of-Data%2F</url>
    <content type="text"><![CDATA[C++ÂØπË±°Ê®°ÂûãÁöÑÁªÜËäÇÔºåËÆ®ËÆ∫‰∫Ü data members ÁöÑÂ§ÑÁêÜ„ÄÇ Á©∫Á±ªÂú®ÂÜÖÂ≠ò‰∏≠ÊúâÁ©∫Èó¥Âêó ‰∏Ä‰∏™ÂÆû‰æãÂºïÂá∫ÁöÑÊÄùËÄÉÔºö 1234class X&#123;&#125;;class Y:virtual public X&#123;&#125;;class Z:virtual public X&#123;&#125;;class A:public Y, public Z&#123;&#125;; ÁåúÁåú sizeof ‰∏äÈù¢ÂêÑ‰∏™Á±ªÈÉΩ‰∏∫Â§öÂ∞ëÔºü Lippman ÁöÑ‰∏Ä‰∏™Ê≥ïÂõΩËØªËÄÖÁöÑÁªìÊûúÊòØÔºö 1234sizeof X yielded 1sizeof Y yielded 8sizeof Z yielded 8sizeof A yielded 12 Lippman Ëá™Â∑±ÁöÑÁªìÊûúÊòØÔºö 1234sizeof X yielded 1sizeof Y yielded 4sizeof Z yielded 4sizeof A yielded 8 ‰∫ãÂÆû‰∏äÔºåÂØπ‰∫éÂÉè X ËøôÊ†∑ÁöÑ‰∏Ä‰∏™Á©∫Á±ªÔºåÁºñËØëÂô®‰ºöÂØπÂÖ∂Âä®ÁÇπÊâãËÑö‚Äî‚ÄîÈöêÊô¶ÁöÑÊèíÂÖ•‰∏Ä‰∏™Â≠óËäÇ„ÄÇ‰∏∫‰ªÄ‰πàË¶ÅËøôÊ†∑ÂÅöÂë¢ÔºüÊèíÂÖ•‰∫ÜËøô‰∏Ä‰∏™Â≠óËäÇÔºåÈÇ£‰πà X ÁöÑÊØè‰∏Ä‰∏™ÂØπË±°ÈÉΩÂ∞ÜÊúâ‰∏Ä‰∏™Áã¨‰∏ÄÊó†‰∫åÁöÑÂú∞ÂùÄ„ÄÇÂ¶ÇÊûú‰∏çÊèíÂÖ•Ëøô‰∏Ä‰∏™Â≠óËäÇÂë¢ÔºüÂìºÂìºÔºåÈÇ£ÂØπ X ÁöÑÂØπË±°ÂèñÂú∞ÂùÄÁöÑÁªìÊûúÊòØ‰ªÄ‰πàÔºü‰∏§‰∏™‰∏çÂêåÁöÑ X ÂØπË±°Èó¥Âú∞ÂùÄÁöÑÊØîËæÉÊÄé‰πàÂäûÔºü Êàë‰ª¨ÂÜçÊù•Áúã Y Âíå Z„ÄÇÈ¶ñÂÖàÊàë‰ª¨Ë¶ÅÊòéÁôΩÁöÑÊòØÂÆûÁé∞ËôöÁªßÊâøÔºåÂ∞ÜË¶ÅÂ∏¶Êù•‰∏Ä‰∫õÈ¢ùÂ§ñÁöÑË¥üÊãÖ‚Äî‚ÄîÈ¢ùÂ§ñÈúÄË¶Å‰∏Ä‰∏™ÊüêÁßçÂΩ¢ÂºèÁöÑÊåáÈíà„ÄÇÂà∞ÁõÆÂâç‰∏∫Ê≠¢ÔºåÂØπ‰∫é‰∏Ä‰∏™ 32 ‰ΩçÁöÑÊú∫Âô®Êù•ËØ¥ Y„ÄÅZ ÁöÑÂ§ßÂ∞èÂ∫îËØ•‰∏∫ 5ÔºåËÄå‰∏çÊòØ 8 ÊàñËÄÖ 4„ÄÇÊàë‰ª¨ÈúÄË¶ÅÂÜçËÄÉËôë‰∏§ÁÇπÂõ†Á¥†ÔºöÂÜÖÂ≠òÂØπÈΩêÔºàalignment‚ÄîÔºâÂíåÁºñËØëÂô®ÁöÑ‰ºòÂåñ„ÄÇ Á©∫Á±ª‰πüÊúâ 1Byte ÁöÑÂ§ßÂ∞èÔºåÂõ†‰∏∫ËøôÊ†∑ÊâçËÉΩ‰ΩøÂæóËøô‰∏™ class ÁöÑ 2 ‰∏™ objects Âú®ÂÜÖÂ≠ò‰∏≠ÊúâÁã¨‰∏ÄÊó†‰∫åÁöÑÂú∞ÂùÄ„ÄÇ The Binding of a Data MemberËÄÉËôë‰∏ãÈù¢ËøôÊ†∑ÁöÑ‰ª£Á†ÅÔºö 1234567891011extern float x;class Point3d&#123;public: Point3d(float, float, float); //ÈóÆÈ¢òÊòØ x Âà∞Â∫ïÊòØÂì™‰∏™ x Âë¢ float X() const &#123;return x;&#125; void X(float new_x) const&#123;x = new_x;&#125;private: float x;&#125; ÂØπ member functions Êú¨Ë∫´ÁöÑÂàÜÊûê‰ºöÁõ¥Âà∞Êï¥‰∏™ class ÁöÑÂ£∞ÊòéÈÉΩÂá∫Áé∞‰∫ÜÊâçÂºÄÂßãÔºàÁõ¥Âà∞ÁúãÂà∞‰ª£Ë°® class ÁªìÊùüÁöÑ}Âè≥Â§ßÊã¨Âè∑Ôºâ„ÄÇÊâÄ‰ª• class ÁöÑ member functions ÂèØ‰ª•ÂºïÁî®Â£∞ÊòéÂú®ÂêéÈù¢ÁöÑÊàêÂëòÔºåC ËØ≠Ë®ÄÂ∞±ÂÅö‰∏çÂà∞„ÄÇ Âíå member functions ÂØπÊØîÔºåÈúÄË¶ÅÂçÅÂàÜÊ≥®ÊÑèÁöÑ‰∏ÄÁÇπÊòØ:class ‰∏≠ÁöÑ typedef Âπ∂‰∏çÂÖ∑Â§áËøô‰∏™ÊÄßË¥®„ÄÇÂõ†Ê≠§ÔºåÁ±ª‰∏≠ÁöÑ typedef ÁöÑÂΩ±Âìç‰ºöÂèóÂà∞ÂáΩÊï∞‰∏é typedef ÁöÑÂÖàÂêéÈ°∫Â∫èÁöÑÂΩ±Âìç„ÄÇ 1234567typedef int length;class Point3d&#123;public: void f1(length l)&#123; cout &lt;&lt; l &lt;&lt; endl; &#125; typedef string length; void f2(length l)&#123; cout &lt;&lt; l &lt;&lt; endl; &#125;&#125;; ËøôÊ†∑ f1 ÁªëÂÆöÁöÑ length Á±ªÂûãÊòØ int;ËÄå f2 ÁªëÂÆöÁöÑ length Á±ªÂûãÊâçÊòØ string„ÄÇ ÊâÄ‰ª•ÔºåÂØπ‰∫é typedef ÈúÄË¶ÅÈò≤Âæ°ÊÄßÁöÑÁ®ãÂ∫èÈ£éÊ†º:ÂßãÁªàÊää nested type Â£∞Êòé(Âç≥ typedef)ÊîæÂú® class Ëµ∑ÂßãÂ§Ñ! Data Member LayoutC++Âè™‰øùËØÅÂ§Ñ‰∫éÂêå‰∏Ä‰∏™ access sectionÔºà‰πüÂ∞±ÊòØ private,public,protected ÁâáÊÆµÔºâÁöÑÊï∞ÊçÆÔºå‰∏ÄÂÆö‰ºö‰ª•Â£∞ÊòéÁöÑÊ¨°Â∫èÂá∫Áé∞Âú®ÂÜÖÂ≠òÂ∏ÉÂ±ÄÂΩì‰∏≠(Ë¶ÅÊ±ÇËæÉÊôöÂá∫Áé∞ÁöÑÊï∞ÊçÆÊàêÂëòÂ§ÑÂú®ËæÉÂ§ßÁöÑÂÜÖÂ≠òÂú∞ÂùÄ‰∏≠)„ÄÇC++Ê†áÂáÜÂè™Êèê‰æõ‰∫ÜËøô‰∏ÄÁÇπÁÇπÁöÑ‰øùËØÅ„ÄÇÂÖÅËÆ∏ÁºñËØëÂô®Â∞ÜÂ§ö‰∏™ Acess Section ÁöÑÈ°∫Â∫èËá™Áî±ÊéíÂàóÔºåËÄå‰∏çÂøÖÂú®‰πéÂÆÉ‰ª¨ÁöÑÂ£∞ÊòéÊ¨°Â∫è„ÄÇ‰ΩÜ‰ºº‰πéÊ≤°ÊúâÁºñËØëÂô®ËøôÊ†∑ÂÅö„ÄÇÂØπ‰∫éÁªßÊâøÁ±ªÔºåC++Ê†áÂáÜÂπ∂Êú™ÊåáÂÆöÊòØÂÖ∂Âü∫Á±ªÊàêÂëòÂú®ÂâçËøòÊòØËá™Â∑±ÁöÑÊàêÂëòÂú®Ââç„ÄÇ 12345678class X &#123;public: int i; int j;private: int k; int n;&#125; Êï∞ÊçÆ i ‰∏ÄÂÆöÂú® j ‰πãÂâçÔºåk ‰∏ÄÂÆöÂú® n ‰πãÂâç„ÄÇÂÖ∑‰Ωì‰ªÄ‰πàÈ°∫Â∫èÂ∞±ÁúãÁºñËØëÂô®‰∫Ü„ÄÇ ‰º†Áªü‰∏äÔºåvptr Ë¢´ÂÆâÊîæÂú®ÊâÄÊúâË¢´ÊòéÁ°ÆÂ£∞ÊòéÁöÑ member ÁöÑÊúÄÂêéÔºå‰∏çËøá‰πüÊúâ‰∫õÁºñËØëÂô®Êää vptr ÊîæÂú®ÊúÄÂâçÈù¢(MSVC++Â∞±ÊòØÊää vptr ÊîæÂú®ÊúÄÂâçÈù¢ÔºåËÄå G++ ÊòØÊää vptr ÊîæÂú®ÊúÄÂêéÈù¢)„ÄÇ Access of a Data MemberÂú® C++‰∏≠ÔºåÁõ¥ËßÇ‰∏äÊù•ËØ¥ÔºåÁî±‰∏Ä‰∏™ÂØπË±°Â≠òÂèñ‰∏Ä‰∏™ member ‰ºöÊØîÁî±‰∏Ä‰∏™ÊåáÈíàÂ≠òÂèñ‰∏Ä‰∏™ member Êõ¥Âø´Êç∑„ÄÇ‰ΩÜÊòØÂØπ‰∫éÁªèÁî±‰∏Ä‰∏™ÂØπË±°Êù•Â≠òÂèñÂíåÁî±‰∏Ä‰∏™ÊåáÈíàÊù•Â≠òÂèñ‰∏Ä‰∏™ÈùôÊÄÅÁöÑ member Êù•ËØ¥ÔºåÊòØÂÆåÂÖ®‰∏ÄÊ†∑ÁöÑÔºåÈÉΩ‰ºöË¢´ÁºñËØëÂô®ÊâÄÊâ©Â±ï„ÄÇ ÁªèÁî± member selection operatorsÔºà‰πüÂ∞±ÊòØ ‚Äú.‚Äù ËøêÁÆóÁ¨¶ÔºâÂØπ‰∏Ä‰∏™ static data member ËøõË°åÂ≠òÂèñÊìç‰ΩúÂè™ÊòØ‰∏ÄÁßçËØ≠Ê≥ï‰∏äÁöÑ‰æøÂÆúË°å‰∫ãËÄåÂ∑≤„ÄÇmember ÂÖ∂ÂÆûÂπ∂‰∏çÂú® class object ‰∏≠ÔºåÂõ†Ê≠§Â≠òÂèñÂπ∂‰∏çÈúÄË¶ÅÈÄöËøá class object„ÄÇ ÁªèÁî±‰∏Ä‰∏™ÂáΩÊï∞Ë∞ÉÁî®ÁöÑÁªìÊûúÊù•Â≠òÂèñÈùôÊÄÅÊàêÂëòÔºåC++Ê†áÂáÜË¶ÅÊ±ÇÁºñËØëÂô®ÂøÖÈ°ªÂØπËøô‰∏™ÂáΩÊï∞ËøõË°åÊ±ÇÂÄºÔºåËôΩÁÑ∂Ëøô‰∏™Ê±ÇÂÄºÁöÑÁªìÊûúÂπ∂Êó†Áî®Â§Ñ„ÄÇ foo().static_member = 100; foo()ËøîÂõû‰∏Ä‰∏™Á±ªÂûã‰∏∫ X ÁöÑÂØπË±°ÔºåÂê´Êúâ‰∏Ä‰∏™ static_memberÔºåfoo()ÂÖ∂ÂÆûÂèØ‰ª•‰∏çÁî®Ê±ÇÂÄºËÄåÁõ¥Êé•ËÆø ÈóÆËøô‰∏™ÈùôÊÄÅÊàêÂëòÔºå‰ΩÜÊòØ C++Ê†áÂáÜ‰øùËØÅ‰∫Ü foo()‰ºöË¢´Ê±ÇÂÄºÔºåÂèØËÉΩÁöÑ‰ª£Á†ÅÊâ©Â±ï‰∏∫: 12(void) foo();X::static_member = 100; static data membersÂ¶ÇÊûúÊúâ‰∏§‰∏™ class ÔºåÊØè‰∏™ÈÉΩÂ£∞Êòé‰∫Ü‰∏Ä‰∏™ static member freelistÔºåÈÇ£‰πàÂΩì‰ªñ‰ª¨ÈÉΩË¢´ÊîæÂú®Á®ãÂ∫èÁöÑ data segment Êó∂ÔºåÂ∞±‰ºöÂØºËá¥ÂêçÁß∞ÂÜ≤Á™Å„ÄÇÁºñËØëÂô®ÁöÑËß£ÂÜ≥ÊñπÊ≥ïÊòØÊöó‰∏≠ÂØπÊØè‰∏Ä‰∏™ static data member ÁºñÁ†ÅÔºàËøôÁßçÊâãÊ≥ïÊúâ‰∏™ÂæàÁæéÁöÑÂêçÁß∞Ôºöname-manglingÔºâÔºå‰ª•Ëé∑Âæó‰∏Ä‰∏™Áã¨‰∏ÄÊó†‰∫åÁöÑÁ®ãÂ∫èËØÜÂà´‰ª£Á†Å„ÄÇÊúâÂ§öÂ∞ëÁßçÁºñËØëÂô®Â∞±ÊúâÂ§öÂ∞ëÁßç name-mangling ÂÅöÊ≥ïÔºÅÈÄöÂ∏∏‰∏çÂ§ñ‰πéÊòØË°®Ê†ºÂï¶ÔºåËØ≠Ê≥ïÊé™ËæûÂï¶Á≠âÁ≠â„ÄÇ‰ªª‰Ωï name-mangling ÈÉΩÊúâ‰∏§‰∏™Ë¶ÅÁÇπÔºö ‰∏ÄÁßçÁÆóÊ≥ïÔºåÊé®ÂØºÂá∫Áã¨‰∏ÄÊó†‰∫åÁöÑÂêçÁß∞„ÄÇ ‰∏á‰∏ÄÁºñËØëÁ≥ªÁªüÔºàÊàñÁéØÂ¢ÉÂ∑•ÂÖ∑ÔºâÂøÖÈ°ªÂíå‰ΩøÁî®ËÄÖ‰∫§Ë∞àÔºåÈÇ£‰∫õÁã¨‰∏ÄÊó†‰∫åÁöÑÂêçÁß∞ÂèØ‰ª•ËΩªÊòìË¢´Êé®ÂØºÂõûÂéüÊù•ÁöÑÂêçÁß∞„ÄÇ nonstatic data membersNonstatic data members are stored directly within each class object and cannot be accessed except through an explicit or implicit class object. An implicit class object is present whenever the programmer directly accesses a nonstatic data member within a member function. For example, in the following code: 123456Point3dPoint3d::translate( const Point3d &amp;pt ) &#123; x += pt.x; y += pt.y; z += pt.z;&#125; the seemingly direct access of x, y, and z is actually carried out through an implicit class object representedby the this pointer. Internally, the function is augmented as follows: 1234567// internal augmentation of member function Point3d Point3d::translate( const Point3d* this, const Point3d &amp;pt ) &#123; this-&gt;x += pt.x; this-&gt;y += pt.y; this-&gt;z += pt.z;&#125; Âú∞ÂùÄÔºö&amp;origin._y;Âíå&amp;origin + ( &amp;Point3d::_y - 1 );ÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇÊåáÂêë data member ÁöÑÊåáÈíàÔºåÂÖ∂ offset ÂÄºÊÄªÊòØË¢´Âä†‰∏ä 1„ÄÇËøôÊ†∑ÂèØ‰ª•‰ΩøÁºñËØëÁ≥ªÁªüÂå∫ÂàÜÂá∫ ‚Äú‰∏Ä‰∏™ÊåáÈíà data member ÁöÑÊåáÈíàÔºåÁî®‰ª•ÊåáÂêë class ÁöÑÁ¨¨‰∏Ä‰∏™ member‚ÄùÂíå‚Äú‰∏Ä‰∏™ÊåáÂêë data member ÁöÑÊåáÈíàÔºå‰ΩÜÊòØÊ≤°ÊúâÊåáÂêë‰ªª‰Ωï member‚Äù‰∏§ÁßçÊÉÖÂÜµ(ÊàêÂëòÊåáÈíà‰πüÈúÄË¶ÅÊúâ‰∏™Ë°®Á§∫ NULL ÁöÑÊñπÂºèÔºå0 Áõ∏ÂΩì‰∫éÁî®Êù•Ë°®Á§∫ NULL ‰∫ÜÔºåÂÖ∂ÂÆÉÁöÑÂ∞±ÈÉΩË¶ÅÂä†‰∏ä 1 ‰∫Ü)„ÄÇ Inheritance and the Data MemberC++ Standard ‰øùËØÅ:‚ÄúÂá∫Áé∞Âú®Ê¥æÁîüÁ±ª‰∏≠ÁöÑ base class subobject ÊúâÂÖ∂ÂÆåÊï¥ÂéüÊ†∑ÊÄß!‚Äù Â≠êÁ±ª‰ºöË¢´ÊîæÂú®Áà∂Á±ªÁöÑÂØπÈΩêÁ©∫ÁôΩÂ≠óËäÇ‰πãÂêéÔºåÂõ†‰∏∫Áà∂Á±ªÁöÑÂÆåÊï¥ÊÄßÂøÖÈ°ªÂæó‰ª•‰øùËØÅÔºåÁà∂Á±ªÁöÑÂØπÈΩêÁ©∫ÁôΩÂ≠óËäÇ ‰πüÊòØÁà∂Á±ªÁöÑ‰∏ÄÈÉ®ÂàÜÔºå‰πüÊòØ‰∏çÂèØÂàÜÂâ≤ÁöÑ„ÄÇ ËØ∑Áúã‰∏ãÈù¢‰æãÂ≠êÔºö 12345678910class X&#123;public: int x; char c;&#125;;class X2:public X&#123;public: char c2;&#125;; X2 ÁöÑÂ∏ÉÂ±ÄÂ∫îÂΩìÊòØ x(4),c(1),c2(1),Ëøô‰πàËØ¥Êù• sizeof(X2)ÁöÑÂÄºÂ∫îËØ•ÊòØ 8ÔºüÈîô‰∫ÜÔºåÂÆûÈôÖ‰∏äÊòØ 12„ÄÇÂéüÂõ†Âú®‰∫é X ÂêéÈù¢ÁöÑ‰∏â‰∏™Â≠óËäÇÁöÑÂ°´ÂÖÖÁ©∫ÁôΩ‰∏çËÉΩ‰∏∫ c2 ÊâÄÁî®„ÄÇ‰πüÂ∞±ÊòØËØ¥ X2 ÁöÑÂ§ßÂ∞èÂÆûÈôÖ‰∏ä‰∏∫ÔºöX(8)+c2(1)+Â°´Ë°•Ôºà3Ôºâ=12„ÄÇËøôÊ†∑ÁúãÊù•ÁºñËØëÂô®‰ºº‰πéÊòØÈÇ£‰πàÁöÑÂëÜÊùøÔºåÂÖ∂ÂÆû‰∏çÁÑ∂ÔºåÁúã‰∏Ä‰∏ã‰∏ãÈù¢ÁöÑËØ≠Âè•‰ºöÂèëÁîü‰ªÄ‰πàÔºü 123X2 x2;X x;x2=x; Â¶ÇÊûú X ÂêéÈù¢ÁöÑÂ°´ÂÖÖÁ©∫ÁôΩÂèØ‰ª•Ë¢´ c2 ‰ΩøÁî®ÁöÑËØùÔºåÈÇ£‰πà X2 Âíå X ÈÉΩÂ∞ÜÊòØ 8 Â≠óËäÇ„ÄÇ‰∏äÈù¢ÁöÑËØ≠Âè•ÊâßË°åÂêé x2.c2 ÁöÑÂÄº‰ºöÊòØÂ§öÂ∞ëÔºü‰∏Ä‰∏™‰∏çÁ°ÆÂÆöÁöÑÂÄºÔºÅËøôÊ†∑ÁöÑÁªìÊûúËÇØÂÆö‰∏çÊòØÊàë‰ª¨ÊÉ≥Ë¶ÅÁöÑ„ÄÇ Âú®Â§öÈáçÁªßÊâøÁöÑÊ¥æÁîü‰ΩìÁ≥ª‰∏≠ÔºåÂ∞ÜÊ¥æÁîüÁ±ªÁöÑÂú∞ÂùÄËΩ¨Êç¢‰∏∫Á¨¨ 1 Âü∫Á±ªÊó∂ÊàêÊú¨‰∏éÂçïÁªßÊâøÊòØÁõ∏ÂêåÁöÑÔºåÂè™ÈúÄË¶ÅÊîπÊç¢Âú∞ÂùÄÁöÑËß£ÈáäÊñπÂºèËÄåÂ∑≤ÔºõËÄåÂØπ‰∫éËΩ¨Êç¢‰∏∫ÈùûÁ¨¨ 1 Âü∫Á±ªÁöÑÊÉÖÂÜµÔºåÂàôÈúÄË¶ÅÂØπÂú∞ÂùÄËøõË°å‰∏ÄÂÆöÁöÑ offset Êìç‰Ωú ÊâçË°å„ÄÇC++ Standard Âπ∂Êú™ÊòéÁ°Æ base classes ÁöÑÁâπÂÆöÊéíÂàóÊ¨°Â∫èÔºå‰ΩÜÊòØÁõÆÂâçÁöÑÁºñËØëÂô®ÈÉΩÊòØÊåâÁÖßÂ£∞ÊòéÁöÑÊ¨°Â∫èÊù•ÂÆâÊîæ‰ªñ‰ª¨ÁöÑ„ÄÇ(Êúâ‰∏Ä‰∏™‰ºòÂåñ:Â¶ÇÊûúÁ¨¨ 1 Âü∫Á±ªÊ≤°Êúâ vtable ËÄåÂêéÁªßÂü∫Á±ªÊúâÔºåÂàôÂèØËÉΩÊääÂÆÉ‰ª¨Ë∞É ‰∏™‰ΩçÁΩÆ)„ÄÇÂ§öÈáçÁªßÊâø‰∏≠ÔºåÂèØËÉΩ‰ºöÊúâÂ§ö‰∏™ vptr ÊåáÈíàÔºåËßÜÂÖ∂ÁªßÊâø‰ΩìÁ≥ªËÄåÂÆö:Ê¥æÁîüÁ±ª‰∏≠ vptr ÁöÑÊï∞ÁõÆÊúÄÂ§öÁ≠â‰∫éÊâÄÊúâÂü∫Á±ªÁöÑ vptr Êï∞ÁõÆÁöÑÊÄªÂíå„ÄÇ]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Inside the C++ Object Model Á≥ªÂàóÁ¨îËÆ∞ ‰∫å -- The Semantics of constructors]]></title>
    <url>%2Fblog%2F2017%2F10%2F20%2FThe-Semantics-of-constructors%2F</url>
    <content type="text"><![CDATA[Ëøô‰∏ÄÁ´†ËØ¶ÁªÜÁöÑËÆ®ËÆ∫‰∫Ü constructor Â¶Ç‰ΩïÂ∑•‰ΩúÔºåËÆ®ËÆ∫ÊûÑÈÄ†‰∏Ä‰∏™ÂØπË±°ÁöÑËøáÁ®ã‰ª•ÂèäÊûÑÈÄ†‰∏Ä‰∏™ÂØπË±°ÁªôÁ®ãÂ∫èÂ∏¶Êù•ÁöÑÂΩ±Âìç„ÄÇ Âå∫ÂàÜ trivial Âíå notrivial Âè™ÊúâÁºñËØëÂô®ÈúÄË¶ÅÁöÑÊó∂ÂÄô(‰∏∫‰ªÄ‰πà‰ºöÈúÄË¶Å?ÂêéÈù¢ËÆ≤ÁöÑÂæàÊ∏ÖÊ•ö)ÔºåÂêàÊàêÊìç‰ΩúÊâçÊòØ nontrivial ÁöÑÔºå ËøôÊ†∑ÁöÑÊûÑÈÄ†ÂáΩÊï∞Êâç‰ºöË¢´ÁúüÊ≠£ÁöÑÂêàÊàêÂá∫Êù•; Â¶ÇÊûúÁºñËØëÂô®‰∏çÈúÄË¶ÅÔºåËÄåÁ®ãÂ∫èÂëòÂèàÊ≤°ÊúâÊèê‰æõÔºåËøôÊó∂ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞Â∞±ÊòØ trivial ÁöÑ„ÄÇËôΩÁÑ∂ÂÆÉÂú®Ê¶ÇÂøµ‰∏äÂ≠òÂú®Ôºå‰ΩÜÊòØÁºñËØëÂô®ÂÆûÈôÖ‰∏äÊ†πÊú¨‰∏ç‰ºöÂéªÂêàÊàêÂá∫Êù•ÔºåÂõ†‰∏∫‰ªñ‰∏çÂÅö‰ªª‰ΩïÊ≤°ÊúâÊÑè‰πâÁöÑ‰∫ãÊÉÖÔºåÊâÄ‰ª•ÂΩìÁÑ∂ÂèØ‰ª•ÂøΩÁï•ÂÆÉ‰∏çÂéªÂêàÊàê„ÄÇtrivial ÁöÑÂáΩÊï∞Âè™Â≠òÂú®‰∫éÊ¶ÇÂøµ‰∏äÔºåÂÆûÈôÖ‰∏ä‰∏çÂ≠òÂú®Ëøô‰∏™ÂáΩÊï∞„ÄÇ default constructorA default constructor is a constructor which can be called with no arguments (either defined with an empty parameter list, or with default arguments provided for every parameter). ÈÄöÂ∏∏ÂæàÂ§ö C++Á®ãÂ∫èÂëòÂ≠òÂú®‰∏§ÁßçËØØËß£ Ê≤°ÊúâÂÆö‰πâÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÁöÑÁ±ªÈÉΩ‰ºöË¢´ÁºñËØëÂô®ÁîüÊàê‰∏Ä‰∏™ÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞„ÄÇ ÁºñËØëÂô®ÁîüÊàêÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞‰ºöÊòéÁ°ÆÂàùÂßãÂåñÁ±ª‰∏≠ÊØè‰∏Ä‰∏™Êï∞ÊçÆÊàêÂëò„ÄÇ Ë¢´Â£∞ÊòéÔºödeclaredÔºåË¢´ÂÆö‰πâÔºödefined„ÄÇÂ£∞Êòé‰ª£Ë°®ÂàÜÈÖçÂÜÖÂ≠òÁ©∫Èó¥ÔºåÂÆö‰πâ‰ª£Ë°®ÂàùÂßãÂåñÔºå‰πüÂ∞±ÊòØÂàÜÈÖçÂÖ∑‰ΩìÁöÑÂÄº„ÄÇ Ê≥®ÊÑèÂ¶ÇÊûúÂ£∞ÊòéÁöÑÊòØ‰∏Ä‰∏™ÊåáÈíàÔºàÊàñËÄÖÂú®ÂÖ∂‰ªñËØ≠Ë®ÄÈáåÂ£∞Êòé‰∫Ü‰∏Ä‰∏™ÂØπË±°ÊàñËÄÖÊï∞ÁªÑÁöÑÂºïÁî®ÔºâÔºåÈÇ£‰πàÂè™‰ºöÂºÄËæü‰∏Ä‰∏™ÊåáÈíàÁöÑÁ©∫Èó¥ÔºåÁúüÊ≠£ÁöÑÂØπË±°Ë¶ÅÂà∞ÂÆö‰πâÁöÑÊó∂ÂÄôÔºå‰πüÂ∞±ÊòØÂàùÂßãÂåñÁöÑÊó∂ÂÄôÔºåÂàÜÈÖçÂÜÖÂ≠òÂπ∂ÂàùÂßãÂåñ„ÄÇ ÊâÄ‰ª•ÊâÄÊúâÊàêÂëòÈÉΩÂú®Â£∞ÊòéÁöÑÊó∂ÂÄôË¢´ÂàÜÈÖçÂÜÖÂ≠òÔºåÊûÑÈÄ†ÂáΩÊï∞ÁöÑ‰ΩúÁî®ÊòØÂàùÂßãÂåñÂÆÉ‰ª¨Ôºånon-object ÊàêÂëòÈúÄË¶ÅÁ®ãÂ∫èÂëòËá™Â∑±ÂàùÂßãÂåñÔºåÁºñËØëÂô®‰∏çÂ∏ÆÂøô„ÄÇ C++‰∏≠ÂØπ‰∫éÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÁöÑËß£ÈáäÊòØ:ÈªòËÆ§ÁöÑÊûÑÈÄ†ÂáΩÊï∞‰ºöÂú®ÈúÄË¶ÅÁöÑÊó∂ÂÄôË¢´ÁºñËØëÂô®‰∫ßÁîüÂá∫Êù•„ÄÇËøôÈáåÈùûÂ∏∏ÈáçË¶ÅÁöÑ‰∏ÄÁÇπÊòØ:Ë∞ÅÈúÄË¶Å?ÊòØÁ®ãÂ∫èÁöÑÈúÄË¶ÅËøòÊòØÁºñËØëÂô®ÁöÑÈúÄË¶Å?Â¶ÇÊûúÊòØÁ®ãÂ∫èÁöÑÈúÄË¶ÅÔºåÈÇ£ÊòØÁ®ãÂ∫èÂëòÁöÑË¥£‰ªª;Âè™ÊúâÂú®ÊòØÁºñËØëÂô®ÁöÑÈúÄË¶ÅÊó∂ÔºåÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞Êâç‰ºöË¢´ÁºñËØëÂô®‰∫ßÁîüÂá∫Êù•ÔºåËÄå‰∏îË¢´‰∫ßÁîüÂá∫Êù•ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞Âè™‰ºöÊâßË°åÁºñËØëÂô®ÊâÄÈúÄË¶ÅÁöÑË°åÂä®ÔºåËÄå‰∏îËøô‰∏™‰∫ßÁîüÊìç‰ΩúÂè™ÊúâÂú®ÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÁúüÊ≠£Ë¢´Ë∞ÉÁî®Êó∂Êâç‰ºöËøõË°åÂêàÊàê„ÄÇ ‰æãÂ¶Ç:ÊàêÂëòÂèòÈáèÂàùÂßãÂåñ‰∏∫ 0 Êìç‰ΩúÔºåËøô‰∏™Êìç‰ΩúÂ∞±ÊòØÁ®ãÂ∫èÁöÑÈúÄË¶ÅÔºåËÄå‰∏çÊòØÁºñËØëÂô®ÁöÑÈúÄË¶Å„ÄÇ ÊÄªÁªìÂèòÈáèÁöÑÂàùÂßãÂåñ: Global objects are guaranteed to have their associated memory ‚Äúzeroed out‚Äù at program start-up. Local objects allocated on the program stack and heap objects allocated on the free-store do not have their associated memory zeroed out; rather, the memory retains the arbitrary bit pattern of its previous use. Âè™ÊúâÂÖ®Â±ÄÂèòÈáèÂíåÈùôÊÄÅÂèòÈáèÊâç‰ºö‰øùËØÅÂàùÂßãÂåñÔºåÂÖ∂‰∏≠ÈùôÊÄÅÂèòÈáèÂèØ‰ª•ËßÜ‰∏∫ÂÖ®Â±ÄÂèòÈáèÁöÑ‰∏ÄÁßçÔºåÂõ†‰∏∫ÈùôÊÄÅÂèòÈáè‰πüÊòØ‰øùÂ≠òÂú®ÂÖ®Â±ÄÂèòÈáèÁöÑÂ≠òÂÇ®Á©∫Èó¥‰∏äÁöÑ„ÄÇGolbal objects ÁöÑÂÜÖÂ≠ò‰øùËØÅ‰ºöÂú®Á®ãÂ∫èÊøÄÊ¥ªÁöÑÊó∂ÂÄôË¢´Ê∏Ö 0ÔºõLocal objects ÈÖçÁΩÆ‰∫éÁ®ãÂ∫èÁöÑÊ†à‰∏≠ÔºåHeap objects ÈÖçÁΩÆ‰∫éËá™Áî±Á©∫Èó¥‰∏≠ÔºåÈÉΩ‰∏ç‰∏ÄÂÆö‰ºöË¢´Ê∏Ö‰∏∫ 0,ÂÆÉ‰ª¨ÁöÑÂÜÖÂÆπÂ∞ÜÊòØÂÜÖÂ≠ò‰∏äÊ¨°Ë¢´‰ΩøÁî®ÂêéÁöÑÁóïËøπ! ÂÖ®Â±ÄÂèòÈáèÂíåÈùôÊÄÅÂèòÈáèÈÉΩÊîæÂú® global data Segment ‰∏äÔºå‰∏îÂú®Á±ªË¢´Â£∞ÊòéÁöÑÊó∂ÂÄôÂ∞±Â∑≤ÁªèÂàÜÈÖçÂÜÖÂ≠òÂíåÂàùÂßãÂåñÔºå‰πüÂ∞±ÊòØ Âú®‰ªª‰ΩïÂØπË±°Ë¢´ÂÆö‰πâ‰πãÂâçÈùôÊÄÅÂèòÈáèÂ∞±Â∑≤ÁªèÂ≠òÂú®‰∫ÜÔºàÂç≥‰ΩøËØ• class Ê≤°Êúâ‰ªª‰Ωï object ÂÆû‰ΩìÔºåstatic data members ‰πüÂ∑≤ÁªèÂ≠òÂú®Ôºâ„ÄÇ 123456789class Foo &#123; public: int val; Foo *pnext; &#125;;void foo_bar()&#123; // Oops: program needs bar's members zeroed out Foo bar; if ( bar.val || bar.pnext ) // ... do something // ...&#125; When is a default constructor synthesized, then? Only when the implementation needs it. Moreover, the synthesized constructor performs only those activities required by the implementation. That is, even if there were a need to synthesize a default constructor for class Foo, that constructor would not include code to zero out the two data members val and pnext. For the previous program fragment to execute correctly, the designer of class Foo needs to provide an explicit default constructor that properly initializes the class‚Äôs two members. ÊÑèÊÄùÊòØÂàùÂßãÂåñ val Âíå pnext ÊòØÁ®ãÂ∫èÂëòÁöÑË¥£‰ªªÔºåÁºñËØëÂô®‰∏çË¥üË¥£ÔºåÊâÄ‰ª•‰Ω†ËøôÈáå‰∏çÂàùÂßãÂåñÂÆÉ‰ª¨ÔºåÂÆÉ‰ª¨Â≠òÂÇ®ÁöÑÁªìÊûúÂ∞±ÊòØÂÜÖÂ≠òÈÅóÁïôÁöÑÁóïËøπ„ÄÇ ‰ªÄ‰πàÊó∂ÂÄôÁºñËØëÂô®‰ºöÁªô‰Ω†ÁîüÊàêÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞È¶ñÂÖà‰Ω†ÂæóÊ≤°ÊúâÂÜôÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÔºåÁºñËØëÂô®Êâç‰ºöÁªô‰Ω†ÁîüÊàê„ÄÇÊúâÂõõÁ±ªÊÉÖÂÜµÔºåÁºñËØëÂô®‰ºöÁªô‰Ω†Âä†‰ª£Á†ÅÔºö Á±ª‰∏≠Êúâ‰∏Ä‰∏™ÂØπË±°ÔºàÊàêÂëòÂèòÈáèÔºâÔºåËøô‰∏™ÂØπË±°ÂåÖÂê´‰∫ÜÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ ÁªßÊâøËá™Â∏¶ÊúâÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÁöÑÂü∫Á±ªÁöÑÁ±ª Â∏¶ÊúâËôöÂáΩÊï∞ÁöÑÁ±ª ÁªßÊâøËá™ËôöÂü∫Á±ªÁöÑÁ±ª Â¶ÇÊûú class A ÂÜÖÂê´‰∏Ä‰∏™Êàñ‰ª•‰∏äÁöÑ member objectsÔºåÈÇ£‰πà A ÁöÑ constructor ÂøÖÈ°ªË∞ÉÁî®ÊØè‰∏Ä‰∏™ member class ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞„ÄÇÂÖ∑‰ΩìÊñπÊ≥ïÊòØ:ÁºñËØëÂô®‰ºöÊâ©Âº† constructorsÔºàÊ≥®ÊÑèÔºöÊòØÊâÄÊúâÁöÑÊûÑÈÄ†ÂáΩÊï∞Ôºå‰∏ç‰ªÖ‰ªÖÊòØÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞‰ºöË¢´Êâ©Âº†ÔºâÔºåÂú®ÂÖ∂‰∏≠ÂÆâÊèí‰ª£Á†Å‰ΩøÂæóÂú® user code Ë¢´Ë∞ÉÁî®‰πãÂâçÂÖàË∞É Áî® member objects ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞(ÂΩìÁÑ∂Â¶ÇÊûúÈúÄË¶ÅË∞ÉÁî®Âü∫Á±ªÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÔºåÂàôÊîæÂú®Âü∫Á±ªÁöÑ ÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞Ë∞ÉÁî®‰πãÂêé:Âü∫Á±ªÊûÑÈÄ†ÂáΩÊï∞-&gt;ÊàêÂëòÊûÑÈÄ†ÂáΩÊï∞-&gt;user code)„ÄÇC++Ë¶ÅÊ±Ç‰ª•‚Äúmember objects Âú® class ‰∏≠ÁöÑÂ£∞ÊòéÊ¨°Â∫è‚ÄùÊù•Ë∞ÉÁî®ÂêÑ‰∏™ construtors„ÄÇËøôÂ∞±ÊòØÂ£∞ÊòéÁöÑÊ¨°Â∫èÂÜ≥ÂÆö‰∫ÜÂàùÂßãÂåñÊ¨°Â∫èÁöÑÊ†πÊú¨ÂéüÂõ†!(ÊûÑÈÄ†ÂáΩÊï∞ÂàùÂßãÂåñÂàóË°®‰∏ÄÁõ¥Ë¶ÅÊ±Ç‰ª•Â£∞ÊòéÈ°∫Â∫èÊù•ÂàùÂßãÂåñ)ÊâÄ‰ª•‰Ω†Êâì‰π± member initialization list ÁöÑÈ°∫Â∫èÊ†πÊú¨Ê≤°ÊúâÁî®Âì¶~ ÁêÜËß£‰∫ÜÂàùÂßãÂåñÂàóË°®‰∏≠ÁöÑÂÆûÈôÖÊâßË°åÈ°∫Â∫è‰∏≠‚Äú‰ª• member Â£∞ÊòéÁöÑÊ¨°Â∫è‚ÄùÊù•ÂÜ≥ÂÆöÁöÑÔºåÂ∞±ÂèØ‰ª•ÁêÜËß£‰∏Ä‰∫õÂæà ÂæÆÂ¶ôÁöÑÈîôËØØ‰∫Ü„ÄÇÊØîÂ¶Ç: 12A() : i(99), j(66), value(foo()) &#123;... &#125;int i, value, j; Ëøô‰ºö‰∏ç‰ºö‰∫ßÁîüÈîôËØØÂèñÂÜ≥‰∫éÊàêÂëòÂáΩÊï∞ foo()ÊòØ‰æùËµñ‰∫é i ËøòÊòØ j:Â¶ÇÊûú foo ‰æùËµñ‰∫é iÔºåÁî±‰∫é i Â£∞ÊòéÂú® value ‰πãÂâçÔºåÊâÄ‰ª•‰∏ç‰ºö‰∫ßÁîüÈîôËØØ;Â¶ÇÊûú foo ‰æùËµñ‰∫é jÔºåÁî±‰∫é j Â£∞ÊòéÂú® value ‰πãÂêéÔºåÂ∞±‰∫ßÁîü‰∫Ü‰ΩøÁî®Êú™ÂàùÂßãÂåñÊàêÂëòÁöÑÈîôËØØ„ÄÇ Â∏¶Êúâ virtual functions ÁöÑÁ±ªÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÊØ´Êó†ÁñëÈóÆÊòØ nontrivial ÁöÑÔºåÈúÄË¶ÅÁºñËØëÂô®ÂÆâÊèíÈ¢ùÂ§ñÁöÑÊàêÂëò vptr Âπ∂Âú®ÊûÑÈÄ†ÂáΩÊï∞‰∏≠Ê≠£Á°ÆÁöÑËÆæÁΩÆÂ•Ω vptrÔºåËøôÊòØÁºñËØëÂô®ÁöÑÈáçË¶ÅËÅåË¥£‰πã‰∏Ä„ÄÇÁªßÊâøËá™ virtual base class ÁöÑÁ±ªÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÂêåÊ†∑‰πüÊØ´Êó†ÁñëÈóÆÁöÑ nontrivialÔºåÁºñËØëÂô®ÈúÄË¶ÅÊ≠£Á°ÆËÆæÁΩÆÁõ∏ÂÖ≥ÁöÑ‰ø°ÊÅØ‰ª•‰ΩøÂæóËøô‰∫õËôöÂü∫Á±ªÁöÑ‰ø°ÊÅØËÉΩÂ§üÂú®ÊâßË°åÊó∂ÂáÜÂ§áÂ¶•ÂΩìÔºåËøô‰∫õËÆæÁΩÆÂèñÂÜ≥‰∫éÁºñËØëÂô®ÂÆûÁé∞ËôöÂü∫Á±ªÁöÑÊâãÊ≥ï„ÄÇ ÁºñËØëÂô®Êúâ 4 ÁßçÊÉÖÂÜµ‰ºö‰ΩøÂæóÁºñËØëÂô®ÁúüÊ≠£ÁöÑ‰∏∫ class ÁîüÊàê nontrivial ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÔºåËøô‰∏™ nontrivial ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞Âè™Êª°Ë∂≥ÁºñËØëÂô®ÁöÑÈúÄË¶Å(Ë∞ÉÁî® member objects Êàñ base class ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞„ÄÅÂàùÂßãÂåñ virtual function Êàñ virutal base class Êú∫Âà∂)„ÄÇÂÖ∂ÂÆÉÊÉÖÂÜµÊó∂ÔºåÁ±ªÂú®Ê¶ÇÂøµ‰∏äÊã•ÊúâÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞Ôºå‰ΩÜÊòØÂÆûÈôÖ‰∏äÊ†πÊú¨‰∏ç‰ºöË¢´‰∫ßÁîüÂá∫Êù•(ÂâçÈù¢ÁöÑÂå∫ÂàÜ trivial Âíå nontrivial)„ÄÇ ÂØπ‰∫é‰∏Ä‰∏™ trivial ÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÔºåÁºñËØëÂô®ÁöÑÊÄÅÂ∫¶ÊòØÔºåÊó¢ÁÑ∂ÂÆÉÂÖ®Êó†Áî®Â§ÑÔºåÂπ≤ËÑÜÂ∞±‰∏çÂêàÊàêÂÆÉ„ÄÇÂú®ËøôÂÑøË¶ÅÂéòÊ∏ÖÁöÑÊòØÊ¶ÇÂøµ‰∏éÂÆûÁé∞ÁöÑÂ∑ÆÂà´ÔºåÊ¶ÇÂøµ‰∏äËøΩÊ±ÇÁºúÂØÜÂÆåÂñÑÔºåÂú®ÂÆûÁé∞‰∏äÂàôËøΩÊ±ÇÊïàÁéáÔºåÂèØ‰ª•‰∏çË¶ÅÁöÑ‰∏úË•øÂ∞±‰∏çË¶Å„ÄÇ copy constructorÊúâ‰∏Ä‰∏™ÂèÇÊï∞ÁöÑÁ±ªÂûãÊòØÂÖ∂Á±ªÁ±ªÂûãÁöÑÊûÑÈÄ†ÂáΩÊï∞ÊòØ‰∏∫Êã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞„ÄÇÂ¶Ç‰∏ãÔºö 123X::X( const X&amp; x);Y::Y( const Y&amp; y, int =0 );//ÂèØ‰ª•ÊòØÂ§öÂèÇÊï∞ÂΩ¢ÂºèÔºå‰ΩÜÂÖ∂Á¨¨‰∫å‰∏™Âç≥ÂêéÁªßÂèÇÊï∞ÈÉΩÊúâ‰∏Ä‰∏™ÈªòËÆ§ÂÄº ‰ªÄ‰πàÊó∂ÂÄôÁºñËØëÂô®‰ºöÁªô‰Ω†ÁîüÊàêÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ ÂÖ∂ÂÆûÂíåÂâçÈù¢ÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞‰∏ÄÊ†∑ÔºåÂõõÁßçÊÉÖÂÜµ Â¶ÇÊûú‰∏Ä‰∏™Á±ªÊ≤°ÊúâÂÆö‰πâÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÔºåÈÄöÂ∏∏ÊåâÁÖß‚ÄúÊàêÂëòÈÄê‰∏ÄÂàùÂßãÂåñ(Default Memberwise Initialization)‚ÄùÁöÑÊâãÊ≥ïÊù•Ëß£ÂÜ≥‚Äú‰∏Ä‰∏™Á±ªÂØπË±°‰ª•Âè¶‰∏Ä‰∏™ÂêåÁ±ªÂÆû‰Ωì‰Ωú‰∏∫ÂàùÂÄº‚Äù‚Äî‚Äî‰πüÂ∞±ÊòØËØ¥ÊääÂÜÖÂª∫ÊàñÊ¥æÁîüÁöÑÊï∞ÊçÆÊàêÂëò‰ªéÊüê‰∏Ä‰∏™ÂØπË±°Êã∑Ë¥ùÂà∞Âè¶‰∏Ä‰∏™ÂØπË±°Ë∫´‰∏äÔºåÂ¶ÇÊûúÊï∞ÊçÆÊàêÂëòÊòØ‰∏Ä‰∏™ÂØπË±°ÔºåÂàôÈÄíÂΩí‰ΩøÁî®‚ÄúÊàêÂëòÈÄê‰∏ÄÂàùÂßãÂåñ(Default Memberwise Initialization)‚ÄùÁöÑÊâãÊ≥ï„ÄÇ ÊàêÂëòÈÄê‰∏ÄÂàùÂßãÂåñ(Default Memberwise Initialization)ÂÖ∑‰ΩìÁöÑÂÆûÁé∞ÊñπÂºèÂàôÊòØ‰ΩçÈÄêÊ¨°Êã∑Ë¥ùÔºàBitwise copy semanticsÔºâ Copy constructors ÂíåÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞‰∏ÄÊ†∑ÔºåÂè™ÊúâÂú®ÂøÖÈ°ªÁöÑÊó∂ÂÄôÊâç‰ºöË¢´‰∫ßÁîüÂá∫Êù•ÔºåÂØπ‰∫éÂ§ßÈÉ®ÂàÜÁöÑ class Êù•ËØ¥ÔºåÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞‰ªÖ‰ªÖÈúÄË¶ÅÊåâ‰ΩçÊã∑Ë¥ùÂ∞±ÂèØ‰ª•„ÄÇÊª°Ë∂≥ bitwise copy semantics ÁöÑÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÊòØ trivial ÁöÑÔºåÂ∞±‰∏ç‰ºöÁúüÊ≠£Ë¢´ÂêàÊàêÂá∫Êù•(‰∏éÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞‰∏ÄÊ†∑ÔºåÂè™Êúâ nontrivial ÁöÑÊã∑Ë¥ùÊûÑ ÈÄ†ÂáΩÊï∞Êâç‰ºöË¢´ÁúüÊ≠£ÂêàÊàêÂá∫Êù•)„ÄÇÂØπÂ§ßÂ§öÊï∞Á±ªÊåâ‰ΩçÊã∑Ë¥ùÂ∞±Â§ü‰∫ÜÔºå‰ªÄ‰πàÊó∂ÂÄô‰∏Ä‰∏™ class ‰∏çÂ±ïÁé∞Âá∫ bitwise copy semantics Âë¢? ÂàÜ‰∏∫ 4 ÁßçÊÉÖÂÜµÔºåÂâç 2 ÁßçÂæàÊòéÊòæÔºåÂêé 2 ÁßçÊòØÁî±‰∫éÁºñËØëÂô®ÂøÖÈ°ª‰øùËØÅÊ≠£Á°ÆËÆæÁΩÆËôöÊú∫Âà∂ËÄåÂºïËµ∑ÁöÑ„ÄÇ ÂΩì class ÂÜÖÂê´‰∏Ä‰∏™ member object ËÄåÂêéËÄÖÂ£∞Êòé‰∫Ü(‰πüÂèØËÉΩÁî±‰∫é nontrivial ËØ≠ÊÑè‰ªéËÄåÁºñËØëÂô® ÁúüÊ≠£ÂêàÊàêÂá∫Êù•ÁöÑ)‰∏Ä‰∏™ copy constructor Êó∂; ÂΩì class ÁªßÊâøËá™‰∏Ä‰∏™Â≠òÂú®Êúâ copy constructor ÁöÑ base class(ÂêåÊ†∑‰πüÂèØËÉΩÊòØÂêàÊàê)Êó∂; ÂΩì class Â£∞Êòé‰∫Ü‰∏Ä‰∏™ÊàñÂ§ö‰∏™ virtual functions Êó∂;(vf ÂΩ±Âìç‰∫Ü‰ΩçËØ≠ÊÑèÔºåËøõËÄåÂΩ±ÂìçÊïàÁéá) ÂΩì class Ê¥æÁîüËá™‰∏Ä‰∏™ÁªßÊâø‰∏≤ÈìæÔºåÂÖ∂‰∏≠‰∏Ä‰∏™ÊàñÂ§ö‰∏™ virtual base classes Êó∂„ÄÇ ÂØπ‰∫éÂâç‰∏§ÁßçÊÉÖÂÜµÔºå‰∏çËÆ∫ÊòØÂü∫Á±ªËøòÊòØÂØπË±°ÊàêÂëòÔºåÊó¢ÁÑ∂ÂêéËÄÖÂ£∞ÊòéÊúâÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞Êó∂ÔºåÂ∞±Ë°®ÊòéÂÖ∂Á±ªÁöÑËÆæËÆ°ËÄÖÊàñËÄÖÁºñËØëÂô®Â∏åÊúõ‰ª•ÂÖ∂Â£∞ÊòéÁöÑÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞Êù•ÂÆåÊàê‚Äú‰∏Ä‰∏™Á±ªÂØπË±°‰ª•Âè¶‰∏Ä‰∏™ÂêåÁ±ªÂÆû‰Ωì‰Ωú‰∏∫ÂàùÂÄº‚ÄùÁöÑÂ∑•‰ΩúÔºåËÄåËÆæËÆ°ËÄÖÊàñÁºñËØëÂô®ËøôÊ†∑ÂÅö‚Äî‚ÄîÂ£∞ÊòéÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÔºåÊÄªÊúâÂÆÉ‰ª¨ÁöÑÁêÜÁî±ÔºåËÄåÈÄöÂ∏∏ÊúÄÁõ¥Êé•ÁöÑÂéüÂõ†Ëé´Ëøá‰∫éÂõ†‰∏∫‰ªñ‰ª¨ÊÉ≥Ë¶ÅÂÅö‰∏Ä‰∫õÈ¢ùÂ§ñÁöÑÂ∑•‰ΩúÊàñ‚Äú‰ΩçÈÄêÊ¨°Êã∑Ë¥ù‚ÄùÊó†Ê≥ïËÉú‰ªª„ÄÇ ÂØπ‰∫éÊúâËôöÂáΩÊï∞ÁöÑÁ±ªÔºåÂ¶ÇÊûú‰∏§‰∏™ÂØπË±°ÁöÑÁ±ªÂûãÁõ∏ÂêåÈÇ£‰πà‰ΩçÈÄêÊ¨°Êã∑Ë¥ùÂÖ∂ÂÆûÊòØÂèØ‰ª•ËÉú‰ªªÁöÑ„ÄÇ‰ΩÜÈóÆÈ¢òÂ∞ÜÂá∫Áé∞Âú®ÔºåÂ¶ÇÊûúÂü∫Á±ªÁî±ÂÖ∂ÁªßÊâøÁ±ªËøõË°åÂàùÂßãÂåñÊó∂ÔºåÊ≠§Êó∂Ëã•ÊåâÁÖß‰ΩçÈÄêÊ¨°Êã∑Ë¥ùÊù•ÂÆåÊàêËøô‰∏™Â∑•‰ΩúÔºåÈÇ£‰πàÂü∫Á±ªÁöÑ vptr Â∞ÜÊåáÂêëÂÖ∂ÁªßÊâøÁ±ªÁöÑËôöÂáΩÊï∞Ë°®ÔºåËøôÂ∞ÜÂØºËá¥Êó†Ê≥ïÈ¢ÑÊñôÁöÑÂêéÊûú‚Äî‚ÄîË∞ÉÁî®‰∏Ä‰∏™ÈîôËØØÁöÑËôöÂáΩÊï∞ÂÆû‰ΩìÊòØÊó†Ê≥ïÈÅøÂÖçÁöÑÔºåËΩªÂàôÂ∏¶Êù•Á®ãÂ∫èÂ¥©Ê∫ÉÔºåÊõ¥Á≥üÁ≥ïÁöÑÈóÆÈ¢òÂèØËÉΩÊòØËøô‰∏™ÈîôËØØË¢´ÈöêËóè‰∫Ü„ÄÇÊâÄ‰ª•ÂØπ‰∫éÊúâËôöÂáΩÊï∞ÁöÑÁ±ªÁºñËØëÂô®Â∞Ü‰ºöÊòéÁ°ÆÁöÑ‰ΩøË¢´ÂàùÂßãÂåñÁöÑÂØπË±°ÁöÑ vptr ÊåáÂêëÊ≠£Á°ÆÁöÑËôöÂáΩÊï∞Ë°®„ÄÇÂõ†Ê≠§ÊúâËôöÂáΩÊï∞ÁöÑÁ±ªÊ≤°ÊúâÂ£∞ÊòéÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÔºåÁºñËØëÂ∞Ü‰∏∫‰πãÂêàÊàê‰∏Ä‰∏™ÔºåÊù•ÂÆåÊàê‰∏äËø∞Â∑•‰ΩúÔºå‰ª•ÂèäÂàùÂßãÂåñÂêÑÊï∞ÊçÆÊàêÂëòÔºåÂ£∞ÊòéÊúâÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÁöÑËØù‰πü‰ºöË¢´ÊèíÂÖ•ÂÆåÊàê‰∏äËø∞Â∑•‰ΩúÁöÑ‰ª£Á†Å„ÄÇ 1234567891011121314151617181920212223#include &lt;iostream&gt;using namespace std;class A &#123;public: virtual void f() &#123; cout &lt;&lt; "A::f()" &lt;&lt; endl; &#125; int i;&#125;;class B : public A &#123;public: void f()&#123; cout &lt;&lt; "B::f()" &lt;&lt; endl; &#125;&#125;;int main(int argc, char const *argv[])&#123; B b; b.i=1; A a = b; A *p = &amp;a; p-&gt;f(); cout &lt;&lt; p-&gt;i &lt;&lt; endl; return 0;&#125; ‰∏äÈù¢‰æãÂ≠êÂèØ‰ª•ÁúãÂá∫ÔºåÂ¶ÇÊûú A a = b;ÊòØ bitwise copy semantics ÁöÑËØùÔºåa ÂÜÖÊîæÁΩÆÁöÑÂ∞±ÊòØ b ÁöÑ vptr„ÄÇ‰ΩÜÂÖ∂ÂÆû‰∏çÊòØÔºåÁºñËØëÂô®Áªô a ÁîüÊàê‰∫ÜÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÔºåÂàùÂßãÂåñ‰∫Ü a ÁöÑ vptr„ÄÇb ÁöÑ vptr ÊòØÁî±ÁºñËØëÂô®Áªô b ÁîüÊàêÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÂàùÂßãÂåñÁöÑ„ÄÇ‰ΩÜÂØπ‰∫éÂÖ∂‰ªñÊàêÂëòÂèòÈáè bitwise copy semantics ‰æùÁÑ∂ÊúâÊïàÔºåÊâÄ‰ª• i ÁöÑÁªìÊûúÊòØ 1„ÄÇÊàëÂú®ÂÅöËøô‰∏™ËØïÈ™åÁöÑÊó∂ÂÄôÂèëÁé∞‰∫Ü‰∏Ä‰∏™ÊúâË∂£ÁöÑÁé∞Ë±°Ôºö 123456789101112131415161718192021222324#include &lt;iostream&gt;using namespace std;class A &#123;public: virtual void f() &#123; cout &lt;&lt; "A::f()" &lt;&lt; endl; &#125; int i;&#125;;class B : public A &#123;public: void f()&#123; cout &lt;&lt; "B::f()" &lt;&lt; endl; &#125; int i;&#125;;int main(int argc, char const *argv[])&#123; B b; b.i=1; A a = b; A *p = &amp;a; p-&gt;f(); cout &lt;&lt; p-&gt;i &lt;&lt; endl; return 0;&#125; ‰∏§‰∏™ i ‰∏çÊòØÂêå‰∏Ä‰∏™ iÔºåb.i=1;‰ºòÂÖàÁªô b ‰∏≠ÁöÑÂêåÂêçÂèòÈáèËµãÂÄº‰∫Ü„ÄÇËøôÊ†∑ÁöÑ‰ª£Á†ÅÁÆÄÁõ¥ÂèØÊÄï„ÄÇÈÇ£‰πàÊÄé‰πàËÆøÈóÆÂà∞‰ªé A ÁªßÊâøÊù•ÁöÑÊàêÂëòÂèòÈáè i Âë¢ÔºåËØ∑ÁúãÔºö 123456789101112131415161718192021222324#include &lt;iostream&gt;using namespace std;class A &#123;public: virtual void f() &#123; cout &lt;&lt; "A::f()" &lt;&lt; endl; &#125; int i;&#125;;class B : public A &#123;public: void f()&#123; cout &lt;&lt; "B::f()" &lt;&lt; endl; &#125; int i;&#125;;int main(int argc, char const *argv[])&#123; B b; b.A::i=6; b.B::i=1; A a = b; A *p = &amp;a; cout &lt;&lt; p-&gt;i &lt;&lt; endl; return 0;&#125; ÂëΩÂêçËøîÂõûÂÄº‰ºòÂåñÂØπ‰∫é‰∏Ä‰∏™Â¶Ç foo()ËøôÊ†∑ÁöÑÂáΩÊï∞ÔºåÂÆÉÁöÑÊØè‰∏Ä‰∏™ËøîÂõûÂàÜÊîØÈÉΩËøîÂõûÁõ∏ÂêåÁöÑÂØπË±°ÔºåÁºñËØëÂô®ÊúâÂèØËÉΩÂØπÂÖ∂ÂÅö Named return Value ‰ºòÂåñÔºà‰∏ãÊñáÈÉΩÁÆÄÁß∞ NRV ‰ºòÂåñÔºâÔºåÊñπÊ≥ïÊòØ‰ª•‰∏Ä‰∏™ÂèÇÊï∞ result Âèñ‰ª£ËøîÂõûÂØπË±°„ÄÇ foo()ÁöÑÂéüÂûãÔºö 12345678X foo()&#123; X xx; if(...) return xx; else return xx;&#125; ‰ºòÂåñÂêéÁöÑ foo()‰ª• result Âèñ‰ª£ xxÔºö 1234567891011121314void foo(X &amp;result)&#123; result.X::X(); if(...) &#123; //Áõ¥Êé•Â§ÑÁêÜresult return; &#125; else &#123; //Áõ¥Êé•Â§ÑÁêÜresult return; &#125;&#125; ÂØπÊØî‰ºòÂåñÂâç‰∏é‰ºòÂåñÂêéÁöÑ‰ª£Á†ÅÂèØ‰ª•ÁúãÂá∫ÔºåÂØπ‰∫é‰∏ÄÂè•Á±ª‰ºº‰∫é X a = foo()ËøôÊ†∑ÁöÑ‰ª£Á†ÅÔºåNRV ‰ºòÂåñÂêéÁöÑ‰ª£Á†ÅÁõ∏ËæÉ‰∫éÂéü‰ª£Á†ÅËäÇÁúÅ‰∫Ü‰∏Ä‰∏™‰∏¥Êó∂ÂØπË±°ÁöÑÁ©∫Èó¥ÔºàÁúÅÁï•‰∫Ü xxÔºâ,ÂêåÊó∂ÂáèÂ∞ë‰∫Ü‰∏§Ê¨°ÂáΩÊï∞Ë∞ÉÁî®ÔºàÂáèÂ∞ë xx ÂØπË±°ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÂíåÊûêÊûÑÂáΩÊï∞Ôºå‰ª•Âèä‰∏ÄÊ¨°Êã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÁöÑË∞ÉÁî®ÔºåÂ¢ûÂä†‰∫Ü‰∏ÄÊ¨°ÂØπ a ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÁöÑË∞ÉÁî®Ôºâ„ÄÇ]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Inside the C++ Object Model Á≥ªÂàóÁ¨îËÆ∞ ‰∏Ä -- Object Lessons]]></title>
    <url>%2Fblog%2F2017%2F10%2F19%2FObject-Lessons%2F</url>
    <content type="text"><![CDATA[Â§öÊÄÅÔºöÁªü‰∏ÄÁöÑÊé•Âè£Ôºå‰∏çÂêåÁöÑÂÆûÁé∞ C++Â§öÊÄÅÔºàpolymorphismÔºâ Ë°®Á§∫‚Äú‰ª•‰∏Ä‰∏™ public base class ÁöÑÊåáÈíàÔºàÊàñËÄÖ referenceÔºâÔºåÂØªÂùÄÂá∫‰∏Ä‰∏™ derived class object‚Äù Layout Costs for Adding Encapsulation(Â∞ÅË£Ö) ÊÑèÊÄùÊòØÔºö‰∏∫‰∫ÜÊ∑ªÂä†Â∞ÅË£ÖÊâÄÈúÄË¶Å‰ªòÂá∫ÁöÑÂÜÖÂ≠òÂ∏ÉÂ±ÄËä±ÈîÄ Á¨¨‰∏ÄÁ´† Object Lessons ‰ªãÁªç‰∫Ü C++Â¶Ç‰ΩïÂú®ËÉåÂêéÂÆûÁé∞‰∏Ä‰∏™ÂØπË±°ÔºåÂÜÖÂ≠ò‰∏≠ÁöÑÂ∏ÉÂ±Ä‰ª•ÂèäÁ©∫Èó¥‰∏äÁöÑÂÖ≥Á≥ª„ÄÇ Âú®ËÆ°ÁÆóÊú∫ÁöÑÂéüÁêÜ‰∏≠ÔºåË¶ÅÂÆûÁé∞Êüê‰∏™Êú∫Âà∂ÔºåÊàë‰ª¨ÊÄªËÉΩÊâæÂà∞ÂæàÂ§öÁßçÂÆûÁé∞ÊñπÂºèÔºàÂØπÊØîÁùÄÂ≠¶‰π†ÔºåÂ§öÊÄùËÄÉÊØèÁßçÂÆûÁé∞ÊñπÊ≥ïÁöÑÂà©ÂºäÔºâÔºåC++ÁöÑÁ±ªÁöÑÂÆûÁé∞‰πü‰∏ç‰æãÂ§ñÔºåËÆ©Êàë‰ª¨ÂØπÊØî‰ª•‰∏ã‰∏âÁßçÂÆûÁé∞ÊñπÂºèÔºö ‰∏âÁßçÂØπË±°ÂÆûÁé∞Ê®°ÂºèA Simple Object Model ÂèØ‰ª•ÁúãÂà∞ÔºåÁÆÄÂçïÂØπË±°Ê®°ÂûãÊääÊâÄÊúâÁöÑ data member Âíå member functionÔºàÂáΩÊï∞ÊåáÈíàÔºâÈÉΩÊîæÂú®ÂØπË±°Èáå‰∫Ü„ÄÇ A Table-driven Object Model Ë°®È©±Âä®Ê®°ÂûãÊää member ÂàÜ‰∏∫ data Âíå function ‰∏§Á±ªÔºåÁî®‰∏§‰∏™ÊåáÈíàÂàÜÂà´ÊåáÂêë‰∏§‰∏™Ë°®Ôºå‰∏Ä‰∏™Â≠òÊîæÊâÄÊúâÁöÑ data memberÔºå‰∏Ä‰∏™Â≠òÊîæÊâÄÊúâÁöÑ function ÊåáÈíà„ÄÇ The C++ Object Model 12345678template&lt;class Type&gt;class Point3d&#123;public: Point3d(Type x, Type y, Type z) : x_(x), y_(y), z_(z) &#123;&#125; Type x() &#123; return x_; &#125;private: Type x_, y_, z_;&#125; ‰∏äÈù¢ÁöÑ C++ Á±ªÂπ∂‰∏ç‰ºöÊØî C ËØ≠Ë®Ä ÁöÑ struct ËÄóË¥πÊõ¥Â§öÁöÑÂÜÖÂ≠òÁ©∫Èó¥Ôºå‰∏â‰∏™ data members Áõ¥Êé•ÂÜÖÂê´‰∫é Object ‰∏≠Ôºåmember functions ÂàôÊîæÂú® Object Â§ñ„ÄÇ C++ÁöÑ data members Êúâ‰∏§ÁßçÔºöstatic Âíå nonstatic C++ÁöÑ member functions Êúâ‰∏âÁßçÔºöstatic „ÄÅnonstatic „ÄÅvirtual ÊîæÂú® Object ‰∏≠ÁöÑÂè™Êúâ nonstatic data membersÔºåÂÖ∂‰ªñÁöÑÁªüÁªüÊòØÊîæÂú® Object Â§ñ„ÄÇ ‰∏Ä‰∏™ÂØπË±°ÁöÑÂÜÖÂ≠òÂ∏ÉÂ±ÄÂ§ßÂ∞è(ÈÄöÂ∏∏Áî± 3 ÈÉ®ÂàÜÁªÑÊàê): ÂÖ∂ nonstatic data member ÁöÑÊÄªÂíåÂ§ßÂ∞è; ‰ªª‰ΩïÁî±‰∫é‰ΩçÂØπÈΩêÊâÄÈúÄË¶ÅÁöÑÂ°´Ë°•‰∏äÂéªÁöÑÁ©∫Èó¥;(ÂÖ≥‰∫éÂÜÖÂ≠òÂØπÈΩêÔºåËá™Â∑±Êü•) ‰∏∫‰∫ÜÊîØÊåÅ virtual Êú∫Âà∂ËÄåÂºïËµ∑ÁöÑÈ¢ùÂ§ñË¥üÊãÖ„ÄÇ data members Âú®ÂÜÖÂ≠ò‰∏≠ÁöÑÂ∏ÉÂ±ÄC++Âè™‰øùËØÅÂ§Ñ‰∫éÂêå‰∏Ä‰∏™ access sectionÔºà‰πüÂ∞±ÊòØ private,public,protected ÁâáÊÆµÔºâÁöÑÊï∞ÊçÆÔºå‰∏ÄÂÆö‰ºö‰ª•Â£∞ÊòéÁöÑÊ¨°Â∫èÂá∫Áé∞Âú®ÂÜÖÂ≠òÂ∏ÉÂ±ÄÂΩì‰∏≠(Ë¶ÅÊ±ÇËæÉÊôöÂá∫Áé∞ÁöÑÊï∞ÊçÆÊàêÂëòÂ§ÑÂú®ËæÉÂ§ßÁöÑÂÜÖÂ≠òÂú∞ÂùÄ‰∏≠)„ÄÇC++Ê†áÂáÜÂè™Êèê‰æõ‰∫ÜËøô‰∏ÄÁÇπÁÇπÁöÑ‰øùËØÅ„ÄÇÂÖÅËÆ∏ÁºñËØëÂô®Â∞ÜÂ§ö‰∏™ Access Section ÁöÑÈ°∫Â∫èËá™Áî±ÊéíÂàóÔºåËÄå‰∏çÂøÖÂú®‰πéÂÆÉ‰ª¨ÁöÑÂ£∞ÊòéÊ¨°Â∫è„ÄÇ‰ΩÜ‰ºº‰πéÊ≤°ÊúâÁºñËØëÂô®ËøôÊ†∑ÂÅö„ÄÇÂØπ‰∫éÁªßÊâøÁ±ªÔºåC++Ê†áÂáÜÂπ∂Êú™ÊåáÂÆöÊòØÂÖ∂Âü∫Á±ªÊàêÂëòÂú®ÂâçËøòÊòØËá™Â∑±ÁöÑÊàêÂëòÂú®Ââç„ÄÇ 12345678class X &#123;public: int i; int j;private: int k; int n;&#125; Êï∞ÊçÆ i ‰∏ÄÂÆöÂú® j ‰πãÂâçÔºåk ‰∏ÄÂÆöÂú® n ‰πãÂâç„ÄÇÂÖ∂‰ªñÈ°∫Â∫èÂ∞±ÁúãÁºñËØëÂô®‰∫Ü„ÄÇ Virtual Table(vtbl, vtable) Âíå vptrVirtual function Êú∫Âà∂Áî±‰ª•‰∏ã 2 ‰∏™Ê≠•È™§Êù•ÊîØÊåÅÔºö ÊØè‰∏™ class ‰∫ßÁîüÁöÑ Virtual function ÁöÑÊåáÈíàÊîæÂú® Virtual Table ‰∏≠ ÁºñËØëÂô®ÁªôÊØè‰∏™ class object Ê∑ªÂä†‰∏Ä‰∏™ÊåáÈíà vptrÔºåÊåáÂêëÁõ∏Â∫îÁöÑ vtable ‰∏Ä‰∏™ vtable ÂØπÂ∫î‰∏Ä‰∏™ classÔºå‰∏Ä‰∏™ vptr ÊâçÂØπÂ∫î‰∏Ä‰∏™ class objectÔºåÂøÖÈ°ªÂå∫ÂàÜÂºÄËøô 2 ‰∏™Ê¶ÇÂøµ„ÄÇvtable Áã¨Á´ã‰∫éÂØπË±°ÔºåÂ∞±Ë∑üÂáΩÊï∞Áã¨Á´ã‰∫éÂØπË±°‰∏ÄÊ†∑„ÄÇËøôÊ†∑ÊâÄÊúâÂØπË±°ÊâçËÉΩÂÖ±‰∫´ÂÆÉ‰ª¨ÔºåÂ∞±ÂÉè static data members Ë¢´ÂÖ±‰∫´‰∏ÄÊ†∑„ÄÇ nonstatic data memberÊòØÂØπË±°Áã¨ÊúâÁöÑÔºåÊØè‰∏™ÂØπË±°ÈÉΩÊúâËá™Â∑±ÁöÑ‰∏Ä‰ªΩ„ÄÇËÄåÂÖ∂‰ªñÁöÑ member ÂÖ®ÈÉΩÊòØÂÖ¨Áî®ÁöÑ„ÄÇÂÖ∂ÂÆûËøôÈáåÂèØ‰ª•È°∫‰æøÂ≠¶‰∏Ä‰∏ãÂ∫èÂàóÂåñËøô‰∏™Ê¶ÇÂøµÔºåÊÄùËÄÉ‰∏Ä‰∏ãÂ∫èÂàóÂåñÂØπË±°ÁöÑÊó∂ÂÄôÂì™‰∫õ‰∏úË•øÈúÄË¶ÅÂ≠òÂÇ®„ÄÇ RTTI(run-time type identification):‰∏ÄËà¨Êù•ËØ¥ÔºåÊØè‰∏Ä‰∏™ class Áõ∏ÂÖ≥ËÅîÁöÑ type_info ÂØπË±°ÁöÑÊåáÈíàÈÄöÂ∏∏‰πü‰øùÂ≠òÂú® vtable ÁöÑÁ¨¨‰∏Ä‰∏™ slot ‰∏≠„ÄÇÂÖ≥‰∫é type_info ÊòØ‰ªÄ‰πàÔºåÂèØ‰ª•Ëá™Â∑±Êü•„ÄÇ ÂºïÂÖ•ÁªßÊâøÂêéÁöÑÂØπË±°Ê®°ÂûãÊàêÊú¨ Â¶ÇÊûúÊòØÊôÆÈÄöÁªßÊâøÔºåÁà∂ÂØπË±°Ë¢´Áõ¥Êé•ÂåÖÂê´Âú®Â≠êÂØπË±°ÈáåÈù¢ÔºåËøôÊ†∑Áà∂ÂØπË±°ÁöÑÂ≠òÂèñ‰πüÊòØÁõ¥Êé•ËøõË°åÁöÑÔºåÊ≤°ÊúâÈ¢ùÂ§ñÁöÑÊåáÈíàÊàêÊú¨„ÄÇ Â¶ÇÊûúÊòØËôöÊãüÁªßÊâøÔºåÁà∂ÂØπË±°Áî±‰∏Ä‰∏™ÊåáÈíàÊåáÂá∫Êù•ÔºåËøôÊ†∑Áà∂ÂØπË±°ÁöÑÂ≠òÂèñÂ∞±ÂøÖÈ°ªÁî±ÊåáÈíàËÆøÈóÆÔºåÊ∑ªÂä†‰∫Ü‰∏ÄÂ±ÇÈó¥Êé•ÊÄß„ÄÇ virtual base classÔºåÁî®‰ª•ÂÆûÁé∞ ‚ÄúÂ§öÊ¨°Âá∫Áé∞Âú®ÁªßÊâø‰ΩìÁ≥ª‰∏≠ÁöÑ base classÔºåÊúâ‰∏Ä‰∏™Âçï‰∏ÄËÄåË¢´ÂÖ±‰∫´ÁöÑÂÆû‰æã‚Äù 1234class A &#123; public: void Foo() &#123;&#125; &#125;;class B : public virtual A &#123;&#125;;class C : public virtual A &#123;&#125;;class D : public B, public C &#123;&#125;; ÊàëËßâÂæóËøôÈáåÊúâ‰∏™ÈóÆÈ¢òÔºåclass D ÁªßÊâø class B Âíå class C ÁöÑÊó∂ÂÄôÂπ∂‰∏çÊòØËôöÁªßÊâøÔºåÊâÄ‰ª•‰Ωï‰∏çÂ∞Ü B Âíå C Áõ¥Êé•ÊîæÂú® D ‰∏≠Âë¢ÔºüËøôÊ†∑Â∞±ÁúÅ‰∫Ü‰∏§Ê¨°ÊåáÈíà„ÄÇ ËøôÊòØÊàëÁúãÂà∞ÁöÑ‰∏Ä‰∏™ËÆ≤ÁöÑÂæà‰∏çÈîôÁöÑÂçöÂÆ¢ÔºöËôöÊãüÁªßÊâø struct Âíå class ÂÖ≥ÈîÆÂ≠óÁöÑÂå∫Âà´ÊÄªÂÖ±Â∞±‰∏§‰∏™Âå∫Âà´Ôºö struct defaults to public access and class defaults to private access. When inheriting, struct defaults to public inheritance and class defaults to private inheritance. (Ironically, as with so many things in C++, the default is backwards: public inheritance is by far the more common choice, but people rarely declare structs just to save on typing the ‚Äúpublic‚Äù keyword). ÂìàÂìàÔºåÊàëËßâÂæóËøô‰πàÂÅöÁöÑÁõÆÁöÑÊó†ÈùûÂ∞±ÊòØÊèêÈÜí‰Ω†Ê≥®ÊÑèÂ∞ÅË£ÖÔºå‰∏çË¶ÅÁªôÂ§ñÈÉ®Êö¥Èú≤Ê≤°ÂøÖË¶ÅÁöÑ‰∏úË•øÔºåÊâÄ‰ª•ÊâçÊääÈªòËÆ§ÊêûÊàê private„ÄÇ Èô§Ê≠§‰πãÂ§ñ struct Âíå class ‰∏ÄÊ†∑„ÄÇ struct Áî®Êù•Ë°®Áé∞ÈÇ£‰∫õÂè™ÊúâÊï∞ÊçÆÁöÑÈõÜÂêà‰Ωì POD(Plain Old Data)„ÄÅËÄå class ÂàôÂ∏åÊúõË°®ËææÁöÑÊòØADT(abstract data type)ÁöÑÊÄùÊÉ≥„ÄÇ POD stands for Plain Old Data - that is, a class (whether defined with the keyword struct or the keyword class) without constructors, destructors and virtual members functions. Áî±‰∫éËøô 2 ‰∏™ÂÖ≥ÈîÆÂ≠óÂú®Êú¨Ë¥®‰∏äÊó†Âå∫Âà´ÔºåÊâÄ‰ª• class Âπ∂Ê≤°ÊúâÂøÖÈ°ªË¶ÅÂºïÂÖ•Ôºå‰ΩÜÊòØÂºïÂÖ•ÂÆÉÁöÑÁ°ÆÈùûÂ∏∏‰ª§‰∫∫Êª°ÊÑèÔºåÂõ†‰∏∫Ëøô‰∏™ËØ≠Ë®ÄÊâÄÂºïÂÖ•ÁöÑ‰∏çÊ≠¢ÊòØËøô‰∏™ÂÖ≥ÈîÆÂ≠óÔºåËøòÊúâÂÆÉÊâÄÊîØÊåÅÁöÑÂ∞ÅË£ÖÂíåÁªßÊâøÁöÑÂì≤Â≠¶„ÄÇÂèØ‰ª•ËøôÊ†∑ÊÉ≥Ë±°Ôºöstruct Âè™Ââ©‰∏ãÊñπ‰æø C Á®ãÂ∫èÂëòËøÅÂæôÂà∞ C++ÁöÑÁî®ÈÄî‰∫Ü„ÄÇ programming paradigmsC++ÊîØÊåÅ‰∏âÁßçÂΩ¢ÂºèÁöÑÁºñÁ®ãÈ£éÊ†º(ÊàñÁß∞ÂÖ∏ËåÉ paradigm): Èù¢ÂêëËøáÁ®ãÁöÑÈ£éÊ†ºÔºàprocedural modelÔºâ: Â∞±ÂÉè C ‰∏ÄÊ†∑Ôºå‰∏ÄÊù°ËØ≠Âè•Êé•‰∏ÄÊù°ËØ≠Âè•ÁöÑÊâßË°åÊàñËÄÖÂáΩÊï∞Ë∑≥ËΩ¨; ÊäΩË±°Êï∞ÊçÆÁ±ªÂûãÊ®°Âûã(abstract data type modelÔºåADT): ‰ªÖ‰ªÖ‰ΩøÁî®‰∫Ü class ÁöÑÂ∞ÅË£ÖÔºåÂæàÂ§ö‰∫∫ÈÉΩÊòØ Âú®Áî®Âü∫‰∫éÂØπË±°ÁöÑÈ£éÊ†ºÂç¥ËØØ‰ª•‰∏∫Ëá™Â∑±Âú®‰ΩøÁî®Èù¢ÂêëÂØπË±°ÁöÑÈ£éÊ†º; Èù¢ÂêëÂØπË±°ÁöÑÈ£éÊ†º(object-oriented): ‰ΩøÁî®‰∫Ü class ÁöÑÂ∞ÅË£ÖÂíåÂ§öÊÄÅÁöÑÁºñÁ®ãÊÄùÁª¥(Â§öÊÄÅÊâçÊòØ ÁúüÊ≠£ÁöÑÈù¢ÂêëÂØπË±°ÁöÑÁâπÂæÅ)„ÄÇ Á∫ØÁ≤π‰ª•‰∏ÄÁßç paradigm ÂÜôÁ®ãÂ∫èÔºåÊúâÂä©‰∫éÊï¥‰ΩìË°å‰∏∫ÁöÑËâØÂ•ΩÁ®≥Âõ∫„ÄÇ ‰∏Ä‰∏™ reference ÈÄöÂ∏∏ÊòØ‰ª•‰∏Ä‰∏™ÊåáÈíàÊù•ÂÆûÁé∞ÁöÑÔºåÊâÄ‰ª• point Âíå reference Âπ∂Ê≤°ÊúâÊú¨Ë¥®ÁöÑÂå∫Âà´Ôºåreference Âíå const ÊåáÈíàÁöÑÂå∫Âà´Â∞±ÊòØÔºå‰Ω†Âèñ reference ÊåáÈíàÁöÑÂú∞ÂùÄÁöÑÊó∂ÂÄôÔºåÂèñÂà∞ÁöÑÊòØÊï∞ÊçÆÁöÑÂú∞ÂùÄÔºåconst ÊåáÈíàÂèñÂú∞ÂùÄÂèñÂà∞ÁöÑÊòØÊåáÈíàÁöÑÂú∞ÂùÄ„ÄÇ‰∏ãÈù¢ÁöÑÁ®ãÂ∫èËØ¥Êòé‰∫ÜËøô‰∏ÄÁÇπÔºö 123456789101112#include &lt;iostream&gt;using namespace std;int main()&#123; int a=1; int &amp;b=a; const int *p = &amp;a; cout &lt;&lt; &amp;b &lt;&lt; endl; cout &lt;&lt; p &lt;&lt; endl; cout &lt;&lt; &amp;p &lt;&lt; endl;&#125; ‰πüÂ∞±ÊòØËØ¥‰Ω†Âèñ‰∏çÂà∞ b ÁöÑÂú∞ÂùÄ„ÄÇÊâÄ‰ª•ËØ¥ÂºïÁî®Áõ∏ÂΩì‰∫é‰∏Ä‰∏™ Âà´Âêç„ÄÇÂºïÁî®Â∏∏Áî®Âú®ÂáΩÊï∞Ë∞ÉÁî®ÈáåÔºåÂèØ‰ª•Áõ¥Êé•Êìç‰ΩúÂéüÊúâÂØπË±°ÔºåËøôÊ†∑Â∞±ÂèØ‰ª•‰∏çÁî®ÂÜôÊåáÈíàÁöÑÊåáÈíàËøôÁßçÁªïÂºØÁöÑ‰∏úË•ø‰∫Ü„ÄÇ ÂáΩÊï∞ÁöÑÂÆûÂèÇ‰º†ÈÄíÁªôÂΩ¢ÂèÇÊòØÂÄº‰º†ÈÄíÔºå‰πüÂ∞±ÊòØ‰∏Ä‰∏™ copyÔºåÂΩ¢ÂèÇÂú®ÂáΩÊï∞ÈáåÂ∞ÜÊòØ‰∏Ä‰∏™Â±ÄÈÉ®ÂèòÈáè„ÄÇËøô‰∏™ÁâπÊÄßÊòØËÆ∏Â§öÊñ∞ÊâãÈù¢‰∏¥ÁöÑÂ§ßÂùë„ÄÇ‰∏ÄÈÅìÁªèÂÖ∏ÁöÑËÄÉÂØüÈ¢òÁõÆ‰æøÊòØÔºåÂÆûÁé∞‰∏Ä‰∏™ C ËØ≠Ë®ÄÁöÑ swap ÂáΩÊï∞ÔºåÁî±‰∫é C ËØ≠Ë®ÄÊ≤°ÊúâÂºïÁî®Ôºå‰Ω†Â∞±Âè™ËÉΩÁî®ÊåáÈíàÊù•Êìç‰ΩúÂéüÊúâÂØπË±°‰∫Ü„ÄÇjava Êõ¥ÂùëÔºåjava Ê≤°ÊúâÊåáÈíàÔºåÊâÄ‰ª•ÈúÄË¶ÅÁî®ÂºïÁî®Ôºå‰ΩÜÂü∫Á°ÄÊï∞ÊçÆÁ±ªÂûãÊ≤°ÊúâÂºïÁî®ÔºåÊâÄ‰ª•‰Ω†Â¶ÇÊûúË¶Å‰∫§Êç¢Âü∫Á°ÄÊï∞ÊçÆÁ±ªÂûãÁöÑËØùÔºåÊ†πÊú¨Ê≤°ÂäûÊ≥ïÂÜô swap ÂáΩÊï∞„ÄÇ Â¶ÇÊûú‰Ω†ÂØπ C ËØ≠Ë®ÄÁöÑÁ®ãÂ∫èÊ†àÂæà‰∫ÜËß£ÁöÑËØùÔºåÂ∞±‰ºöÁü•ÈÅìÂΩ¢ÂèÇÂÆûÈôÖ‰∏äÊòØ‰∏çÂ≠òÂú®ÁöÑÔºåÂÆûÂèÇÁõ¥Êé•Êã∑Ë¥ùÂà∞‰∫ÜÂØÑÂ≠òÂô®‰∏≠ÔºåÊâÄ‰ª•Â∫ïÂ±Ç‰∏äÊù•ËØ¥ÂèÇÊï∞ÈÉΩÊòØÂÄºÊã∑Ë¥ùÔºåËÄå‰∏îÊìç‰ΩúÁªìÊûúÊó†Ê≥ïÂÜôÂõûÂà∞ÂÆûÂèÇÔºåÂÆûÂèÇÁ®≥Á®≥ÁöÑÊîæÂú®‰∏ä‰∏Ä‰∏™Ê†àÂ∏ß‰∏≠‰ªéÊú™ÂèëÁîü‰ªª‰ΩïÂèòÂåñ„ÄÇÂÖ∑‰ΩìÁöÑÁªÜËäÇÂèØ‰ª•ÁúãÔºö„ÄäCSAPP„ÄãËØª‰π¶Á¨îËÆ∞ -- Á¨¨ 3 Á´†ÔºöÁ®ãÂ∫èÁöÑÊú∫Âô®Á∫ßË°®Á§∫ ÊåáÈíàÁöÑÁ±ªÂûã ÂØπ‰∫éÂÜÖÂ≠òÊù•ËØ¥Ôºå‰∏çÂêåÁ±ªÂûãÁöÑÊåáÈíàÂπ∂Ê≤°Êúâ‰ªÄ‰πà‰∏çÂêå„ÄÇÂÆÉ‰ª¨ÈÉΩÊòØÂç†Áî®‰∏Ä‰∏™ word ÁöÑÂ§ßÂ∞èÔºàÊâÄ‰ª• word ÁöÑÂ§ßÂ∞èÂÜ≥ÂÆö‰∫ÜÂÜÖÂ≠òÂèØËÆøÈóÆÁ©∫Èó¥ÁöÑÂ§ßÂ∞èÔºå32 ‰ΩçÁ≥ªÁªüÊòØ 4 Â≠óËäÇÔºå64 ‰ΩçÁ≥ªÁªüÊòØ 8 Â≠óËäÇÔºâÔºåÂåÖÂê´‰∏Ä‰∏™Êï∞Â≠óÔºåËøô‰∏™Êï∞Â≠ó‰ª£Ë°®ÂÜÖÂ≠ò‰∏≠ÁöÑ‰∏Ä‰∏™Âú∞ÂùÄ; ÊåáÈíàÁöÑÁ±ªÂûãÊòØÁºñËØëÂô®ÁöÑÊ¶ÇÂøµÔºåÂØπ‰∫éÁ°¨‰ª∂Êù•ËØ¥ÔºåÂπ∂Ê≤°Êúâ‰ªÄ‰πàÊåáÈíàÁ±ªÂûãÁöÑÊ¶ÇÂøµ; ËΩ¨ÂûãÊìç‰Ωú‰πüÂè™ÊòØ‰∏ÄÁßçÁºñËØëÂô®ÁöÑÊåá‰ª§ÔºåÂÆÉÊîπÂèòÁöÑÊòØÁºñËØëÂô®ÂØπË¢´ÊåáÂÜÖÂ≠òÁöÑËß£ÈáäÊñπÂºèËÄåÂ∑≤! void*ÊåáÈíàÂè™ËÉΩÂ§üÊåÅÊúâ‰∏Ä‰∏™Âú∞ÂùÄÔºà‰∏Ä‰∏™Â≠óËäÇÔºâÔºåËÄå‰∏çËÉΩÈÄöËøáÂÆÉÊìç‰ΩúÊâÄÊåáÂêëÁöÑ object]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÄº‰º†ÈÄíÂíåÂºïÁî®‰º†ÈÄí]]></title>
    <url>%2Fblog%2F2017%2F03%2F29%2F%E5%80%BC%E4%BC%A0%E9%80%92%E5%92%8C%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%2F</url>
    <content type="text"><![CDATA[Java Ê≤°ÊúâÂºïÁî®‰º†ÈÄíÔºåÊú¨Ë¥®‰∏äÈÉΩÊòØÂÄº‰º†ÈÄíÔºåÂè™‰∏çËøá‰º†ÈÄíÁöÑÂÄºÂèØ‰ª•ÊòØÊåáÈíàÔºàJava Ê≤°ÊúâÊåáÈíàÔºåÊâÄ‰ª•‰Ω†‰πüÂèØ‰ª•ÁêÜËß£‰∏∫ÂØπË±°ÔºåÂÖ∂ÂÆûÊú¨Ë¥®‰∏äËøòÊòØÊåáÈíàÔºâ„ÄÇ 12345678910111213public class Solution &#123; private void getString(String text)&#123; text = "hello"; &#125; public static void main(String[] args) &#123; Solution solution = new Solution(); String text = "world"; solution.getString(text); System.out.println(text); &#125;&#125; text Êú¨Ë¥®‰∏äÊòØ‰∏Ä‰∏™ÊåáÈíàÔºåËÄå getString ‰∏≠ÁöÑ text ÂàôÊòØÂè¶‰∏Ä‰∏™ÊåáÈíàÔºà‰∏Ä‰∏™Â±ÄÈÉ®ÂèòÈáèÔºâÔºåÊâÄ‰ª•ËøôÈáåÂÆûÈôÖ‰∏äÊúâ‰∏§‰∏™‰∏çÂêåÁöÑ textÔºåËÄåÊàë‰ª¨ÂÆûÈôÖ‰∏äÊîπÂèòÁöÑÂ∞±ÊòØ‰∏Ä‰∏™Â±ÄÈÉ®ÂèòÈáè„ÄÇÊâÄ‰ª•ËæìÂá∫ÁªìÊûúÊòØÔºöworld„ÄÇ‰πüÂèØ‰ª•ÁêÜËß£‰∏∫ÂΩ¢ÂèÇÂíåÂÆûÂèÇ‰∏çÊòØÂêå‰∏Ä‰∏™ÂØπË±°ÔºåÂΩ¢ÂèÇÊòØ‰∏Ä‰∏™Â±ÄÈÉ®ÂèòÈáèÔºåÂ≠òÂú®‰∫éÂØÑÂ≠òÂô®ÊàñËÄÖÂΩìÂâçÊ†àÂ∏ßÔºåÂÆûÂèÇÂ≠òÂú®‰∫é‰∏ä‰∏ÄÁ∫ßÊ†àÂ∏ßÔºåËÄåË¢´Ë∞ÉÁî®ÁöÑÂáΩÊï∞ÔºåÂú®ÂÆÉÁöÑÊâßË°åËøáÁ®ã‰∏≠‰∏ç‰ºöÊîπÂèò‰∏ä‰∏ÄÂ±ÇÊ†àÂ∏ßÁöÑÂÆûÂèÇ„ÄÇ Â¶ÇÊûúÊ∑±ÂÖ•‰∫ÜËß£‰∫Ü C ËØ≠Ë®ÄÁ®ãÂ∫èÊ†àÁöÑÊûÑÈÄ†ÔºåÂ∞±ËÉΩÂΩªÂ∫ïÊòéÁôΩÂáΩÊï∞Ë∞ÉÁî®ÁöÑÁªÜËäÇÔºöËøáÁ®ãË∞ÉÁî® ÂÄº‰º†ÈÄíÂíåÂºïÁî®‰º†ÈÄíÊòØÊØè‰∏™ÂàöÂºÄÂßãÂÜô‰ª£Á†ÅÁöÑÁ®ãÂ∫èÂëòÁöÑÂøÖÁªè‰πãÂùëÔºåÊØîÂ¶ÇÁªèÂÖ∏ÁöÑ swap ÂáΩÊï∞‰∫§Êç¢ÔºåÂ∞±ÊòØ‰∏Ä‰∏™Â§ßÂùëÔºö 12345678910111213141516public class Solution &#123; private void swap(String text1, String text2)&#123; String temp = text1; text1 = text2; text2 = temp; &#125; public static void main(String[] args) &#123; Solution solution = new Solution(); String text1 = "world"; String text2 = "hello"; solution.swap(text1, text2); System.out.println(text1+" "+text2); &#125;&#125; ËæìÂá∫ÊòØÔºöworld hello ÂÆûÈôÖ‰∏äÊàëËßâÂæóËøôÂ∫îËØ•ÁÆóÂæó‰∏äÊòØÁºñÁ®ãËØ≠Ë®ÄÂ∫ïÂ±ÇËÆæËÆ°ÂΩ±ÂìçÂà∞‰∏äÂ±Ç‰ΩøÁî®ÁöÑ‰∏Ä‰∏™‰æãÂ≠êÔºå‰∏çÊòØÈÇ£‰πàËá™ÁÑ∂ÔºåÊØîËæÉÂÆπÊòìËÆ©‰∫∫Âõ∞ÊÉë„ÄÇÂèØ‰ª•ÁÆó‰ΩúÊòØ‰∏ÄÁßçÂ∞ÅË£ÖÁöÑÂ§±Ë¥•Âêß„ÄÇË°•ÊïëÊñπÊ≥ïÂú® C ‰∏≠ÊòØ‰ΩøÁî®ÊåáÈíàÔºåC++‰∏≠ÊòØ‰ΩøÁî®ÂºïÁî®ÔºåJava ‰∏≠ÊòØ‰ΩøÁî®ÂØπË±°ÔºàÊääË¶ÅÊîπÂèòÁöÑÂèòÈáè‰Ωú‰∏∫ÂØπË±°ÁöÑ‰∏Ä‰∏™Â±ûÊÄßÔºâ„ÄÇ]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∏∏ÈáèÊ±†]]></title>
    <url>%2Fblog%2F2017%2F03%2F28%2F%E5%B8%B8%E9%87%8F%E6%B1%A0%2F</url>
    <content type="text"><![CDATA[Â≠óÁ¨¶‰∏≤Áî± char Êï∞ÁªÑÂÆûÁé∞ÔºåÂ≠óÁ¨¶‰∏≤‰ª•\0ÁªìÂ∞æÔºå\0ÊòØ ASCII ÁöÑÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶ÔºåÁî® bit Ë°®Á§∫‰πüÂ∞±ÊòØÔºö0000 0000ÔºåËøôÂèØ‰ª•Êñπ‰æøÊàë‰ª¨ÊâæÂà∞Â≠óÁ¨¶‰∏≤ÁöÑÁªìÂ∞æ„ÄÇ ASCII Â≠óÁ¨¶Áî±‰∏Ä‰∏™Â≠óËäÇË°®Á§∫ÔºåÂÆûÈôÖ‰∏äÁ¨¨‰∏ÄÁâàÁöÑ ASCII Â≠óÁ¨¶Âè™Áî®Âà∞‰∫Ü 7 ‰∏™ bitÔºå128 ‰∏™Â≠óÁ¨¶ÔºåÊâ©Â±ïÁâàÁöÑ ASCII ‰ΩøÁî®‰∫Ü 8 ‰∏™ bit„ÄÇ 12char str[11];strcpy(str, "0123456789\0"); ‰∏∫‰∫ÜËäÇÁúÅÂÜÖÂ≠òÔºåC/C++ÊääÂ∏∏ÈáèÂ≠óÁ¨¶‰∏≤ÊîæÂà∞Â∏∏ÈáèÊ±†‰∏≠ÔºåÂΩìÂá†‰∏™ÊåáÈíàË¢´ËµãÂÄº‰∫ÜÁõ∏ÂêåÁöÑÂ≠óÁ¨¶‰∏≤Â∏∏ÈáèÊó∂ÔºåÂÆûÈôÖ‰∏äÂÆÉ‰ª¨‰ºöÊåáÂêëÁõ∏ÂêåÁöÑÂÜÖÂ≠òÂú∞ÂùÄ„ÄÇ‰ΩÜÁî®Â∏∏ÈáèÂ≠óÁ¨¶‰∏≤ÂàùÂßãÂåñÊï∞ÁªÑÔºåÊÉÖÂÜµÂç¥‰∏çÂêå„ÄÇ 1234567891011121314151617181920int _tmain(int argc, _TCHAR* argv[])&#123; char str1[] = "hello world"; char str2[] = "hello world"; char* str3 = "hello world"; char* str4 = "hello world"; if(str1==str2)&#123; printf("str1 and str2 are same.\n"); &#125;else&#123; printf("str1 and str2 are not same.\n"); &#125; if(str3==str4)&#123; printf("str3 and str4 are same.\n"); &#125;else&#123; printf("str3 and str4 are not same.\n"); &#125; return 0;&#125; ËæìÂá∫Ôºöstr1 and str2 are not same.str3 and str4 are same. Â∏∏ÈáèÊ±†ËôΩÁÑ∂Â•ΩÁî®Ôºå‰ΩÜËøôÊ†∑‰ºöÈÄ†Êàê‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂ∞±ÊòØÊàë‰ª¨ÊãøÂÖ∂‰∏≠‰∏Ä‰∏™ÊåáÈíàÊîπ‰∫ÜÂ≠óÁ¨¶‰∏≤ÂÜÖÂÆπÔºåÂ∞±‰ºöÈÄ†ÊàêÂè¶‰∏Ä‰∏™ÊåáÈíàÊåáÂêëÁöÑÂ≠óÁ¨¶‰∏≤‰πüÂèò‰∫Ü„ÄÇ‰∏∫Ê≠§ÂÉè C#Âíå Java Á≠âËØ≠Ë®ÄÈÉΩÂ∞ÜÂ≠óÁ¨¶‰∏≤Á±ªÂûãËÆæ‰∏∫‰∏çÂèØÂèòÂØπË±°ÔºåÊîπÂèòÂ≠óÁ¨¶‰∏≤ÂÆûÈôÖ‰∏äÊòØÊñ∞Âª∫‰∫Ü‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåËøôÊ†∑Â∞±‰∏ç‰ºöÂºïËµ∑ÂÜ≤Á™Å‰∫Ü„ÄÇ‰ΩÜÂ¶ÇÊûúÈúÄË¶Å‰∏çÂÅúÁöÑÊîπÂèòÂ∞±Ë¶Å‰∏çÂÅúÁöÑÊñ∞Âª∫ÔºåËøôÊ†∑Â∞±Â§™ÂΩ±ÂìçÊïàÁéáÔºåÊâÄ‰ª•ÂèàÊèê‰æõ‰∫ÜStringBuilderÁ±ªÔºåËøô‰∏™Á±ªÊòØÊîØÊåÅÂú®ÂéüÂ≠óÁ¨¶‰∏≤‰∏äÊîπÂä®ÁöÑ„ÄÇ]]></content>
      <tags>
        <tag>ÁºñÁ®ãÂü∫Á°Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êï∞ÁªÑÂíåÊåáÈíàÁöÑÂå∫Âà´]]></title>
    <url>%2Fblog%2F2017%2F03%2F27%2F%E6%95%B0%E7%BB%84%E5%92%8C%E6%8C%87%E9%92%88%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[Êï∞ÁªÑÂíåÊåáÈíàÁöÑÂå∫Âà´Ôºö 123456789101112131415int GetSize(int data[])&#123; return sizeof(data);&#125;int _tmain(int argc, _TCHAR* argv[])&#123; int data1[] = &#123;1, 2, 3, 4, 5&#125;; int size1 = sizeof(data1); int* data2 = data1; int size2 = sizeof(data2); int size3 = GetSize(data1); printf("%d, %d, %d\n", size1, size2, size3);&#125; Á≠îÊ°àÊòØËæìÂá∫Ôºö20, 4, 4 sizeof ÊòØ‰∏™ÂÖ≥ÈîÆÂ≠óËÄå‰∏çÊòØÂáΩÊï∞Ôºåsizeof(data1)ÊòØÊ±ÇÊï∞ÁªÑÁöÑÂ§ßÂ∞èÔºåËøôÈáåÊúâ 5 ‰∏™ int ÂûãÂÖÉÁ¥†ÔºåÊâÄ‰ª•ÊÄªÂÖ± 20 ‰∏™Â≠óËäÇÔºådata2 Â£∞Êòé‰∏∫ÊåáÈíàÔºåÂ∞ΩÁÆ°ÊåáÂêë‰∫Ü‰∏Ä‰∏™Êï∞ÁªÑÔºå‰ΩÜÊú¨Ë¥®‰∏äÂè™ÊòØ‰∏Ä‰∏™ÊåáÈíàÔºåÊâÄ‰ª• sizeof(data2)ÁöÑËØ≠‰πâËåÉÂõ¥Êî∂Áº©‰∫ÜÔºåÊó†Ê≥ï‰ªÖÈÄöËøá‰∏Ä‰∏™ÊåáÈíàÂæóÁü•ÂÖ∂ÊâÄÊåáËåÉÂõ¥„ÄÇÂú® 32 ‰ΩçÁ≥ªÁªü‰∏ä‰∏Ä‰∏™ÊåáÈíàÊòØ 4 Â≠óËäÇÔºåÊâÄ‰ª•ÁªìÊûúÂ∞±ÊòØ 4„ÄÇÂú® C/C++‰∏≠ÔºåÂΩìÊï∞ÁªÑ‰Ωú‰∏∫ÂáΩÊï∞ÁöÑÂèÇÊï∞ËøõË°å‰º†ÈÄíÊó∂ÔºåÊï∞ÁªÑÂ∞±Ëá™Âä®ÈÄÄÂåñ‰∏∫ÂêåÁ±ªÂûãÁöÑÊåáÈíàÔºåÂõ†Ê≠§ size3 ÁöÑÁªìÊûú‰πüÊòØ 4„ÄÇÊâÄ‰ª• C++‰º†Êï∞ÁªÑÂÅöÂèÇÊï∞Ëá≥Â∞ë‰∏§‰∏™ÂèÇÊï∞Ëµ∑Ê≠•Ôºå‰∏Ä‰∏™ÊåáÈíàÔºå‰∏Ä‰∏™Êï∞ÁªÑÈïøÂ∫¶„ÄÇ]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Macbook Pro ‰ΩøÁî®ÊÄªÁªì]]></title>
    <url>%2Fblog%2F2017%2F01%2F01%2FMacbookPro%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[ÂâçË®ÄÊàë‰ΩøÁî® macbook pro 2014 Â∑≤Áªè‰∏ÄÂπ¥‰∫ÜÔºå‰∫éÊòØÂÜôÁØáÊÄªÁªìÂêß„ÄÇ macbook Êú∫Âô®ÁöÑ‰∫ÆÁÇπÔºö ËΩªËñÑÔºåÈìùÂà∂Êú∫Ë∫´ÔºåÂ§ñËßÇÁÆÄÊ¥ÅÁæéËßÇ Ëß¶Êë∏ÊùøÁúüÁöÑÂæàÂ•ΩÁî®ÔºåÊàëÂ∑≤ÁªèÂæà‰πÖÊ≤°Áî®ËøáÈº†Ê†á‰∫ÜÔºà‰ΩÜËß¶Êë∏ÊùøÂæà‰∏çÈÄÇÂêàÊâìÊ∏∏ÊàèÔºâ ÈîÆÁõòËÉåÂÖâ retina Â±è‰πüÊòØÈùûÂ∏∏ÂÖªÁúº Á´ã‰ΩìÂ£∞‰πüÂçÅÂàÜ‰∏çÈîô ÁªÜËäÇÂÅöÂæóÂæàÂ•ΩÔºåÂÖÖÁîµÂè£ÊòØÁ£ÅÂê∏ÁöÑÔºåÊ≠£Âèç‰∏§Èù¢ÈÉΩËÉΩÂÖÖÔºåÊåáÁ§∫ÁÅØÊòØËÉΩÊòæÁ§∫ÊòØÂê¶ÂÖÖÊª°ÁöÑÔºàÁî®Ëøá surface pro 4 ÁöÑÂØπÊØî‰∏Ä‰∏ãÂ∞±Áü•ÈÅìÔºå‰ªÄ‰πàÂè´ÂÅöÁªÜÂøÉÔºåËôΩÁÑ∂ surface pro 4 ‰πüÊúâÂÖÖÁîµÊåáÁ§∫ÁÅØÔºå‰ΩÜÂè™ÊòØÁ∫ØÁôΩËâ≤ÔºåÊó†Ê≥ïÁúãÂá∫ÊòØÂê¶ÂÖÖÊª°Ôºâ OS X ÁöÑÊúÄÂ§ß‰∫ÆÁÇπÔºöGUI Âíå CLI ÁöÑÂÆåÁæéÁªìÂêàÔºå‰ºòÂåñÁöÑÂæàÂ•ΩÔºåÁ≥ªÁªüËÄóÁîµÂ∞ëÔºåÂæÖÊú∫Êó∂Èó¥Ë∂ÖÈïø„ÄÇ ÂèØ‰ª•ËØ¥ËøôÊòØ‰∏Ä‰∏™‰∏çÈîôÁöÑÂ∑•ÂÖ∑ÔºåÊó†ËÆ∫ÊòØÂØπÊôÆÈÄöÁî®Êà∑Êù•ËØ¥ÔºåËøòÊòØÂØπÁ®ãÂ∫èÂëòÊù•ËØ¥„ÄÇ ÁÑ∂ËÄå‰ª∑Ê†ºÂπ∂‰∏ç‰∫≤Ê∞ë Êé•‰∏ãÊù•Ë¶ÅËÆ≤ÁöÑÂÖ®ÊòØÂ¶Ç‰ΩïÈ´òÊïàÊìç‰Ωú macbook ÁöÑÂπ≤Ë¥ßÔºÅÔºÅÔºÅ Êñá‰ª∂ÁÆ°ÁêÜÂô® FinderÈ¶ñÂÖàËÆ≤ FinderÔºåËøôÊòØ mac Á≥ªÁªüÔºå‰πüÂ∞±ÊòØ OS X Á≥ªÁªüÁöÑÊñá‰ª∂ÁÆ°ÁêÜÂô®ÔºåÂíå windows ÁöÑÊñá‰ª∂ÁÆ°ÁêÜÂô®ÂØπÊØîÊúâÁÇπ‰∏çÂêåÔºåÊúÄ‰∏çÊñπ‰æøÁöÑÂú∞ÊñπÂú®‰∫éÁÇπÂáªÂè≥ÈîÆÊ≤°ÊúâÊñ∞Âª∫Êñá‰ª∂ÈÄâÈ°πÔºåÂ¶ÇÊûú‰Ω†‰ºö LinuxÔºåÂèØ‰ª•Áî®ÂëΩ‰ª§touch Êñá‰ª∂ÂêçÊù•Êñ∞Âª∫Êñá‰ª∂ÔºåÂ¶ÇÊûú‰Ω†‰∏ç‰ºöÂëΩ‰ª§ÔºåÂèØ‰ª•ÂÖàÊâìÂºÄÊñáÊú¨ÁºñËæëÂô®ÔºåÂÜçÊñ∞Âª∫ÊñáÊú¨Êñá‰ª∂ÔºåÂÆÉÁöÑËÆæËÆ°Âì≤Â≠¶ÊòØÔºå‰Ω†Ë¶ÅÊñ∞Âª∫‰ªÄ‰πàÊñá‰ª∂ÔºåÂ∞±ÂÖàÊâìÂºÄ‰∏éËøô‰∏™Êñá‰ª∂Áõ∏ÂÖ≥ÁöÑËΩØ‰ª∂ÔºåÂÜçÂú®Ëøô‰∏™ËΩØ‰ª∂ÈáåÊñ∞Âª∫Ëøô‰∏™Á±ªÂûãÁöÑÊñá‰ª∂Ôºå‰∏çËøá‰∏çÊñπ‰æøÂ∞±ÊòØ‰∏çÊñπ‰æø„ÄÇ ÂÜçËÆ≤ËÆ≤‰ºòÁßÄÁöÑÂú∞ÊñπÔºåFinder ÂèØ‰ª•ÊâìÂºÄÂ§öÂèäÁõÆÂΩïÔºåÂè¶Â§ñÂèØ‰ª• ÊåâÁ©∫Ê†ºÈîÆÈ¢ÑËßà„ÄÇFinder ËøòÊúâ tag Á≥ªÁªüÔºå‰Ω†ÂèØ‰ª•ÈÄöËøá tag Êù•ËÆøÈóÆÂêå‰∏Ä tag ÁöÑÊñá‰ª∂ Ê†ºÂºèËΩ¨Êç¢Ôºö ÊúâÊó∂ÂÄôÈúÄË¶ÅÊää png Á≠âÊ†ºÂºèÁöÑÂõæÁâáËΩ¨Êàê jpg ÁöÑÊ†ºÂºèÔºå‰∫éÊòØÊúâÂêåÂ≠¶Â∞±ÂéªÂà∞Â§ÑÊâæÊ†ºÂºèËΩ¨Êç¢ËΩØ‰ª∂‰∫Ü„ÄÇÂÖ∂ÂÆûÂú® Mac ‰∏≠Áõ¥Êé•Êõ¥ÊîπÂõæÁâáÁöÑÊâ©Â±ïÂêçÔºåÂç≥ÂèØËá™Âä®ËΩ¨ÊàêÁõ∏Â∫îÂú∞Ê†ºÂºè~ËØïËØïÂêßÔºåÂ¶ÇÊûú‰Ω†ÊîπÊ†ºÂºèÂâçÁúã‰∫ÜÊñá‰ª∂‰øÆÊîπÊó•ÊúüÔºåÊîπÂÆåÊ†ºÂºèÂêé‰Ω†‰ºöÂèëÁé∞‰øÆÊîπÊó•Êúü‰æùÁÑ∂Ê≤°Âèò„ÄÇ Âø´Êç∑ÈîÆÁÑ∂ÂêéËÆ≤ËÆ≤Âø´Êç∑ÈîÆËÆæËÆ°ÔºåÊàëÂú® windows ‰∏ãÂ∑≤ÁªèÊúâ‰∫Ü‰∫õ‰ΩøÁî®Âø´Êç∑ÈîÆÁöÑ‰π†ÊÉØÔºåÊØîÂ¶ÇÔºö win+E ÊòØÊâìÂºÄÊñá‰ª∂ÁÆ°ÁêÜÂô® win+D ÊòØÊòæÁ§∫Ê°åÈù¢Ôºà‰πüÂ∞±ÊòØÂ∞ÜÊâÄÊúâÁ™óÂè£ÊúÄÂ∞èÂåñÔºâ win+L ÈîÅÂ±è ctrl+S ‰øùÂ≠ò ctrl+A ÂÖ® ctrl+C Â§çÂà∂ ctrl+X Ââ™Âàá ctrl+V Á≤òË¥¥ ctrl+F Êü•Êâæ ÂΩìÊàëÊù•Âà∞ OS X ‰∏ãÁöÑÊó∂ÂÄôÔºåÊàëÂêåÊ†∑ÂÖàÊë∏Á¥¢‰∫Ü‰∏ÄÁï™Âø´Êç∑ÈîÆ„ÄÇËÆæËÆ°Âø´Êç∑ÈîÆÁöÑÂì≤Â≠¶Â∞±ÊòØÈÄöÁî®ÔºåËøôÊ†∑Â∞±ÂèØ‰ª•ËäÇÁúÅËÆ∞ÂøÜÊàêÊú¨Ôºåmac ‰∏äÁöÑ cmd Âü∫Êú¨‰∏äÊâøÊãÖ‰∫Ü windows ‰∏ä ctrl ÁöÑËÅåËÉΩÔºåÂ∏∏Áî®ÁöÑÂø´Êç∑ÈîÆÊúâÔºö cmd+S ‰øùÂ≠ò cmd+A ÂÖ®ÈÄâ cmd+C Â§çÂà∂ cmd+X Ââ™Âàá cmd+V Á≤òË¥¥ cmd+F Êü•Êâæ cmd+,ÊâìÂºÄ preferance ‰πüÂ∞±ÊòØÊâìÂºÄËÆæÁΩÆÁïåÈù¢ cmd+N ÊâìÂºÄÊñ∞Á™óÂè£ cmd+W ÂÖ≥Èó≠Á™óÂè£ cmd+H ÈöêËóèÁ™óÂè£ cmd+Q ÈÄÄÂá∫Á®ãÂ∫è cmd+ctrl+F ÂÖ®Â±èÔºàÂπ∂‰∏çÊîØÊåÅÊâÄÊúâÁ®ãÂ∫èÔºå‰ªÖ‰ªÖÊîØÊåÅÂè≥‰∏äËßíÊúâÂèåÁÆ≠Â§¥ÁöÑÁ®ãÂ∫èÔºâ cmd+Tab ÂàáÊç¢Á®ãÂ∫è ‰Ω†Áî®‰∫Ü Finder ‰πãÂêéÂèØËÉΩ‰ºöÊÅºÁÅ´Ê≤°ÊúâÂâ™ÂàáÊñá‰ª∂ÁöÑÂäüËÉΩÔºå‰ΩÜÂÖ∂ÂÆûÊòØÊúâÁöÑÔºåÂè™ÊòØÂø´Êç∑ÈîÆ‰∏ç‰∏ÄÊ†∑ÔºåÂâ™ÂàáÊñá‰ª∂ÁöÑÂø´Êç∑ÈîÆÊòØÔºåÂÖà cmd+C Â§çÂà∂ÔºåÁÑ∂Âêé cmd+option+V Á≤òË¥¥„ÄÇ ËøôÊòØÊàëÂ∏∏Áî®ÁöÑÂá†‰∏™Âø´Êç∑ÈîÆ„ÄÇÊÄª‰πãÂø´Êç∑ÈîÆ‰∏çÁî®ËÆ∞ÂæàÂ§öÔºåÊåâ‰Ω†Ëá™Â∑±ÁöÑÈúÄË¶ÅÔºåËÆ∞‰ΩèÂ∏∏Áî®ÁöÑÂ∞±Ë°å„ÄÇ Â∏∏Áî®ÁöÑÂÆπÊòìËÆ∞‰ΩèÔºå‰∏çÂ∏∏Áî®ÁöÑÂæàÈöæËÆ∞‰Ωè Âè¶Â§ñÂØπ‰∫é‰πê‰∫éÊë∏Á¥¢ÁöÑ‰∫∫ÔºåÊàëËßâÂæó‰∏Ä‰∫õÂ∞è trick ÂèØ‰ª•Â¢ûÂä†Ë∂£Âë≥ÊÄßÔºå‰ªéËÄåÊøÄÂèëÂÖ¥Ë∂£„ÄÇ‰∏ãÈù¢ÂÜçËÆ≤‰∫õ‰∏çÂ∏∏Áî®‰ΩÜÊòØÊúâÊÑèÊÄùÁöÑÔºö Èô§‰∫Ü cmd ÊòØÂ∏∏Áî®ÁöÑÔºåoption ÈîÆ‰πüÂÄºÂæóÊàë‰ª¨ÂÖ≥Ê≥®Ôºå‰∏ãÈù¢ÂÜçËÆ≤Âá†‰∏™ option ÁöÑÂ¶ôÁî®Ôºö Êåâ‰Ωè option+shift ÂèØ‰ª•ÂæÆË∞ÉÔºà1/4 ÂæÆË∞ÉÔºâÈü≥Èáè„ÄÅÈîÆÁõòËÉåÂÖâ‰∫ÆÂ∫¶ÂíåÂ±èÂπï‰∫ÆÂ∫¶ÔºåÊåâ‰Ωè option ÂÜçÊåâÂÖ∂‰ªñÂ≠óÊØçÈîÆÁ≠âÔºå‰ºöÂá∫Áé∞Â•áÊÄ™ÁöÑÂ≠óÁ¨¶ ¬•¬©≈ì‚àë¬Æ‚Ä†¬•√•√ü¬©‚âà√ß„ÄÇ Êï∞Â≠¶Á¨¶Âè∑Ôºö Á∫¶Á≠â‰∫é: Option + X = ‚âà Â∫¶Êï∞: Shift + Option + 8 = ¬∞ Èô§Âè∑: Option + / = √∑ Êó†Á©∑: Option + 5 = ‚àû Â§ß‰∫éÁ≠â‰∫éÂíåÂ∞è‰∫éÁ≠â‰∫é: Option + , Âíå Option + . = ‚â§ Âíå ‚â• ‰∏çÁ≠â‰∫é: Option + = = ‚â† ÂúÜÂë®Áéá: Option + P = œÄ Âä†Âáè: Shift + Option + = = ¬± ÂºÄÊñπ: Option + V = ‚àö Ê±ÇÂíåÁ¨¶Âè∑: Option + W = ‚àë ÂÖ∂‰ªñËæìÂÖ•ÁâπÊÆäÁ¨¶Âè∑Ôºö ÁâàÊùÉÁ¨¶Âè∑: Option + G = ¬© ‰∫∫Ê∞ëÂ∏ÅÁ¨¶Âè∑: Option + Y = ¬• Êåâ‰Ωè option ÂÜçÊääÈº†Ê†áÁßªÂà∞ Dock ‰∏äÁöÑ APP ‰∏äÔºå‰Ω†‰ºöÂèëÁé∞ÈÄÄÂá∫ÂèòÊàê‰∫ÜÂº∫Âà∂ÈÄÄÂá∫„ÄÇËøôÂ∞±ÊòØÂø´Êç∑ÊùÄËøõÁ®ãÂà©Âô®„ÄÇ Command+Option+D ÊéßÂà∂ Dock ÁöÑÊòæÁ§∫‰∏éÈöêËóè Command+Shift+H ÈöêËóèÊâÄÊúâÂÖ∂‰ªñÁ™óÂè£ Shift+Èü≥Èáè ‰ºöÊúâÂ£∞Èü≥ÔºåÁõ¥Êé•ÊåâÈü≥ÈáèÈªòËÆ§ÊòØ‰∏çÂá∫Â£∞„ÄÇË∞ÉÈü≥ÈáèÂà©Âô® Command+I ÊòæÁ§∫ÁÆÄ‰ªãÔºàÂú® Finder ‰∏≠ÔºâÔºåÂèØ‰ª•‰øÆÊîπÊâìÂºÄ‰∏Ä‰∏™Êñá‰ª∂ÁöÑÈªòËÆ§ APP Command+Control+N Êñ∞Âª∫‰∏Ä‰∏™Êñá‰ª∂Â§πÔºåÂπ∂ÂΩíÁ±ª‰Ω†ÈÄâ‰∏≠ÁöÑÊâÄÊúâÊñá‰ª∂ ÁºñËæëÊñáÊú¨ÁöÑÂø´Êç∑ÈîÆCommand+Space ÂàáÊç¢ËæìÂÖ•Ê≥ï Command+left ËÆ©ÂÖâÊ†áË∑≥Âà∞ÊúÄÂâçÈù¢ÔºåÁõ∏ÂΩì‰∫é windows ‰∏ãÁöÑ home ÈîÆ Command+right ËÆ©ÂÖâÊ†áË∑≥Âà∞ÊúÄÂêéÔºåÁõ∏ÂΩì‰∫é windows ‰∏ãÁöÑ end ÈîÆ Command+up ËÆ©ÂÖâÊ†áË∑≥Âà∞Êï¥‰∏™ÊñáÊú¨ÁöÑÊúÄÂºÄÂ§¥ Command+down ËÆ©ÂÖâÊ†áË∑≥Âà∞Êï¥‰∏™ÊñáÊú¨ÁöÑÊúÄÂêé Command+delete Âà†Èô§ÂΩìÂâçË°åÔºåÁõ∏ÂΩì‰∫é windows ‰∏ãÁöÑ homeÔºåshift+endÔºàÈÄâ‰∏≠Ôºå‰ªéË°åÂ§¥Âà∞Ë°åÂ∞æÔºâÔºåbackspaceÔºåËøô‰∏â‰∏™Êìç‰ΩúÁöÑÁªÑÂêà„ÄÇËøô‰∏™Âø´Êç∑ÈîÆ‰ºöËÆ©‰Ω†Áõ∏ÂΩìÁàΩÁöÑ„ÄÇ Êà™ÂõæÂø´Êç∑ÈîÆCommand+Shift+3 Êà™ÂèñÊï¥‰∏™Ê°åÈù¢ÔºåÂπ∂ÊääÊà™Âõæ‰Ωú‰∏∫‰∏Ä‰∏™Êñá‰ª∂Â≠òÂÇ®Âú®Ê°åÈù¢‰∏ä Command+Shift+4 Êà™Âèñ‰∏Ä‰∏™Âå∫ÂüüÔºåÂπ∂ÊääÊà™Âõæ‰Ωú‰∏∫‰∏Ä‰∏™Êñá‰ª∂Â≠òÂÇ®Âú®Ê°åÈù¢‰∏ä Command+Shift+Ctrl+3 Êà™ÂèñÊï¥‰∏™Ê°åÈù¢ÔºåÂπ∂Â§çÂà∂Âà∞Ââ™ÂàáÊùø Command+Shift+Ctrl+4 Êà™Âèñ‰∏Ä‰∏™Âå∫ÂüüÔºåÂπ∂Â§çÂà∂Âà∞Ââ™ÂàáÊùø Command+Shift+4 ÁÑ∂ÂêéÊåâ Space Â∞±‰ºöÊà™Âèñ‰∏Ä‰∏™Á™óÂè£„ÄÇËøôÊ†∑Êà™Âõæ‰ºöËá™Â∏¶Èò¥ÂΩ±ÊïàÊûú„ÄÇÂ¶ÇÊûú‰∏çÊÉ≥Ëá™Â∏¶Èò¥ÂΩ±ÊïàÊûúÔºåÂèØ‰ª•Êåâ‰Ωè option ÂÜçÁÇπËß¶Êë∏Êùø„ÄÇ Command+Ctrl+A mac QQ Êà™ÂõæÂø´Êç∑ÈîÆÔºåÁî±‰∫éÂ±èÂπïÂàÜËæ®ÁéáÂ§™È´òÔºåmac Á≥ªÁªüÂø´Êç∑ÈîÆÊà™Âá∫Êù•ÁöÑÂõæÈÉΩÂ§™Â§ß‰∫ÜÔºåËÄå macQQ Êà™Âá∫Êù•ÁöÑÂõæÂ§ßÂ∞èÊ≠£ÂêàÈÄÇ„ÄÇ Chrome ÊµèËßàÂô®Âø´Êç∑ÈîÆËøô‰∏™Â∫îËØ•ÊòØ‰∏éÊìç‰ΩúÁ≥ªÁªüÊó†ÂÖ≥ÁöÑÔºå‰ΩÜÂú® Mac ‰∏ãÂÖªÊàê‰∫ÜÁî®Âø´Êç∑ÈîÆÁöÑ‰π†ÊÉØÔºåÊâÄ‰ª• Chrome ÁöÑÂø´Êç∑ÈîÆÈÉΩÊòØÂú® Mac ‰∏äÂ≠¶ÁöÑÔºåÂú® windows ‰∏ãÊ≥®ÊÑèÁî®CtrlÊõøÊç¢CommandÈîÆÂ∞±Ë°å‰∫Ü„ÄÇ Command+R Âà∑Êñ∞ Command+L Â∞ÜÁ™óÂè£ÁÑ¶ÁÇπÈîÅÂÆöÂà∞ÊµèËßàÂô®ÁöÑÂú∞ÂùÄÊ†èÔºå‰∏çÁî®ÁßªÂä®Èº†Ê†áÂì¶ Command+T ÊâìÂºÄ‰∏Ä‰∏™Êñ∞ Tab Command+Shift+T ÊâìÂºÄ‰∏Ä‰∏™‰πãÂâçË¢´ÂÖ≥Èó≠ÁöÑ Tab Command+Shift+J ÊâìÂºÄ‰∏ãËΩΩÈ°µÈù¢ Command+Shift+C ÊâìÂºÄ‚ÄúÊ£ÄÊü•(spectator)‚ÄùÔºåÈº†Ê†áÂè≥ÈîÆÂèØ‰ª•ÁúãÂà∞Ëøô‰∏™ÈÄâÈ°πÔºå‰∏ÄËà¨ÊòØÁ®ãÂ∫èÂëò‰ΩøÁî®ÁöÑÈ´òÁ∫ßÂäüËÉΩÔºå‰ΩÜ‰∏çËÉΩÂÜçÊ¨°‰ΩøÁî®Âø´Êç∑ÈîÆÂÖ≥Èó≠„ÄÇ Command+Shift+I ÂêåÊ†∑ÊòØÊâìÂºÄ spectatorÔºå‰ΩøÁî®ÂºÄÂèë‰∫∫ÂëòÂ∑•ÂÖ∑Ôºå‰ΩÜÂèØ‰ª•ÂÜçÊ¨°‰ΩøÁî®Âø´Êç∑ÈîÆÂÖ≥Èó≠„ÄÇ Command+Shift+B ÊâìÂºÄÊàñÂÖ≥Èó≠‰π¶Á≠æÊ†è Command+Option+B ÊâìÂºÄ‰π¶Á≠æÁÆ°ÁêÜÂô® Command+Y ÊâìÂºÄÂéÜÂè≤ËÆ∞ÂΩï Command+Option+Â∑¶Âè≥ÊñπÂêëÈîÆ ÂàáÊç¢Ê†áÁ≠æÈ°µ Command+D Êî∂ËóèÊ≠§È°µ‰∏∫‰π¶Á≠æ Command+Shift+D Â∞ÜÊâÄÊúâÊ†áÁ≠æÈ°µÂä†‰π¶Á≠æ Command+‰∏ä‰∏ãÊñπÂêëÈîÆ Ë∑≥Âà∞È°µÈù¢È°∂ÈÉ®ÊàñÂ∫ïÈÉ® Command+Option+J ÊâìÂºÄ javascript ÊéßÂà∂Âè∞ Êåâ‰Ωè Command ÂêéÁÇπÂáªÈìæÊé•ÔºåÂú®Êñ∞ TabÔºàÊ†áÁ≠æÈ°µÔºâ‰∏≠ÊâìÂºÄËøôÊù°ÈìæÊé•„ÄÇ Command+Shift ÂÜçÁÇπÂáªÈìæÊé•ÔºåÂú®Êñ∞Ê†áÁ≠æÈ°µ‰∏≠ÊâìÂºÄÂπ∂ÂàáÊç¢Âà∞Êñ∞Ê†áÁ≠æÈ°µ Command+Shift+N Áî®ÈöêË∫´Ê®°ÂºèÊâìÂºÄÊñ∞Á™óÂè£ Command+Shift+W ÂÖ≥Èó≠ÂΩìÂâçÁ™óÂè£ Command+[ ÊàñËÄÖ ] ÂâçËøõÊàñËÄÖÂõûÈÄÄ Command+Â∑¶Âè≥ÊñπÂêëÈîÆ ÂâçËøõÊàñËÄÖÂêéÈÄÄ Command+Option+U Êü•ÁúãÁΩëÈ°µÊ∫ê‰ª£Á†Å iTerm2 Âø´Êç∑ÈîÆiTerm2 ‰∏≠ÁöÑÊñáÊú¨ÔºåÈÄâ‰∏≠Âç≥Â§çÂà∂ Command+D Ê∞¥Âπ≥ÂàÜÈöîÂá∫‰∏Ä‰∏™ÁªàÁ´Ø Command+Shift+D ÂûÇÁõ¥ÂàÜÂâ≤Âá∫‰∏Ä‰∏™ÁªàÁ´Ø ÂèØ‰ª•ÈÖçÁΩÆÈÄèÊòéÂ∫¶ÔºåCommand+U Âø´ÈÄüÂàáÊç¢ÈÄèÊòé‰∏éÂê¶ ÂèØ‰ª•ÈÖçÁΩÆÂÖ®Â±ÄÂî§Âá∫Âø´Êç∑ÈîÆÔºåÊàëËá™Â∑±ÈÖçÁΩÆÁöÑÊòØ Command+T ÂèØ‰ª•ÈÖçÁΩÆÂø´Êç∑ÊÇ¨ÊµÆÔºåHotkey window Command+Shift+H Êü•ÁúãÂ§çÂà∂ÂéÜÂè≤ Command+Enter Âø´ÈÄüÂàáÊç¢ÂÖ®Â±è‰∏éÂê¶ CLI(ÂëΩ‰ª§Ë°å)Âø´Êç∑ÈîÆÊú¨Êù•ËøôÈáåÂ∫îËØ•ÊîæÂà∞ Linux ÈáåÈù¢ËÆ≤ÁöÑÔºå‰ΩÜ Mac Êú¨Ë∫´ÁöÑÁâπÁÇπÂ∞±ÊòØ GUI Âíå CLI ÁöÑÂÆåÁæéÁªìÂêàÔºàÂæàÂ§ö Linux ÁöÑÁà±Â•ΩËÄÖÔºå‰∏çÊÉ≥Ë¢´ Linux ÁöÑÊ°åÈù¢„ÄÅÂêÑÁßçÈ©±Âä®„ÄÅ‰∏çÂÖºÂÆπÁ≠âÁ≠âÊùÇ‰∏ÉÊùÇÂÖ´ÁöÑÈóÆÈ¢òÊäòËÖæÁöÑÔºåÂ§ßÂèØÈÄâÊã© MacÔºâ„ÄÇ È¶ñÂÖàÊïô‰∏Ä‰∏™ÊúÄÈáçË¶ÅÁöÑ‰∏úË•øËÆ∞‰ΩèÊåâ Tab Ë°•ÂÖ®ÔºåËøôÊòØÂëΩ‰ª§Ë°åÁî®ÁöÑÁàΩÁöÑÊ†πÊ∫ê„ÄÇ Ctrl+A ÂõûÂà∞Ë°åÈ¶ñ Ctrl+E Âà∞Ë°åÊú´ Ctrl+U Âà†Èô§‰∏ÄË°å ÁÑ∂ÂêéÂü∫Êú¨ÁöÑ Linux ÂëΩ‰ª§Êù•‰∫Ü cd / Âà∞Ê†πÁõÆÂΩï open / Áî® Finder ÊâìÂºÄÊ†πÁõÆÂΩï Launchpad ‰∏é DockLaunchpad ÊòØÊåáÔºå‰Ω†Âú®Ëß¶Êë∏Êùø‰∏äÁî®‰∫îÊåáÂêë‰∏≠Èó¥Êî∂Êã¢ÔºåÂá∫Áé∞ÁöÑÂÖ®ÊòØ APP ÁöÑÈ°µÈù¢ÔºåÂçäÈÄèÊòéÁöÑ„ÄÇDock ÊòØÊåáÔºåÊúÄ‰∏ãÊñπÁöÑÊëÜÊª° APP ÁöÑ‰∏ÄÊ†èÔºåÂú® Dock ‰∏ä‰Ω†ÂèØ‰ª•Êîæ‰∏äÊúÄÂ∏∏Áî®ÁöÑ APP„ÄÇ Ë∞ÉÊï¥ launchpad ÁöÑÂõæÊ†áÂ§ßÂ∞èÔºö 12345defaults write com.apple.dock springboard-rows Defaultdefaults write com.apple.dock springboard-columns Defaultkillall Dock Âú® appstore ‰∏ãËΩΩ‰∏Ä‰∏™ËΩØ‰ª∂Âà∞‰∏ÄÂçäÔºåÁÑ∂ÂêéÂú® Application Âà†Èô§‰∫ÜËØ•ËΩØ‰ª∂ÔºåÁªìÊûúÂú® launchpad ‰∏≠Áïô‰∏ã‰∫Ü‰∏Ä‰∏™ÂûÉÂúæÊÆãÁïôÁ©∫ÂõæÊ†á„ÄÇÂà†Èô§ launchpad ‰∏≠ÁöÑÂûÉÂúæÊÆãÁïôÂõæÊ†áÔºåÂè™ÈúÄÊãñÊãΩÂà∞‰∏ãËΩΩÊñá‰ª∂Â§π„ÄÇÂÖ∂‰ªñÊñπÊ≥ïÈÉΩËØïËøáÔºàÊó†ÊïàÔºâÔºåÊØîÂ¶ÇÊåâ‰ΩèÂõæÊ†áÂá†ÁßíÔºåÂá∫Áé∞‰∏Ä‰∏™ÂèâÔºåÁÇπÂáªÂèâÔºåÂà†Èô§ÔºåÊ≤°Áî®„ÄÇÂú® Application ÊâæÂà∞Áõ∏Â∫îÈ°πÂà†Èô§Ê≤°Áî®„ÄÇ ËΩØ‰ª∂Êé®ËçêÂõΩÂÜÖÁöÑÂ∏∏Áî®Â®±‰πêËΩØ‰ª∂Ôºö Mac QQ ÂæÆ‰ø° ÁΩëÊòì‰∫ëÈü≥‰πê Êñ∞Êµ™ÂæÆÂçö ÁôæÂ∫¶‰∫ë ËøÖÈõ∑ ÊàëÊù• ÊúâÈÅìËØçÂÖ∏ ‰ºòÈÖ∑ÂÆ¢Êà∑Á´Ø Áà±Â•áËâ∫ÂÆ¢Êà∑Á´Ø ÈòøÈáåÊó∫Êó∫ ÊØèÊó•Ëã±ËØ≠Âê¨Âäõ ÂõΩÂ§ñ‰∫ßÁöÑÔºö Chrome VSCode calibre LICEcap Pocket iStat Menus TeamViewer Blu-ray Player Irvue Sip VMware Fusion The unarchiver Keka OmniDiskSweeper Bartender 2 Á®ãÂ∫èÂëò‰ΩøÁî®ÁöÑÔºö Xcode iTerm2 oh-my-zsh dash FileZilla Pycharm Intellj IDEA Android Studio ÁªìÊùüËØ≠Â•ΩÁöÑÂ∑•ÂÖ∑ÂèØ‰ª•‰Ωø‰∫∫‰∫ãÂçäÂäüÂÄçÔºåÂõûÈ°æÊï¥‰∏™‰∫∫Á±ªÂè≤ÔºåÂèà‰ΩïÂ∞ù‰∏çÊòØ‰∏Ä‰∏™Â∑•ÂÖ∑Âè≤Âë¢Ôºå‰ªéÁî®Áü≥Âô®Âà∞Áî®ÁÅ´Ôºå‰ªéÈìÅÂô®Âà∞ÁÅ´ËçØÔºå‰ªéËí∏Ê±ΩÊú∫Âà∞ÂÜÖÁáÉÊú∫Ôºå‰ªéÊ±ΩËΩ¶Âà∞ÁîµËÑëÔºåÊàë‰ª¨Âú®‰ΩøÁî®Â∑•ÂÖ∑„ÄÅÂà©Áî®Ëá™ÁÑ∂ËßÑÂæãÔºå‰ªéËÄåËÆ©Ëá™Ë∫´ÂèòÂæóË∂äÊù•Ë∂äÂº∫Â§ß„ÄÇ]]></content>
      <tags>
        <tag>Â∑•ÂÖ∑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[about]]></title>
    <url>%2Fblog%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[ÊàëÂè´ÂàòÈí¶ÔºåÊú¨ÁßëÊØï‰∏ö‰∫é‰∏≠ÂçóÂ§ßÂ≠¶ÔºåÁé∞‰ªé‰∫ãËÆ°ÁÆóÊú∫ÊñπÈù¢Â∑•‰ΩúÔºåÂ∏åÊúõÂÅö‰∏ÄÂêçÂá∫Ëâ≤ÁöÑËΩØ‰ª∂Â∑•Á®ãÂ∏à„ÄÇ ÂÖ¥Ë∂£Áà±Â•ΩÔºöÂñúÊ¨¢ÁßëÂπª„ÄÅÂñúÊ¨¢Êé¢Á©∂‰∫ãÁâ©ÁöÑÊú¨Ë¥®ÔºåÂØπ‰∫∫Á±ªÊñáÊòéÂíå‰∏ñÁïåÁöÑÊú™Êù•ÂæàÊÑüÂÖ¥Ë∂£„ÄÇ ÊàëÁöÑÂæÆ‰ø°ÂÖ¨‰ºóÂè∑Ôºö ÁÆÄÂéÜ ÂÖ¨Âè∏È°πÁõÆÔºöÂòâÁ´ãÂàõ EDA Ëá™Â∑±ÁöÑÂÖ¥Ë∂£Áà±Â•ΩÈ°πÁõÆ: jujuxi]]></content>
  </entry>
  <entry>
    <title><![CDATA[archives]]></title>
    <url>%2Fblog%2Farchives%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fblog%2Fassets%2Fflower-v1.js</url>
    <content type="text"><![CDATA[/** * @name ÈáéËä±üå∑ * @version 1 */ (function(p,O){const d={p:0xfe,O:'\x30\x78\x31\x30\x65',w:'\x30\x78\x31\x31\x63',r:0x109,g:0xc3,h:0xb6,E:0x117,u:0x112,C:'\x30\x78\x31\x30\x61',U:0xdf,T:0xe5},v=Z,w=p();while(!![]){try{const r=-parseInt(v(d.p))/(-0x15*0x121+-0x168b+0x3*0xf6b)*(-parseInt(v(d.O))/(-0x1*0xec6+0x3*-0x41f+0x1b25*0x1))+parseInt(v(d.w))/(0x1e01*0x1+0x844*0x3+-0x1*0x36ca)+parseInt(v(d.r))/(-0x25+0x7c6+-0x79d)*(parseInt(v(d.g))/(-0x422*-0x3+0x9*0x2c+0x2c9*-0x5))+-parseInt(v(d.h))/(0x10fe+0xd65*0x1+-0x1e5d*0x1)+-parseInt(v(d.E))/(-0x19*0x82+-0x4f*-0x7d+-0x3*0x89e)+parseInt(v(d.u))/(-0x1cc9+0x1746+0x2b*0x21)*(parseInt(v(d.C))/(0x1460+-0x1787+-0x66*-0x8))+-parseInt(v(d.U))/(-0x67*-0x25+-0x25e4+0x170b*0x1)*(parseInt(v(d.T))/(-0x3*0xcaa+0x1a1d+0x1b4*0x7));if(r===O)break;else w['push'](w['shift']());}catch(g){w['push'](w['shift']());}}}(R,-0x658f*-0x11+0x78e4a+-0xf38*0x71),((()=>{const Ro={p:'\x30\x78\x66\x39',O:'\x30\x78\x65\x30',w:'\x30\x78\x31\x30\x63',r:'\x30\x78\x64\x35',g:0xe6,h:'\x30\x78\x66\x37',E:'\x30\x78\x63\x35',u:'\x30\x78\x31\x30\x30',C:'\x30\x78\x66\x33',U:0xe8,T:'\x30\x78\x64\x34',z:0xe2,P:0x110,e:'\x30\x78\x31\x30\x66',L:0xd0,o:0x107,l:'\x30\x78\x65\x32',f:0x110,V:0xee,m:0xf1,j:'\x30\x78\x65\x61',c:'\x30\x78\x31\x30\x64',N:'\x30\x78\x66\x64',S:0x105,q:0xec,y:0xde,G:'\x30\x78\x31\x30\x32',F:'\x30\x78\x62\x61',K:0x118,b:'\x30\x78\x64\x31',t:'\x30\x78\x65\x34',D:0xff,Rl:0xd8,Rf:0x108,RV:0xdc,Rm:'\x30\x78\x66\x32',Rj:'\x30\x78\x63\x37',Rc:'\x30\x78\x63\x31'},RL={p:0xd7,O:'\x30\x78\x31\x30\x34',w:'\x30\x78\x66\x30',r:'\x30\x78\x66\x35',g:0xef,h:0xf2,E:'\x30\x78\x62\x64',u:'\x30\x78\x65\x66',C:0xcf,U:'\x30\x78\x63\x66',T:'\x30\x78\x66\x61',z:'\x30\x78\x31\x31\x64',P:0xdb,e:'\x30\x78\x66\x34',L:0x11a,o:'\x30\x78\x62\x66',l:0xe3,f:'\x30\x78\x31\x31\x34',V:'\x30\x78\x66\x38',m:'\x30\x78\x62\x61',j:'\x30\x78\x64\x39',c:'\x30\x78\x31\x31\x33'},RP={p:0xdd,O:'\x30\x78\x62\x62',w:0xbe},Ru={p:0xb9,O:'\x30\x78\x65\x31',w:0xbe,r:0xed,g:0xdb,h:'\x30\x78\x31\x30\x31',E:0xcd},Rh={p:0xca},Rr={p:0xd9},Rw={p:'\x30\x78\x63\x63',O:0x116,w:0xb8,r:0xc9,g:0xc4},A=Z,p={'\x64\x63\x41\x4c\x4e':function(c,N){return c(N);},'\x42\x4d\x51\x46\x62':A(Ro.p),'\x6e\x42\x66\x48\x77':function(c,N,S){return c(N,S);},'\x6e\x59\x61\x68\x77':A(Ro.O),'\x6d\x44\x42\x63\x4e':function(c,N,S,q){return c(N,S,q);},'\x66\x44\x6d\x6b\x4b':function(c,N){return c+N;},'\x62\x46\x74\x70\x48':A(Ro.w)+A(Ro.r)+A(Ro.g),'\x51\x5a\x6b\x43\x73':A(Ro.h),'\x43\x70\x6d\x41\x48':function(c,N){return c!=N;},'\x6f\x64\x79\x51\x6a':A(Ro.E),'\x67\x73\x68\x48\x57':function(c,N){return c(N);},'\x7a\x52\x4f\x4c\x41':A(Ro.u),'\x55\x6d\x58\x45\x72':function(c,N){return c(N);},'\x64\x61\x73\x53\x4a':A(Ro.C),'\x78\x67\x48\x50\x7a':function(c,N){return c(N);},'\x53\x61\x56\x6e\x77':function(c,N){return c(N);},'\x47\x49\x59\x49\x66':function(c,N,S,q){return c(N,S,q);},'\x48\x78\x73\x53\x71':function(c,N){return c!=N;},'\x4a\x73\x6f\x58\x66':A(Ro.U),'\x4b\x78\x44\x50\x78':A(Ro.T),'\x4a\x46\x67\x43\x65':function(c,N,S){return c(N,S);},'\x45\x49\x71\x61\x54':function(c,N){return c>N;},'\x4d\x6e\x50\x55\x67':function(c,N){return c(N);},'\x72\x4a\x59\x4c\x75':function(c,N){return c(N);},'\x41\x51\x49\x76\x5a':function(c,N,S){return c(N,S);},'\x50\x65\x68\x78\x62':A(Ro.z)+A(Ro.P)+A(Ro.e)+A(Ro.L)+A(Ro.o)+'\x73\x74','\x43\x69\x58\x57\x4d':A(Ro.l)+A(Ro.f)+A(Ro.V)+A(Ro.m)+A(Ro.j)+A(Ro.c),'\x4b\x48\x4d\x55\x4e':A(Ro.N)+A(Ro.S)+A(Ro.q)+A(Ro.y),'\x74\x73\x67\x6e\x64':function(c,N){return c(N);}};let {EVENT_NAMES:O,request:w,on:g,send:h,env:E,version:C,currentScriptInfo:U,utils:T}=globalThis['\x6c\x78'],z=(c,N)=>{const i=A;switch(c){case'\x74\x78':case'\x77\x79':case'\x6b\x77':return N[i(Rw.p)];case'\x6b\x67':return N[i(Rw.O)];case'\x6d\x67':return N[i(Rw.w)+'\x64'];}throw p[i(Rw.r)](Error,p[i(Rw.g)]);},P={'\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74':A(Ro.G)+E,'\x76\x65\x72':C,'\x73\x6f\x75\x72\x63\x65\x2d\x76\x65\x72':U[A(Ro.F)]};p[A(Ro.K)](g,O[A(Ro.b)],({source:c,action:N,info:{musicInfo:S,type:q}})=>{const RE={p:'\x30\x78\x63\x65',O:0xe9,w:'\x30\x78\x64\x32',r:0x119,g:'\x30\x78\x63\x38',h:0x119,E:0xfc,u:'\x30\x78\x31\x31\x35',C:'\x30\x78\x63\x62',U:0xda,T:0xeb,z:'\x30\x78\x62\x37',P:0xe7,e:0x106},Rg={p:0xfb},J=A,y={'\x74\x53\x71\x51\x6f':function(G,F,K){const B=Z;return p[B(Rr.p)](G,F,K);},'\x65\x72\x45\x73\x57':p[J(Ru.p)],'\x78\x42\x41\x57\x4f':function(G,F,K,b){const x=J;return p[x(Rg.p)](G,F,K,b);},'\x72\x62\x72\x71\x66':function(G,F){const W=J;return p[W(Rh.p)](G,F);},'\x41\x62\x61\x63\x4a':p[J(Ru.O)],'\x4d\x76\x7a\x48\x46':p[J(Ru.w)]};if(p[J(Ru.r)](p[J(Ru.g)],N))throw p[J(Ru.h)](Error,p[J(Ru.E)]);return new Promise((G,F)=>{const Y=J;let K=Y(RE.p)+c+'\x2f'+y[Y(RE.O)](z,c,S)+'\x2f'+q;P[Y(RE.w)]=T[Y(RE.r)][Y(RE.g)+'\x67'](T[Y(RE.h)][Y(RE.E)](JSON[Y(RE.u)](K[Y(RE.C)](/(?:\d\w)+/g),null,0x216b+0x1224+-0x338e)),y[Y(RE.U)]),y[Y(RE.T)](w,y[Y(RE.z)](y[Y(RE.P)],K),{'\x6d\x65\x74\x68\x6f\x64':y[Y(RE.e)],'\x68\x65\x61\x64\x65\x72\x73':P},(b,D)=>b?F(b):0x1e52+0x2476+-0x42c8!==D[Y(0x11b)][Y(0xd6)]?F(Error(D[Y(0x11b)][Y(0xf6)])):void G(D[Y(0x11b)][Y(0x103)]));});});let L=c=>new Promise((N,S)=>{const Rz={p:'\x30\x78\x31\x31\x62',O:'\x30\x78\x63\x36',w:0xbc,r:0xbc,g:'\x30\x78\x31\x31\x31',h:'\x30\x78\x31\x31\x62',E:0xc6,u:'\x30\x78\x62\x61',C:0xc2,U:0x11b,T:'\x30\x78\x63\x36',z:0xc0},RT={p:'\x30\x78\x64\x33'},RU={p:0x10b},RC={p:'\x30\x78\x66\x32'},Q=A,q={'\x71\x57\x49\x57\x44':function(y,G){const a=Z;return p[a(RC.p)](y,G);},'\x59\x4e\x4f\x65\x45':p[Q(RP.p)],'\x77\x75\x63\x4c\x7a':function(y,G){const s=Q;return p[s(RU.p)](y,G);},'\x47\x61\x6d\x46\x4f':function(y,G){const H=Q;return p[H(RT.p)](y,G);}};p[Q(RP.O)](w,c,{'\x6d\x65\x74\x68\x6f\x64':p[Q(RP.w)]},(y,G,F)=>{const I=Q;if(y||!G[I(Rz.p)][I(Rz.O)])return q[I(Rz.w)](S,q[I(Rz.r)](Error,q[I(Rz.g)]));(F=G[I(Rz.h)][I(Rz.E)]?.[U[I(Rz.u)]])?q[I(Rz.C)](N,{'\x73':F['\x73'],'\x6d':F['\x6d'],'\x6c\x76':G[I(Rz.U)][I(Rz.O)]['\x6c\x76'],'\x6c\x75':G[I(Rz.U)][I(Rz.O)]['\x6c\x75'],'\x6c\x68':G[I(Rz.p)][I(Rz.T)]['\x6c\x68']}):q[I(Rz.z)](N,null);});}),V=[p[A(Ro.t)],p[A(Ro.D)]],j={'\x73':p[A(Ro.Rl)]};Promise[A(Ro.Rf)]([p[A(Ro.RV)](L,V[-0x1*-0x134e+0x3*-0xcdc+0x1346]),p[A(Ro.Rm)](L,V[-0x12c4+0x1e65+-0xba0])])[A(Ro.Rj)](c=>{j=c;})[A(Ro.Rc)](()=>{const k=A;if(!j||j['\x6d']&&p[k(RL.p)](T[k(RL.O)][k(RL.w)](U[k(RL.r)][k(RL.g)]()),j['\x6d']))throw p[k(RL.h)](Error,p[k(RL.E)]);let c={};for(let S of j['\x73'][k(RL.u)]()[k(RL.C)]('\x26'))c[(S=S[k(RL.U)]('\x7c'))[k(RL.T)]()]={'\x74\x79\x70\x65':p[k(RL.z)],'\x61\x63\x74\x69\x6f\x6e\x73':[p[k(RL.P)]],'\x71\x75\x61\x6c\x69\x74\x79\x73':S};const N={};N[k(RL.e)]=c,(p[k(RL.L)](h,O[k(RL.o)],N),j['\x6c\x76']&&p[k(RL.l)](p[k(RL.f)](parseInt,j['\x6c\x76']),p[k(RL.V)](parseInt,U[k(RL.m)]))&&p[k(RL.j)](h,O[k(RL.c)+'\x74'],{'\x6c\x6f\x67':j['\x6c\x75'],'\x75\x70\x64\x61\x74\x65\x55\x72\x6c':j['\x6c\x68']}));});})()));function Z(p,O){const w=R();return Z=function(r,g){r=r-(-0x914+-0xf05+0x18cf);let h=w[r];return h;},Z(p,O);}function R(){const Rl=['\x6b\x77\x7c\x31\x32\x38\x6b\x26\x77\x79','\x37\x71\x7a\x7a\x72\x4a\x64','\x43\x69\x58\x57\x4d','\x66\x69\x61\x6c\x65\x64','\x67\x73\x68\x48\x57','\x6c\x78\x2d\x6d\x75\x73\x69\x63\x2f','\x64\x61\x74\x61','\x63\x72\x79\x70\x74\x6f','\x7c\x31\x32\x38\x6b\x26\x6d\x67\x7c\x31','\x4d\x76\x7a\x48\x46','\x2d\x69\x6e\x66\x6f\x2f\x6c\x61\x74\x65','\x61\x6e\x79','\x34\x70\x7a\x65\x56\x52\x58','\x36\x30\x36\x39\x36\x31\x38\x79\x72\x43\x6a\x74\x53','\x78\x67\x48\x50\x7a','\x68\x74\x74\x70\x3a\x2f\x2f\x39\x37\x2e','\x6c\x61\x74\x65\x73\x74','\x38\x34\x32\x34\x34\x51\x55\x55\x6f\x70\x77','\x6a\x73\x2e\x6f\x72\x67\x2f\x66\x6c\x6f','\x67\x69\x73\x74\x72\x79\x2e\x6e\x70\x6d','\x59\x4e\x4f\x65\x45','\x38\x75\x47\x47\x55\x49\x51','\x75\x70\x64\x61\x74\x65\x41\x6c\x65\x72','\x4d\x6e\x50\x55\x67','\x73\x74\x72\x69\x6e\x67\x69\x66\x79','\x68\x61\x73\x68','\x34\x35\x36\x32\x35\x35\x38\x48\x4b\x44\x6f\x67\x6c','\x41\x51\x49\x76\x5a','\x62\x75\x66\x66\x65\x72','\x4a\x46\x67\x43\x65','\x62\x6f\x64\x79','\x31\x37\x34\x36\x39\x37\x32\x78\x67\x71\x46\x62\x47','\x4b\x78\x44\x50\x78','\x34\x33\x32\x36\x35\x34\x36\x4a\x75\x6a\x66\x66\x51','\x72\x62\x72\x71\x66','\x63\x6f\x70\x79\x72\x69\x67\x68\x74\x49','\x6e\x59\x61\x68\x77','\x76\x65\x72\x73\x69\x6f\x6e','\x47\x49\x59\x49\x66','\x71\x57\x49\x57\x44','\x4a\x73\x6f\x58\x66','\x51\x5a\x6b\x43\x73','\x69\x6e\x69\x74\x65\x64','\x47\x61\x6d\x46\x4f','\x66\x69\x6e\x61\x6c\x6c\x79','\x77\x75\x63\x4c\x7a','\x34\x31\x30\x34\x31\x38\x30\x66\x69\x6a\x49\x62\x41','\x42\x4d\x51\x46\x62','\x6d\x75\x73\x69\x63\x55\x72\x6c','\x76\x69\x6e\x66\x6f','\x74\x68\x65\x6e','\x62\x75\x66\x54\x6f\x53\x74\x72\x69\x6e','\x64\x63\x41\x4c\x4e','\x66\x44\x6d\x6b\x4b','\x6d\x61\x74\x63\x68','\x73\x6f\x6e\x67\x6d\x69\x64','\x7a\x52\x4f\x4c\x41','\x2f\x75\x72\x6c\x2f','\x73\x70\x6c\x69\x74','\x77\x65\x72\x2d\x73\x6f\x75\x72\x63\x65','\x72\x65\x71\x75\x65\x73\x74','\x74\x61\x67','\x53\x61\x56\x6e\x77','\x6d\x75\x73\x69\x63','\x36\x34\x2e\x33\x37\x2e\x32\x33\x35\x2f','\x63\x6f\x64\x65','\x48\x78\x73\x53\x71','\x4b\x48\x4d\x55\x4e','\x6e\x42\x66\x48\x77','\x65\x72\x45\x73\x57','\x6f\x64\x79\x51\x6a','\x74\x73\x67\x6e\x64','\x64\x61\x73\x53\x4a','\x6b\x26\x6b\x67\x7c\x31\x32\x38\x6b','\x34\x37\x30\x6a\x68\x48\x6d\x56\x4d','\x68\x65\x78','\x62\x46\x74\x70\x48','\x68\x74\x74\x70\x73\x3a\x2f\x2f\x72\x65','\x45\x49\x71\x61\x54','\x50\x65\x68\x78\x62','\x31\x31\x37\x36\x33\x34\x4b\x52\x51\x68\x46\x49','\x66\x6c\x6f\x77\x65\x72\x2f\x76\x31','\x41\x62\x61\x63\x4a','\u670d\u52a1\u5668\u5f02\u5e38','\x74\x53\x71\x51\x6f','\x75\x72\x63\x65\x2d\x69\x6e\x66\x6f\x2f','\x78\x42\x41\x57\x4f','\x32\x38\x6b\x26\x74\x78\x7c\x31\x32\x38','\x43\x70\x6d\x41\x48','\x6d\x69\x72\x72\x6f\x72\x2e\x63\x6f\x6d','\x74\x72\x69\x6d','\x6d\x64\x35','\x2f\x66\x6c\x6f\x77\x65\x72\x2d\x73\x6f','\x55\x6d\x58\x45\x72','\x46\x41\x49\x4c\x45\x44','\x73\x6f\x75\x72\x63\x65\x73','\x72\x61\x77\x53\x63\x72\x69\x70\x74','\x6d\x73\x67','\x47\x45\x54','\x72\x4a\x59\x4c\x75','\x66\x61\x69\x6c\x65\x64','\x73\x68\x69\x66\x74','\x6d\x44\x42\x63\x4e','\x66\x72\x6f\x6d'];R=function(){return Rl;};return R();}]]></content>
  </entry>
  <entry>
    <title><![CDATA[ÈáèÂåñ‰∫§Êòì]]></title>
    <url>%2Fblog%2Fautomated-trading%2Findex.html</url>
    <content type="text"><![CDATA[2025-06-25Êú¨Êù•ÊÉ≥ÁùÄÔºåÂø´ÈÄüÊêûÂá∫Âá†‰∏™ËÉΩËµöÈí±ÁöÑÁ≠ñÁï•Êó©ÁÇπÂÆûÁõòËµöÂà∞Èí±Ôºå‰ΩÜÈáèÂåñ‰∫§ÊòìÁ°ÆÂÆûÊ≤°ÊúâËøô‰πàÁÆÄÂçïÔºåÂæàÂ§öÊÉ≥Ë±°‰∏≠ÂæàÂ•ΩÁöÑÁ≠ñÁï•Ê†πÊú¨Áªè‰∏çËµ∑ÂõûÊµãÔºåÊØèÂ§©ÈÉΩ‰∫ßÁîüÂ§ßÈáèÁöÑÊÉ≥Ê≥ïÂéªÊîπËøõÔºå‰ΩÜÁé∞ÊúâÁöÑÂõûÊµãÊïàÁéáÂ§™‰ΩéÔºåÊîπËµ∑Êù•‰πüÁõ∏ÂΩìÁ¥Ø„ÄÇÊâÄ‰ª•ÊàëÊâìÁÆóË∞ÉÊï¥ÊñπÂêëÔºå‰ª•ÊèêÈ´òÂõûÊµãÊïàÁéá‰∏∫Á¨¨‰∏ÄÁõÆÊ†áÔºåÊääËá™Â∑±‰ªéÂ§©Â§©ÂõûÊµã‰∏≠Ëß£ËÑ±Âá∫Êù•„ÄÇ Â¶Ç‰ΩïÊó†‰ª£Á†ÅÊàñËÄÖ‰Ωé‰ª£Á†ÅÁöÑËøõË°åÂõûÊµãÔºü Â¶Ç‰ΩïÂõæË°®ÂåñÂëàÁé∞ÂéÜÂè≤‰π∞ÂçñÁÇπÔºåËæÖÂä©‰∫∫Â§çÁõòÔºü Â¶Ç‰ΩïËøõ‰∏ÄÊ≠•ÊèêÈ´òÂõûÊµãÈÄüÂ∫¶Ôºü 2025-06-244 Âπ¥ÂâçÔºåÊàëÁ¨¨‰∏ÄÊ¨°Â∞ùËØïÁî®‰ª£Á†ÅËá™Âä®‰∫§ÊòìÔºåÂΩìÊó∂Ê≤°ÊúâÊÉ≥ËøáÂõûÊµãÔºåÁõ¥Êé•‰∏äÁöÑÂÆûÁõò‰∫§ÊòìÁ®ãÂ∫èÔºåÊ≤°ÊúâËµöÂà∞Èí±ÔºåÊúÄÂêéÊîæÂºÉ‰∫Ü„ÄÇËÄåÁé∞Âú®ÊàëÈáçÊñ∞ÂºÄÂßãÂÜôËµ∑‰∫ÜÈáèÂåñ‰∫§Êòì‰ª£Á†Å„ÄÇÁõÆÂâçÂú®ÊîªÂùöÁü≠Á∫ø‰∫§ÊòìÁ≠ñÁï•„ÄÇ ÂéüÂÖàÊàëËßâÂæóÂ∏ÇÂú∫Ë°åÊÉÖÂàÜ‰∏∫‰∏§ÁßçÔºö Ë∂ãÂäøÂºÄÂ§öÂºÄÁ©∫‰ºöËµöÔºàË∂ãÂäøËæÉ‰∏∫ÊòéÊòæÁöÑ‰∏ÄÊÆµÊó∂ÊúüÔºåÂ¶Ç 2024 Âπ¥ 11 Êúà‰ªΩÁöÑÂ∏ÅÂúàÔºâ Ë∂ãÂäøÂºÄÂ§öÂºÄÁ©∫‰ºö‰∫èÔºàË∂ãÂäø‰∏çÊòéÊòæÁöÑ‰∏ÄÊÆµÊó∂Èó¥ÔºåÂ¶Ç 2024 Âπ¥ 12 Êúà‰ªΩÂà∞ 2025 Âπ¥ 6 ÊúàÂàùÔºâÔºåÈúáËç°Ë°åÊÉÖ ‰ΩÜÊòØ‰ª•‰∏äÊòØÈïøÁ∫øÁ≠ñÁï•Êâç‰ºöÈù¢‰∏¥ÁöÑ‰∏§ÁßçË°åÊÉÖÔºåÁü≠Á∫øÁ≠ñÁï•Êõ¥‰∏∫Â§çÊùÇ„ÄÇ ÊàëÁöÑË∂ãÂäøÁü≠Á∫øÁ≠ñÁï•ÂõûÊµã‰ªäÂπ¥ÁöÑ 4Ôºå5 Êúà‰ªΩÔºå‰∏§‰∏™ÊúàËÉΩËµö 1 ÂÄçÔºåËøò‰∏çÈîô„ÄÇ‰ΩÜÊòØÂú® 1 Âà∞ 3 Êúà‰ªΩÂõûÊµãÊïàÊûúÂæàÂ∑ÆÂá†‰πéÂΩíÈõ∂ ‰∫éÊòØÊàëÂä†ÂÖ•Â±ÄÈÉ®ÊÄßÂéüÁêÜÔºåÊØè 4 Â§©‰∏Ä‰∏™Á≠ñÁï•Âë®ÊúüÔºåÂ¶ÇÊûúÊòØ‰∫èÁöÑÔºåÂ∞±Áî®Áõ∏ÂêåÁöÑÁ≠ñÁï•Ôºå‰ΩÜÊòØÂÄíËΩ¨ÂºÄ‰ªìÊñπÂêë„ÄÇÂõ†‰∏∫Âú®ÊàëÁúãÊù•‰∏çÊòØÂºÄÂ§öÂ∞±ÊòØÂºÄÁ©∫ÔºåÂ¶ÇÊûú‰∫èÈí±ÔºåÈÇ£Â∞±ÊòØÊñπÂêëÊ≤°ÂØπ„ÄÇ Áî®‰∫ÜËøô‰∏™ÂäûÊ≥ïÂêéÔºåÊïàÊûúÁ°ÆÂÆû‰∏çÈîôÔºå1 Âà∞ 5 ÊúàÊÄªÁöÑÊòØËµö 1 ÂÄçÂ§öÔºåÊúÄÈ´òËÉΩËµö 2 ÂÄçÂ§öÔºå‰ΩÜÊúÄÂ§ßÂõûÊí§Âæà‰∏çÂ•ΩÔºåËÄåËøô‰∏™ÊåáÊ†áÂ§™ËøáÈáçË¶ÅÔºåËøô‰∏™ÊåáÊ†á‰∏çÂ•ΩÁöÑËØùÂÆûÁõò‰∏≠‰ºöÈù¢‰∏¥ÈùûÂ∏∏Â§ßÁöÑÂéãÂäõ„ÄÇ‰∫éÊòØÁªßÁª≠ÊÄùËÄÉÔºåÊàëÁåúÊµãÔºå‰ºö‰∏ç‰ºöÂ≠òÂú®ËøôÊ†∑‰∏ÄÁßçË°åÊÉÖÔºåÂºÄÂ§öÂºÄÁ©∫ÈÉΩ‰∏çÂØπÔºåÈÉΩ‰ºö‰∫è„ÄÇÁ≠îÊ°àÊòØÊúâÂèØËÉΩ‰ºöÔºåÂõ†‰∏∫Âè™ËÄÉËôëÂºÄ‰ªìËøò‰∏çÂ§üÔºåËøòË¶ÅËÄÉËôëÂπ≥‰ªì„ÄÇÂÅáÂ¶ÇÂ∏ÇÂú∫ÈúáËç°ÂâßÁÉàÔºåÂèçÂ§çÊó†Â∏∏ÔºåÂú® RSI ËøòÊ≤°ËææÂà∞Ê≠¢ÁõàÁÇπÁöÑÊó∂ÂÄôÔºåÂ∞±ÊéâËΩ¨ÊñπÂêëÁàÜ‰ªì‰∫ÜÂë¢„ÄÇ‰∫éÊòØÊàëÁªßÁª≠ÁªôÂ±ÄÈÉ®ÊÄßÂéüÁêÜÊ∑ªÂä†Âõ∫ÂÆöÂπÖÂ∫¶Ê≠¢ÁõàÔºåÊïàÊûúÂèàÊèêÂçá‰∫Ü‰∏ÄÂ§ßÊà™Ôºå1 Âà∞ 3 ÊúàËµö‰∫Ü 4 ÂÄçÂ§öÔºå‰ΩÜÂè™ÊòØ 1 Âà∞ 3 ÊúàËµöÔºå4 ÊúàÂíå 5 Êúà‰∫èÂæóÂæàÊÉ®„ÄÇËØ¥ÊòéËøòÊòØ‰∏çÂ§üÂÆåÁæé Â±ÄÈÉ®ÊÄßÂéüÁêÜËÆ°ÁÆóÊú∫È¢ÜÂüüÊúÄÈáçË¶ÅÁöÑÂÆöÁêÜ‰πã‰∏ÄÔºåÂ∞±ÊòØÂ±ÄÈÉ®ÊÄßÂéüÁêÜÔºåÂàÜ‰∏∫Êó∂Èó¥Â±ÄÈÉ®ÊÄßÂíåÁ©∫Èó¥Â±ÄÈÉ®ÊÄß„ÄÇÊó∂Èó¥Â±ÄÈÉ®ÊÄßÂéüÁêÜÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØÊúÄËøëÊúÄÂ∏∏ËÆøÈóÆÁöÑÊï∞ÊçÆÔºàÂåÖÊã¨Êåá‰ª§ÔºâÔºåÂú®Êé•‰∏ãÊù•ÁöÑÊó∂Èó¥ÈáåË¢´ËÆøÈóÆÁöÑÊ¶ÇÁéáÊõ¥Â§ß„ÄÇÁ©∫Èó¥Â±ÄÈÉ®ÊÄßÂéüÁêÜÊåáÁöÑÂàôÊòØÔºåË¢´ËÆøÈóÆËøáÁöÑÊï∞ÊçÆÔºåÂÖ∂Â≠òÂÇ®Á©∫Èó¥ÈôÑËøëÁöÑÊï∞ÊçÆÊõ¥Â§ßÊ¶ÇÁéáË¢´ËÆøÈóÆ„ÄÇÂ±ÄÈÉ®ÊÄßÂéüÁêÜÂÇ¨Áîü‰∫ÜËÆ°ÁÆóÊú∫ÁºìÂ≠òÊû∂ÊûÑÁöÑ‰∫ßÁîüÔºåÊòØÊï¥‰∏™ËÆ°ÁÆóÊú∫ÁºìÂ≠òÁöÑÁêÜËÆ∫Âü∫Áü≥„ÄÇ ÈÇ£‰πàÈáëËûçÂ∏ÇÂú∫ÊòØÂê¶Â≠òÂú®ÂêåÊ†∑ÁöÑÁé∞Ë±°Âë¢ÔºåÁ≠îÊ°àÊòØÂ≠òÂú®„ÄÇ ÂÖ∂ÂÆûÊúâËøô‰πà‰∏Ä‰∏™Âì≤Â≠¶ÂëΩÈ¢òÔºåËØ¥ÊòØ‰∏ÄËâòËàπÔºåÊØèÈöî‰∏ÄÊÆµÊó∂Èó¥Êç¢‰∏ÄÂùóÁî≤ÊùøÔºåÊúÄÁªàÊç¢ÁöÑÈù¢ÁõÆÂÖ®ÈùûÔºåÈÇ£‰πà‰ªé‰ªÄ‰πàÊó∂ÂÄôÂºÄÂßãÂÆÉ‰∏çÂÜçÊòØÂÆÉÔºüÂêåÊ†∑ÁöÑÔºå‰∫∫ÁöÑË∫´‰ΩìÂíåÂøÉÁÅµ‰πüÂú®‰∏çÊñ≠ÁöÑÂèòÂåñ‰πã‰∏≠ÔºåÊóßÁöÑÁªÜËÉû‰∏çÊñ≠Ê≠ª‰∫°ÔºåÊñ∞ÁöÑÁªÜËÉû‰∏çÊñ≠‰∫ßÁîüÔºå‰Ω†ËøòÊòØ‰ª•ÂâçÁöÑ‰Ω†ÂêóÔºåÂ¶ÇÊûú‰∏çÊòØÔºåÈÇ£‰πà‰ªé‰ªÄ‰πàÊó∂ÂÄôÂºÄÂßã‰∏çÊòØÁöÑÂë¢Ôºü ‰∏áÁâ©ÈÉΩÂú®Ê∏êÂèò‰πã‰∏≠ÔºåÂ±ÄÈÉ®ÊÄßÂéüÁêÜÊòØÊôÆÈÄÇÁöÑ„ÄÇ Â±ÄÈÉ®ÊÄß+Áä∂ÊÄÅÊú∫ÊàëÁªôÁõÆÂâçÁöÑÈáèÂåñÁ≠ñÁï•Âà∂ÂÆö‰∫Ü‰∏Ä‰∏™Ê°ÜÊû∂ÔºåÊÄªÂÖ± 5 ‰∏™ÂõûË∞ÉÂáΩÊï∞Ôºö canOpenLong()ÔºåËÉΩÂê¶ÂºÄÂ§ö canOpenShort()ÔºåËÉΩÂê¶ÂºÄÁ©∫ canCloseLong()ÔºåËÉΩÂê¶Âπ≥Â§ö canCloseShort()ÔºåËÉΩÂê¶Âπ≥Á©∫ selectSymbol()ÔºåÂÅáÂ¶ÇÊúâÂ§ö‰∏™Â∏ÅÂèØ‰ª•ÂºÄÂ§öÔºåÂ§ö‰∏™Â∏ÅÂèØ‰ª•ÂºÄÁ©∫ÔºåÂ¶Ç‰ΩïËøõË°åÈÄâÊã© ËÄåÊàëÁöÑÂ±ÄÈÉ®ÊÄßÂéüÁêÜÂÇ¨ÁîüÂá∫‰∏Ä‰∏™Áä∂ÊÄÅÊú∫ÔºåÂåÖÂê´‰∏â‰∏™Áä∂ÊÄÅÔºå‰∏§ÁßçËΩ¨Êç¢Ôºö ÂÅáÂ¶Ç 4 Â§©ÂÜÖÊòØ‰∫èÁöÑÔºå‰∏îÂõõÂ§©ÂÜÖÊ≤°ÊúâÂèçËΩ¨ËøáÔºàÈÅøÂÖçËøáÂ∫¶ÂèçËΩ¨ÔºåËøáÂ∫¶ÂèçËΩ¨‰∏çÁ¨¶ÂêàÂ±ÄÈÉ®ÊÄßÔºâÔºåÂ∞±ÂèçËΩ¨ÂºÄ‰ªìÔºàÂéüÂÖàÊòØÂºÄÂ§öÔºåÁé∞Âú®Â∞±ÂºÄÁ©∫ÔºâÔºåÂ¶ÇÊûúÂèçËΩ¨ÂêéËøòÊòØ‰∫èÁöÑÔºåÂ∞±ÂºÄÂßãËÆ°Êï∞Ôºå4 Â§©ÂÜÖËææÂà∞ 6 Ê¨°ÔºåÂ∞±ÂºÄÂßãÂõ∫ÂÆöÂπÖÂ∫¶Ê≠¢Áõà„ÄÇ ÊàëÁî®‰ª•‰∏äËøôÂ•óÁ≠ñÁï•ÂõûÊµãÔºå3 ‰∏™ÊúàËµö 4 ÂÄçÂ§öÔºå‰ΩÜ‰πãÂêé‰∏§‰∏™ÊúàÊääËµöÁöÑÂèà‰∫èÂÖâ‰∫Ü Áé∞Âú®ÊàëÊâìÁÆóÊääÁä∂ÊÄÅÊú∫ÁöÑËΩ¨Êç¢È°∫Â∫èÊç¢ÊàêÂÖàËΩ¨‰∏∫Âõ∫ÂÆöÂπÖÂ∫¶Ê≠¢ÁõàÔºåÂÜçËΩ¨‰∏∫ÂèçÂêëÂºÄ‰ªì Âà§Êñ≠Â∏ÇÂú∫Êï¥‰ΩìË°åÊÉÖÁöÑÂäûÊ≥ïÁõÆÂâçÊàëÁî®ÁöÑÂà§Êñ≠Â∏ÇÂú∫Êï¥‰ΩìË°åÊÉÖÁöÑÂäûÊ≥ïÊòØËøôÊ†∑ÁöÑÔºåÈùûÂ∏∏ÁöÑÁ≤óÈÑôÔºöËÆ°ÁÆó 4 Â§©ÂÜÖË¥¶Êà∑ÁöÑÁõà‰∫èÔºåÂ¶ÇÊûúÊòØ‰∫èÁöÑ‰∏î 4 Â§©ÂÜÖÊ≤°ÊúâÂèçËΩ¨ËøáÂºÄ‰ªìÔºåÂ∞±ÂèçËΩ¨ÂºÄ‰ªì„ÄÇ Ëøô‰∏™ÊñπÊ°àÂú® 2025 Âπ¥ 1 ÊúàÂà∞ 5 ÊúàËøòÂèØ‰ª•ÔºåËÉΩÊúâ 6 ÂÄçÂ§öÊî∂ÁõäÔºå‰ΩÜÊòØÊúÄÂ§ßÂõûÊí§‰πüËææÂà∞‰∫Ü 60%„ÄÇ Âú®Êõ¥‰πÖËøúÁöÑÊó∂Èó¥ÈáåÂàô‰∏çË°åÔºå‰ªé 2020 Âπ¥Âà∞ 2024 Âπ¥‰ºöÂΩíÈõ∂„ÄÇ ÊàëÂú®ÊÉ≥ÊúâÊ≤°ÊúâÊõ¥Â•ΩÁöÑÂäûÊ≥ïÂà§Êñ≠Â∏ÇÂú∫Êï¥‰ΩìË°åÊÉÖ„ÄÇËé∑ÂèñÁªüËÆ°ÂàÜÊûêËøë‰∏ÄÂ§©ÁöÑÂºÄÂ§öÂºÄÁ©∫ÂàóË°®ÔºåÂàÜÊûêÂÖ∂Ëµ∞ÂäøÂèØ‰ª•ÂæóÂá∫Á≠îÊ°à„ÄÇ ÂèØ‰ª•ÂèëÊòé‰∏Ä‰∏™Êñ∞ÁöÑÊåáÊ†áÔºåÂΩìÂâç‰∫îÂàÜÈíüËÉΩÂÅöÂ§öÁöÑÂ∏ÅÂáèÂéª‰∏ä‰∏™‰∫îÂàÜÈíüËÉΩÂÅöÂ§öÁöÑÂ∏ÅÁöÑÊï∞ÈáèÔºõÂ¶ÇÊûúËøô‰∏™ÈáèÂ§ß‰∫é 0Ôºå‰∏îÂú®ÊòØ‰∏äÂçáÊÄÅÂäøÔºåÂ∞±ÊòØÂ∏ÇÂú∫Êï¥‰ΩìË°åÊÉÖÂ∞±ÊòØÂ§öÂ§¥„ÄÇ]]></content>
  </entry>
  <entry>
    <title><![CDATA[English]]></title>
    <url>%2Fblog%2Fenglish%2Findex.html</url>
    <content type="text"><![CDATA[‰∏ÄÁõ¥‰ª•Êù•ÊàëÈÉΩÂú®ËÄÉËôëËã±ËØ≠ÁöÑËæìÂá∫ÈóÆÈ¢òÔºåÊ≤°ÊúâËæìÂá∫ÊòØÊó†Ê≥ïÂ≠¶Â•Ω‰∏ÄÈó®ËØ≠Ë®ÄÁöÑ„ÄÇÊúÄÂºÄÂßãÁöÑÊó∂ÂÄôÊàëÂ∞ùËØïËá™Â∑±ÂÜôËã±ËØ≠ÁöÑ‰∏úË•øÔºåÊØîÂ¶ÇÊó•ËÆ∞„ÄÅÊñáÁ´†„ÄÇ‰ΩÜÊÄªÊòØÊó†‰ªé‰∏ãÁ¨îÔºå‰∏ªË¶ÅÂéüÂõ†Êúâ‰ª•‰∏ã‰∏§ÁÇπÔºö Ê≤°‰∏úË•øÂèØÂÜôÔºåÂπ∂‰∏çÊòØ‰ªª‰ΩïÊó∂ÂÄôÈÉΩÊúâË°®ËææÁöÑÊ¨≤ÊúõÔºå‰∏çÁü•ÈÅìÂÜô‰ªÄ‰πà ÂÜô‰∫ÜËã±ËØ≠ÁöÑ‰∏úË•ø‰πüÊ≤°‰∫∫Â∏ÆÂøôÊîπÔºå‰∏çÁü•ÈÅìÂÜôÁöÑÂØπ‰∏çÂØπ ÊâÄ‰ª•Ê†πÊú¨Ê≤°ÂäûÊ≥ïËøõË°å‰∏ãÂéªÔºåÁõ¥Âà∞ÊàëÂú®Áü•‰πé‰∏äÁúãÂà∞‰∫Ü‰∏ÄÁØáËÆ≤ÂõûËØëÁöÑÊñáÁ´†ÔºåÂÖ∂‰∏≠Â∞ÜÊ±âËØëËã±ÂåÖË£ÖÊàê‰∫ÜÂõûËØëËøô‰∏™Ê¶ÇÂøµÔºåÊâçÁªà‰∫éÂπ°ÁÑ∂ÈÜíÊÇü„ÄÇÊàñËÆ∏Ê±âËØëËã±Â∞±Ë∂≥Â§ü‰∫Ü„ÄÇÊòØÁöÑÔºåÁúüÁöÑË∂≥Â§ü‰∫ÜÔºåÊàëÁé∞Âú®‰∏çÊñ≠ÁöÑËøõË°åÊ±âËØëËã±ÁöÑÁªÉ‰π†Ôºå‰∏ÄÊòØÂÖãÊúç‰∫ÜÊ≤°‰∏úË•øÂèØÂÜôÔºå‰∫åÊòØÊúâÊúÄÂú∞ÈÅìÁöÑÂéüÊñá‰æõÊàëÂèÇËÄÉÔºåÂÜôÁöÑÂ•Ω‰∏çÂ•Ω‰∏ÄÁúã‰æøÁü•„ÄÇ ÊâÄ‰ª•Ëøô‰∏™Ê†èÁõÆËÆ∞ÂΩïÁöÑÊòØÊàëÊ±âËØëËã±ÁöÑÊùêÊñôÔºåÁé∞Èò∂ÊÆµÂá†‰πéÈÉΩÊù•Ëá™Êú±‰ºüËÄÅÂ∏àÁöÑÊÅãËØç 7000ÔºåËÄåËøôÊú¨‰π¶‰∏≠ÁöÑ‰æãÂè•ÂèàÂÖ®ÈÉΩÊù•Ëá™ËÄÉÁ†îÁöÑÈ¢òÊ∫êÊä•Âàä„ÄÇ ÊàëÂú®ÂÅöÊ±âËØëËã±ÁªÉ‰π†ÁöÑÊó∂ÂÄôÔºå‰ºöÁî®ÊâãÊú∫Áõñ‰ΩèËã±ÊñáÈÉ®ÂàÜÔºåÁÑ∂ÂêéÂ∞ΩËá™Â∑±ÊúÄÂ§ßÂä™ÂäõÁî®Ëã±ÊñáË°®ËææÂá∫Ê±âËØ≠Âè•Â≠ê‰∏≠Ë°®ËææÁöÑÊÑèÊÄùÔºåÊúÄÂêéË∑üÂéüÊñáÂØπÊØîÂ≠¶‰π†„ÄÇ Èô§‰∫ÜÊ±âËØëËã±ÔºåËøòÂä†ÂÖ•‰∫ÜÂçïËØçÂ≠¶‰π†ÁöÑËÆ°Âàí„ÄÇÂ≠¶Ëã±ËØ≠ËøòÊòØÂæóÂùöÊåÅ„ÄÇ Êé®Ëçê‰∏§‰∏™Â•ΩÁî®ÁöÑÊµèËßàÂô®Êèí‰ª∂ÔºöÊ≤âÊµ∏ÂºèÁøªËØëÔºåÊ≤ôÊãâÊü•ËØç 2025 Âπ¥‰∫ÜÔºåÁé∞Âú®ÂèØ‰ª•Áî® AI Êù•Â≠¶Ëã±ËØ≠‰∫ÜÔºå‰ªª‰Ωï‰∏≠ÊñáÊùêÊñôÈÉΩÂèØ‰ª•ÂæóÂà∞ÂæàÂú∞ÈÅìÁöÑËã±ÊñáË°®Ëææ„ÄÇËØ≠Êñô‰∏çÂÜçÂèó‰ªª‰ΩïÈôêÂà∂ÔºåÊ≤âÊµ∏ÂºèÁøªËØëÔºåÊ≤ôÊãâÊü•ËØçËøô‰∏§‰∏™ËΩØ‰ª∂Êàë‰πü‰∏çÁî®‰∫ÜÔºåÁî® AI Êù•ÁøªËØëÂ∞±Â§ü‰∫Ü„ÄÇÊàëÁõÆÂâçÊòØÁî®ËÖæËÆØÂÖÉÂÆù‰∏äÁöÑ deepseek Ê®°Âûã„ÄÇ‰∏çËøáÊñ≠Êñ≠Áª≠Áª≠Â≠¶‰∫ÜÂçÅÂ§öÂπ¥Ëã±ËØ≠ÔºåËøòÊòØÂçäÁîü‰∏çÁÜüÔºåÊÄªÁªì‰∏∫ËøòÊòØÂæóÂ§öÊìçÁªÉÊâçË°å„ÄÇ 2025-06-26Daily English 5 - Getting Dressed &amp; Ready for Work closet Ë°£Êüú dress shirts Ê≠£Ë£ÖË°¨Ë°´ suit jackets Ë•øË£Ö underwear ÂÜÖË£§ color coordinating È¢úËâ≤Êê≠ÈÖç buckle ÁöÆÂ∏¶ÁöÑÂ∏¶Êâ£ 2025-06-24Daily English 4 - Eating BreakfastAI Èô™ËØª cereal È∫¶Áâá a stack of waffles ÂéöÂçéÂ§´È•º skim milk ËÑ±ËÑÇÂ•∂ silverware tray Áã≠‰πâÔºöÈì∂Ë¥®È§êÂÖ∑Êî∂Á∫≥ÁõíÔºåÂπø‰πâÔºöÈáëÂ±ûÈ§êÂÖ∑Êî∂Á∫≥Áõí Thermos ‰øùÊ∏©ÊùØ I would love to ÊàëÂ§öÂ∏åÊúõ 2025-06-23ÁªôÂ§ßÂÆ∂Â±ïÁ§∫‰∏Ä‰∏ãÔºåÁî® AI Â≠¶Ëã±ËØ≠ÊúâÂ§öÁàΩÔºöÁî®ËÖæËÆØÂÖÉÂÆùÂ≠¶ ESL Podcast toilet ÊúâÈ©¨Ê°∂ÁöÑÊÑèÊÄùÔºå‰∏ç‰ªÖ‰ªÖÊòØÂéïÊâÄ„ÄÇ swish Êº±Âè£Ôºåswish it around„ÄÇ floss ÁâôÁ∫øÔºåflossing Áî®ÁâôÁ∫øÂâîÁâô lather up ÊâìÂá∫Ê≥°Ê≤´ rinse ÂÜ≤Ê¥ó shave close enough ÂàÆËÉ°Â≠ê‰∏çÂ§üÂπ≤ÂáÄÔºåÊ≥®ÊÑèËøôÈáåÁî®ÁöÑÊòØ close ‰∏çÊòØ clear disposable blades ‰∏ÄÊ¨°ÊÄßÂàÄÁâá I‚Äôm on to breakfast ÊàëËØ•ÂáÜÂ§áÂéªÂêÉÊó©È§ê‰∫ÜÔºåÊ≥®ÊÑèÊòØ on to breakfast ‰∏çÊòØ go to 2025-06-22ÁªôÂ§ßÂÆ∂Êé®Ëçê‰∏Ä‰∏™ÈùûÂ∏∏Â•ΩÁöÑËã±ËØ≠Â≠¶‰π†ËµÑÊ∫êÔºöESL PodcastÔºåÂÖ®Áß∞ÊòØ English as a second language PodcastÔºåÂú®ÂÖ®ÁΩëÈÉΩÂæàÊúâÂêç Daily English 2 - Getting Up Êñ∞ËØçÊ±áÔºö comforterÔºöÂéöË¢´Â≠ê goes offÔºåËøô‰∏™Áü≠ËØ≠Âê´‰πâÈùûÂ∏∏‰∏∞ÂØåÔºåÂú®‰∏çÂêå‰∏ä‰∏ãÊñá‰∏≠Êúâ‰∏çÂêåÁöÑÂê´‰πâÔºåÂú®ËøôÁØáÊñáÁ´†‰∏≠ÁöÑÂê´‰πâÊòØÔºöÁ™ÅÁÑ∂ÂìçËµ∑ jarringÔºöÂà∫ËÄ≥„ÄÇ‚ÄúJarring‚Äù ÁöÑÊ†∏ÂøÉÊòØ ‚Äã‚Äã‚ÄúÊâìÁ†¥ÂíåË∞êÊÑü‚Äù‚Äã‚Äã buzzerÔºöÁîµÂ≠êËúÇÈ∏£Âô® drive me nutsÔºöËÆ©ÊàëÊäìÁãÇ„ÄÇÂΩì‰Ω†Âõ†ÈáçÂ§çÂô™Èü≥„ÄÅÁêêÁ¢é‰∫ãÂä°Êàñ‰ªñ‰∫∫Ë°å‰∏∫ÊÑüÂà∞ÁÉ¶Ë∫ÅÈöæËÄêÊó∂Ôºå‚ÄúDrive me nuts‚ÄùÂ∞±ÊòØÊúÄÂú∞ÈÅìÁöÑÂêêÊßΩÔºÅüå∞üí• ËÆ∞‰ΩèÂÖ∂Êõø‰ª£ËØçÔºàcrazy/bonkersÔºâËÉΩ‰∏∞ÂØåË°®ËææÂ§öÊ†∑ÊÄßÔΩû take on the worldÔºö‚ÄúTake on the world‚Äù ÊòØ‰∏Ä‰∏™Ëã±ËØ≠Áü≠ËØ≠Âä®ËØçÔºåÂÖ∂Ê†∏ÂøÉÂê´‰πâÊòØ ‚Äã‚Äã ‰ª•ÁßØÊûÅÊàñÊåëÊàòÁöÑÂßøÊÄÅÈù¢ÂØπÁîüÊ¥ª‰∏≠ÁöÑÂõ∞Èöæ‰∏éÊú∫ÈÅá ‚Äã‚ÄãÔºåÂπ∂ÈùûÂ≠óÈù¢ÊÑè‰πâÁöÑ‚ÄúÂæÅÊúç‰∏ñÁïå‚Äù„ÄÇ Every once in a whileÔºöÂÅ∂Â∞îÔºàÂè£ËØ≠ÂåñË°®ËææÔºâ„ÄÇoccasionallyÔºåÊØîËæÉÊ≠£Âºè sleep inÔºöÁù°ÊáíËßâ go offüí• 1. ‚Äã‚ÄãÔºàË≠¶Êä•„ÄÅÈóπÈíüÁ≠âÔºâÁ™ÅÁÑ∂ÂìçËµ∑ÔºõÁàÜÁÇ∏ ‚Äã ‰æãÂè•ÔºöMy alarm ‚Äã‚Äãgoes off‚Äã‚Äã at 6 AM every day. ÔºàÊàëÁöÑÈóπÈíüÊØèÂ§©Êó©Êô® 6 ÁÇπÂìç„ÄÇÔºâThe bomb ‚Äã‚Äãwent off‚Äã‚Äã in the city center. ÔºàÁÇ∏ÂºπÂú®Â∏Ç‰∏≠ÂøÉÁàÜÁÇ∏‰∫Ü„ÄÇÔºâIf smoke is detected, the alarm ‚Äã‚Äãgoes off‚Äã‚Äã automatically. ÔºàÊ£ÄÊµãÂà∞ÁÉüÈõæÊó∂ÔºåË≠¶Êä•Âô®‰ºöËá™Âä®ÂìçËµ∑„ÄÇÔºâ üîå 2. ‚Äã‚ÄãÔºàÁîµÂäõ„ÄÅÁÅØÂÖâÁ≠âÔºâ‰∏≠Êñ≠ÔºõÂÅúÊ≠¢ËøêË°å ‚Äã‚Äã ‰æãÂè•ÔºöThe lights ‚Äã‚Äãwent off‚Äã‚Äã during the storm. ÔºàÊö¥È£éÈõ®‰∏≠ÁÅØÁ™ÅÁÑ∂ÁÜÑÁÅ≠‰∫Ü„ÄÇÔºâThe heating ‚Äã‚Äãgoes off‚Äã‚Äã at night to save energy. ÔºàÊöñÊ∞îÂ§úÈó¥Ëá™Âä®ÂÖ≥Èó≠‰ª•ËäÇËÉΩ„ÄÇÔºâ ü•õ 3. ‚Äã‚ÄãÔºàÈ£üÁâ©„ÄÅÈ•ÆÊñôÔºâÂèòË¥®ÔºõËÖêË¥• ‰æãÂè•ÔºöMilk ‚Äã‚Äãgoes off‚Äã‚Äã quickly in hot weather. ÔºàÁâõÂ•∂Âú®ÁÇéÁÉ≠Â§©Ê∞î‰∏ãÊòìÂèòË¥®„ÄÇÔºâThis meat smells strange‚Äîit must have ‚Äã‚Äãgone off‚Äã‚Äã. ÔºàËøôÂùóËÇâÈóªËµ∑Êù•ÊÄ™ÊÄ™ÁöÑÔºåËÇØÂÆöÂèòË¥®‰∫Ü„ÄÇÔºâ üö∂ 4. ‚Äã‚Äã Á¶ªÂºÄÔºõÂá∫Âèë ‰æãÂè•ÔºöShe ‚Äã‚Äãwent off‚Äã‚Äã to America for further study. ÔºàÂ•πÂä®Ë∫´ÂéªÁæéÂõΩÊ∑±ÈÄ†„ÄÇÔºâHamlet ‚Äã‚Äãgoes off‚Äã‚Äã stage after the soliloquy. ÔºàÂìàÂßÜÈõ∑ÁâπÁã¨ÁôΩÂêéÈÄÄÂú∫„ÄÇÔºâ ‚ù§Ô∏è 5. ‚Äã‚Äã Â§±ÂéªÂÖ¥Ë∂£ÔºõÂéåÂÄ¶ ‚Äã ‰æãÂè•ÔºöI used to love jazz, but I&#39;ve ‚Äã‚Äãgone off‚Äã‚Äã it recently. ÔºàÊàëÊõæÂñúÊ¨¢ÁàµÂ£´‰πêÔºå‰ΩÜÊúÄËøë‰∏çÊÑüÂÖ¥Ë∂£‰∫Ü„ÄÇÔºâShe ‚Äã‚Äãwent off‚Äã‚Äã him after he lied. Ôºà‰ªñÊííË∞éÂêéÔºåÂ•πÂØπ‰ªñÂ§±ÂéªÂ•ΩÊÑü„ÄÇÔºâ üìà 6. ‚Äã‚ÄãÔºà‰∫ã‰ª∂ÔºâËøõË°åÔºõËøõÂ±ï ‚Äã ‰æãÂè•ÔºöThe party ‚Äã‚Äãwent off‚Äã‚Äã perfectly. ÔºàÊ¥æÂØπÈùûÂ∏∏ÊàêÂäü„ÄÇÔºâHis performance has ‚Äã‚Äãgone off‚Äã‚Äã recently. Ôºà‰ªñÊúÄËøëË°®Áé∞ÂèòÂ∑Æ‰∫Ü„ÄÇÔºâ 2023-04-03I could do without Monday. ÊàëÂèØ‰ª•Ê≤°ÊúâÂë®‰∏Ä I can kick back and relaxÔºåkick back ÊòØ‰ºëÊÅØÁöÑÊÑèÊÄù I dread going back to work ÊàëÂÆ≥ÊÄïÂõûÂà∞Â∑•‰Ωú‰∏≠ hectic Âøô on the fritz Âùè‰∫ÜÔºåbrokenÔºånot working alarm didn&#39;t go off ÈóπÈíüÊ≤°Âìç to be frantic ÊäìÁãÇ means to be very worried, to be very nervous about something to serve someone right means that someone deserves something, usually deserves something bad. 2023-04-01ÊàëÊâìÁÆó‰ªéÁé∞Âú®ÂºÄÂßãÂè™Áúã ESLPOD ‰∫ÜÔºå‰ªéËøô‰∏™ÊùêÊñôÂºÄÂßãÁ≤æÂê¨Á≤æÂ≠¶Ëã±ËØ≠„ÄÇ Á¨¨ 45 Êúü - A Camping Trip griping about Êä±ÊÄ® feeling cooped up ÊÑüËßâË¢´ÂÖ≥Ëµ∑Êù• road trip ÂÖ¨Ë∑Ø‰πãÊóÖ I found everything in one stop Êàë‰∏ÄÁ´ôÂ∞±ÊâæÂà∞‰∫Ü‰∫ÜÊâÄÊúâ‰∏úË•ø in one stop means in one place psyched about the trip ÂØπËøôÊ¨°ÊóÖË°åÊÑüÂà∞ÂÖ¥Â•ã None of us had a camper Êàë‰ª¨ÈÉΩÊ≤°ÊúâÈú≤Ëê•ËΩ¶ gear Ë£ÖÂ§á sunscreen Èò≤ÊôíÈúú pole Á´ø lotion ‰π≥Ê∂≤ 2022-11-20ÂìàÂà©Ê≥¢ÁâπÁ¨¨‰∏ÄÊú¨ÔºöÂìàÂà©Ê≥¢Áâπ‰∏éÈ≠îÊ≥ïÁü≥ÔºàHarry Potter and the Philosopher&#39;s StoneÔºâ Á¨¨‰∫åÁ´†ÔºåÊ∂àÂ§±ÁöÑÁéªÁíÉÔºàthe vanishing glassÔºâ lit upÔºåÁÇπ‰∫ÆÔºålit ÊòØ light ÁöÑËøáÂéªÂºèÂíåËøáÂéªÂàÜËØçÔºå‰πüÂèØ‰ª•Áî® lighted light - lit/lighted - lit/lighted ÁÇπ‰∫Æcreep - crept - crept Áà¨Ë°åleap - leapt - leapt Ë∑≥Ë∑Émantelpiece Â£ÅÁÇâÊû∂ÔºåÂ£ÅÁÇâÂè∞bobble Â∞èÁªíÁêÉblond ÈáëÂèëon a roundabout at the fair Âú®ÂçöËßà‰ºö‰∏ä‰πòÂùêÊóãËΩ¨Êú®È©¨woke with a start ÊÉäÈÜírapped on ÊãçÊâìscreeched Â∞ñÂè´cooker ÁÇâÂ≠êrolled on ÁøªË∫´demanded ËøΩÈóÆgroaned ÂèπÊÅØsnapped Âø´ÈÄüÂú∞ËØ¥ÔºåÂéâÂ£∞hall Ëµ∞Âªäit had something to do with Âíå...ÊúâÂÖ≥knobbly knees Á™ÅÂá∫ÁöÑËÜùÁõñÔºàÂΩ¢ÂÆπÁò¶ÔºâSellotape ÈÄèÊòéËÉ∂Â∏¶a bolt of lightning ‰∏ÄÈÅìÈó™Áîµwig ÂÅáÂèëtantrum ÂèëËÑæÊ∞îÔºàÂêçËØçÔºâpopkin ÂÆùË¥ùsweetums ÂøÉËÇùÂÆùË¥ùparcel Á§ºÂåÖ 2022-07-21ÊúÄËøëÂèóËøôÁØáÊñáÁ´†ÁöÑËõäÊÉëÔºåÊàëÂèàÂºÄÂßãÈáçÊñ∞ÁúãËµ∑‰∫ÜËã±ÊñáÂéüÁâàÁöÑÂìàÂà©Ê≥¢Áâπ(harry potter)ÔºöËã±ËØ≠Âü∫Á°Ä‰∏ÄËà¨ÔºåÂèØ‰ª•ÁúãÂì™‰∫õÂéüËëóÂ∞èËØ¥Êù•ÊèêÈ´òËØçÊ±áÈáè? ÂÖ∂ÂÆûÂæàÂ§öÂπ¥ÂâçÊàë‰πüÂ∞ùËØïÁúãÔºå‰ΩÜÊòØÊúÄÂêéËøòÊòØÊ≤°Áúã‰∏ãÂéªÔºåÁé∞Âú®ÈáçÊñ∞ÊãøËµ∑ÔºåÂèëÁé∞ÁîüËØçËøòÊòØÊå∫Â§öÁöÑÔºåËøô‰πàÂ§öÂπ¥Ëã±ÊñáÁúüÊòØ‰∏ÄÁÇπËøõÊ≠•ÈÉΩÊ≤°Êúâ„ÄÇ‰ΩÜËøô‰∏™ÊñπÂêëËøòÊòØÂØπÁöÑÔºåÂøÖÈ°ªÊääËã±ÊñáÁî®Ëµ∑Êù•„ÄÇÁúãËøôÁ±ª‰π¶Â∫îËØ•ËøòÊòØËõÆÊúâÊÑèÊÄùÁöÑÔºå‰∏ç‰ºöÊûØÁá•Ôºå‰ΩÜÊúÄÂ•Ω‰∏çË¶ÅÂú®ÊâãÊú∫ÊàñËÄÖÁîµËÑë‰∏äÁúãÔºåÂæàÂÆπÊòìË¢´ÊâìÊñ≠ÔºåÁî® kindle ÊàñËÄÖÂÆû‰Ωì‰π¶ÈÉΩÂèØ‰ª•„ÄÇ‰ΩÜÂ¶ÇÊûúÂõ†‰∏∫ÁîüËØçÂ§™Â§öÂæàÂ§öÂú∞ÊñπÁúã‰∏çÊáÇÔºåËøòÊòØÂæóÊãø‰∏≠ÊñáÂØπÁÖß‰∏Ä‰∏ãÔºàÊü•ÂçïËØçÊïàÁéáÂ§™‰Ωé‰∫ÜÔºåËÄå‰∏îÊúâ‰∫õÊó∂ÂÄôÊØè‰∏™ÂçïËØçÈÉΩÂ•ΩÂÉèËÆ§ËØÜÔºå‰ΩÜÂè•Â≠ê‰∏çÁü•ÈÅìÂï•ÊÑèÊÄùÔºâ„ÄÇ 2022-07-19ÂçïËØç stroke ÂêçËØçÔºà‰∏≠È£éÔºâÔºöhave a stroke ÊÇ£‰∏≠È£é ÂêçËØçÔºàËΩªÊäöÔºâÔºöShe gave the cat a stroke. Â•πËΩªËΩªÊäöÊë∏‰∫ÜÈÇ£Âè™Áå´‰∏Ä‰∏ã„ÄÇ ÂêçËØçÔºàÂàíÊ∞¥Âä®‰ΩúÔºâÔºöShe swam with a graceless stroke. Â•πÊ∏∏Ê≥≥ÁöÑÂßøÂäøÂæàÈöæÁúã„ÄÇ 2022-07-12ÂçïËØç whip ËØçÁªÑÔºàÁÖΩÂä®ÔºâÔºöto whip up the mob ÁÖΩÂä®Êö¥Ê∞ë Âä®ËØçÔºàÂàÆÔºâÔºöThe wind is whipping at thirty miles an hour. Â§ßÈ£éÊ≠£‰ª•ÊØèÂ∞èÊó∂‰∏âÂçÅËã±ÈáåÁöÑÈÄüÂ∫¶ÂàÆÁùÄ„ÄÇ ÂêçËØçÔºàÈû≠Â≠êÔºâÔºöHe flipped at the ass with a whip. ‰ªñÁî®Èû≠Â≠êÊâìÂ±ÅËÇ°„ÄÇ rally Âä®ËØçÔºàÂ§çËãèÔºâÔºöBefore long the dying plants began to rally. ‰∏ç‰πÖÔºåÂø´Ë¶ÅÊûØÊ≠ªÁöÑÊ§çÁâ©Â∞±ÂºÄÂßãÂ§çËãè‰∫Ü„ÄÇ Âä®ËØçÔºàÈõÜÁªìÔºâÔºöThe soldiers rally at the foot of a hill. ÊàòÂ£´‰ª¨Âú®‰∏ÄÂ∫ßÂ∞èÂ±±ËÑö‰∏ãÈõÜÁªì„ÄÇ ÂêçËØçÔºàÈõÜ‰ºöÔºâÔºöa political rally ‰∏ÄÊ¨°ÊîøÊ≤ªÈõÜ‰ºö faint ÂΩ¢ÂÆπËØçÔºàËôöÂº±ÔºâÔºöHe felt faint from lack of food. ‰ªñÂõ†Áº∫‰πèÈ£üÁâ©ËÄåÊÑüÂà∞ËôöÂº±„ÄÇ ÂΩ¢ÂÆπËØçÔºàÂæÆÂº±ÔºâÔºöI heard a faint sound in the distance. ÊàëÂê¨Âà∞ËøúÂ§ÑÊúâ‰∏™ÂæÆÂº±ÁöÑÂ£∞Èü≥„ÄÇ Âä®ËØçÔºàÊòèÂé•ÔºâÔºöShe suddenly fell forward on to the table and fainted. Â•πÁ™ÅÁÑ∂ÂêëÂâçÂÄíÂú®Ê°åÂ≠ê‰∏äÂπ∂Êòè‰∫ÜËøáÂéª„ÄÇ ÂêçËØçÔºàÊòèÂé•ÔºâÔºöShe slumped to the ground in a faint. Â•πÂÄíÂú®Âú∞‰∏äÊòè‰∫ÜËøáÂéª„ÄÇ savage Âä®ËØçÔºàÁåõÁÉàÊä®ÂáªÔºâÔºöThe critics savage Tom&#39;s play. ËØÑËÆ∫ÂÆ∂ÁåõÁÉàÊä®ÂáªÊ±§ÂßÜÁöÑÂâßÊú¨„ÄÇ ÂΩ¢ÂÆπËØçÔºàÂá∂Êö¥ÁöÑÔºâÔºöa savage temper Âá∂Êö¥ÁöÑËÑæÊ∞î ÂêçËØçÔºàÈáéËõÆ‰∫∫ÔºâÔºöHe is such a cruel savage! ‰ªñÊòØ‰∏™Â§ö‰πàÊÆãÂøçÁöÑÈáéËõÆ‰∫∫ÔºÅ 2019-03-03Áì¶Â∞îËØ¥ÔºåËß£ËØªËØ•ÁªìÊûúÂ∫îË∞®ÊÖéÔºåÂõ†‰∏∫ËØ•Á†îÁ©∂Áº∫Â∞ë‰∏Ä‰∏™ÂØπÁÖßÁªÑÔºå‰∏çËøáÁ†îÁ©∂ÁªìÊûúËøòÊòØÊúâÂâçÊôØÁöÑ„ÄÇ The results should be interpreted with caution since the study lacked a control group, says Wall, but the findings are promising. (2018-8„ÄäÊñ∞ÁßëÂ≠¶ÂÆ∂„Äã) ÂØåÂÖ∞ÂÖãÊûó¬∑D¬∑ÁΩóÊñØÁ¶èÊó†ÂøßÊó†ËôëÁöÑÂΩ¢Ë±°‰ºº‰πéÊúâÂ§±Â∫ÑÈáçÔºåËÄåÂπ¥ËΩªÁöÑÁ∫¶Áø∞¬∑F¬∑ËÇØÂ∞ºËø™Âç¥Â∏∏Â∏∏ËÆ§‰∏∫ÊúâÂøÖË¶ÅÂú®ÂÖ¨ÂÖ±Âú∫ÂêàÂÖãÂà∂Ëá™Â∑±ÁöÑÂπΩÈªòÊÑü„ÄÇ Franklin D. Roosevelt&#39;s lightheartedness seemed undignified, while the youthful John F. Kennedy often felt compelled to suppress his sense of humor in public.]]></content>
  </entry>
  <entry>
    <title><![CDATA[ËÆ°ÁÆóÊú∫ÁßëÂ≠¶]]></title>
    <url>%2Fblog%2Fcomputer-science%2Findex.html</url>
    <content type="text"><![CDATA[Âü∫Á°ÄÁêÜËÆ∫ËØæ Êï∞ÊçÆÁªìÊûÑÂíåÁÆóÊ≥ï Êìç‰ΩúÁ≥ªÁªü ËÆ°ÁÆóÊú∫ÁªÑÊàêÂéüÁêÜ‰∏éÊ±áÁºñ ËÆ°ÁÆóÊú∫ÁΩëÁªú ÊàëÂàóÂá∫ËøôÂõõÈó®ËØæÔºåÊòØÂõ†‰∏∫ÂõΩÂÜÖÊú¨ÁßëÁªìÊùü‰πãÂêéÔºåËÄÉÁ†îÂàùËØïË¶ÅËÄÉÁöÑÂ∞±ÊòØËøôÂõõÈó®ËØæ„ÄÇËøô‰πüËØ¥Êòé‰∫ÜËøôÂõõÈó®ËØæÊòØËÆ°ÁÆóÊú∫‰∏ì‰∏öÈùûÂ∏∏ÈáçË¶ÅÁöÑÂü∫Á°ÄÂ≠¶Áßë„ÄÇÂ§çËØïÁöÑËØù‰ºöÊ∂âÂèäÂà∞Êõ¥Ê∑±ÂÖ•ÁöÑ‰∏ÄÁÇπ‰∏úË•øÔºåÊØîÂ¶ÇÔºöÁºñËØëÂéüÁêÜ„ÄÅËΩØ‰ª∂Â∑•Á®ã„ÄÅ‰∫∫Â∑•Êô∫ËÉΩ„ÄÅÂ§öÂ™í‰ΩìÊäÄÊúØ„ÄÅ‰ø°Âè∑Â§ÑÁêÜ„ÄÇ ‰π¶Á±çÊé®ËçêCSAPP‰∏≠ÊñáÂè´ÔºöÊ∑±ÂÖ•ÁêÜËß£ËÆ°ÁÆóÊú∫Á≥ªÁªüËã±ÊñáÂè´ÔºöComputer Systems: A Programmer‚Äôs PerspectiveÔºåÁÆÄÁß∞ CSAPP„ÄÇ ÊúâËÉΩÂäõÁöÑËØùÔºåÂ∞ΩÈáèÁúãËã±ÊñáÁâà Áúã‰π¶Ë¶ÅÂÅöÁ¨îËÆ∞ÔºåÁªÜÂàÜÁü•ËØÜÁÇπÔºåÊòéÁ°ÆÊâÄÂ≠¶ÁöÑÊ†∏ÂøÉÁü•ËØÜÁÇπ ‰π†È¢ò‰∏çË¶ÅÁï•ËøáÔºå‰∏ÄÂÆöË¶ÅÂÅö ËøôÊòØ CMUÔºàCarnegie Mellon UniversityÔºåÂç°ÂÜÖÂü∫Ê¢ÖÈöÜÂ§ßÂ≠¶ÔºâÁöÑËÆ°ÁÆóÊú∫ÂÖ•Èó®ÊïôÊùêÔºåËøôÊú¨ÊïôÊùêÂØπÂ∫îÁöÑËØæÁ®ãÊòØ CS 213 ÔºåÊòØÂæàÂ§öËØæÁ®ãÁöÑÂÖà‰øÆËØæ„ÄÇ Â¶Ç‰ΩïÈòÖËØª„ÄäÊ∑±ÂÖ•ÁêÜËß£ËÆ°ÁÆóÊú∫Á≥ªÁªü„ÄãËøôÊú¨‰π¶Ôºü ËØæÁ®ã‰∏ªÈ°µ 2016 Âπ¥ËØæÁ®ã‰∏ªÈ°µ Âç°ÂÜÖÂü∫Ê¢ÖÈöÜÂ§ßÂ≠¶ Introduction to Computer Systems CMU 15-213 Fall Âç°ÂÜÖÂü∫Ê¢ÖÈöÜÂ§ßÂ≠¶ Introduction to Computer Systems CMU 15-213 2015 Spring ÁúãÂÆåÁü•‰πéÁ≠î‰∏ªÁöÑÂõûÁ≠îÔºåÊàë‰ª¨ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØËøôÈó®ËØæ‰πüÊúâ‰∏Ä‰∏™ÂÖà‰øÆËØæÔºåÊòØ‰∏ÄÈó®ÁºñÁ®ãËØ≠Ë®Ä C0ÔºàC ËØ≠Ë®ÄÁöÑÂ≠êÈõÜÔºâÔºåÂØπÂ∫îÁöÑËØæÁ®ãÊòØ CS 122ÔºåÊàñËÄÖ‰Ω†Â≠¶ Python ‰πüË°å„ÄÇCMU ‰∏ÄËà¨ÊòØÁªôÂ§ß‰∫åÂ≠¶ÁîüÂºÄËøô‰∏™ËØæÔºåÂ≠¶Ëøá C ‰ª•ÂêéÂ∞±ÂèØ‰ª•‰∏ä‰∫Ü„ÄÇ ËøôÊú¨‰π¶ËÆ≤ÁöÑÊòØËÆ°ÁÆóÊú∫Â∫ïÂ±ÇÁöÑÂü∫Á°ÄÂéüÁêÜÔºåÊ∂µÁõñËåÉÂõ¥‰∏ªË¶ÅÊòØ ËÆ°ÁÆóÊú∫ÁªÑÊàêÂéüÁêÜÂíåÊ±áÁºñÔºåÊòØÂú£ÁªèËà¨ÁöÑÂÖ•Èó®‰π¶ÔºåÁ™ÅÂá∫ÂéüÁêÜÔºåËÆ≤Ëß£ÈùûÂ∏∏ÁªÜËÖª„ÄÅÁ≥ªÁªü„ÄÇ ÊàëÁõÆÂâçËøòÂú®Â≠¶‰π†ÔºåËøôÈáåÊúâÊàëÁöÑÂ≠¶‰π†Á¨îËÆ∞Ôºö ÊµÆÁÇπÊï∞ÂéüÁêÜ „ÄäCSAPP„ÄãËØª‰π¶Á¨îËÆ∞ -- Á¨¨ 3 Á´†ÔºöÁ®ãÂ∫èÁöÑÊú∫Âô®Á∫ßË°®Á§∫ „ÄäCSAPP„ÄãËØª‰π¶Á¨îËÆ∞ -- Á¨¨ 4 Á´†ÔºöÂ§ÑÁêÜÂô®‰ΩìÁ≥ªÁªìÊûÑ SICPAPUEÂä®ÊâãÂºÄÂßãÂÜô‰ª£Á†ÅACMÁÑ∂ËÄå‰ªÖ‰ªÖÊòØÂ≠¶‰π†ÁêÜËÆ∫ÊòØÂÆåÂÖ®‰∏çÂ§üÁöÑ„ÄÇ ÊàëËøôÈáåË¶ÅËÆ≤ÁöÑÊòØ ACMÔºåACMÂõΩÈôÖÂ§ßÂ≠¶ÁîüÁ®ãÂ∫èËÆæËÆ°Á´ûËµõÔºàACM International Collegiate Programming Contest, ICPCÔºâÁöÑÁÆÄÁß∞ÔºåÁî± ACMÔºàAssociation for Computing MachineryÔºåÔºàÁæéÂõΩÔºâËÆ°ÁÆóÊú∫Âçè‰ºöÔºâ‰∏ªÂäû„ÄÇ ‰∏∫‰ªÄ‰πà ACM Â¶ÇÊ≠§ÈáçË¶ÅÔºà‰ª•Âèä ACM ÁöÑÂ§ßÂ•ñÂØπÊú¨ÁßëÁîüÊâæÂ∑•‰ΩúÁöÑÂàÜÈáèËøô‰πàÈáçÔºâÔºåÂõ†‰∏∫ÁºñÁ®ãÊ¥ªÂä®ÊâÄË¶Å‰æùËµñÁöÑÂè™Êúâ‰∏§‰∏™ÔºöÊäΩË±°ÂíåÈÄªËæëÔºåËøôÂ∞±ÊòØ‰∏∫‰ªÄ‰πàÂÖ∂ÂÆûÁºñÁ®ãÂèØ‰ª•‰ªéÂ∞èÂ≠¶ÂºÄÂßãÔºàÊ≤°ÊúâËøáÈ´òÁöÑÁü•ËØÜÈó®ÊßõÔºâ„ÄÇËÆ°ÁÆóÊú∫ÁßëÂ≠¶ÁöÑËØ∏Â§öËØæÁ®ãÔºåÂ∞±ÊòØÁî±ÂÖàËæà‰ª¨Èù†ÁùÄÊäΩË±°ÂíåÈÄªËæëÊê≠Âª∫Ëµ∑Êù•ÁöÑÁü•ËØÜÂ§ßÂé¶ÔºåËøô‰∫õÁü•ËØÜÂíåÁªèÈ™åÊòØÂè∂ÔºåËÄå‰Ω†ÊäΩË±°ÂíåÈÄªËæëËÉΩÂäõÔºå‰æùÈù†ËÆ°ÁÆóÊú∫Ëß£ÂÜ≥ÈóÆÈ¢òÁöÑËÉΩÂäõÊòØÊ†π„ÄÇÁªÉ‰π† ACM Â∞±Ë∑üÊ≠¶ÊúØ‰∏ñÁïåÈáåÈù¢ÁöÑÊùéÂ∞èÈæôÊØèÂ§©ÁªÉÊã≥‰∏ÄÊ†∑ÔºåÊòØÂü∫Êú¨Âäü„ÄÇ ÁªÉ‰π† ACM ‰∏ÄËà¨Áî® Online Judge Á≥ªÁªüÔºåËøôÈáåÊàëÊé®ËçêÂá†‰∏™Ôºö Âåó‰∫¨Â§ßÂ≠¶ÁöÑÂú®Á∫øË£ÅÂà§Á≥ªÁªüÔºåÁÆÄÁß∞ POJ Êù≠Â∑ûÁîµÂ≠êÁßëÊäÄÂ§ßÂ≠¶ÁöÑÂú®Á∫øË£ÅÂà§Á≥ªÁªü leetcode Â§ßÂûãÈ°πÁõÆACM Ëá™ÁÑ∂Ë∑üÁúüÊ≠£ÁöÑÂ∫îÁî®Á®ãÂ∫èÁöÑÁºñÂÜôÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑÔºåÂΩì‰Ω†ÁúüÊ≠£Ê≠•ÂÖ•ÂºÄÂèëÁöÑÊó∂ÂÄôÔºå‰Ω†‰ºöÂèëÁé∞ËøòÊúâÈùûÂ∏∏Â§öÁöÑ‰∏úË•øË¶ÅÂ≠¶Ôºå‰∏Ä‰∏™Áúã‰ººÁÆÄÂçïÁöÑ APPÔºåÂÖ∂Êû∂ÊûÑÂç¥ÊòØÈùûÂ∏∏Â§çÊùÇÁöÑÔºå‰ª£Á†ÅÈáèÂíå‰ª£Á†ÅÁªìÊûÑÁöÑÂ§çÊùÇ‰πüËøúË∂Ö‰Ω†ÁöÑÊÉ≥Ë±°„ÄÇÈÇ£‰πàÂ¶Ç‰Ωï‰∏äÊâãÂ≠¶‰π†Âë¢Ôºå‰Ω†‰πü‰∏çÂèØËÉΩ‰∏ÄÊ≠•ÁôªÂ§©Ôºå‰∏Ä‰∏äÊù•Â∞±ÂºÄÂèë‰∏ÄÊ¨æÂ∫îÁî®Âïä„ÄÇÁ≠îÊ°àËá™ÁÑ∂ÊòØÔºö‰∏Ä‰∏™ÂäüËÉΩÔºå‰∏Ä‰∏™ÂäüËÉΩÁöÑÂÆûÁé∞ÔºåÊåâÊ®°ÂùóÂ≠¶‰π†ÔºåÊåâÊ®°ÂùóËÆæËÆ°ÔºåÊÖ¢ÊÖ¢ÁßØÁ¥ØÔºåÊúâÁÇπÂÉèÊê≠ÁßØÊú®„ÄÇ‰Ω†‰∏çË¶ÅËßâÂæó‰ªÖÂÆûÁé∞‰∏Ä‰∏™ÂäüËÉΩ‰ºöÊãø‰∏çÂá∫ÊâãÔºåÂàùÂ≠¶ËÄÖÂ∞±ÊòØËøôÊ†∑ÁßØÁ¥ØËµ∑Êù•ÁöÑÔºåÊâÄ‰ª•‰Ω†Â§ßÂèØ‰ª•Êää‰Ω†ÂÆûÁé∞ÁöÑÈÇ£‰∫õÂ∞è‰∏úË•øÈÉΩÊï¥ÁêÜÂ•ΩÔºàËøô‰πüÂ∞±ÊòØÊàë‰∏ãÈù¢‰ºöÂÜôÂà∞ÁöÑÔºåÂÅöÂ•ΩÁºñÁ®ãÊú≠ËÆ∞ÔºâÔºåÊñáÊ°£Âíå‰ª£Á†ÅÈÉΩÂ•ΩÂ•Ω‰øùÂ≠òÔºåÂõ†‰∏∫‰∏úË•øÂ§™Â§öÊØîËæÉÂÆπÊòìÂøòÔºåËÄå‰∏îÁºñÁ®ãÊúÄÂøåËÆ≥ÁöÑÂ∞±ÊòØÈáçÂ§çÂ∑•‰ΩúÔºå‰ªéÈõ∂ÂÅöËµ∑„ÄÇ ÁºñÁ®ãÂøÉÂæóÂÖ∂ÂÆûÊàëÊó©Â∞±ÊÉ≥ÂÜô‰∏Ä‰∏™Á≥ªÂàóÔºåÂ∞±Âè´ÔºöÁºñÁ®ãÂøÉÂæóÔºåËøô‰∏™ÈáåÈù¢Êîæ‰∏äÂæàÂ§öÁºñÁ®ã‰∏≠ÁöÑÁªÜËäÇÈóÆÈ¢òÔºåÂ∞±Ë∑üÁΩë‰∏äÁöÑÁ¨îËØïÈù¢ËØïÁªèÂÖ∏‰∏ÄÊ†∑ÔºåÂÖ∂ÂÆûËøô‰∫õ‰∏úË•øËôΩÁÑ∂Âê∏Êî∂ÁöÑÂø´Ôºå‰ΩÜÊúâ‰∫õ‰∏úË•øËøòÊòØÂøÖÈ°ªÁªèËøá‰∫≤Âäõ‰∫≤‰∏∫ÊâçËÉΩÁúüÊ≠£‰Ωì‰ºöÂà∞Ôºå‰ΩÜÊàëÂπ∂‰∏çÂèçÂØπÁõ¥Êé•ÁúãËøôÁßç‰∏úË•øÔºåÂê¶ÂàôÊàëÂ∞±‰∏çÂøÖËä±ÂøÉÊÄùÂéªÂÜô‰∫Ü„ÄÇÁõ¥Êé•ÁúãÂâç‰∫∫ÊÄªÁªìÁöÑÁªèÈ™åÈùûÂ∏∏ÊúâÂ•ΩÂ§ÑÔºåËøôÂ∞±ÂÉèÊ≠¶‰æ†‰∏ñÁïåÈáåÁöÑ‰º†ËæìÂÜÖÂäõÔºå‰∫∫Á±ª‰πãÊâÄ‰ª•ÂèëÂ±ïËµ∑‰∫ÜÊñáÊòéÔºåÂ∞±ÊòØÂõ†‰∏∫Áü•ËØÜÁöÑ‰º†ÈÄíÈùûÂ∏∏ËøÖÈÄüËÄåÊúâÊïàÔºåÊàë‰ª¨Ê†πÊú¨‰∏çÈúÄË¶ÅÂÅö‰ªª‰Ωï‰∫ã‰πãÂâçÈÉΩÈúÄË¶ÅËá™Â∑±ÂÅöËøá‰∏ÄÈÅçÊâçÁü•ÈÅìÊÄé‰πàÂÅöÔºåÊàë‰ª¨ÂæÄÂæÄÈÉΩÂÄüÂä©‰ªñ‰∫∫ÁöÑÁªèÈ™å„ÄÇ ËØ¥Âà∞Ëøô‰∏™ËØùÈ¢òÔºåÊàëËßâÂæóÊúâÂøÖË¶ÅÂº∫Ë∞É‰∏Ä‰∏ãÔºåÁºñÁ®ãÊú≠ËÆ∞ Ëøô‰∏™‰∏úË•ø„ÄÇ‰∏ÄÁõ¥‰ª•Êù•ÊàëÈÉΩÂçÅÂàÜÂª∫ËÆÆÁßØÁ¥ØÂºèÂ≠¶‰π†Ôºå‰∏çÁÆ°ÊòØÂ∑•‰ΩúËøòÊòØÂ≠¶‰π†ÔºåÈÉΩË¶ÅÂÅöÂ•ΩËÆ∞ÂΩïÔºåÁâπÂà´ÊòØÈáçË¶ÅÁöÑÁÇπÔºå‰∏ÄÂÆöË¶ÅËÆ∞‰∏ãÊù•ÔºåÊØîÂ¶ÇÂÆûÁé∞‰∏Ä‰∏™‰∏úË•øÁöÑÊó∂ÂÄôÈÅáÂà∞ÁöÑÂõ∞ÈöæÔºå‰ª•ÂèäÂ¶Ç‰ΩïËß£ÂÜ≥ÔºåÊúâÂì™‰∫õÂÖ≥ÈîÆÁÇπÔºåÁ≠âÁ≠â„ÄÇÂÜôËøô‰∏™‰∏úË•øÊòØ‰∏∫‰∫Ü‰æø‰∫éÂõûÈ°æÔºå‰ª•ÂèäË°°ÈáèËá™Â∑±ÁöÑÂ∑•‰ΩúÈáè„ÄÇ Â≠¶ËÄåÊó∂‰π†‰πãÔºå‰∏ç‰∫¶ËØ¥‰πé ÁõÆÂâçÂÖçË¥πÁöÑ‰∫ëÁ¨îËÆ∞È¶ñÊé®ÔºöÊúâÈÅì‰∫ëÁ¨îËÆ∞ÔºåËôΩÁÑ∂Áî®ÁöÑÊ≤°Êúâ‰∏∫Áü•Á¨îËÆ∞ÁàΩÔºåÂØπ‰∫éÁ©∑Â≠¶ÁîüÊù•ËØ¥ËøòÊòØÊØîËæÉÂèãÂ•ΩÁöÑ„ÄÇÂè¶Â§ñ‰∫∫ÂÆ∂ÂêéÂè∞ÊòØÁΩëÊòìÔºåËÄå‰∏îË∑üÁΩëÊòì‰∫ëÈü≥‰πê„ÄÅÊúâÈÅìËØçÂÖ∏„ÄÅÁΩëÊòìÂÖ¨ÂºÄËØæ„ÄÅÁΩëÊòì‰∫ëËØæÂ†Ç„ÄÅÁΩëÊòì‰∏•ÈÄâÁ≠âÁ≠â‰∫ßÂìÅÊûÑÊàê‰∫Ü‰∏Ä‰∏™ÁΩëÊòìÁöÑÈ´òÂè£Á¢ëÁîüÊÄÅÈìæÔºåÊâÄ‰ª•‰Ω†‰∏ÄÂÆöÁ®ãÂ∫¶‰∏ä‰∏çÁî®ÊãÖÂøÉÂÆÉÂÖ≥Èó®ÂÄíÈó≠„ÄÇ Á¥†ÂÖªËÆøÈóÆÂÖ®ÁêÉÁΩë‰ºóÊâÄÂë®Áü•ÔºåÊàë‰ª¨Â§Ñ‰∫é‰∏Ä‰∏™ÂõΩÂüüÁΩëÂΩì‰∏≠ÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥ÁúãÁúãÂ§ñÈù¢ÁöÑ‰∏ñÁïåÔºåÂøÖÈ°ªË¶ÅÂ≠¶‰ºöÁßëÂ≠¶‰∏äÁΩëÔºàÁøªÂ¢ôÔºâ„ÄÇ‰∫íËÅîÁΩëÊó∂‰ª£ÔºåËøôÊòØÂøÖÂ§áÊäÄËÉΩ„ÄÇÁõÆÂâçÊàëÁî®ÁöÑÊòØ Êê¨Áì¶Â∑•+shadowsocks„ÄÇ ËÑ±Á¶ª Windows ÁöÑË•ÅË§ìÂæàÂ§ö‰∫∫ÂñúÊ¨¢‰∫âËÆ∫ Linux Âíå WindowsÔºåÂ∞±ÂÉèÂêÑÁßçËØ≠Ë®Ä‰πãÈó¥ÁöÑ‰∫âËÆ∫‰∏ÄÊ†∑ÔºåÊó†‰ºëÊó†Ê≠¢„ÄÇ‰ΩÜÂêåÊ†∑ÂæàÂ§ö‰∫∫ÂñúÊ¨¢ËØ¥ÔºåWindows Âíå Linux Êó†ÊâÄË∞ìÔºåÁúüÊ≠£ÁöÑÂºÄÂèëËÄÖÈÉΩÊòØ‰ªÄ‰πàÂ•ΩÁî®Áî®‰ªÄ‰πàÔºå‰∏ªË¶ÅÁúãÈúÄÊ±Ç„ÄÇ ËÄåËøôÈáåÊàëË¶ÅËØ¥ÁöÑÔºåË∑üËøô‰∫õÈÉΩ‰∏ç‰∏ÄÊ†∑ÔºåÂØπ‰∫éÂàùÂ≠¶ËÄÖÊàëÁöÑÂª∫ËÆÆ‰∏ÄÂÆöÊòØÔºöËÑ±Á¶ª Windows ÁöÑË•ÅË§ì„ÄÇÂê¶Âàô‰Ω†Â∞ÜÂæàÈöæÂØπËÆ°ÁÆóÊú∫ÁöÑ CLIÔºàCommand Line InterfaceÔºâ‰∫ßÁîüÁõ¥ËßÇÊÄßÁöÑ‰ΩìÈ™å„ÄÇLinux ÈÄºËø´‰Ω†ÔºåÊää‰Ω†Êö¥Èú≤Âú®‰∏Ä‰∏™Êõ¥ÂéüÂßãÁöÑÁéØÂ¢ÉÔºå‰πüÂ∞±Êõ¥Ë¥¥Ëøë‰∫ãÁâ©ÁöÑÂéüÁêÜÔºåËÆ©‰Ω†ÁúãÁöÑÊõ¥Âä†Ê∏ÖÊ•öÔºåËÆ©‰Ω†ËÑ±Á¶ª‰∏çÂä®ËÑëÂ≠êÂÇªÁìúÂºèÁöÑÈº†Ê†áÁÇπÁÇπÁÇπ„ÄÇËÄå‰πãÊâÄ‰ª•ÈÇ£‰∫õÈ´òÊâãÂñúÊ¨¢ËØ¥ Windows ÂæàÂ•ΩÁî®ÔºåÊ≤°ÂøÖË¶ÅÁî® LinuxÔºåÊòØÂõ†‰∏∫‰ªñ‰ª¨ÈÉΩÊòØËÑ±Á¶ª‰∫Ü‰ΩéÁ∫ßÂ±ÇÊ¨°ÔºåÂ∑≤ÁªèÂà∞ËææÊõ¥È´òÂ±ÇÊ¨°ÁöÑ‰∫∫Ôºå‰ªñ‰ª¨ÂΩìÁÑ∂Êó†ÊâÄË∞ìÔºåWindows Êó©Â∑≤ËíôËîΩ‰∏ç‰∫Ü‰ªñ‰ª¨ÁöÑÂèåÁúº„ÄÇËøôÊòØ‰∏ÄÁßçÁúãÂ±±ËøòÊòØÂ±±ÔºåÁúãÊ∞¥ËøòÊòØÊ∞¥ÁöÑÂ¢ÉÁïå„ÄÇËÄå‰Ω†‰∏çÁªèËøáÂéÜÁªÉÔºåÊòØ‰∏ç‰ºöÂà∞ËææËøô‰∏™Â¢ÉÁïåÁöÑ„ÄÇ ‰∏çË¶Å‰∏ÄËßÅÂà∞ÂëΩ‰ª§Ë°åÂ∞±ÊÅêÊÉßÔºåÊ≠£Â¶Ç‰Ω†‰∏çÂ∫îËØ•‰∏ÄËßÅÂà∞Ëã±ÊñáÁΩëÁ´ôÂíåËã±ÊñáËµÑÊñôÂ∞±ÊÅêÊÉß‰∏ÄÊ†∑ÔºåËøôÁßçÂõûÈÅøÁªùÂØπÊòØÊúâÂÆ≥ÁöÑ„ÄÇ ÂØπ‰∫éÂàùÂ≠¶ËÄÖÔºåLinux ÊØî mac os x Â•ΩÔºåÂõ†‰∏∫ mac ‰πüÂèØ‰ª•ÁÇπÁÇπÁÇπ„ÄÇ ÂΩìÁÑ∂Â¶ÇÊûú‰Ω†Â∑≤ÁªèËÑ±Á¶ª‰∫Ü‰ΩéÁ∫ßÂ±ÇÊ¨°ÔºåÈÇ£‰πàÊàëÁªùÂØπÊõ¥Êé®Ëçê‰Ω†Áî® windowsÔºåÂÖ∂Ê¨°ÊòØ macÔºåÊúÄÂêéÊòØ linux„ÄÇÂéüÂõ†Ëá™ÁÑ∂ÊòØ Windows ÁöÑÂ∫îÁî®ÁîüÊÄÅÊòØÊúÄÂÆåÂñÑÁöÑÔºåÊúÄËÉΩÊª°Ë∂≥Êó•Â∏∏ÈúÄÊ±ÇÁöÑ„ÄÇ LaTex Âíå MarkdownËØ¥Âà∞ÊñáÊ°£ÂíåÁ¨îËÆ∞ÁöÑÁºñÂÜôÔºåÂ∞±ÂæóÊé®Ëøô‰∏§‰∏™‰∏úË•ø‰∫ÜÔºöLaTex ÊòØÂ≠¶ÊúØÁïåÂÜôËÆ∫ÊñáÁöÑÊ†áÂáÜÔºåÁé∞Âú®ÂæÆËΩØÁöÑ word ËΩØ‰ª∂‰ºº‰πé‰πüÊúâ‰∏ÄÂ∏≠‰πãÂú∞‰∫ÜÔºåÊØïÁ´ü LaTex ÊØî word ÈöæÁî®Â§ö‰∫ÜÔºåÁâπÂà´ÊòØÂØπÈùûËÆ°ÁÆóÊú∫Á±ªÁöÑÂ≠¶ËÄÖÊù•ËØ¥„ÄÇLaTex ÊéíÁâàÊïàÊûúÈùûÂ∏∏Ê£íÔºåÊàëÊÑüËßâÔºåÂá∫ÁâàÁ§æÂá∫ÁâàÔºåÁª¥Âü∫ÁôæÁßëËØçÊù°Ôºå‰πüÈÉΩÁî®Âæó‰∏ä LaTex„ÄÇMarkdown ÊòØ github ‰∏äÊñáÊ°£ÁöÑÊ†áÂáÜÔºå‰πüÊòØÁΩëÁªú‰∏äÂêÑÁßçÂçö‰∏ªÁöÑÂÜô‰ΩúÊ†áÂáÜÔºåÊúÄÊúÄÂÖ≥ÈîÆÁöÑÁÇπÊòØÔºåmathjax Ëøô‰∏™ÁªÑÁªáÔºåËÆ© Markdown ÁöÑ‰æøÊç∑Âíå LaTex ÁöÑÂº∫Â§ßÁªìÂêàËµ∑Êù•‰∫ÜÔºå‰Ω†ÂèØ‰ª•Âú® Markdown ‰∏≠ÊèíÂÖ•Áî® LaTex ‰π¶ÂÜôÁöÑÊï∞Â≠¶ÂÖ¨Âºè„ÄÇËøô‰πüÊòØÊàë‰∏çÁî®ÁÆÄ‰π¶ÁöÑÂéüÂõ†ÔºåÁÆÄ‰π¶ËôΩÁÑ∂Êúâ MarkdownÔºåÂç¥‰∏çÊîØÊåÅ mathjaxÔºåÂÖ¨ÂºèË¥¥ÂõæÂèØ‰ª•ÂïäÔºå‰ΩÜ‰Ω†ÊÄª‰∏çËá≥‰∫éÂÜô‰∏™‰∏ä‰∏ãÊ†áÈÉΩË¥¥ÂõæÂêß„ÄÇ Êó∂Ëá≥‰ªäÊó•Ôºà2018-11-01ÔºâÔºåÁÆÄ‰π¶ÁöÑ markdown Â∑≤ÁªèÊîØÊåÅÊï∞Â≠¶ÂÖ¨Âºè‰∫Ü„ÄÇÈô§‰∫Ü mathjax ËøòÊúâ katex ‰πüÊòØ‰∏çÈîôÁöÑÊï∞Â≠¶ÂÖ¨ÂºèÊ∏≤ÊüìÂºïÊìéÔºåkatex ‰ºº‰πéÊØî mathjax ËøòË¶ÅÂø´‰∏ä‰∏Ä‰∫õ„ÄÇ ÂÖ≥‰∫é LaTax ÁöÑÊâãÂÜåÔºåÊàëËøòÊòØÂ∏åÊúõÂ§ßÂÆ∂Ëá™Â∑±ÂéªÊâæÔºåÂú®Ëøô‰∏™Êó∂‰ª£‰∏ÄÂÆöË¶ÅÊääËá™Â∑±ÁöÑÊêúÁ¥¢ËÉΩÂäõÁªÉËµ∑Êù•ÔºåÁâπÂà´ÊòØÂØªÊâæ ÊúÄÊùÉÂ®ÅÁöÑËµÑÊñôÔºåÊúÄ‰∏ÄÊâãÁöÑ‰ø°ÊÅØÔºåÂõ†‰∏∫ËøôÊ†∑‰Ω†ÊâçÊúâÂèØËÉΩÂú®ÊØîÁâπÂ∏ÅÂàöËØûÁîü‰∏ç‰πÖÁöÑÊó∂ÂÄôÂ∞±‰∫ÜËß£Âà∞ÂÆÉÔºà‰∏æ‰∏™‰æãÂ≠êÔºâÔºåÂΩìÁÑ∂ÂæàÂ§ö‰∫∫‰ºöËØ¥ÂÖ∂ÂÆû‰ªñ‰ª¨Êó©Â∞±Áü•ÈÅìËøô‰∏™‰∏úË•øÔºåÂè™‰∏çËøá‰∏ÄÁõ¥‰∏çÊÉ≥ÂéªÊ∑±ÂÖ•‰∫ÜËß£„ÄÇ ÂΩìÁÑ∂Êàë‰πü‰∏ç‰ºöÂêùÂï¨‰∫éÂàÜ‰∫´ÔºåÊàëÂÖàËÆ≤ËÆ≤ÊàëÂ¶Ç‰ΩïÊâæËøô‰ªΩËµÑÊñôÔºöÈ¶ñÂÖà‰ΩøÁî® google ÊêúÁ¥¢ÂºïÊìéÔºåÂÖ∂Ê¨°‰ΩøÁî®Ëã±ÊñáÊêúÁ¥¢ÔºåËæìÂÖ• LaTex mathÔºåÂæóÂà∞Â¶Ç‰∏ãÊúâÁî®ÁöÑÁ≠îÊ°àÔºö LATEX Mathematical Symbols Â§öÁî®ÊêúÁ¥¢Â∞ëÁî®‰π¶Á≠æÔºåÈîªÁÇºËá™Â∑±ÁöÑÊêúÁ¥¢ËÉΩÂäõ Ëá≥‰∫éË¶Å‰∏çË¶ÅÊääÂÆÉ‰ª¨Âä†Ëøõ‰Ω†ÁöÑ‰π¶Á≠æÔºåÊàëÁöÑÂª∫ËÆÆÊòØËøôÁ±ª‰∏úË•øÊ≤°ÂøÖË¶ÅÂä†Ôºå‰Ω†ÂèØ‰ª•‰ªîÁªÜÊÄùËÄÉ‰∏Ä‰∏ãËøô‰∏™ÊêúÁ¥¢Êúâ‰ªÄ‰πàÁâπÂà´ÁöÑÔºåÂØπÔºå‰ªñÂä†‰∫Ü math Ëøô‰∏™ÂÖ≥ÈîÆ‰ø°ÊÅØÔºåÂ¶ÇÊûú‰Ω†Âè™ÊòØÂçïÁ∫ØÁöÑÊêúÁ¥¢ LaTex ÊàñËÄÖ mathÈÇ£‰πà‰Ω†Â∞ÜÂæóÂà∞Â§ßÈáèÊó†ÂÖ≥ÁöÑ‰ø°ÊÅØÔºå‰ΩÜÂÖ∂ÂÆû‰Ω†Âπ≥Â∏∏Áî®ÁöÑÊó∂ÂÄôÁªèÂ∏∏Â∞±Âè™ÊòØÁî®Âà∞LaTexÊï∞Â≠¶ÊñπÈù¢ÁöÑ‰∏úË•øÔºåÂÖ∂‰ªñÁöÑÂü∫Êú¨Áî® MarkDown ÊéíÁâà„ÄÇ ÊàëÂú®‰ΩøÁî® mathjax ÂÜôÊï∞Â≠¶ÂÖ¨ÂºèËøáÁ®ã‰∏≠ÈÅáÂà∞ËøáÁöÑÊúÄÂ§¥ÁóõÁöÑÈóÆÈ¢òÊúâ‰∏§‰∏™Ôºö ‰∏âÈáçÁéØÁßØÂàÜÊó†Ê≥ïÊòæÁ§∫Ôºö$\unicode{x2230}$ÔºàÊàëËøôÈáåÁî®‰∫ÜÁâπÊÆäÁöÑÊäÄÂ∑ßÊâçÂ∞ÜÂÆÉÊòæÁ§∫Âá∫Êù•ÔºâÔºåÊòæÁ§∫‰∏∫Ôºö$\oiiint$ÔºåËØ¶ÊÉÖÂèÇËÄÉÔºömathjax Â∏∏Áî®ÂÖ¨ÂºèËÆ∞ÂΩï markdown Âíå mathjax ÁöÑÂÜ≤Á™ÅÔºåËØ¶ÊÉÖÂèÇËßÅÔºöHexo+Markdown+MathJax Êê≠Âª∫‰∏™‰∫∫ÂçöÂÆ¢ ÁâàÊú¨ÁÆ°ÁêÜÂ∑•ÂÖ∑‰∏ÄÊèêÂà∞ÁâàÊú¨ÁÆ°ÁêÜÂ∑•ÂÖ∑ÔºåÁé∞Âú®ÊúÄÊµÅË°åÁöÑÂ∞±ÊòØ git ‰∫Ü„ÄÇÊúÄÂü∫Êú¨ÁöÑÊòØË¶ÅÁêÜËß£‰∏ÄÁÇπ git ÁöÑÂéüÁêÜÔºågit ÁöÑ‰ΩúÁî®‰∏ªË¶Å‰ΩìÁé∞Âú®ÂèØ‰ª•ËøõË°åÊñáÊú¨ÂÜÖÂÆπÁöÑÊØîËæÉÔºåËÄå‰∏çÊòØÁÆÄÂçïÁ≤óÊö¥ÁöÑÂ∞ÜÂèëÁîü‰øÆÊîπÁöÑÊñá‰ª∂Áõ¥Êé•ÊõøÊç¢Êéâ„ÄÇÂ§ö‰∫∫Âçè‰ΩúÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÊÉ≥ÂáèÂ∞ëÂÜ≤Á™ÅÔºåÊúâ‰∏§ÁßçÊâãÊÆµÔºåÊéíÈ¶ñ‰ΩçÁöÑÂ∞±ÊòØÂã§ÂêàÂπ∂ÔºåÂÖ∂Ê¨°ÊòØÂàÜÂ∑•ÊòéÁ°ÆÔºå‰∏çË¶ÅÂ§ö‰∏™‰∫∫ÂÅöÂêå‰∏Ä‰ª∂‰∫ãÔºàÊîπÂêå‰∏Ä‰∏™Âú∞ÊñπÔºâ„ÄÇ Â∑•ÂÖ∑ ÁºñËæëÂô®ÔºöËôΩÁÑ∂Áé∞Âú®ÁºñÁ®ãÈÉΩÁî® IDEÔºå‰ΩÜÂπ≥Â∏∏Â§ÑÁêÜ‰∏Ä‰∫õÊñáÊú¨ÁöÑÊó∂ÂÄôÔºåËøòÊòØË¶ÅÁî®Âà∞ÊôÆÈÄöÁöÑÊñáÊú¨ÁºñËæëÂô®ÔºåÊàëÁõÆÂâç‰ΩøÁî®ÁöÑ‰∫ã sublime text3ÔºöÁ≤æÈÄö‰∏ÄÊ¨æÁºñËæëÂô®‰πã sublime text3 Êó∂Ëá≥‰ªäÊó•Ôºågithub Â∑≤ÁªèË¢´ÂæÆËΩØÊî∂Ë¥≠ÔºåËÄåÂæÆËΩØÂäõÊé®ÁöÑ vscode ÁºñËæëÂô®‰πüÊàê‰∏∫‰∫Ü‰∏ªÊµÅ„ÄÇÂ∞§ÂÖ∂ÊòØËá™‰ªéÊàëÂÅöÂâçÁ´Ø‰ª•Êù•ÔºåÈÉΩÊòØÁî® vscode Êï≤‰ª£Á†Å„ÄÇ ‰∫íËÅîÁΩëÊó∂‰ª£ÁöÑËÉΩÂäõ ‰æùÈù†‰∫íËÅîÁΩëÂíåËÆ°ÁÆóÊú∫Ëß£ÂÜ≥ÈóÆÈ¢òÁöÑËÉΩÂäõ ÊêúÁ¥¢ËÉΩÂäõ ÊâæËµÑÊ∫êÁöÑËÉΩÂäõ ‰∏æÂá†‰∏™‰æãÂ≠êÔºö ËÖæËÆØËßÜÈ¢ëÁöÑËµÑÊ∫êÂ•ΩÂ§öÈÉΩË¶Å VIPÔºå‰ΩÜÊòØÂú® YouTube ‰∏äÂæàÂ§öÂèØ‰ª•ÊâæÂà∞ÂÖçË¥πÁöÑËµÑÊ∫êÔºåÊØïÁ´üÂ¢ôÂ§ñÈù¢„ÄÇËÄåÂæàÂ§öÁæéÂâßËã±ÂâßËµÑÊ∫êÂàôÈÉΩÂú®ÁôæÂ∫¶‰∫ë‰∏äÈù¢ÔºåÂèØ‰ª•ËØ¥ÊòØ‰∫íÁõ∏‰º§ÂÆ≥ÁöÑÂ±ÄÈù¢„ÄÇ B Á´ô‰∏äÁöÑËµÑÊ∫êÁúüÁöÑÂ§öÔºåÊúâ‰∏çÂ∞ëÁöÑÊïôËÇ≤Á±ªÁöÑ‰ªòË¥πËßÜÈ¢ëÂú® B Á´ô‰∏äÂèØ‰ª•ÂÖçË¥πÁúãÔºå‰ΩÜÈöèÊó∂ÊúâË¢´Êü•Â∞ÅÁöÑÂèØËÉΩÔºåÊâÄ‰ª•ÊâπÈáè‰∏ãËΩΩ B Á´ôÁöÑËßÜÈ¢ëÊòØÊØîËæÉÂ∏∏ËßÅÁöÑÈúÄÊ±Ç„ÄÇ github ‰∏äÁöÑÁîµÂ≠ê‰π¶ËµÑÊ∫êÁõ∏ÂΩìÂ§öÔºåÂêÑÁ±ªÁ†¥Ëß£ËΩØ‰ª∂‰πüÊå∫Â§öÁöÑÔºåÁî®Êù•Â≠¶‰π†ÁöÑÂºÄÊ∫êÈ°πÁõÆ‰πüÊòØÊï∞‰∏çËÉúÊï∞„ÄÇ‰ª•Ââç‰∏ãËΩΩÁîµÂ≠ê‰π¶ÊàëÈÉΩÊòØÁî®ÂæÆÁõòÂíåÁôæÂ∫¶ÁΩëÁõòÁöÑÔºåÊó∂Èó¥ÂÜçÂæÄÂâçÂàôÊòØÊñ∞Êµ™Áà±ÈóÆÁü•ËØÜ‰∫∫‰∫Ü„ÄÇÁ†¥Ëß£ËΩØ‰ª∂ÂòõÔºåÁ±ª‰ºº kmspicoÔºàWindows ÁöÑÁ†¥Ëß£ËΩØ‰ª∂ÔºâÔºågithub ‰∏äËΩªÊùæÊâæÂà∞„ÄÇkcptun ÁöÑ mac ÁâàÔºàkcptun darwinÔºâËΩªÊùæÊâæÂà∞„ÄÇ Ë∞∑Ê≠åÁªèÂ∏∏ËÉΩÊêúÂà∞Â§ßÂ≠¶ËØæ‰ª∂ÊàñËÄÖÊúçÂä°Âô®ÁöÑÊüê‰∫õÂÜÖÈÉ®ËµÑÊñô„ÄÇ]]></content>
  </entry>
  <entry>
    <title><![CDATA[Ê∏∏ÊàèÂºÄÂèë‰πãÊóÖ]]></title>
    <url>%2Fblog%2Fgame-programming%2Findex.html</url>
    <content type="text"><![CDATA[‰∏ÄÁõ¥ÊÉ≥Ëá™Â∑±ÂÅö‰∏™‰ªÄ‰πàÈ°πÁõÆÔºåÂèØ‰ª•‰∏∫‰πãÂ•ãÊñóÁªàË∫´ÁöÑÈÇ£ÁßçÔºåÊÉ≥Êù•ÊÉ≥ÂéªÔºåËøòÊòØÂÜ≥ÂÆöË∑üÁÇºÂì•‰∏ÄËµ∑ÂÅö‰∏™Ê∏∏ÊàèÔºå‰ΩÜÊàëÊòØ‰∏™Ê∏∏ÊàèÂºÄÂèëÂ∞èÁôΩÔºåÂÆåÂÖ®ÁöÑ 0 Âü∫Á°Ä„ÄÇÊâÄ‰ª•Êñ∞ÂºÄ‰∫ÜËøô‰∏™ÁØáÁ´†ÔºåÂÜ≥ÂÆöË∑üËøõËÆ∞ÂΩï‰∏Ä‰∏ãËá™Â∑±Â≠¶‰π†Ê∏∏ÊàèÂºÄÂèëÁöÑËøáÁ®ã„ÄÇËøô‰∏™‰∏ìÈ¢ò‰πüÊòØ‰ª•Êó∂Èó¥‰∏∫Á∫ø„ÄÇ 2023-05-21Ê∏∏ÊàèÁ≠ñÂàíÔºö 2d ÂÉèÁ¥†È£éÔºåË¶ÅÊúâÂïÜÂ∫óÔºåÂ§ßÈáèÊ∏∏ÊàèÂÜÖÂ∞èÊ∏∏ÊàèÔºåÊØîÂ¶ÇÊòüÈú≤Ë∞∑ÈáåÈù¢Ê§çÂÖ•È≠îÂ°îÔºåÂú®È≠îÂ°îÈáåÈù¢Âà∑ÁöÑÊùêÊñô‰πüÂèØ‰ª•Âú®ÂºÄÊîæ‰∏ñÁïåÁî®„ÄÇÊòüÈú≤Ë∞∑Êú¨Ë∫´‰πüÊúâÁüøÊ¥ûÔºåËÄå‰∏îÁüøÊ¥ûÁöÑË°ÄÊù°‰πüÂè™Âú®ÁüøÊ¥ûÊúâÊïà„ÄÇÂèØ‰ª•ÁßçÁßçÁî∞ÔºåÂà∑‰∏Ä‰∫õÊùêÊñô„ÄÇÁîöËá≥ÂèØ‰ª•Âú®ÈáåÈù¢Â∏ÉÁΩÆ‰∏Ä‰∏™Â°îÈò≤ÔºåÈò≤Ê≠¢ÊÄ™Áâ©ÂÖ•‰æµÔºåÂà∑ÊÄ™Áâ©ÊùêÊñô„ÄÇÂ§ßÈáèËèúÂçïÂíåÂºÄÊîæ‰ªªÂä°„ÄÇÂÉèÊòüÈú≤Ë∞∑‰∏ÄÊ†∑Êêû‰∏™Â∞èÈïáÔºåÂ∞èÈïá‰∏äÊúâÂá†‰∏™ÂÖ¨ÂëäÁâåÔºå‰∏äÈù¢ÂèëÂ∏É NPC ÁöÑ‰ªªÂä°„ÄÇ‰πüÂèØ‰ª•Â≠¶ÊòüÈú≤Ë∞∑ÊêûÊó•ÊúüÔºåÁâπÂÆöÊó•ÊúüÊúâÁâπÂÆöÁöÑ‰∫ã‰ª∂Ëß¶Âèë„ÄÇÂèØ‰ª•Âú®Êú®Âå†ÈÇ£Èáå‰π∞Êó•ÂéÜÊåÇÂú®ÂÆ∂Èáå„ÄÇÂØπ‰∫ÜÔºåÂèØ‰ª•Ë£ÖÈ•∞ÂÆ∂ÈáåÔºåÂºÑÂæàÂ§öË£ÖÈ•∞ÊÄßÁöÑÁâ©‰ª∂ÔºàÂ•≥ÊÄßÂíåÂ∞èÂ≠©Â≠êÈÉΩÁâπÂà´ÂñúÊ¨¢Ôºâ„ÄÇ‰πüÂèØ‰ª•Â≠¶ÊòüÈú≤Ë∞∑ÂºÑ‰∏™ÁªøÊ¥≤ËµåÂú∫ÔºåÈáåÈù¢ÊëÜÂêÑÁßçÂêÑÊ†∑ÁöÑËÄÅËôéÊú∫ÂíåËµåÂçöÂ∞èÊ∏∏Êàè„ÄÇÂèØ‰ª•Â¢ûÂä†‰∏Ä‰∏™Á±ª‰ººÊòüÈú≤Ë∞∑ÂßúÂ≤õÁöÑÂú∞ÊñπÔºåÊõ¥ÂèØ‰ª•ÊãìÂ±ïÂ§ö‰∏™Âú∞ÂõæÂå∫ÂüüÔºåÊØè‰∏™Âå∫ÂüüÈÉΩÊúâËá™Â∑±ÁöÑÁâπÊÆäÊùêÊñô„ÄÇ‰πüÂèØ‰ª•ÂçáÁ∫ßÂ∑•ÂÖ∑ÔºåÁîöËá≥ËÆæÁΩÆ‰∏Ä‰∏™ÁßëÊäÄÊ†ëÔºåÈ≠îÊ≥ïÊ†ëÊù•ÁÇπ‰∫Æ„ÄÇÂèØ‰ª•ÂèëÂ±ïËÅå‰∏öÔºåÂä†ÁâπÂÆöÊäÄËÉΩÁÇπÂ±ûÊÄßÁÇπ„ÄÇÊúÄÈáçË¶ÅÁöÑÂΩìÁÑ∂ÊòØÂèØ‰ª•Â§ö‰∫∫Âú®Á∫ø‰∏ÄËµ∑Áé©„ÄÇ 2023-05-10miloyip ÁöÑÊ∏∏ÊàèÂºÄÂèëÊé®Ëçê‰π¶Á±çÔºögame-programmer-zh-cn.pdf 2023-05-09Ë¶ÅÊÉ≥ÂÅöÂá∫Â•ΩÁöÑÊ∏∏ÊàèÔºåÊúâ‰∏ÄÊú¨‰π¶ÂèØ‰ª•ÂÖàÁúãÁúãÔºöÊ∏∏ÊàèËÆæËÆ°Ëâ∫ÊúØÔºàÁ¨¨ 2 ÁâàÔºâ 2023-04-26È¶ñÂÖàÊàëËßâÂæóË¶ÅÁÜüÊÇâ Unity ÁöÑ API]]></content>
  </entry>
  <entry>
    <title><![CDATA[ÂâçÁ´ØÈù¢ËØïÊåáÂçó]]></title>
    <url>%2Fblog%2Finterview%2Findex.html</url>
    <content type="text"><![CDATA[ÁºñÁ®ãÈ¢òÂØªÊâæÂ≠óÁ¨¶‰∏≤‰∏≠Âá∫Áé∞ÊúÄÂ§öÁöÑÂ≠óÁ¨¶ÊÄé‰πàÂÆûÁé∞ÔºüÈÅçÂéÜ‰∏ÄÈÅçÂ≠óÁ¨¶‰∏≤ÔºåÁî®‰∏™ map ËÆ∞ÂΩïÊØè‰∏™Â≠óÁ¨¶Âá∫Áé∞ÁöÑÊ¨°Êï∞ÔºåÁÑ∂ÂêéÈÅçÂéÜ‰∏ÄÈÅç mapÔºåÂèñÂá∫Âá∫Áé∞Ê¨°Êï∞ÊúÄÂ§öÁöÑÂ≠óÁ¨¶ 1234567891011121314151617181920function getMaxChar(str: string): string &#123; const map = &#123;&#125;; for (let i = 0; i &lt; str.length; i++) &#123; const c = str[i]; if (!map[c]) &#123; map[c] = 1; &#125; else &#123; map[c]++; &#125; &#125; let max = 0; let maxChar; for (let k of Object.keys(map || &#123;&#125;)) &#123; if (max &lt; map[k]) &#123; max = map[k]; maxChar = k; &#125; &#125; return maxChar;&#125; Êï∞ÁªÑÊâÅÂπ≥Âåñ(nest to flat)ÂÆûÁé∞‰∏Ä‰∏™Array.prototype.flat()Ôºåleetcode ÂØπÂ∫îÈ¢òÁõÆÔºö2625. ÊâÅÂπ≥ÂåñÂµåÂ•óÊï∞ÁªÑ ÊâÅÂπ≥Êï∞ÁªÑÂµåÂ•óÂåñ(flat to nest) ËèúÂçïÊï∞ÁªÑËΩ¨Êç¢‰∏∫ÂµåÂ•óÊ†ëÂΩ¢ÁªìÊûÑÔºå‰ΩÜÁ§∫‰æãÂè™Êúâ‰∏§Á∫ß 123456789101112[ &#123; id: 1, menu: 'Ê∞¥Êûú', level: 1 &#125;, &#123; id: 2, menu: 'Ê©òÂ≠ê', level: 2, parentId: 1 &#125; // ...]// ËΩ¨Êç¢‰∏∫[ &#123; id: 1, menu: 'Ê∞¥Êûú', level: 1, children: [&#123; id: 2, menu: 'Ê©òÂ≠ê', level: 2, parentId: 1 &#125;] &#125;, // ...] ‰ª•‰∏ãÊòØÊàëÁªôÂá∫ÁöÑËß£Á≠îÔºåÊú™ÁªèËøá‰∏•Ê†ºÊµãËØï 12345678910111213141516171819202122232425262728293031323334353637383940414243const a = [ &#123; id: 2, menu: "Ê©òÂ≠ê", level: 2, parentId: 1, &#125;, // ... &#123; id: 1, menu: "Ê∞¥Êûú", level: 1, &#125;,];function flat2nest(array) &#123; const res = []; const map = &#123;&#125;; for (let index = 0; index &lt; array.length; index++) &#123; if (map[array[index].id]) &#123; map[array[index].id] = &#123; ...array[index], children: map[array[index].id].children, &#125;; &#125; else &#123; map[array[index].id] = &#123; ...array[index] &#125;; &#125; if (!array[index].parentId) &#123; res.push(map[array[index].id]); &#125; else &#123; if (!map[array[index].parentId]) &#123; map[array[index].parentId] = &#123;&#125;; &#125; if (!map[array[index].parentId].children) &#123; map[array[index].parentId].children = []; &#125; map[array[index].parentId].children.push(&#123; ...array[index] &#125;); &#125; &#125; return res;&#125;const b = flat2nest(a);console.log(b); ÂÆûÁé∞‰∏Ä‰∏™Ê∑±Êã∑Ë¥ùÂÆûÁé∞ PromiseJavaScript Âü∫Á°ÄÊúÄÂü∫Á°ÄÁöÑ‰∏§‰∏™Áü•ËØÜÁÇπÔºö Prototype ChainÔºàÂéüÂûãÈìæÔºâ JavaScript ÂéüÂûãÂíåÂéüÂûãÈìæ JavaScript ÂØπË±°ÁöÑÁªßÊâøÊúâÂì™Âá†ÁßçÔºü closureÔºàÈó≠ÂåÖÔºâ JavaScript ËØçÊ≥ï‰ΩúÁî®Âüü JavaScript ÊâßË°å‰∏ä‰∏ãÊñáÊ†à JavaScript ÊâßË°å‰∏ä‰∏ãÊñá‰πãÂèòÈáèÂØπË±° JavaScript ÊâßË°å‰∏ä‰∏ãÊñá‰πã‰ΩúÁî®ÂüüÈìæ JavaScript Èó≠ÂåÖ ÁªìÂêàËøô‰∏§‰∏™Áü•ËØÜÁÇπÂ≠¶‰π†ÔºåÊàë‰ª¨ÂèëÁé∞ÔºåÂéüÂûãÈìæÂ∞±ÊòØÁî®Êù•Êñπ‰æøÊü•ÊâæÂØπË±°‰∏äÁöÑÂèòÈáèÔºåÈó≠ÂåÖÂ∞±ÊòØÊñπ‰æøÊü•ÊâæËá™Áî±ÂèòÈáèÔºåÊú¨Ë¥®‰∏äÈÉΩÊòØ‰∏∫‰∫ÜËÆ© JavaScript Ëøô‰∏™ÁºñÁ®ãËØ≠Ë®ÄÊõ¥Âä†‰∏∞ÂØåÔºåÁÅµÊ¥ªÔºåÂ•ΩÁî®ÔºåÊñπ‰æøÁ®ãÂ∫èÂëòÂÜôÂá∫Êõ¥Âä†Áü≠Â∞èÁ≤æÊÇçÔºåÊòì‰∫éÂ∞ÅË£ÖÂíåÂ§çÁî®ÁöÑ‰ª£Á†Å„ÄÇ ÁÆ≠Â§¥ÂáΩÊï∞ Promise A+ ËßÑËåÉ Event LoopÔºà‰∫ã‰ª∂Âæ™ÁéØÔºâ ÂÜÖÂ≠òÂõûÊî∂ try-catchÔºö try-catch ËÉΩÊäõÂá∫ promise ÁöÑÂºÇÂ∏∏Âêó ÊÄé‰πàÂà§Êñ≠ÂØπË±°‰∏∫Á©∫Ôºü Á±ªÂûãÂà§Êñ≠ JavaScript ÊúâÂá†ÁßçÂü∫Á°ÄÊï∞ÊçÆÁ±ªÂûãÔºüSymbol Âíå BigInt ÊòØ‰ªÄ‰πàÊó∂ÂÄôÂºïËøõÁöÑÔºü typeofÊúâÂá†ÁßçÁ±ªÂûãÔºüÂàÜÂà´ÊòØ‰ªÄ‰πàÔºü Object.prototype.toString()ÊúâÂá†ÁßçÁ±ªÂûãÔºüÂàÜÂà´ÊòØ‰ªÄ‰πàÔºü Ê®°Êãü JavaScript ÂéüÁîüÊñπÊ≥ï Ê®°ÊãüÂÆûÁé∞ JavaScript ÁöÑ new Êìç‰ΩúÁ¨¶ Ê®°ÊãüÂÆûÁé∞ JavaScript ÁöÑ apply Âíå call ÊñπÊ≥ï Ê®°ÊãüÂÆûÁé∞ JavaScript ÁöÑ bind ÊñπÊ≥ï Áü•‰∏çÁü•ÈÅìÊúÄÊñ∞ÁöÑ url ÂèÇÊï∞Ëé∑ÂèñÁöÑ APIÔºü JavaScript ÂéÜÂè≤ 5 ÂàÜÈíüÂΩªÂ∫ïÊêûÊáÇ js ÁöÑÁâàÊú¨ÊºîËøõÔºàES5,ES6,ES2015 ÁöÑÂå∫Âà´Ôºâ - Áü•‰πé ES6 Â∏¶Êù•‰∫ÜÂì™‰∫õÊñ∞‰∏úË•øÔºü ECMAScript 2015 Language Specification ‚Äì ECMA-262 6th Edition varÔºåletÔºåconst ÁöÑÂå∫Âà´ ÊµèËßàÂô®ÁéØÂ¢É window.parent node ÁéØÂ¢ÉCSS Âü∫Á°Ä Ë°åÂÜÖÂÖÉÁ¥†ÂíåÂùóÁ∫ßÂÖÉÁ¥† ÁõíÊ®°Âûã ‰º™Á±ªÂíå‰º™ÂÖÉÁ¥† CSS ÂâçÁºÄ BFC ÂûÇÁõ¥Â±Ö‰∏≠ÊúâÂá†ÁßçÊñπÂºèÔºü ÂûÇÁõ¥Â±Ö‰∏≠ÂíåÊ∞¥Âπ≥Â±Ö‰∏≠ position text-overflowÔºàÊñáÊú¨Ê∫¢Âá∫Ôºâ flex: 2 ÊúâÁî®ËøáÂêóÔºüÂ§öÂàóÂ∏ÉÂ±ÄÊÄé‰πàÂÆûÁé∞Ôºü ÂâçÁ´ØÁºñÁ®ãËåÉÂºè debounce, throttleÔºàÈò≤ÊäñÂíåËäÇÊµÅÔºâ EventBusÔºà‰∫ã‰ª∂ÊÄªÁ∫øÔºâ ÊµèËßàÂô®Áõ∏ÂÖ≥ ÊµèËßàÂô®‰∫ã‰ª∂ ‰∫ã‰ª∂ÂßîÊâò Repaint, ReflowÔºàÈáçÁªòÂíåÂõûÊµÅÔºâ ÂêåÊ∫êÁ≠ñÁï•ÂíåË∑®Âüü CSRF Âíå XSS ÊîªÂáª ÁΩëÁªúHTTP HTTP Áä∂ÊÄÅÁ†Å GET ËØ∑Ê±ÇÂíå POST ËØ∑Ê±ÇÁöÑÂå∫Âà´ HTTP Âíå HTTPS ÁöÑÂå∫Âà´ HTTP ÁºìÂ≠ò TCP/IP TCP ‰∏∫‰ªÄ‰πàË¶Å‰∏âÊ¨°Êè°ÊâãÂõõÊ¨°Êå•Êâã typescript type Âíå interface ÁöÑÂå∫Âà´ reactvue Vue ÁªÑ‰ª∂ÈÄö‰ø°ÊñπÂºèÊúâÂì™‰∫õÔºåÂêÑÊúâ‰ªÄ‰πàÁâπÁÇπÔºü Vue È°πÁõÆÊÄé‰πàÊèêÈ´òÈ°πÁõÆÊÄßËÉΩÔºü‰∏æ‰∏Ä‰∫õ‰æãÂ≠ê vue3 Âú®Êüê‰∫õÂú∫ÊôØÊØî vue2 ÊÄßËÉΩÊõ¥‰ΩéÔºå‰∏∫‰ªÄ‰πà‰ºöËøôÊ†∑Ôºü ÂÖ∂‰ªñ Êñ∞ÁâàÊú¨ÂèëÂ∏ÉÂêéÔºåÊÄé‰πàÁî®ÊäÄÊúØÊâãÊÆµÈÄöÁü•Áî®Êà∑Âà∑Êñ∞È°µÈù¢Ôºü ÊÄßËÉΩ‰ºòÂåñÊï∞ÊçÆÊÄé‰πà‰∏äÊä•„ÄÅÂàÜÊûêÔºü element ui table Âê∏È°∂ÊÄé‰πàÂÅöÔºåÊªöÂä®ÊÄé‰πàÂ§ÑÁêÜÁ≠â TS Áî®ÁöÑÂ§öÂêóÔºü Â∑•‰Ωú‰∏≠Ëß£ÂÜ≥ÁöÑÊúÄÊúâÊàêÂ∞±ÊÑüÁöÑ‰∫ãÔºü ‰Ω†Âú®Â∑•‰Ωú‰∏≠ÈÅáÂà∞ËøáÊúÄÂ§ßÁöÑÊåëÊàòÊòØ‰ªÄ‰πàÔºåÊÄé‰πàËß£ÂÜ≥ÁöÑÔºü Âú®Âõ¢ÈòüÂçè‰ΩúÊó∂ÔºåÊúâÈÅáÂà∞Ëøá‰ªÄ‰πàÈóÆÈ¢òÂêóÔºåÂ¶ÇÊûúÊúâÂÜ≤Á™Å‰Ω†‰ºöÊÄé‰πàÂÅö ‰Ω†Êúâ‰ªÄ‰πàÊÉ≥ÈóÆÊàëÁöÑÔºü ‰Ωé‰ª£Á†Å„ÄÅÊÄé‰πàÂä®ÊÄÅÂä†ËΩΩÊ∏≤Êüì‰∏Ä‰∏™ÁªÑ‰ª∂ÔºåÂ∫ïÂ±ÇÊÄé‰πàÂÆûÁé∞Ôºü]]></content>
  </entry>
  <entry>
    <title><![CDATA[leetcodeÂêàÈõÜ]]></title>
    <url>%2Fblog%2Fleetcode%2Findex.html</url>
    <content type="text"><![CDATA[ËøôÈáåÊòØÊàëÁöÑ leetcode ÂÅöÈ¢òÁ¨îËÆ∞Ôºå‰ª•ÂâçÊòØÁî®ÂÜô‰∏ÄÁØáÊñáÁ´†ÁöÑÊñπÂºèÂèëÂ∏É leetcode ÂÅöÈ¢òÁ¨îËÆ∞ÁöÑÔºåÁé∞Âú®ËßâÂæóÔºåÊàñËÆ∏ÂºÄ‰∏™‰∏ìÊ†èÊõ¥Â•ΩÔºåÂõ†‰∏∫ÊúâÊØèÊó•‰∏ÄÈ¢òÁöÑÊâìÁÆóÔºåÂ∞±‰∏çÁî®Ê∞¥ÈÇ£‰πàÂ§öÁØáÊñáÁ´†‰∫Ü„ÄÇËá™‰ªéÊàëÂºÄÂßã‰ª•Êó∂Èó¥‰∏∫ÂàÜÁ±ªÁöÑÊñπÂºèÁî®‰∏ìÊ†èÊù•ËÆ∞ÂΩïËá™Â∑±ÁöÑÊØèÊó•Ê¥ªÂä®ÔºåÊàëÂèëÁé∞Ëá™Â∑±Ë°®ËææÁöÑÊ¨≤Êúõ‰πüÂèòÂº∫‰∫ÜÔºåËÆ∞ÂΩïÂíåÂõûËøáÂ§¥Êù•Ê£ÄÁ¥¢Ëøô‰∫õ‰ø°ÊÅØÁöÑÊïàÁéá‰πüÈÉΩÊèêÈ´ò‰∫ÜÔºåÁúüÊòØ‰∏çÈîôÁöÑÊñπÊ≥ï„ÄÇ 2025-06-242200. Find All K-Distant Indices in an Array 123456789101112131415161718function findKDistantIndices(nums: number[], key: number, k: number): number[] &#123; let indexes = [] for(let i=0;i&lt;nums.length;i++)&#123; if(nums[i] === key)&#123; indexes.push(i); &#125; &#125; let res= []; for(let i=0;i&lt;nums.length;i++)&#123; for(let j=0;j&lt;indexes.length;j++)&#123; if(Math.abs(i-indexes[j])&lt;=k)&#123; res.push(i); break; &#125; &#125; &#125; return res;&#125;; Âú®ÂÅöËøôÈ¢òÁöÑÊó∂ÂÄôÔºåÊàëËé´ÂêçÂÖ∂Â¶ôËÆ§‰∏∫Ë¶ÅÂä†nums[i]&lt;=nums[indexes[j]]ÔºåÁúãÊù•‰∏çÊ≠¢ AI ÊúâÂπªËßâÔºå‰∫∫‰πüÊúâÂπªËßâ„ÄÇ ÂÖ∂ÂÆûÂè™Ë¶ÅÂà§Êñ≠Â§öÂ∞ëË∑ùÁ¶ªÂÜÖÊúâÊ≤°ÊúâÁõÆÊ†áÊï∞Â∞±ÂèØ‰ª•‰∫ÜÔºåÂè™ÈúÄË¶Å‰∏Ä‰∏™Êù°‰ª∂ÔºöMath.abs(i-indexes[j])&lt;=k„ÄÇÊ†πÊú¨Â∞±Ê≤°ÊúâÂ§ßÂ∞èÂÖ≥Á≥ªÁöÑÈôêÂà∂ 2025-06-233442. Maximum Difference Between Even and Odd Frequency I 123456789101112131415161718192021function maxDifference(s: string): number &#123; const map = &#123;&#125;; let minEven = Infinity; let maxOdd = 0; for(let i=0;i&lt;s.length;i++)&#123; if(map[s[i]] !== undefined)&#123; map[s[i]]++; &#125; else &#123; map[s[i]]=1; &#125; &#125; for(let k of Object.keys(map||&#123;&#125;))&#123; if(map[k]%2 === 0)&#123; minEven = Math.min(map[k], minEven) &#125; else &#123; maxOdd = Math.max(map[k], maxOdd) &#125; &#125; // console.log('maxOdd: ', maxOdd, 'minEven: ', minEven) return maxOdd - minEven;&#125;; ËøôÈ¢ò‰∏ÄÂºÄÂßãÊàëÊúâ‰∏§‰∏™ËØØËß£Ôºö ‰ª•‰∏∫ÂÅ∂Êï∞‰πüË¶ÅÂèñÊúÄÂ§ßÁöÑ ÁÆóÊúÄÂÄºÁöÑÊó∂ÂÄôÊîæÂà∞ÈÅçÂéÜÂ≠óÁ¨¶‰∏≤ÁöÑÂæ™ÁéØÈáåÈù¢Âéª‰∫ÜÔºåÂØºËá¥ËÆ°ÁÆóÂÅ∂Êï∞ÁöÑÊó∂ÂÄô‰πüÊääÊúÄÂ§ßÂ•áÊï∞Êõ¥Êñ∞‰∫Ü 2024-02-18589. N ÂèâÊ†ëÁöÑÂâçÂ∫èÈÅçÂéÜ Ê†ëÁöÑÂâçÂ∫èÈÅçÂéÜ 1234567891011121314151617181920/** * Definition for node. * class Node &#123; * val: number * children: Node[] * constructor(val?: number) &#123; * this.val = (val===undefined ? 0 : val) * this.children = [] * &#125; * &#125; */function preorder(root: Node | null): number[] &#123; if (root == null) &#123; return []; &#125; const res = [root.val]; root.children.forEach((p) =&gt; res.push(...preorder(p))); return res;&#125; 2023-12-111631. ÊúÄÂ∞è‰ΩìÂäõÊ∂àËÄóË∑ØÂæÑ ‰∫åÂàÜÊü•Êâæ+BFS ÊúâÁßç‰ª•ÂâçÂÅöËøáÁ±ª‰ººÈ¢òÁõÆÁöÑÊÑüËßâ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758function minimumEffortPath(heights: number[][]): number &#123; const arr = heights.flat(); const x = Math.abs(Math.min(...arr) - Math.max(...arr)); console.log(x); return binarySearch(0, x); function binarySearch(start: number, end: number) &#123; const mid = Math.floor((start + end) / 2); if (bfs(heights, [[0, 0]], new Set(), mid)) &#123; if (start &gt;= end) &#123; return end; &#125; return binarySearch(start, mid - 1); &#125; else &#123; if (start &gt;= end) &#123; return end + 1; &#125; return binarySearch(mid + 1, end); &#125; &#125;&#125;function bfs( heights: number[][], queue: number[][], visited: Set&lt;string&gt;, x: number) &#123; while (queue.length) &#123; const [i, j] = queue.shift(); if (visited.has(i + "," + j)) &#123; continue; &#125; if (i === heights.length - 1 &amp;&amp; j === heights[0].length - 1) &#123; return true; &#125; if (i - 1 &gt;= 0 &amp;&amp; Math.abs(heights[i][j] - heights[i - 1][j]) &lt;= x) &#123; queue.push([i - 1, j]); &#125; if ( i + 1 &lt; heights.length &amp;&amp; Math.abs(heights[i][j] - heights[i + 1][j]) &lt;= x ) &#123; queue.push([i + 1, j]); &#125; if (j - 1 &gt;= 0 &amp;&amp; Math.abs(heights[i][j] - heights[i][j - 1]) &lt;= x) &#123; queue.push([i, j - 1]); &#125; if ( j + 1 &lt; heights[0].length &amp;&amp; Math.abs(heights[i][j] - heights[i][j + 1]) &lt;= x ) &#123; queue.push([i, j + 1]); &#125; visited.add(i + "," + j); &#125; return false;&#125; 2023-11-192625. ÊâÅÂπ≥ÂåñÂµåÂ•óÊï∞ÁªÑ ËøôÈ¢òÊòØÊàëÂú®Êï¥ÁêÜÂâçÁ´ØÈù¢ËØïÈ¢òÁöÑÊó∂ÂÄôÔºå‰∏∫‰∫ÜÊµãËØïÊàëÁöÑ‰ª£Á†ÅÊòØÂê¶Ê≠£Á°ÆÊâæÂá∫Êù•ÁöÑ„ÄÇ 12345678910111213141516171819type MultiDimensionalArray = (number | MultiDimensionalArray)[];var flat = function ( array: MultiDimensionalArray, nums: number): MultiDimensionalArray &#123; if (nums &lt;= 0) &#123; return array; &#125; const res: MultiDimensionalArray = []; for (let index = 0; index &lt; array.length; index++) &#123; if (Array.isArray(array[index])) &#123; res.push(...flat(array[index] as MultiDimensionalArray, nums - 1)); &#125; else &#123; res.push(array[index]); &#125; &#125; return res;&#125;; 2023-11-152656. K ‰∏™ÂÖÉÁ¥†ÁöÑÊúÄÂ§ßÂíå ËøôÈ¢òÂ§™ÁÆÄÂçï‰∫ÜÔºåÁî®Âà∞‰∫ÜÁ≠âÂ∑ÆÊï∞ÂàóÂíå 123456789function maximizeSum(nums: number[], k: number): number &#123; let maxIndex = 0; for (let i = 0; i &lt; nums.length; i++) &#123; if (nums[i] &gt; nums[maxIndex]) &#123; maxIndex = i; &#125; &#125; return (k * (nums[maxIndex] * 2 + k - 1)) / 2;&#125; 2023-11-14307. Âå∫ÂüüÂíåÊ£ÄÁ¥¢ - Êï∞ÁªÑÂèØ‰øÆÊîπ ËôΩËØ¥ËøôÊòØÈÅì‰∏≠Á≠âÈ¢òÔºå‰ΩÜÊòØÊàëÊòØÁ¨¨‰∏ÄÊ¨°Êé•Ëß¶Á∫øÊÆµÊ†ëÔºåËÄå‰∏îÁ¶ªË∞±ÁöÑÊòØÊö¥ÂäõÊ≥ïÂ±ÖÁÑ∂‰πüËÉΩÈÄöËøáÔºàÈÇ£ËøôÈ¢òÂ∞±Â§±ÂéªÊÑè‰πâ‰∫ÜÔºâ Á∫øÊÆµÊ†ëÊòØÁî®Ê†ëÁöÑÊñπÂºèÂ≠òÂÇ®‰∏ãÂå∫Èó¥ÁöÑ‰∏Ä‰∫õ‰ø°ÊÅØÔºåÊØîÂ¶ÇÂå∫Èó¥ÂíåÔºå‰ª•Á©∫Èó¥Êç¢Êó∂Èó¥ÁöÑÊñπÂºèÊù•‰ºòÂåñÊ±ÇÂå∫Èó¥‰ø°ÊÅØÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶„ÄÇÊûÑÈÄ†Á∫øÊÆµÊ†ëÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØ O(n)ÔºåÊõ¥Êñ∞Á∫øÊÆµÊ†ëÊòØ O(logN)ÔºåÊü•ËØ¢ÊòØ O(logN) ‰∏æ‰∏™ÂÖ∑‰ΩìÁöÑ‰æãÂ≠êÊù•Â±ïÁ§∫‰∏Ä‰∏ãÁ∫øÊÆµÊ†ëÁöÑÂéüÁêÜÔºö ‰æãÂ¶ÇÊàë‰ª¨Êúâ‰∏™Êï∞ÁªÑÔºö[10, 11, 12, 13, 14]ÔºåÊûÑÈÄ†ÊàêÁ∫øÊÆµÊ†ëÂ∞±ÊòØÂ¶Ç‰∏ãÔºö Áî®Â†ÜÊù•Ë°®Á§∫Á∫øÊÆµÊ†ëÈÇ£Â∞±ÊòØÂ¶Ç‰∏ãÊï∞ÁªÑÔºö[60, 33, 27, 21, 12, 13, 14, 10, 11] Ê≠§ leetcode È¢òËß£‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798class NumArray &#123; segementTree: SegmentTree; constructor(nums: number[]) &#123; this.segementTree = new SegmentTree(nums); &#125; update(index: number, val: number): void &#123; this.segementTree.update( index, val, 0, this.segementTree.rawData.length - 1, 0 ); &#125; sumRange(left: number, right: number): number &#123; return this.segementTree.getSum( left, right, 0, this.segementTree.rawData.length - 1, 0 ); &#125;&#125;class SegmentTree &#123; data: number[] = []; rawData: number[] = []; build(index: number, start: number, end: number) &#123; if (start === end) &#123; this.data[index] = this.rawData[start]; return; &#125; const mid = start + ((end - start) &gt;&gt; 1); this.build(index * 2 + 1, start, mid); this.build(index * 2 + 2, mid + 1, end); this.data[index] = this.data[index * 2 + 1] + this.data[index * 2 + 2]; &#125; constructor(rawData: number[]) &#123; this.rawData = rawData; this.build(0, 0, rawData.length - 1); console.log(rawData, this.data); &#125; getSum( searchStart: number, searchEnd: number, curStart: number, curEnd: number, index: number ) &#123; if (searchStart === curStart &amp;&amp; searchEnd === curEnd) &#123; return this.data[index]; &#125; const mid = curStart + ((curEnd - curStart) &gt;&gt; 1); let sum = 0; if (searchEnd &lt;= mid) &#123; sum += this.getSum(searchStart, searchEnd, curStart, mid, index * 2 + 1); &#125; else if (searchStart &gt; mid) &#123; sum += this.getSum( searchStart, searchEnd, mid + 1, curEnd, index * 2 + 2 ); &#125; else &#123; sum += this.getSum(searchStart, mid, curStart, mid, index * 2 + 1) + this.getSum(mid + 1, searchEnd, mid + 1, curEnd, index * 2 + 2); &#125; return sum; &#125; update( updateIndex: number, value: number, curStart: number, curEnd: number, index: number ) &#123; if (curStart === curEnd &amp;&amp; updateIndex === curStart) &#123; this.rawData[updateIndex] = value; this.data[index] = value; return; &#125; if (updateIndex &gt;= curStart &amp;&amp; updateIndex &lt;= curEnd) &#123; const mid = curStart + ((curEnd - curStart) &gt;&gt; 1); this.update(updateIndex, value, curStart, mid, index * 2 + 1); this.update(updateIndex, value, mid + 1, curEnd, index * 2 + 2); this.data[index] = this.data[index * 2 + 1] + this.data[index * 2 + 2]; &#125; &#125;&#125; 2023-11-092258. ÈÄÉÁ¶ªÁÅ´ÁÅæ ËøôÈÅìÈ¢òÁ®çÂæÆÊúâÁÇπÂ§çÊùÇÔºå‰∏ªË¶ÅËÆæËÆ°Âà∞‰∏§‰∏™ÁÆóÊ≥ïÔºåÂπøÂ∫¶‰ºòÂÖàÈÅçÂéÜÂíå‰∫åÂàÜÊêúÁ¥¢ ÊàëÂ∞ÅË£ÖÂá∫‰∫Ü‰∏Ä‰∏™Êâ©Êï£ÊñπÊ≥ïÔºöspread 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135function maximumMinutes(grid: number[][]): number &#123; grid[0][0] = 3; const fireSpreadTime = getSpreadTime(grid, 1); const peopleSpreadTime = getSpreadTime(grid, 3); if (peopleSpreadTime === 1e9) &#123; return -1; &#125; if (fireSpreadTime === 1e9) &#123; return 1e9; &#125; if (!canGetOut(grid)) &#123; return -1; &#125; const time = fireSpreadTime - peopleSpreadTime; // console.log(fireSpreadTime, peopleSpreadTime) return binarySearch(grid, 0, time);&#125;function binarySearch(grid: number[][], left: number, right: number) &#123; if (left &gt; right) &#123; // console.log('left right', left, right) return right; &#125; const mid = Math.floor((left + right) / 2); if (canGetOut(grid, mid)) &#123; return binarySearch(grid, mid + 1, right); &#125; else &#123; return binarySearch(grid, left, mid - 1); &#125;&#125;function getSpreadTime(g: number[][], flag: number) &#123; const n = g.length; const m = g[0].length; const grid = JSON.parse(JSON.stringify(g)); const spreadTimeArr = new Array(n).fill(0).map(() =&gt; new Array(m).fill(1e9)); let time = 1; // console.log(flag, 1, grid) const qqueue = initQqueue(grid, flag); while (spread(grid, spreadTimeArr, time, flag, qqueue)) &#123; // console.log(flag, 2, grid) time++; &#125; // console.log(flag, 3, grid) return spreadTimeArr[n - 1][m - 1];&#125;function canGetOut(g: number[][], time: number = 0) &#123; const n = g.length; const m = g[0].length; const grid = JSON.parse(JSON.stringify(g)); const fireSpreadTimeArr = new Array(grid.length) .fill(0) .map(() =&gt; new Array(grid[0].length).fill(1e9)); const peopleSpreadTimeArr = new Array(grid.length) .fill(0) .map(() =&gt; new Array(grid[0].length).fill(1e9)); const fireQqueue = initQqueue(grid, 1); const peopleQqueue = initQqueue(grid, 3); for (let i = 1; i &lt;= time; i++) &#123; spread(grid, fireSpreadTimeArr, i, 1, fireQqueue); &#125; let curTime = time + 1; while (grid[n - 1][m - 1] === 0) &#123; spread(grid, fireSpreadTimeArr, curTime, 1, fireQqueue); spread(grid, peopleSpreadTimeArr, curTime, 3, peopleQqueue); curTime++; &#125; return grid[grid.length - 1][grid[0].length - 1] === 3;&#125;function initQqueue(grid: number[][], flag: number) &#123; const curQueue = []; for (let i = 0; i &lt; grid.length; i++) &#123; for (let j = 0; j &lt; grid[i].length; j++) &#123; if (grid[i][j] === flag) &#123; curQueue.push([i, j]); &#125; &#125; &#125; return [curQueue];&#125;function spread( grid: number[][], timeArr: number[][], curTime: number, flag: number, qqueue: number[][][]) &#123; if (qqueue.length &lt;= 0) &#123; return false; &#125; const queue = qqueue.shift(); const curQueue = []; let spreaded = false; while (queue.length &gt; 0) &#123; const [i, j] = queue.shift(); if (i - 1 &gt;= 0) &#123; core(i - 1, j, flag); &#125; if (i + 1 &lt; grid.length) &#123; core(i + 1, j, flag); &#125; if (j - 1 &gt;= 0) &#123; core(i, j - 1, flag); &#125; if (j + 1 &lt; grid[i].length) &#123; core(i, j + 1, flag); &#125; if (grid[grid.length - 1][grid[i].length - 1] === flag) &#123; spreaded = false; break; &#125; &#125; if (queue.length &lt;= 0) &#123; qqueue.push(curQueue); &#125; return spreaded; function core(i: number, j: number, flag: number) &#123; if ( (flag === 1 &amp;&amp; ![1, 2].includes(grid[i][j])) || (flag === 3 &amp;&amp; (grid[i][j] === 0 || (i === grid.length - 1 &amp;&amp; j === grid[0].length - 1))) ) &#123; grid[i][j] = flag; spreaded = true; timeArr[i][j] = curTime; curQueue.push([i, j]); &#125; &#125;&#125; 2023-11-082609. ÊúÄÈïøÂπ≥Ë°°Â≠êÂ≠óÁ¨¶‰∏≤ ÊØîËæÉÁÆÄÂçï 12345678910111213141516171819202122function findTheLongestBalancedSubstring(s: string): number &#123; let max = 0; let stack = []; for (let i = 0; i &lt; s.length; ) &#123; while (i &lt; s.length &amp;&amp; s[i] === "1") &#123; i++; &#125; while (i &lt; s.length &amp;&amp; s[i] === "0") &#123; stack.push(0); i++; &#125; let x = 0; while (i &lt; s.length &amp;&amp; s[i] === "1" &amp;&amp; stack.length &gt; 0) &#123; stack.pop(); x++; i++; &#125; stack.length = 0; max = Math.max(x, max); &#125; return max * 2;&#125; 2023-11-072586. ÁªüËÆ°ËåÉÂõ¥ÂÜÖÁöÑÂÖÉÈü≥Â≠óÁ¨¶‰∏≤Êï∞ ÁÆÄÂçïÈ¢ò 12345678910111213function vowelStrings(words: string[], left: number, right: number): number &#123; const arr = ["a", "e", "i", "o", "u"]; let count = 0; for (let i = left; i &lt;= right; i++) &#123; if ( arr.includes(words[i][0]) &amp;&amp; arr.includes(words[i][words[i].length - 1]) ) &#123; count++; &#125; &#125; return count;&#125; 2023-11-06318. ÊúÄÂ§ßÂçïËØçÈïøÂ∫¶‰πòÁßØ ‰∏ªË¶Å‰ºòÂåñÁÇπÂú®ÊØîËæÉ‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÔºåÂ¶Ç‰ΩïÂú® O(1)Êó∂Èó¥ÂÜÖÂÆåÊàêÊØîËæÉÂë¢Ôºü Â¶ÇÊûúÊòØÂ≠óÁ¨¶‰π±Â∫èÁõ¥Êé•ÊØîËæÉÔºåÈÇ£Â∞±ÊòØ O(n^2) Â¶ÇÊûúÁî®‰∏™ hash Ë°®Â≠ò‰∏ã‰∏Ä‰∏™Â≠óÁ¨¶ÔºåÈÇ£Â∞±ÊòØ O(n) Áî®‰ΩçËøêÁÆó„ÄÇÈÇ£Â∞±ÊòØ O(1)„ÄÇ‰ΩçËøêÁÆó‰∏ç‰ªÖ‰ªÖÊòØÁõ∏ÂΩì‰∫éÊääÂ≠óÁ¨¶Á†ÅÂ•Ω‰∫Ü‰ΩçÁΩÆÔºåËÄå‰∏îÊòØÊâπÈáèÂØπÊØîÔºàÊåâ‰Ωç‰∏éÔºå‰∏é‰∏Ä‰∏™‰ΩçÂíå‰∏é N ‰∏™‰ΩçÊòØ‰∏Ä‰∏™ÈÄüÂ∫¶ÔºâÔºåËÄå‰∏çÊòØÊå®‰∏™ÊØîËæÉ„ÄÇ 1234567891011121314151617function maxProduct(words: string[]): number &#123; let char = new Array(words.length).fill(0); for (let i = 0; i &lt; words.length; i++) &#123; for (let j = 0; j &lt; words[i].length; j++) &#123; char[i] |= 1 &lt;&lt; (words[i].charCodeAt(j) - "a".charCodeAt(0)); &#125; &#125; let res = 0; for (let i = 0; i &lt; words.length; i++) &#123; for (let j = 0; j &lt; words.length; j++) &#123; if ((char[i] &amp; char[j]) == 0) &#123; res = Math.max(words[i].length * words[j].length, res); &#125; &#125; &#125; return res;&#125; 2023-10-262520. ÁªüËÆ°ËÉΩÊï¥Èô§Êï∞Â≠óÁöÑ‰ΩçÊï∞ ÁÆÄÂçïÈ¢ò 123456789101112function countDigits(num: number): number &#123; let count = 0; let n = num; while (n !== 0) &#123; const a = n % 10; if (num % a === 0) &#123; count++; &#125; n = Math.floor(n / 10); &#125; return count;&#125; 2023-10-241155. Êé∑È™∞Â≠êÁ≠â‰∫éÁõÆÊ†áÂíåÁöÑÊñπÊ≥ïÊï∞ ËøôÈÅìÈ¢ò‰∏ÄÂºÄÂßãÊ≤°ÊúâÊÄùË∑ØÔºå‰ΩÜÁÆÄÂçïÁúã‰∫Ü‰∏Ä‰∏ãÁ≠îÊ°àÔºåÂèëÁé∞Á°ÆÂÆû‰∏çÈöæÔºåÂä®ÊÄÅËßÑÂàíÊãø‰∏ãÔºö 123456789101112131415function numRollsToTarget(n: number, k: number, target: number): number &#123; const MOD = 10 ** 9 + 7; const dp = new Array(n + 1).fill(0).map((x) =&gt; new Array(target + 1).fill(0)); dp[0][0] = 1; // ËæπÁïåÊù°‰ª∂ÊòØdp[1][j]=1, 1&lt;=j&lt;=kÔºåËøôÈáåÂèØ‰ª•Êõ¥Ëøõ‰∏ÄÊ≠•ÁÆÄÂçïÂΩíÁ∫≥‰∏∫dp[0][0]=1 for (let i = 1; i &lt;= n; i++) &#123; for (let j = 1; j &lt;= target; j++) &#123; for (let x = 1; x &lt;= k; x++) &#123; if (j - x &gt;= 0) &#123; dp[i][j] = (dp[i][j] + dp[i - 1][j - x]) % MOD; // ÊØè‰∏ÄÊ≠•ÈÉΩË¶ÅÂèñÊ®°ÔºåÂê¶Âàô‰ºöÊ∫¢Âá∫ &#125; &#125; &#125; &#125; return dp[n][target];&#125; 2023-10-082034. ËÇ°Á•®‰ª∑Ê†ºÊ≥¢Âä® ËøôÈÅìÈ¢ò‰∏ÄÂºÄÂßãÊòØÊâìÁÆóÁî®ÈÅçÂéÜÁöÑÊñπÂºèÊ±Ç max Âíå minÔºåÂèØÊÉú‰ºöË∂ÖÊó∂ÔºåÁúã‰∫ÜÁ≠îÊ°àÁü•ÈÅì‰∫ÜË¶ÅÁî®Â†ÜÊù•ÂÅö„ÄÇÂ†ÜÊõ¥Êñ∞ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØ O(logN) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123class PriorityQueue1&lt;T&gt; &#123; arr: T[]; compare: (a: T, b: T) =&gt; number; constructor(props: &#123; compare: (a: T, b: T) =&gt; number &#125;) &#123; const &#123; compare &#125; = props; this.compare = compare; this.arr = []; &#125; swap(arr, index1, index2) &#123; const temp = arr[index1]; arr[index1] = arr[index2]; arr[index2] = temp; &#125; enqueue(a) &#123; this.arr.push(a); this.bubbleUp(this.arr.length - 1); &#125; dequeue() &#123; this.delete(0); &#125; bubbleUp(index) &#123; if (this.arr.length &lt;= 1 || index &lt;= 0) &#123; return; &#125; const pre = Math.floor((index - 1) / 2); if (this.compare(this.arr[index], this.arr[pre]) &gt; 0) &#123; this.swap(this.arr, pre, index); this.bubbleUp(pre); &#125; &#125; delete(index) &#123; this.swap(this.arr, index, this.arr.length - 1); this.arr.pop(); this.sinkDown(index); &#125; sinkDown(index) &#123; if (this.arr.length &lt;= 1 || index &gt;= this.arr.length - 1) &#123; return; &#125; if ( (index * 2 + 1 &lt; this.arr.length &amp;&amp; this.compare(this.arr[index], this.arr[index * 2 + 1]) &lt; 0) || (index * 2 + 2 &lt; this.arr.length &amp;&amp; this.compare(this.arr[index], this.arr[index * 2 + 2]) &lt; 0) ) &#123; if ( index * 2 + 2 &gt;= this.arr.length || this.compare(this.arr[index * 2 + 1], this.arr[index * 2 + 2]) &gt; 0 ) &#123; this.swap(this.arr, index, index * 2 + 1); this.sinkDown(index * 2 + 1); &#125; else &#123; this.swap(this.arr, index, index * 2 + 2); this.sinkDown(index * 2 + 2); &#125; &#125; &#125; front() &#123; return this.arr[0]; &#125; size() &#123; return this.arr.length; &#125;&#125;interface Data &#123; index: number; value: number;&#125;class StockPrice &#123; priceArr: number[]; maxPriorityQueue: PriorityQueue1&lt;&#123; index: number; value: number &#125;&gt;; minPriorityQueue: PriorityQueue1&lt;&#123; index: number; value: number &#125;&gt;; constructor() &#123; this.priceArr = []; this.maxPriorityQueue = new PriorityQueue1(&#123; compare: (a: Data, b: Data) =&gt; a.value - b.value, &#125;); this.minPriorityQueue = new PriorityQueue1(&#123; compare: (a: Data, b: Data) =&gt; b.value - a.value, &#125;); &#125; update(timestamp: number, price: number): void &#123; this.priceArr[timestamp] = price; this.maxPriorityQueue.enqueue(&#123; index: timestamp, value: price &#125;); this.minPriorityQueue.enqueue(&#123; index: timestamp, value: price &#125;); &#125; current(): number &#123; return this.priceArr[this.priceArr.length - 1]; &#125; maximum(): number &#123; while ( this.maxPriorityQueue.front().value !== this.priceArr[this.maxPriorityQueue.front().index] ) &#123; this.maxPriorityQueue.dequeue(); &#125; return this.maxPriorityQueue.front().value; &#125; minimum(): number &#123; while ( this.minPriorityQueue.front().value !== this.priceArr[this.minPriorityQueue.front().index] ) &#123; this.minPriorityQueue.dequeue(); &#125; return this.minPriorityQueue.front().value; &#125;&#125;/** * Your StockPrice object will be instantiated and called as such: * var obj = new StockPrice() * obj.update(timestamp,price) * var param_2 = obj.current() * var param_3 = obj.maximum() * var param_4 = obj.minimum() */ 2023-10-092578. ÊúÄÂ∞èÂíåÂàÜÂâ≤ ËøôÈÅìÈ¢òÁöÑÊÄùË∑ØÊòØÊääÂ∞èÁöÑÊï∞ÊîæÈ´ò‰ΩçÔºåÊääÂ§ßÁöÑÊï∞Êîæ‰Ωé‰Ωç„ÄÇÂèØ‰ª•ÂÖàÊéíÂ∫èÔºåÁÑ∂ÂêéÂÜçÊääÊï∞ÂØπÂçäÂàÜÈÖçÔºåÂàÜÈÖçËßÑÂàôÂ∞±ÊòØÔºöÊääÂ∞èÁöÑÊï∞ÊîæÈ´ò‰ΩçÔºåÊääÂ§ßÁöÑÊï∞Êîæ‰Ωé‰Ωç„ÄÇ ‰ª£Á†Å: 12345678910111213function splitNum(num: number): number &#123; let numStr = (num + "").split("").sort(); let num1 = ""; let num2 = ""; for (let i = 0; i &lt; numStr.length; i += 2) &#123; num1 += numStr[i]; if (i + 1 &lt; numStr.length) &#123; num2 += numStr[i + 1]; &#125; &#125; console.log(num1, num2); return +num1 + +num2;&#125; 2023-05-09ÊúÄËøëÊúãÂèãÊèêÈÜíÊàë leetcode ÂºÄ‰∫Ü javascript ‰∏ìÊ†èÔºåÊúâ‰∏ÄÈÅìÂÖ∏ÂûãÁöÑÊ∑±Â∫¶Âà§Êñ≠ÂØπË±°Áõ∏Á≠âÁöÑÈ¢òÁõÆÔºåÊàëËØï‰∫Ü‰∏Ä‰∏ã 2628. ÂÆåÂÖ®Áõ∏Á≠âÁöÑ JSON Â≠óÁ¨¶‰∏≤ ‰ª£Á†ÅÔºö 12345678910111213141516function areDeeplyEqual(o1: any, o2: any): boolean &#123; if ( (Array.isArray(o1) &amp;&amp; Array.isArray(o2) &amp;&amp; o1.length === o2.length) || (Object.prototype.toString.call(o1) === "[object Object]" &amp;&amp; Object.prototype.toString.call(o2) === "[object Object]" &amp;&amp; Object.keys(o1).length === Object.keys(o2).length) ) &#123; for (let k in o1) &#123; if (!areDeeplyEqual(o1[k], o2[k])) &#123; return false; &#125; &#125; return true; &#125; return Object.is(o1, o2);&#125; 2023-04-101019. ÈìæË°®‰∏≠ÁöÑ‰∏ã‰∏Ä‰∏™Êõ¥Â§ßËäÇÁÇπ Âá†‰πéÊòØÁÆÄÂçïÈ¢ò 1234567891011121314151617181920function nextLargerNodes(head: ListNode | null): number[] &#123; let p = head; const arr = []; while (p != null) &#123; let i = p.next; while (i != null) &#123; if (i.val &gt; p.val) &#123; arr.push(i.val); break; &#125; else &#123; i = i.next; &#125; &#125; if (i == null) &#123; arr.push(0); &#125; p = p.next; &#125; return arr;&#125; 2023-04-061017. Ë¥ü‰∫åËøõÂà∂ËΩ¨Êç¢ ËøôÈ¢òÂèØ‰ª•Áî®ÈÄöÁî®ÁöÑËøõÂà∂ËΩ¨Êç¢ÊñπÊ≥ïÔºåÂÖàÊ±Ç‰ΩôÊï∞ÔºåÁÑ∂ÂêéÂáèÂéª‰ΩôÊï∞ÔºåÁÑ∂ÂêéÈô§‰ª•Èô§Êï∞ÔºåÂ¶ÇÊ≠§Âæ™ÁéØÂæÄÂ§çÔºåÂæóÂá∫ÁöÑ‰ΩôÊï∞Â∞±ÊòØÊØè‰∏Ä‰Ωç‰∏äÁöÑÂÄº„ÄÇ 12345678910111213function baseNeg2(n: number): string &#123; if (n === 0) &#123; return "0"; &#125; let res = []; while (n !== 0) &#123; const remainder = n &amp; 1; res.push(remainder); n -= remainder; n /= -2; &#125; return res.reverse().join("");&#125; 2023-04-052427. ÂÖ¨Âõ†Â≠êÁöÑÊï∞ÁõÆ ÁÆÄÂçïÈ¢òÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶ O(n) 12345678910function commonFactors(a: number, b: number): number &#123; let res = 0; const min = Math.min(a, b); for (let i = 1; i &lt;= min; i++) &#123; if (a % i == 0 &amp;&amp; b % i == 0) &#123; res++; &#125; &#125; return res;&#125; 2023-04-031053. ‰∫§Êç¢‰∏ÄÊ¨°ÁöÑÂÖàÂâçÊéíÂàó ‰ªäÂ§©ËøôÈ¢òÂæàÁÆÄÂçïÔºåÊàëÁî®ÁöÑÂø´ÊéíÊù•ÊâæÊúÄÂ§ßÂÖÉÁ¥†ÔºåÈÄüÂ∫¶Â±ÖÁÑ∂ÂáªË¥•‰∫Ü 100% 1234567891011121314151617181920function prevPermOpt1(arr: number[]): number[] &#123; for (let i = arr.length - 1; i &gt;= 0; i--) &#123; let temp = []; for (let j = i + 1; j &lt; arr.length; j++) &#123; if (arr[j] &lt; arr[i]) &#123; temp.push(&#123; index: j, num: arr[j] &#125;); &#125; &#125; if (temp.length) &#123; temp.sort((a, b) =&gt; &#123; return b.num - a.num; &#125;); const x = arr[temp[0].index]; arr[temp[0].index] = arr[i]; arr[i] = x; break; &#125; &#125; return arr;&#125; 2023-04-02831. ÈöêËóè‰∏™‰∫∫‰ø°ÊÅØ ÂæàÁÆÄÂçïÁöÑÂ≠óÁ¨¶‰∏≤Â§ÑÁêÜ 1234567891011121314151617181920212223function maskPII(s: string): string &#123; if (s.includes("@")) &#123; let [a, b] = s.toLocaleLowerCase().split("@"); a = a[0] + "*****" + a[a.length - 1]; return a + "@" + b; &#125; else &#123; let a = s.replace(/\D/g, ""); let b = a.split("").reverse(); let hasPlus = b.length &gt; 10; let res = b.slice(0, 4); res.push("-"); for (let i = 4; i &lt; b.length; i++) &#123; res.push("*"); if (i % 3 == 0 &amp;&amp; i !== b.length - 1) &#123; res.push("-"); &#125; &#125; if (hasPlus) &#123; res.push("+"); &#125; return res.reverse().join(""); &#125;&#125; 2023-03-061653. ‰ΩøÂ≠óÁ¨¶‰∏≤Âπ≥Ë°°ÁöÑÊúÄÂ∞ëÂà†Èô§Ê¨°Êï∞ Èöè‰æøÂú®‰∏Ä‰∏™Êï∞ÁªÑÂùêÊ†áÂ§ÑÂàí‰∏Ä‰∏™ÂàÜÁïåÁ∫øÔºåÂ∑¶ËæπÁöÑ b ÁöÑ‰∏™Êï∞+Âè≥ËæπÁöÑ a ÁöÑ‰∏™Êï∞‰πãÂíåÊúÄÂ∞èÔºåÂç≥‰∏∫Ë¶ÅÂà†Èô§ÁöÑÊúÄÂ∞ëÊï∞ÁõÆ„ÄÇËÄåËøô‰∏™ a Âíå b ÁöÑ‰∏™Êï∞ÔºåÊúÄÂ•ΩÊòØÁî®ÂâçÂêéÁºÄÂíåËÆ∞‰∏ãÊù•Ôºå‰∏çÁÑ∂ÊØèÊ¨°ÈÉΩË¶ÅÈÅçÂéÜ‰∏ÄÈÅçÊï∞ÁªÑÊêúÈõÜ„ÄÇÈÇ£Â∞±ÊòØ O(n^2)ÁöÑÂ§çÊùÇÂ∫¶‰∫Ü„ÄÇÁî®ÂâçÁºÄÂíåËÆ∞‰∏ãÊù•ÔºåÂàôÊòØ O(n)Êó∂Èó¥Â§çÊùÇÂ∫¶„ÄÇ 2023-01-132287. ÈáçÊéíÂ≠óÁ¨¶ÂΩ¢ÊàêÁõÆÊ†áÂ≠óÁ¨¶‰∏≤ ËøôÈ¢òÂæàÁÆÄÂçïÔºå‰∏çËøáÈ¢òÁõÆÊèèËø∞Âíå‰∏æ‰æã‰∏çÊòØÂæàÊ∏ÖÊ•ö„ÄÇÂ∞±ÊòØÊàë‰∏çÁü•ÈÅìÔºåÊòØ‰∏çÊòØË¶ÅËøûÁª≠ÁöÑÂ≠óÁ¨¶‰∏≤ÂéªÈÖçÂØπ„ÄÇËØï‰∫Ü‰∏Ä‰∏ãÔºåÁªìÊûúÂπ∂‰∏çÈúÄË¶ÅËøûÁª≠„ÄÇ 12345678910111213141516171819202122232425function rearrangeCharacters(s: string, target: string): number &#123; const mapS = getMap(s); const mapTarget = getMap(target); const res = []; for (let k of Object.keys(mapTarget || &#123;&#125;)) &#123; if (!mapS[k]) &#123; return 0; &#125; else &#123; res.push(Math.floor(mapS[k] / mapTarget[k])); &#125; &#125; return Math.min(...res);&#125;function getMap(s: string): &#123; [key: string]: number &#125; &#123; let map = &#123;&#125;; for (let i = 0; i &lt; s.length; i++) &#123; if (!map[s[i]]) &#123; map[s[i]] = 1; &#125; else &#123; map[s[i]]++; &#125; &#125; return map;&#125; 2023-01-091806. ËøòÂéüÊéíÂàóÁöÑÊúÄÂ∞ëÊìç‰ΩúÊ≠•Êï∞ ËøôÈ¢òÂæàÁÆÄÂçïÔºåÊåâÁÖßÈ¢òÁõÆÊèèËø∞ËøõË°åËøêÁÆóÂç≥ÂèØÔºåÊ≤°Êúâ‰ªª‰ΩïÊäÄÊúØÂèØË®Ä„ÄÇ 1234567891011121314151617181920212223242526272829function reinitializePermutation(n: number): number &#123; let count = 1; let arr = []; for (let i = 0; i &lt; n; i++) &#123; arr.push(i); &#125; // console.log(arr) while (!action(arr)) &#123; count++; &#125; return count;&#125;function action(arr: number[]): boolean &#123; let res = true; const perm = [...arr]; for (let i = 0; i &lt; arr.length; i++) &#123; if (i % 2 == 0) &#123; arr[i] = perm[i / 2]; &#125; else &#123; arr[i] = perm[arr.length / 2 + (i - 1) / 2]; &#125; if (arr[i] !== i) &#123; res = false; &#125; &#125; // console.log(arr, res) return res;&#125; 2023-01-081658. Â∞Ü x ÂáèÂà∞ 0 ÁöÑÊúÄÂ∞èÊìç‰ΩúÊï∞ ËøôÊòØÊò®Â§©ÁöÑÊØèÊó•‰∏ÄÈ¢òÔºåÁî®‰∫ÜÂâçÁºÄÂíå+ÊªëÂä®Á™óÂè£ÔºàÂèåÊåáÈíàÔºâ 1234567891011121314151617181920212223242526272829303132333435363738function minOperations(nums: number[], x: number): number &#123; // ÁÆóÂá∫ÂâçÁºÄÂíåÂíåÂêéÁºÄÂíåÔºåÁÑ∂ÂêéÁî®ÊªëÂä®Á™óÂè£ÂéªÊâ´ÔºåÁúãÂâçÁºÄ+ÂêéÁºÄÊòØÂê¶Á≠â‰∫éx let lsum = [0]; for (let i = 0; i &lt; nums.length; i++) &#123; lsum.push(nums[i] + lsum[i]); &#125; let rsum = [0]; for (let i = 0; i &lt; nums.length; i++) &#123; rsum.push(nums[nums.length - 1 - i] + rsum[i]); &#125; let min = nums.length; let hasAnswer = false; // ËøôÈáåÂÖàÊâ´Â∑¶ËæπÔºåÂ∑¶ËæπÊâ´Âà∞Â§¥ÔºåÂºÄÂßã‰∏ÄËæπÂÄíÈÄÄÔºå‰∏ÄËæπÊâ´Âè≥Ëæπ let state = 0; let left = 0; let right = 0; while (left &gt;= 0 &amp;&amp; right &gt;= 0 &amp;&amp; left + right &lt;= nums.length) &#123; if (lsum[left] + rsum[right] == x) &#123; hasAnswer = true; // console.log(lsum, rsum, left, right, min) min = Math.min(min, left + right); left--; right++; state = 1; &#125; else if (lsum[left] + rsum[right] &lt; x) &#123; if (state == 0) &#123; left++; &#125; else &#123; right++; &#125; &#125; else &#123; left--; state = 1; &#125; &#125; console.log(left, right, state, min); return hasAnswer ? min : -1;&#125; 2021-06-06474. ‰∏ÄÂíåÈõ∂‰∏ÄÈÅìÂä®ÊÄÅËßÑÂàíÈ¢òÁõÆ„ÄÇ È¶ñÂÖàË¶ÅÊòéÁôΩËøôÊòØ‰∏ÄÈÅìËÉåÂåÖÈóÆÈ¢òÔºåËÄå‰∏îÊòØÂèåÁª¥Â∫¶ÁöÑÔºåÂèØ‰ª•Ë£Ö 0 Âíå 1„ÄÇ ÈÇ£‰πàÊàë‰ª¨Â∞±ÈúÄË¶Å‰∏Ä‰∏™‰∏âÁª¥Êï∞ÁªÑ dp Êù•ËÆ∞ÂΩïÂä®ÊÄÅËßÑÂàíÁöÑÂ≠êËøáÁ®ãÁöÑÁªìÊûúÔºåÁ¨¨‰∏Ä‰∏™Áª¥Â∫¶‰ª£Ë°®ÈÅçÂéÜÂà∞Á¨¨ i ‰∏™Â≠óÁ¨¶‰∏≤ÔºåÁ¨¨‰∫å‰∏™Áª¥Â∫¶‰ª£Ë°®Á¨¨ j ‰∏™ 0 ÁöÑÈóÆÈ¢òËßÑÊ®°ÔºåÁ¨¨‰∏â‰∏™Áª¥Â∫¶‰ª£Ë°®Á¨¨ k ‰∏™ 1 ÁöÑÈóÆÈ¢òËßÑÊ®°Ôºå‰æùÊ¨°Êâ©Â±ïÂà∞Êàë‰ª¨ÁöÑÁõÆÊ†áÂ≠óÁ¨¶‰∏≤‰∏™Êï∞ÔºåÁõÆÊ†áÈóÆÈ¢òËßÑÊ®°„ÄÇ Áä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ãÔºö Â¶ÇÊûúÂä†ÂÖ•ÂΩìÂâçÂ≠óÁ¨¶‰∏≤ÔºåÂØºËá¥ËÉåÂåÖÊ∫¢Âá∫ÔºåÂàô‰∏çÂä†Ôºödp[i][j][k] = dp[i-1][j][k] Â¶ÇÊûú‰∏çÊ∫¢Âá∫ÔºåÂàôÊúâ‰∏§ÁßçÂèØËÉΩÔºåÂèñÊúÄ‰ºòËß£Ôºödp[i][j][k] = Math.max(dp[i-1][j][k], dp[i-1][j-zeros][k-ones]+1) ËøôÈáåËøòÈúÄË¶ÅËÄÉËôë‰∏Ä‰∫õËæπÁïåÈóÆÈ¢òÔºåÊØîÂ¶Ç i=0 ÁöÑÊó∂ÂÄôÔºådp[0][any][any]Â∫îËØ•ÊòØ 0ÔºåÂêåÁêÜ m=0 Âíå n=0 ‰πüÊòØÂ¶ÇÊ≠§„ÄÇÊâÄ‰ª•Êàë‰ª¨ÁöÑÊï∞ÁªÑÁ©∫Èó¥ÈúÄË¶ÅÊØè‰∏™Áª¥Â∫¶‰∏äÈÉΩÂä† 1 Êù•Â≠òÊîæËøô‰∫õÂàùÂßãÂÄº„ÄÇ JavaScript ‰ª£Á†ÅÔºö 12345678910111213141516171819202122232425262728293031323334/** * @param &#123;string[]&#125; strs * @param &#123;number&#125; m * @param &#123;number&#125; n * @return &#123;number&#125; */var findMaxForm = function (strs, m, n) &#123; let dp = new Array(strs.length + 1) .fill(0) .map(() =&gt; new Array(m + 1).fill(0).map(() =&gt; new Array(n + 1).fill(0))); for (let i = 1; i &lt;= strs.length; i++) &#123; let [zeros, ones] = getZeros(strs[i - 1]); for (let j = 0; j &lt;= m; j++) &#123; for (let k = 0; k &lt;= n; k++) &#123; dp[i][j][k] = dp[i - 1][j][k]; if (j &gt;= zeros &amp;&amp; k &gt;= ones) &#123; dp[i][j][k] = Math.max( dp[i - 1][j][k], dp[i - 1][j - zeros][k - ones] + 1 ); &#125; &#125; &#125; &#125; return dp[strs.length][m][n];&#125;;function getZeros(str) &#123; let zeros = [0, 0]; for (let i = 0; i &lt; str.length; i++) &#123; zeros[str[i] - "0"]++; &#125; return zeros;&#125; 2021-06-05203. ÁßªÈô§ÈìæË°®ÂÖÉÁ¥†ÂæàÁÆÄÂçïÁöÑ‰∏ÄÈÅìÂà†Èô§ÂçïÈìæË°®ËäÇÁÇπÈ¢ò JavaScript ‰ª£Á†ÅÔºö 12345678910111213141516171819202122232425/** * Definition for singly-linked list. * function ListNode(val, next) &#123; * this.val = (val===undefined ? 0 : val) * this.next = (next===undefined ? null : next) * &#125; *//** * @param &#123;ListNode&#125; head * @param &#123;number&#125; val * @return &#123;ListNode&#125; */var removeElements = function (head, val) &#123; let h = new ListNode(0, head); index = h; while (index.next) &#123; if (index.next.val == val) &#123; let next = index.next.next; index.next = next; continue; &#125; index = index.next; &#125; return h.next;&#125;; 2021-06-04160. Áõ∏‰∫§ÈìæË°®ËøôÈ¢òÊúâ‰∏§ÁßçËß£Ê≥ïÔºö ÂìàÂ∏åË°®ËÆ∞ÂΩïÊåáÈíà ÂèåÊåáÈíà ÂìàÂ∏åË°®ËÆ∞ÂΩïÊåáÈíàJavaScript ‰ª£Á†ÅÔºö 123456789101112131415161718192021222324252627282930/** * Definition for singly-linked list. * function ListNode(val) &#123; * this.val = val; * this.next = null; * &#125; *//** * @param &#123;ListNode&#125; headA * @param &#123;ListNode&#125; headB * @return &#123;ListNode&#125; */var getIntersectionNode = function (headA, headB) &#123; let hashset = new Set([]); let index = headA; while (index) &#123; hashset.add(index); index = index.next; &#125; index = headB; while (index) &#123; if (hashset.has(index)) &#123; return index; &#125; else &#123; index = index.next; &#125; &#125; return null;&#125;; ÂèåÊåáÈíàÈìæË°®ÊÄªÂÖ±ÂàÜ‰∏∫‰∏âÈÉ®ÂàÜÔºö headA Âà∞ÂÖ¨ÂÖ±ËäÇÁÇπ headB Âà∞ÂÖ¨ÂÖ±ËäÇÁÇπ ÂÖ¨ÂÖ±ÈÉ®ÂàÜ ÊâÄ‰ª•Â¶ÇÊûúÊàë‰ª¨Âà©Áî®ÂèåÊåáÈíàÔºåÊääËøô‰∏â‰∏™ÈÉ®ÂàÜËµ∞‰∏ÄÈÅçÔºåÂ∞±ËÉΩËÆ©ÂèåÊåáÈíàÁ¢∞‰∏ä„ÄÇ index1 Ëµ∞ A ÈìæÔºåËµ∞ÂÆå A ÈìæÔºåËµ∞ B Èìæ index2 Ëµ∞ B ÈìæÔºåËµ∞ÂÆå B ÈìæÔºåËµ∞ A Èìæ ‰∏§‰∏™ÊåáÈíàÂêåÊó∂Á≠â‰∫é null Âè™Êúâ‰∏ÄÁßçÊÉÖÂÜµÔºåÂ∞±ÊòØ‰∏§‰∏™Èìæ‰∏çÁõ∏‰∫§„ÄÇÂ¶ÇÊûúÁõ∏‰∫§ÔºåÊÉ≥Ë¶ÅÈÉΩÂú®ÈìæÂ∞æÁ¢∞‰∏äÔºåÂàô‰∏§‰∏™ÈìæÈïøÂ∫¶Áõ∏Á≠âÔºåËã•‰∏§‰∏™ÈìæÈïøÂ∫¶Áõ∏Á≠â‰∏îÁõ∏‰∫§ÔºåÂàôÈùûÂÖ¨ÂÖ±ÈÉ®ÂàÜÈïøÂ∫¶‰∏ÄÂÆöÁõ∏Á≠âÔºåÈÇ£‰πà‰ªñ‰ª¨Êó©Â∞±Âú®Á¨¨‰∏ÄÊ¨°ÈÅçÂéÜÁöÑÊó∂ÂÄôÂú®ÂÖ¨ÂÖ±ËäÇÁÇπÈÅá‰∏ä‰∫Ü„ÄÇ 12345678910111213141516171819202122/** * Definition for singly-linked list. * function ListNode(val) &#123; * this.val = val; * this.next = null; * &#125; *//** * @param &#123;ListNode&#125; headA * @param &#123;ListNode&#125; headB * @return &#123;ListNode&#125; */var getIntersectionNode = function(headA, headB) &#123; let index1 = headA; let index2 = headB; while(index1!==index2)&#123; index1 = index1==null?headB:index1.next; index2 = index2==null?headA:index2.next; &#125; return index1;&#125;; 2021-06-03 Âá°ÊòØÊ∂âÂèäÂà∞ËøûÁª≠Â≠êÊï∞ÁªÑÁöÑÔºåÈÉΩÂèØ‰ª•Áî®ÂâçÁºÄÂíå+ÂìàÂ∏åË°®Êù•Ëß£ 525. ËøûÁª≠Êï∞ÁªÑËøôÈ¢òË¶ÅÊ≥®ÊÑèÁöÑÂ∞±ÊòØÔºåÂõ†‰∏∫Ë¶ÅÁªüËÆ°ÂÖÉÁ¥†‰∏™Êï∞ÔºåÊâÄ‰ª•Ë¶Å‰ΩøÁî® i+1„ÄÇ ÂìàÂ∏åË°®ÁöÑ key ÁöÑÂê´‰πâÊòØÔºöÂΩìÂâçÈÅçÂéÜÂà∞ÁöÑ 1 ‰∏éÁ¨¶ÂêàÊ†áÂáÜÔºà‰∏ÄÂçäÊòØ 1Ôºâ‰πãÈó¥ÁöÑÂ∑ÆË∑ùÔºåËÄåËÆ∞ÂΩïÁöÑ‰ΩçÁΩÆÂàôÂøÖÈ°ªÊòØÊúÄÂ∞è‰ΩçÁΩÆ„ÄÇÊâÄ‰ª•Âè™Âú®ÂàùÂßãÂåñÁöÑÊó∂ÂÄôËµãÂÄº„ÄÇ JavaScript ‰ª£Á†ÅÔºö 123456789101112131415161718192021222324/** * @param &#123;number[]&#125; nums * @return &#123;number&#125; */var findMaxLength = function (nums) &#123; let sum = 0; let hashmap = &#123;&#125;; let max = 0; for (let i = 0; i &lt; nums.length; i++) &#123; sum += nums[i]; if (i + 1 == sum * 2) &#123; max = i + 1; continue; &#125; if (hashmap.hasOwnProperty(i + 1 - sum * 2)) &#123; if (max &lt; i - hashmap[i + 1 - sum * 2]) &#123; max = i - hashmap[i + 1 - sum * 2]; &#125; &#125; else &#123; hashmap[i + 1 - sum * 2] = i; &#125; &#125; return max;&#125;; 2021-05-31 Ëøô‰∏™ÈóÆÈ¢òÁúãËµ∑Êù•ÊòØ‰∏™ÁÆÄÂçïÈ¢òÔºåÂÖ∂ÂÆûÂèØ‰ª•‰ªé‰∏≠Â≠¶Âà∞‰ΩçËøêÁÆóÂíå‰∏Ä‰∫õÊï∞Â≠¶Áü•ËØÜ„ÄÇ 342. 4 ÁöÑÂπÇÊàëËá™Â∑±ÁöÑËß£Ê≥ïÂæàÁÆÄÂçïÊòìÊáÇÔºå‰ΩÜÊòØ‰∏çÂ§üÈ´òÊïàÔºö JavaScript ‰ª£Á†ÅÔºö 1234567891011121314/** * @param &#123;number&#125; n * @return &#123;boolean&#125; */var isPowerOfFour = function (n) &#123; let i = 1; while (i &lt; n) &#123; i = i * 4; &#125; if (i == n) &#123; return true; &#125; return false;&#125;; Ëøô‰∏™Ëß£Ê≥ïÁöÑÊïàÁéáÂæàÂ∑ÆÔºåÂè™ÊàòËÉú‰∫Ü 55%ÁöÑÈÄâÊâã„ÄÇËØ¥ÊòéËÇØÂÆöÊúâÊõ¥‰ºòËß£ÔºåÊàëÁøª‰∫Ü‰∏Ä‰∏ãÁ≠îÊ°à„ÄÇ‰∏ªË¶ÅÊòØ 2 ÁßçËßíÂ∫¶ÁöÑËß£Ê≥ïÔºö ‰ΩçËøêÁÆó Êï∞Â≠¶ ‰ΩçËøêÁÆóÂ¶ÇÊûúÊòØ 2 ÁöÑÂπÇÔºåÈÇ£‰πà‰Ωç‰∏≠Âè™ËÉΩÂá∫Áé∞‰∏Ä‰∏™ 1„ÄÇÂ¶ÇÊûúÊòØ 4 ÁöÑÔºåÈÇ£‰πàËÇØÂÆö‰πüÂè™Êúâ‰∏Ä‰∏™ 1Ôºå‰∏îÂá∫Áé∞ÁöÑ‰ΩçÁΩÆÊòØÊØèÈöî‰∏Ä‰ΩçÂá∫Áé∞„ÄÇÈÇ£‰πàÈóÆÈ¢òÊù•‰∫ÜÔºåÊÄé‰πàÂà§Êñ≠‰Ωç‰∏äÂè™Êúâ‰∏Ä‰∏™ 1 Âë¢ÔºüÊìç‰ΩúÊòØÔºöÂáèÂéª 1ÔºåÁÑ∂Âêé‰∏é„ÄÇÂæóÂà∞ÁöÑÁªìÊûúÂøÖÁÑ∂Â∫îËØ•ÊòØ 0„ÄÇÈÇ£Â¶Ç‰ΩïÂà§Êñ≠ 1 Âú®Âì™‰∏Ä‰Ωç‰∏äÂë¢ÔºüÂ•ΩÂÉèÂè™ËÉΩÈÅçÂéÜ‰∫Ü„ÄÇ‰ΩÜÂÖ∂ÂÆûÊàë‰ª¨‰∏çÈúÄË¶ÅÁü•ÈÅìÂÖ∑‰ΩìÊòØÂì™‰∏Ä‰ΩçÔºåÂè™ÈúÄË¶ÅÁü•ÈÅìÊòØÂê¶ÂàÜÂ∏ÉÂú®Ê≠£Á°ÆÁöÑ‰Ωç‰∏äÔºåÂèØ‰ª•ÈÄöËøá mask Ëß£ÂÜ≥Ôºömask=$(01010101010101010101010101010101)_2$ÔºåÂõ†‰∏∫ 1 ÂàÜÂ∏ÉÂú®Â•áÊï∞‰Ωç„ÄÇ‰πüÂèØ‰ª•ÂÜôÊàêÊõ¥ÁÆÄÁü≠ÁöÑ 16 ËøõÂà∂ÂΩ¢ÂºèÔºömask=$(55555555)_16$ JavaScript ‰ª£Á†ÅÔºö 1234567/** * @param &#123;number&#125; n * @return &#123;boolean&#125; */var isPowerOfFour = function (n) &#123; return n &gt; 0 &amp;&amp; (n &amp; (n - 1)) == 0 &amp;&amp; n &amp; 0x55555555;&#125;; Â•áÊÄ™ÁöÑÊòØËøô‰∏™‰ª£Á†ÅÁöÑËøêË°åÊó∂Èó¥Â±ÖÁÑ∂ÊØî‰∏äÈù¢ÈÇ£‰∏™ËøòÈïøÔºåÊÑüËßâ‰∏çÁßëÂ≠¶„ÄÇ Êï∞Â≠¶ËßíÂ∫¶È¶ñÂÖà‰æùÁÑ∂ÊòØÊåâÁÖß‰∏äÈù¢ÁöÑ‰∏§‰∏™Êù°‰ª∂Ôºö n&gt;0 n Âè™Êúâ‰∏Ä‰∏™ 0 Êàë‰ª¨ËßÇÂØüÂà∞ÊâÄÊúâÂÅ∂Êï∞ÂàÜ‰∏∫Ôºö$4^x \times 2 \times 2$‰πüÂ∞±ÊòØ$4^x$ÔºåÂíå$4^x \times 2 \times 1$„ÄÇËÄå 4 ÁöÑÂπÇÊ¨°Èô§‰ª• 3 ÁöÑ‰ΩôÊï∞ÂøÖÁÑ∂ÊòØ 1ÔºåËÄå$4^x \times 2$ËøôÁßçÈô§‰ª• 3 ÁöÑ‰ΩôÊï∞ÂøÖÁÑ∂ÊòØ 2„ÄÇ Êàë‰ª¨Â¢ûÂä†Ëøô‰∏™Êù°‰ª∂Á≠õÈÄâÂá∫$4^x$ JavaScript ‰ª£Á†ÅÔºö 1234567/** * @param &#123;number&#125; n * @return &#123;boolean&#125; */var isPowerOfFour = function (n) &#123; return n &gt; 0 &amp;&amp; (n &amp; (n - 1)) == 0 &amp;&amp; n % 3 == 1;&#125;; 2021-05-29 Ëøô‰∏™ÈóÆÈ¢òÈúÄË¶ÅÊãÜÂàÜÂá∫Â≠êÈóÆÈ¢òÊâçÂ•ΩËß£ÂÜ≥ÔºåË¶Å‰∏çÁÑ∂Ê≤°ÊúâÊÄùË∑Ø„ÄÇÂÆÉÁöÑÂ≠êÈóÆÈ¢òÊòØÔºö560. Âíå‰∏∫ K ÁöÑÂ≠êÊï∞ÁªÑ 1074. ÂÖÉÁ¥†Âíå‰∏∫ÁõÆÊ†áÂÄºÁöÑÂ≠êÁü©ÈòµÊï∞ÈáèÂΩì‰Ω†ÁêÜËß£‰∫ÜÂ≠êÈóÆÈ¢ò‰πãÂêéÔºåÊàë‰ª¨Êù•ÊÉ≥ÊÉ≥ÔºåÊÄé‰πàÊääËøô‰∏™ÈóÆÈ¢òËΩ¨Êç¢Âà∞Â≠êÈóÆÈ¢ò‰∏äÂë¢Ôºü‰πüÂ∞±ÊòØÂ¶Ç‰ΩïÊää‰∫åÁª¥ÈóÆÈ¢òÂèò‰∏ÄÁª¥ÈóÆÈ¢òÂë¢Ôºü Êàë‰ª¨ÊÉ≥Ë±°Êää‰∏Ä‰∏™Áü©ÈòµÁöÑÂàó‰∏äÁöÑÂÖÉÁ¥†ÂÖ®ÈÉ®Âä†Ëµ∑Êù•Ôºå‰∏çÂ∞±ÊòØ‰∏Ä‰∏™‰∏ÄÁª¥Êï∞ÁªÑ‰∫ÜÂêó„ÄÇËøô‰∏™‰∏ÄÁª¥Êï∞ÁªÑÂèØ‰ª•Á≠âÊïàÁöÑÂ∫îÁî®Âú®Ëøô‰∏™ÈóÆÈ¢ò‰∏ä„ÄÇ ÈÇ£ËøôÊ†∑ÁöÑÁªÑÂêàÊúâÂì™‰∫õÂë¢ÔºüÈÄöËøáÁÆÄÂçïÁöÑ‰∫åÊ¨°ÈÅçÂéÜÔºåÂ∞±ËÉΩÂæóÂá∫Êàë‰ª¨ÊÉ≥Ë¶ÅÁöÑÁªÑÂêàÔºö JavaScript ‰ª£Á†ÅÔºö 123for (let i = 0; i &lt; n; i++) &#123; for (let j = i; j &lt; n; j++) &#123;&#125;&#125; ÊØèÊ¨° i Âà∞ j ‰πãÈó¥ÁöÑÊï∞Â∞±ÊòØÊàë‰ª¨ÊÉ≥Ë¶ÅÁöÑÁªÑÂêàÔºåÊãøËøô‰∫õÊï∞ÁöÑÂíåÔºåÁªÑÊàêÊñ∞ÁöÑ‰∏ÄÁª¥Êï∞ÁªÑÔºåÁÑ∂ÂêéÁî®‰∏ÄÁª¥Êï∞ÁªÑÁöÑËß£Ê≥ïÂéªËß£„ÄÇËøôÈáåÊúâ‰∏™Â∞èÊäÄÂ∑ßÊòØËøô‰∏™Âíå‰πüË¶ÅÈÅøÂÖçÈáçÂ§çËÆ°ÁÆóÔºåÊâÄ‰ª•Ë¶ÅÊääÊØèÊ¨°ËÆ°ÁÆóÊâÄÂæóÂ≠ò‰∏ãÊù•Ôºå‰∏ãÊ¨°Âú®Ëøô‰∏™Âü∫Á°Ä‰∏äÁÆóÔºåËøôÊ†∑ÂèØ‰ª•ÁúÅ‰∏ã‰ªéÂ§¥ÂºÄÂßãÊ±ÇÂíåÁöÑÊó∂Èó¥„ÄÇ JavaScript ‰ª£Á†ÅÔºö 123456789101112131415161718192021222324252627282930313233343536/** * @param &#123;number[][]&#125; matrix * @param &#123;number&#125; target * @return &#123;number&#125; */var numSubmatrixSumTarget = function (matrix, target) &#123; let count = 0; for (let i = 0; i &lt; matrix.length; i++) &#123; let sum = new Array(matrix[0].length).fill(0); for (let j = i; j &lt; matrix.length; j++) &#123; for (let k = 0; k &lt; matrix[0].length; k++) &#123; sum[k] += matrix[j][k]; &#125; count += subarraySum(sum, target); &#125; &#125; return count;&#125;;var subarraySum = function (nums, k) &#123; let pre = 0; let preRecord = &#123; 0: 1 &#125;; let count = 0; for (let i = 0; i &lt; nums.length; i++) &#123; pre += nums[i]; if (preRecord[pre - k]) &#123; count += preRecord[pre - k]; &#125; if (preRecord[pre]) &#123; preRecord[pre]++; &#125; else &#123; preRecord[pre] = 1; &#125; &#125; return count;&#125;; ÁÆÄÂåñÈóÆÈ¢òÁöÑÂäûÊ≥ïÊúâÂæàÂ§öÔºåÊØîÂ¶ÇÈôç‰ΩéÈóÆÈ¢òËßÑÊ®°ÔºåÈôç‰ΩéÁª¥Â∫¶Ôºå‰∫åÁª¥ -&gt; ‰∏ÄÁª¥„ÄÇ 2021-05-29 ËøôÈ¢òÊòØÂú®ÂÅöÊØèÊó•‰∏ÄÈ¢ò‰∏≠ÈÅáÂà∞ÁöÑÈóÆÈ¢òÁöÑÂ≠êÈóÆÈ¢òÔºö1074. ÂÖÉÁ¥†Âíå‰∏∫ÁõÆÊ†áÂÄºÁöÑÂ≠êÁü©ÈòµÊï∞Èáè 560. Âíå‰∏∫ K ÁöÑÂ≠êÊï∞ÁªÑÈÅáÂà∞ËøôÁ±ªÈóÆÈ¢òÔºåÈ¶ñÂÖàÊÉ≥ÁöÑÊòØÂ§çÊùÇÂ∫¶ÔºåÁÑ∂ÂêéÂ§çÊùÇÂ∫¶Â§©ÁÑ∂ÊòØË∑üÈóÆÈ¢òËßÑÊ®°ÊúâÂÖ≥ÁöÑ„ÄÇÈÅçÂéÜ‰∏ÄÈÅçËÇØÂÆöÊòØÂøÖË¶ÅÁöÑÔºåÂΩìÊàë‰ª¨ÈÅçÂéÜÂà∞Á¨¨ n Ëøô‰∏™‰ΩçÁΩÆÔºåÊàë‰ª¨ÊÄé‰πàÂà§Êñ≠‰ªé 0 Âà∞ n ‰∏≠ÊúâÂ§öÂ∞ë‰∏™Ëß£ÔºåËøõ‰∏ÄÊ≠•ÁöÑÔºåÊàë‰ª¨ËøòÂè™Ë¶ÅÂ¢ûÈáèÊï∞ÊçÆÔºån-1 ÁöÑËß£‰∏çÂ∫îËØ•ÂéªÈáçÂ§çËÆ°ÁÆó„ÄÇÁ¨¨ n Ëøô‰∏™‰ΩçÁΩÆ‰∏äÁöÑÊï∞ÊòØ‰∏ÄÂÆöË¶ÅËÄÉËôëËøõÂéªÁöÑÔºåÊâÄ‰ª•Êàë‰ª¨‰ªéÂêéÂæÄÂâçÂØªÊâæ„ÄÇÂÖ∑‰Ωì‰ª£Á†ÅÂ¶Ç‰∏ãÔºö JavaScript ‰ª£Á†ÅÔºö 1234567891011121314151617/** * @param &#123;number[]&#125; nums * @return &#123;number&#125; */var subarraySum = function (nums, k) &#123; let count = 0; for (let start = 0; start &lt; nums.length; ++start) &#123; let sum = 0; for (let end = start; end &gt;= 0; --end) &#123; sum += nums[end]; if (sum == k) &#123; count++; &#125; &#125; &#125; return count;&#125;; ËøôÊ†∑ÁöÑËØùÔºåÁÆóÊ≥ïÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØ O(n^2)„ÄÇÊúâÊ≤°ÊúâÈáçÂ§çËÆ°ÁÆóÁöÑÈóÆÈ¢òÂë¢Ôºå‰ºº‰πé‰∏çÂ§™Â•ΩËØ¥Ôºå‰ΩÜÁªìÊûúÊòØÔºöÊúâÔºåÂÉèÊ≠§Á±ªÈóÆÈ¢òÊúâÁªü‰∏ÄÁöÑËßÑÂæãÔºåÂ∞±ÊòØÊàë‰ª¨ÂèØ‰ª•ËÆ∞ÂΩïÂâçÁºÄÂíå„ÄÇÂ¶ÇÊûúÊàë‰ª¨Áü•ÈÅìÂâçÁºÄÂíåÔºåÈÇ£‰πàÊàë‰ª¨Âè™ÈúÄË¶ÅÁî®ÂΩìÂâçÂíåÂáèÂéª kÔºåÁúãÊòØÂê¶Á≠â‰∫éÊüê‰∏™ÂâçÁºÄÂíåÔºåÂ¶ÇÊûúÊúâÔºåÊàë‰ª¨‰∏çÂ∞±Ê≠£Â•ΩÊâæÂà∞‰∏Ä‰∏™Â≠êÊï∞ÁªÑÁöÑÂíåÁ≠â‰∫é k ‰∫ÜÂêóÔºüÊâÄ‰ª•Âü∫‰∫éÂâçÁºÄÂíåÔºåÊàë‰ª¨‰∏ÄÊ¨°ÈÅçÂéÜÂç≥ÂèØËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ JavaScript ‰ª£Á†ÅÔºö 12345678910111213141516171819202122/** * @param &#123;number[]&#125; nums * @param &#123;number&#125; k * @return &#123;number&#125; */var subarraySum = function (nums, k) &#123; let pre = 0; let preRecord = &#123; 0: 1 &#125;; let count = 0; for (let i = 0; i &lt; nums.length; i++) &#123; pre += nums[i]; if (preRecord[pre - k]) &#123; count += preRecord[pre - k]; &#125; if (preRecord[pre]) &#123; preRecord[pre]++; &#125; else &#123; preRecord[pre] = 1; &#125; &#125; return count;&#125;; ÂâçÁºÄÂíåÂØπËøáÂæÄÁöÑÈÅçÂéÜÊÄªÁªìÊèêÂèñ‰∫Ü‰ø°ÊÅØÔºå‰ΩøÊàë‰ª¨‰∏çÁî®ÂÜçÂéªËøõË°åÈáçÂ§çÁöÑËÆ°ÁÆóÔºåÊòØÈùûÂ∏∏ÈáçË¶ÅÁöÑÊäÄÂ∑ß„ÄÇ 2021-05-28477. Ê±âÊòéË∑ùÁ¶ªÊÄªÂíå ËøôÈ¢òÂàùÁúã‰∏äÂéªÁâπÂà´ÁÆÄÂçïÔºåÂ∞±ÊòØ‰∏Ä‰∏™ O(n^2)ÁöÑÈÅçÂéÜÔºàÁªÑÂêàÔºâÔºåÂØπÊØè‰∏ÄÁªÑÊ±ÇÊ±âÊòéË∑ùÁ¶ªÁ¥ØÂä†Ëµ∑Êù•„ÄÇ‰∏çËøáÊàë‰∏ÄÂºÄÂßãÂ∞±ËßâÂæóÂèØËÉΩ‰ºöË∂ÖÊó∂ÔºåÊèê‰∫§ÂêéÊûúÁÑ∂Ë∂ÖÊó∂‰∫Ü„ÄÇÊõ¥‰ºòÁöÑÂÅöÊ≥ïÊòØÊåâ‰ΩçÈÅçÂéÜÔºåÊØè‰∏Ä‰Ωç‰∏äÊâÄÊúâÁöÑÊï∞Ë¶Å‰πàÊòØ 0 Ë¶Å‰πàÊòØ 1ÔºåÊää 0 Âíå 1 ÁöÑ‰∏™Êï∞ÁªüËÆ°Âá∫Êù•ÔºåÁõ∏‰πòÔºåÂ∞±ÊòØËøô‰∏Ä‰ΩçÁöÑÊ±âÊòéË∑ùÁ¶ªÊÄªÂíå„ÄÇ JavaScript ‰ª£Á†ÅÔºö 123456789101112131415161718192021222324252627/** * @param &#123;number[]&#125; nums * @return &#123;number&#125; */var totalHammingDistance = function (nums) &#123; let max = Math.max(...nums); let count = 0; while (max &gt; 0) &#123; count++; max &gt;&gt;= 1; &#125; let res = 0; for (let i = 0; i &lt; count; i++) &#123; let zero = 0; let one = 0; for (let j = 0; j &lt; nums.length; j++) &#123; let temp = nums[j] &gt;&gt; i; if (temp % 2) &#123; one++; &#125; else &#123; zero++; &#125; &#125; res += zero * one; &#125; return res;&#125;; 2021-05-271190. ÂèçËΩ¨ÊØèÂØπÊã¨Âè∑Èó¥ÁöÑÂ≠ê‰∏≤ ËøôÈÅìÈ¢ò‰∏ÄÁúãÂ∞±Áü•ÈÅìÁî®Ê†àÊù•Ëß£ÂÜ≥Ôºå‰ΩÜÂÖ∑‰ΩìÂà∞ÊÄé‰πàÂÅöÂç¥‰æùÊóß‰∏çÂÆπÊòìÊÉ≥ÈÄö„ÄÇÁõ¥Âà∞ÁúãËøáÁ≠îÊ°àÂêéÔºåÊâçÂèëÁé∞ÔºåÂÆûÈôÖ‰∏äÁúüÁöÑÂè™ÈúÄË¶ÅÈÅçÂéÜ‰∏ÄÈÅçÂ∞±ËÉΩËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ ÊÄùË∑ØÂ¶Ç‰∏ãÔºö ÊØèÈÅáÂà∞‰∏Ä‰∏™Êã¨Âè∑ÂùóÔºåÂ∞±ÈúÄË¶ÅÊääÈáåÈù¢ÁöÑÂ≠óÁ¨¶‰∏≤ÁøªËΩ¨ÔºàËøôÊòØÂçïÊ≠•Êìç‰ΩúÔºâÔºåÁÑ∂ÂêéÈÄíÂΩíÁøªËΩ¨ÊØè‰∏ÄÂ±Ç„ÄÇËøôÊòØÊàë‰ª¨‰∫∫ÁöÑÊÄùÁª¥Ôºå‰ΩÜÊú∫Âô®ÊòØÁúã‰∏çÂà∞ËøôÁßçÂÆèËßÇ‰ø°ÊÅØÁöÑÔºåÊàë‰ª¨ÈúÄË¶ÅÂÆâÊéíÂÖ∑‰ΩìÂà∞ÊØè‰∏ÄÊ≠•ÁöÑ‰ªªÂä°„ÄÇ‰ª£Á†ÅÂú®ÈÅçÂéÜÁöÑÊó∂ÂÄôÂè™‰ºöÈÅáÂà∞Â∑¶Êã¨Âè∑ÊàñËÄÖÂè≥Êã¨Âè∑ÔºåÂÅáÂ¶ÇÊàë‰ª¨ÈÅáÂà∞Â∑¶Êã¨Âè∑ÁöÑÊó∂ÂÄôÂºÄÂßãËÆ∞ÂΩïÂ≠óÁ¨¶‰∏≤ÔºåÈÇ£‰πàÂú®ÈÅáÂà∞Âè≥Êã¨Âè∑ÁöÑÊó∂ÂÄôÔºåÂ∞±ÊúâÁøªËΩ¨ÁöÑÁõÆÊ†áÂØπË±°‰∫Ü„ÄÇ‰ΩÜÂ¶ÇÊûúËøûÁª≠ÈÅáÂà∞‰∏§‰∏™Â∑¶Êã¨Âè∑Âë¢ÔºüÊàë‰ª¨Â∞ÜËÆ∞ÂΩïÁöÑ‰ø°ÊÅØÂÖàÂÖ•Ê†àÔºåÁÑ∂ÂêéÁªßÁª≠‰∏äÈù¢ÁöÑÊ≠•È™§Âç≥ÂèØ„ÄÇ ÂÖ∑‰ΩìÊ≠•È™§ÔºàÂçïÊ≠•ÔºâÔºö ÈÅáÂà∞Â∑¶Êã¨Âè∑ÔºöÂÖ•Ê†àÂ∑≤ËÆ∞ÂΩïÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÊ∏ÖÁ©∫Êàë‰ª¨Áî®‰∫éËÆ∞ÂΩïÁöÑÂèòÈáè ÈÅáÂà∞ÊôÆÈÄöÂ≠óÁ¨¶ÔºöËÆ∞ÂΩï ÈÅáÂà∞Âè≥Êã¨Âè∑ÔºöÁøªËΩ¨ËÆ∞ÂΩïÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂ∞ÜÊ†àÈ°∂Â≠óÁ¨¶‰∏≤ pop Âá∫Êù•ÊãºÊé•‰∏äÁøªËΩ¨Â•ΩÁöÑÂ≠óÁ¨¶‰∏≤ JavaScript ‰ª£Á†ÅÔºö 12345678910111213141516171819/** * @param &#123;string&#125; s * @return &#123;string&#125; */var reverseParentheses = function (s) &#123; let stack = []; let str = ""; for (let i = 0; i &lt; s.length; i++) &#123; if (s[i] == "(") &#123; stack.push(str); str = ""; &#125; else if (s[i] == ")") &#123; str = stack.pop() + Array.from(str).reverse().join(""); &#125; else &#123; str += s[i]; &#125; &#125; return str;&#125;;]]></content>
  </entry>
  <entry>
    <title><![CDATA[Êî∂Ëóè]]></title>
    <url>%2Fblog%2Fmark%2Findex.html</url>
    <content type="text"><![CDATA[ËøôÊòØÊàë‰∏äÁΩëÂÜ≤Êµ™ÂèëÁé∞ÁöÑ‰∏Ä‰∫õÊúâË∂£ÁöÑ‰∏úË•øÔºåÂÆÉ‰ª¨ÁöÑÁºñÊéíÊñπÂºèÊòØÊåâÊó•ÊúüÂÄíÂ∫èÊù•ÁöÑ„ÄÇ Êàë‰∏ÄÁõ¥ÊâìÁÆóÂÉèÈòÆ‰∏ÄÂ≥∞‰∏ÄÊ†∑Âá∫‰∏Ä‰ªΩËá™Â∑±ÁöÑÂë®ÂàäÔºå‰ΩÜÊàë‰∏çÊÉ≥Â±ÄÈôê‰∫éÊäÄÊúØÊñπÈù¢ÔºåÂè™Ë¶ÅÊòØÊàëÊÑüÂÖ¥Ë∂£ÁöÑÔºåÈ´òË¥®ÈáèÁöÑÔºåÊúâ‰ª∑ÂÄºÁöÑ‰ø°ÊÅØÈÉΩ‰ºöÂú®ËøôÈáåËÆ∞ÂΩï‰∏ãÊù•Ôºå‰ª•ÂêéÂë®ÂàäÂ∞±‰ºö‰ªéËøô‰∏™ÈáåÈù¢Âá∫„ÄÇ 2024-08-06 ‰∏Ä‰∫õÂ•Ω‰π¶ 2024-07-31ÂèëÁé∞‰∏Ä‰∏™ÂÆùËóèÂçö‰∏ªÔºöhttps://icheer.me/ Ë∑üÊàë‰∏ÄÊ†∑‰πüÂØπ‰∏ñÁïå‰øùÊåÅÂ•ΩÂ•áÔºåÊî∂Ëóè‰∫ÜËõÆÂ§öÊúâÊÑèÊÄùÁöÑ‰∏úË•ø„ÄÇ earth.fmÔºöÂú∞ÁêÉ FMÔºåËÅÜÂê¨Âú∞ÁêÉÁöÑÂ£∞Èü≥ ÂêÑË°åÂêÑ‰∏öÊØèÊó•Êñ∞ÈóªÊä•Âëä relingoÔºöËøô‰∏™Â•ΩÂÉèÂíåÊ≤âÊµ∏ÂºèÁøªËØëÂ∑Æ‰∏çÂ§ö monkeytypeÔºö‰∏Ä‰∏™ÊâìÂ≠óÁΩëÁ´ôÔºå‰∏çÁü•ÈÅì‰∏∫Âï•Êå∫ÁÅ´ÁöÑÊ†∑Â≠ê calmcodeÔºöÂÖçË¥π python ÁºñÁ®ãÊïôÂ≠¶ËßÜÈ¢ë 2024-03-23 Èò≥ÂÖâÁü•ÈÅì - ÂÖ≥Ê≥®ÂêÑÁßçÁºñÁ®ãÂºÄÂèëÊäÄÊúØ ÊñáÁîüËßÜÈ¢ë 2023-12-08 Python Online Compiler (interpreter / Editor) LLM Visualization Ëã±ËØ≠ÈïøÊñáÈòÖËØª Think things through - A daily long-form essay to make you smarter about technology, productivity, and AI.Trusted by almost 70k builders.ÔºöEvery 2023-11-19‰ªäÊó•ËØùÈ¢òÔºö ÂâçÁ´ØÈù¢ËØï ÊúÄËøëÂú®Áúã‰∏Ä‰∫õÈù¢ËØïÁöÑÂ∏∏ËßÅÈóÆÈ¢òÔºåÁúãÁúãËá™Â∑±ÁöÑÊäÄÊúØÂ∫ïÂ≠êÊòØÂê¶ÊâéÂÆûÔºåÂèëÁé∞‰∏Ä‰∏™ÂæàÂ•ΩÁöÑ‰∏úË•øÔºöËã•Â∑ù - freeCodeCamp.org ‰ΩøÁî®Âü∫Êú¨ HTML5 Ê®°ÊùøÔºåÂºÄÂßã‰Ω†ÁöÑ Web ÂºÄÂèëÈ°πÁõÆ about:blank ÊòØ‰ªÄ‰πàÊÑèÊÄùÔºü Èù¢ËØïÂÆòÈóÆÔºöËÉΩÂê¶Ê®°ÊãüÂÆûÁé∞ JS ÁöÑ new Êìç‰ΩúÁ¨¶ Â¶ÇÊûúÊàëÊù•Âá∫Èù¢ËØïÈ¢òÔºöÂ¶Ç‰ΩïÂÆûÁé∞‰∏Ä‰∏™ instanceof 1234567891011function instanceofFunc(instance, A) &#123; let p = instance.__proto__; while (p !== null) &#123; if (p.__proto__ === A.prototype) &#123; return true; &#125; else &#123; p = p.__proto__; &#125; &#125; return false;&#125; 2023-11-15‰ªäÊó•ËØùÈ¢òÔºö ÊäÄÊúØÂºÄÂèëÂ≤óËñ™ËµÑÔºå‰ª•Âèä‰ªÄ‰πàÊòØÁúüÊ≠£ÁöÑÊäÄÊúØ ‰ªäÂ§©Êü•‰∫Ü‰∏Ä‰∏ã 2023 ÂºÄÂèëÂ≤óËñ™ËµÑÁöÑÊÉÖÂÜµÔºåÂèëÁé∞Ëá™Â∑±ÁöÑÂ∑•ËµÑÊúâÁÇπËêΩÂêé‰∫ÜÔºå‰∏≠‰ΩçÊï∞ÊòØ 36w„ÄÇÈÄöËøáËøôÁØáÊñáÁ´†ÔºöÂºÄÂèë‰∫∫ÂëòËñ™ËµÑÔºö2023 Âπ¥ÊúâÂ¢ûÈïøÂêóÔºüÔºåÂèëÁé∞‰∫ÜËøô‰∏™ÁΩëÁ´ôÔºöHackerNoon - read, write and learn about any technologyÔºåÊÑüËßâÊå∫‰∏çÈîôÁöÑ„ÄÇ ÊúÄÈöæÁöÑÊòØÂÜÖÁßë 2023-11-14‰ªäÊó•ËØùÈ¢òÔºö Â¶Ç‰ΩïÂºÄÂèë‰∏Ä‰∏™ÂØåÊñáÊú¨ÁºñËæëÂô® vanilla-js ÊúÄËøëÊúâÂêå‰∫ãÂú®Á†îÁ©∂ÂØåÊñáÊú¨ÁºñËæëÂô®ÔºåÊàë‰πüÈ°∫Â∏¶ÁúãÁúãÔºöBuilding A Rich Text Editor (WYSIWYG) ‚Äî Smashing Magazine ÊçÆËØ¥ vanilla-js ÁâπÂà´Âø´Ôºå‰ΩÜÊàëÊòØÁ¨¨‰∏ÄÊ¨°Âê¨ËØ¥Ëøô‰∏™ÔºåÁªìÊûúËøô‰∏™È°πÁõÆÂè™ÊòØ‰∏™Áé©Á¨ëÔºöÂâçÁ´ØÁ§æÂå∫ÁöÑÊÅ∂Ë∂£Âë≥‰πã Vanilla JS 2023-11-09‰ªäÊó•ËØùÈ¢òÔºö AI ÁºñËØëÂéüÁêÜ - ËØ≠Ê≥ïÂàÜÊûê ÂÖçË¥πÁøªÂ¢ôÊê≠Âª∫ ‰∏Ä‰∫õË∞ÉÊïôÂ•ΩÁöÑ AIÔºåÁî®‰ª•ÂõûÁ≠î‰∏ìÈó®È¢ÜÂüüÁöÑÈóÆÈ¢òÔºöOpen Prompt - Create, Use, Share ChatGPT prompts. JavaScript AST ParserÔºö Esprima Esprima: Parser esprima/src at main ¬∑ jquery/esprima ÂæàÊó©‰πãÂâçÂ∞±ÊÉ≥Ëá™Â∑±ÂÜô‰∏™Ëß£ÊûêÂô®‰∫ÜÔºå‰ΩÜ‰∏ÄÁõ¥Ê≤°ÊúâËêΩÂÆû‰∏ãÊù•ÔºåÊúÄËøëÁúã‰∫Ü Esprima ÁöÑÊ∫êÁ†Å Â¶Ç‰ΩïÊêû‰∏Ä‰∏™ÂÖçË¥πÁöÑÁøªÂ¢ôÔºåÊúâ‰∫∫Áî® Cloudflare Êêû‰∫Ü‰∏Ä‰∏™Ôºö Cloudflare CDN Âèç‰ª£ÂÖçË¥π VPN È´òÈÄü‰∏äÁΩëÔºåÈÄüÂ∫¶Ë∂ÖÂø´ÔºåÂçÉÂÖÜËäÇÁÇπ„ÄÅËß£ÈîÅÂ•àÈ£ûÊµÅÂ™í‰Ωì - ÁßëÊäÄÂ∞èÈ£ûÂì• CloudFlare ÁöÑÂÖçË¥π VPNÔºåWarp+ ‰ºòÈÄâ IPÔºåÂÆûÁé∞Êó†ÈôêÁöÑÈ´òÈÄüÊµÅÈáèÔºÅ ‚Äì Èõ∂Â∫¶Ëß£ËØ¥ 2023-11-08‰ªäÊó•ËØùÈ¢òÔºö chrome Êèí‰ª∂ÂºÄÂèëÂÖ•Èó® vscode Êèí‰ª∂ÂºÄÂèëÂÖ•Èó® Ëá™Â∑±Â∞ÅË£ÖÂ∏∏Áî®ÁöÑ useHooks WebGL ÂÖ•Èó® ÂèëÁé∞‰∏ÄÊú¨È´òÂàÜËÆæËÆ°‰π¶ Ë∞∑Ê≠åÂÆòÊñπÂá∫ÁöÑ web ÂºÄÂèëÊïôÁ®ã ChatGPT ÊèêÁ§∫ËØç Âú®Êêú chrome Êèí‰ª∂ÊÄé‰πàÂºÄÂèëÁöÑÊó∂ÂÄôÔºåÂèëÁé∞‰∫ÜËøôÁØáÊñáÁ´†ÔºöChrome Êèí‰ª∂(Êâ©Â±ï)ÂºÄÂèëÂÖ®ÊîªÁï•-ËÖæËÆØËØæÂ†Ç ÁÑ∂ÂêéËßâÂæóËøô‰∏™ Ê∂®Áü•ËØÜ-ËÖæËÆØËØæÂ†ÇÔºåËøò‰∏çÈîô„ÄÇÂèàÂú®ÈáåÈù¢ÁúãÊñáÁ´†ÔºåÈÄöËøáËøôÁØáReact Hooks ÁöÑËä±Ê†∑Áé©Ê≥ï-ËÖæËÆØËØæÂ†ÇÔºåÂèëÁé∞‰∫Ü‰∏Ä‰∏™‰∏çÈîôÁöÑÂ∞èÁΩëÁ´ôÔºöuseHooks ‚Äì The React Hooks LibraryÔºå‰∏ìÈó®ÁΩóÂàó‰∫Ü‰∏Ä‰∫õÂ∏∏Áî®ÁöÑ useHooksÔºåÂèØ‰ª•Â≠¶‰π†‰∏Ä‰∏ãÔºåÊØîÂ¶ÇuseClickAwayÊàëÂ∞±ÁªèÂ∏∏Áî®Âà∞„ÄÇ ÊúÄËøëÊÉ≥Ëá™Â∑±ÂºÄÂèë‰∏ÄÊ¨æÁ±ª‰ºº Beecarbonize ÁöÑÂç°ÁâåÊ∏∏ÊàèÔºå‰∫éÊòØÊêúÂà∞‰∫Ü‰∏Ä‰∏™ÂÖ≥‰∫é WebGL ÁöÑ‰∏çÈîôÁöÑÊïôÁ®ãÔºöWebGL2 ÁêÜËÆ∫Âü∫Á°Ä ÂÖ≥‰∫é WebGL ÁöÑÊõ¥Â§öÊúâÊÑèÊÄùÁöÑÁΩëÁ´ôÔºö WebGL playground WebGL Academy Interactive Tutorials ‰ªéÊüê‰∫∫ÁöÑÂçöÂÆ¢‰∏≠ÂèëÁé∞ÁöÑ‰∏ÄÊú¨ËÆæËÆ°‰π¶Á¨îËÆ∞ÔºåÊêú‰∫Ü‰∏Ä‰∏ãË±ÜÁì£ÔºåËØÑÂàÜËøòÂèØ‰ª•ÔºöÂÜôÁªôÂ§ßÂÆ∂ÁúãÁöÑËÆæËÆ°‰π¶ÔºàÁ¨¨ 3 ÁâàÔºâ Âêå‰∫ãËá™Â∑±ÂºÄÂèë‰∫Ü‰∏ÄÊ¨æÊñπ‰æøÂ∑•‰ΩúÁöÑ vscode Êèí‰ª∂ÔºåÊàë‰πüÊêú‰∫Ü‰∏Ä‰∏ã vscode Êèí‰ª∂Â¶Ç‰ΩïÂºÄÂèëÔºåÂèëÁé∞‰∫ÜËøôÁØáÊñáÁ´†ÔºöÂâçÁ´Ø - ‰ªé 0 Âà∞ 1 ÂºÄÂèë‰∏ÄÊ¨æËá™Â∑±ÁöÑ vscode Êèí‰ª∂ - ‰∏™‰∫∫ÊñáÁ´† - SegmentFault ÊÄùÂê¶ Ë∞∑Ê≠å‰∏ìÂÆ∂ÂÜôÁöÑ web ÂºÄÂèëÊïôÁ®ãÔºöweb.dev 2023-07-21ÈòÆ‰∏ÄÂ≥∞ÁöÑÂë®Êä•ÔºåÈáåÈù¢ÁúãÂà∞Âõõ‰∏™ÁÆÄÂçï‰ªãÁªçÊäÄÊúØÂéüÁêÜÁöÑÊñáÁ´†Ôºö Everything You Want To Know About Media Queries and Responsive Design | Kablamo Engineering Blog A Fast Intro to Git Internals Hashing socket Âà∞Â∫ïÊòØ‰∏™Âï• ‰∏Ä‰∫õÊúâÊÑèÊÄùÁöÑÂ∑•ÂÖ∑Ôºö ËøÖÊéíËÆæËÆ° sniffnet Triviance! - Free online trivia quizzes fastgpt Discovering the Best Artificial Intelligence Website ÂÖçË¥πÁîµÂ≠ê‰π¶: Python for Data Analysis, 3E 2023-07-19ÂíåËèúÂ§¥ÊúÄËøëÁöÑÊñáÁ´†Ë¥®ÈáèÈ´òÂà∞ÁàÜÁÇ∏ ÂõûÁ≠îÔºöÁ©∂Á´üÂì™‰∏Ä‰∏™ËØëÊú¨ÊúÄÂ•ΩÔºü Áü≠ËßÜÈ¢ëÈáå‰ªÄ‰πàÈÉΩÊúâÔºåÈô§‰∫Ü...... Á¨®ËõãÔºåÂΩìÁÑ∂ÊòØÂÖàÈÄâ‰∫∫ ÂèëÁé∞‰∏Ä‰∏™Âà∂‰ΩúÈùûÂ∏∏Á≤æÁæéÁöÑÁΩëÁ´ôÔºåÊúâÁÇπÂÉèÊúüÂàäÁöÑÊÑüËßâÔºåËøô‰∏™ UI Âíå‰∫ßÂìÅËÆæËÆ°ÂæàÂÄºÂæóÂ≠¶‰π† #UNTAG ÂÖ∂‰ªñÊØîËæÉÂ•ΩÁöÑÂ∞èÁΩëÁ´ôÔºö FancyPig&#39;s blog‚Äî‚Äî‰∏ìÊ≥®‰∫éÁΩëÁªúÂÆâÂÖ®‰∏éÊäÄÊúØÂàÜ‰∫´ Â∞è‰ºóËΩØ‰ª∂ - ÂàÜ‰∫´ÂÖçË¥π„ÄÅÂ∞èÂ∑ß„ÄÅÂÆûÁî®„ÄÅÊúâË∂£„ÄÅÁªøËâ≤ÁöÑËΩØ‰ª∂ 2023-07-17 ‰∏Ä‰∏™Áã¨Á´ãÂàõÈÄ†ËÄÖÁöÑ‰∫îÂπ¥ GifCities FlagWaver LeaferJS ÂéüÁîü css scopeÔºöËØï‰∫Ü‰∏Ä‰∏ãÂÆòÊñπÁöÑ‰æãÂ≠êÔºå‰ºº‰πéÊµèËßàÂô®ËøòÊ≤°ÊîØÊåÅ 2023-07-12 RefrainMusicÔºåÊàëÂêå‰∫ãÂÅöÁöÑ‰∏ÄÊ¨æÈü≥‰πê app 2023-07-08 Â∞èÊä•Á´• BlogHub TO-D ÊùÇÂøó f5.pm ÁæéÂõ¢ÊäÄÊúØÂõ¢Èòü Quick Reference 2023-07-07 A free API database list for developersÔºöËøô‰∏™ÁΩëÁ´ôÊî∂ÈõÜ‰∫ÜÂ§ßÈáèÂÖ¨ÂÖ± APIÔºåÁõ∏ÂΩì‰∫é API ÁöÑÊêúÁ¥¢ÂºïÊìéÔºåÁî®Êà∑ÂèØ‰ª•Êèê‰∫§Êñ∞ÁöÑ API„ÄÇ 2023-06-16 Introduction to Compilers and Language Design GitHub Actions by Example ÊèêÁ§∫Â∑•Á®ãÊåáÂçó | Prompt Engineering Guide È´òÁ≠âÈô¢Ê†°‰∏âÂçÉÊâÄ üë®‚Äçüéì Âä©ÂäõËÄÉÁîüÈÄâÂ§ßÂ≠¶ | Laosheng.top Tiny Player | Tiny Player zh-lx/code-inspector: ÁÇπÂáªÈ°µÈù¢ÂÖÉÁ¥†ÔºåÂèØ‰ª•Ëá™Âä®ÂÆö‰ΩçËá≥ÁºñËæëÂô®ÂÖÉÁ¥†ÂØπÂ∫îÊ∫ê‰ª£Á†ÅÔºåÊîØÊåÅ webpack Âíå vite How to make a QR code with Stable Diffusion - Stable Diffusion Art 2023-06-15 ÈÄöÂæÄ AGI ‰πãË∑Ø 2023-06-11 Music Player github - Shurlormes/MusicPlayer react-jinke-music-player github - lijinke666/react-music-player 2023-06-09 ÈÖçÁΩÆ‰ΩøÁî® Kcptun Êù•Êö¥ÂäõÂä†ÈÄü shadowsocks ‰ª£ÁêÜ 2023-06-08 ËÆ≤ËÆ≤ PWA 2023-06-07 Github Actions Â§áÂøòÊ∏ÖÂçï Êñ∞ÁöÑËÑöÊú¨ÔºåËá™Âä®ÈÉ®ÁΩ≤ Hugo ÂçöÂÆ¢Ëá≥ÊúçÂä°Âô® ÈòÆ‰∏ÄÂ≥∞ - GitHub Actions ÂÖ•Èó®ÊïôÁ®ã 2023-06-05 Every tool you need to work with PDFs in one place How Clothes Should Fit È¶ñÈ°µ | Â¢®‰∏É Artiely 2023-06-02 ÂÆâÂÖ®ËÆ≠ÁªÉÁöÑ Web Â∫îÁî® ËÆ°ÁÆóÊú∫‰∏ì‰∏öÂ≠¶‰π†Ë∑ØÁ∫ø 2023-06-01 Free Music For YouTube Videos &amp; Creators ‚Ä¢ Uppbeat Ê¨¢ËøéÊù•Âà∞È¶ñÈ°µ | Viking Zhang, ‰∏Ä‰∏™ÂâçÁ´ØÂºÄÂèëÂ∑•Á®ãÂ∏à‰ª•ÂèäÁã¨Á´ãÂºÄÂèëËÄÖÁöÑÊïÖ‰∫ã 2023-05-30 ÈöèÊú∫ÁÇπËèúÂ∞èÁ®ãÂ∫è 2023-05-19 Áª¥Âü∫Â§ßÂ≠¶ ‰∏Ä‰∏™ÊêúÁ¥¢ÂºïÊìéÔºåÊü•ÊâæÊúÄÁÉ≠Èó®ÁöÑÂÖçË¥π 3D ÊâìÂç∞Ê®°Âûã„ÄÇ Â£ÅÁ∫∏ÁΩëÁ´ô Âü∫‰∫é Electron ÁöÑÊ°åÈù¢Â£ÅÁ∫∏ÂÆ¢Êà∑Á´Ø 2023-03-31 Ëøô‰∏™ÁΩëÁ´ôÂèØ‰ª•ÂØºÂÖ• GPS ËΩ®ËøπÔºåÂú®Âú∞ÂΩ¢Âõæ‰∏äÊòæÁ§∫ÔºåÁâπÂà´ÈÄÇÂêàÁîüÊàêÂ±±Âú∞Ë∑ØÁ∫øÂõæ„ÄÇ AI Á†îÁ©∂ÊâÄ Deep Learning Do It Yourself! ËøôÁØáÈïøÊñáËØ¶ÁªÜ‰ªãÁªç Web Â∫îÁî®ÊòØ‰ªÄ‰πàÔºåÁêÜÊ∏ÖÂêÑÁßçÊ¶ÇÂøµÔºåÊØîÂ¶Ç SPAÔºàÂçïÈ°µÂ∫îÁî®Ôºâ„ÄÅSSRÔºàÊúçÂä°Âô®Á´ØÊ∏≤ÊüìÔºâ„ÄÅSSGÔºàÈùôÊÄÅÁΩëÁ´ôÁîüÊàêÔºâ„ÄÇ 2023-02-24 Ê∏êÊûÑ: Ëøô‰∏™ÁΩëÁ´ôÊàë‰ªäÂ§©ÂèàÂéªÁúã‰∫ÜÔºåÊñ∞Â¢û‰∫Ü‰∏çÂ∞ëËßÜÈ¢ëÂíåÂêà‰ΩúÊñπÔºåÊå∫Â•ΩÁöÑ‰∏Ä‰∏™Â≠¶‰π†ÁΩëÁ´ô 2023-02-15 ËÆ°ÁÆóÊú∫ÊïôËÇ≤‰∏≠Áº∫Â§±ÁöÑ‰∏ÄËØæ LABULADONG ÁöÑÁÆóÊ≥ïÁΩëÁ´ô 2023-01-13 MLU-Explain(Visual explanations of core machine learning concepts) 2022-12-25 Ê¨¢ËøéÊù•Âà∞ GitHub ÊúÄÂ§ßÁöÑÂºÄÊ∫êÁÆóÊ≥ïÂ∫ì 2022-12-15 2021 ÂÆ∂ÁîµÈÄâË¥≠ÊîªÁï• | Ê¥óË°£Êú∫ - Áü•‰πé Ê∑±ÂÖ•ÊµÖÂá∫ CSS Â∏ÉÂ±Ä_CSS Â∏ÉÂ±Ä‰ªéÂÖ•Èó®Âà∞Á≤æÈÄö 2022-12-14‰ªäÂ§©‰∏ªË¶ÅÊòØÊÄªÁªì‰∫Ü css Â±Ö‰∏≠ÁöÑÊúÄ‰Ω≥ÂÆûË∑µÔºåÂ∑•‰Ωú‰∏≠Â∫îËØ•Ë∂≥Â§üÁî®‰∫ÜÔºå‰ΩÜÂØπ‰∫éÂÖ∂‰ªñÂæàÂ§öÁöÑ css ÁâπÊÄßÊàëÊéåÊè°ÂæóËøò‰∏çÂ§üÔºå‰∏ãÈù¢ÊòØ grid Â∏ÉÂ±ÄÁöÑÁü•ËØÜÔºö CSS Grid ÁΩëÊ†ºÂ∏ÉÂ±ÄÊïôÁ®ã - ÈòÆ‰∏ÄÂ≥∞ÁöÑÁΩëÁªúÊó•Âøó ÁΩëÊ†ºÂ∏ÉÂ±ÄÁöÑÂü∫Êú¨Ê¶ÇÂøµ - CSSÔºàÂ±ÇÂè†Ê†∑ÂºèË°®Ôºâ | MDN grid Â∏ÉÂ±ÄÁΩëÊ†ºÂ∏ÉÂ±ÄÊ∑±ÂÖ•ÊµÖÂá∫ CSS Â∏ÉÂ±Ä CSS Houdini - Web ÂºÄÂèëËÄÖÊåáÂçó | MDN 2022-12-09‰ª•‰∏ãÂÜÖÂÆπÂÖ®ÈÉ®Êù•Ëá™ÊØèÂë®‰∫îÁöÑÈòÆ‰∏ÄÂ≥∞Âë®Êä•Ôºö ‰∏Ä‰∏™ÁÆÄÂçïÊïôÁ®ãÔºå‰ªãÁªçÂ¶Ç‰ΩïÂÜô‰∏Ä‰∏™ TypeScript Â∫ìÂèëÂ∏ÉÂà∞ NPM ‰∏äÈù¢„ÄÇ:How to Write a TypeScript Library ÂæàÂ§öÈü≥‰πêÊúçÂä°Áé∞Âú®ÈÉΩÊòØÊî∂Ë¥πÁöÑÔºå‰ΩúËÄÖ‰ΩøÁî®Ê†ëËéìÊ¥æÔºåÊê≠Âª∫‰∏Ä‰∏™Ëá™Â∑±ÁöÑÈü≥‰πêÊúçÂä°Âô®ÔºåÂÆûÁé∞ÈöèÊó∂ÈöèÂú∞ÁöÑÂê¨Ê≠åËá™Áî±„ÄÇ:Â¶Ç‰ΩïÊê≠Âª∫‰∏Ä‰∏™Ëá™Â∑±ÁöÑÈü≥‰πêÊúçÂä°Âô® Á®ãÂ∫èÂëòÂàÜÊàê‰∏§Ê¥æÔºå‰∏ÄÊ¥æÊòØ&quot;Â¶ÇÊûú‰∏úË•øÊ≤°ÊúâÊçüÂùèÔºåÂ∞±‰∏çË¶ÅÂéª‰øÆÂÆÉ&quot;ÔºåÂè¶‰∏ÄÊ¥æÊòØ&quot;Â∞ΩÊó©Êõ¥Êñ∞ÔºåÂπ∂ÁªèÂ∏∏ÂèëÂ∏É&quot;„ÄÇÊàëÁöÑÊÉ≥Ê≥ïÊòØÔºåÂç≥‰Ωø&quot;‰∏úË•øÊ≤°ÊúâÂùè&quot;Ôºå‰Ω†‰ªçÁÑ∂ÂèØ‰ª•ÊîπËøõÂÆÉ„ÄÇ‰Ω†ÁöÑÂÆ¢Êà∑‰ºöÂñúÊ¨¢ËøôÊ†∑Ôºå‰Ω†ÁöÑÁ´û‰∫âÂØπÊâã‰∏ç‰ºö„ÄÇÊ∞∏Ëøú‰∏çË¶ÅÂÅúÊ≠¢ÊåëÊàòËá™Â∑±„ÄÇ:Balancing ‚ÄúIf it ain‚Äôt broke, don‚Äôt fix it‚Äù vs. ‚ÄúRelease early and often‚Äù Â¶ÇÊûú‰ªé 10 Â≤ÅÂºÄÂßãÔºå‰∏ÄÁõ¥Âà∞ 80 Â≤ÅÔºå‰Ω†ÊØèÂ§©ÊµèËßà 90 ‰∏™ÁΩëÈ°µÔºåÊØè‰∏™ÁΩëÈ°µÁöÑÂä†ËΩΩÈúÄË¶Å 4 ÁßíÔºå‰Ω†‰∏ÄÂÖ±‰ºöËä±Ë¥π 103.66 Â§©Á≠âÂæÖÁΩëÈ°µÂä†ËΩΩ„ÄÇÂ¶ÇÊûúÁΩëÈ°µÂä†ËΩΩÊó∂Èó¥ÂáèÂ∞ë 1 ÁßíÔºå‰Ω†‰ºöÂ§öÂá∫Êù• 27 Â§©ÁöÑÁîüÂëΩÔºÅ:How much time do we waste waiting for websites to load? ‰ΩúËÄÖÊé®Ëçê‰ΩøÁî® NestJS ‰Ωú‰∏∫ÂêéÁ´ØÊ°ÜÊû∂ÔºåÊú¨Êñá‰ªãÁªç‰ªñÁúº‰∏≠Ëøô‰∏™Ê°ÜÊû∂ÁöÑÂá†Â§ß‰ºòÁÇπ„ÄÇ:Why Choose NestJS as Your Backend Framework - Amplication Êú¨Êñá‰ªãÁªçÂ¶Ç‰Ωï‰ΩøÁî® JavaScript È™åËØÅ‰∏Ä‰∏™ URL ÊòØÂê¶ÂêàÊ≥ï„ÄÇ:Secure JavaScript URL validation Backblaze ÊòØ‰∏Ä‰∏™Â≠òÂÇ®ÊúçÂä°ÂïÜÔºåCloudflare ÊòØ CDN ÊúçÂä°ÂïÜÔºå‰∏§ËÄÖÈÉΩÊèê‰æõÂÖçË¥πÊúçÂä°„ÄÇÂ∞ÜÂÆÉ‰ª¨ÁªìÂêàËµ∑Êù•ÔºåÂ∞±ËÉΩËé∑ÂæóÂÖçË¥πÁöÑÂ≠òÂÇ® + CDN„ÄÇ:How to setup a practically free CDN ‰ΩúËÄÖÈúÄË¶ÅÊâæ‰∏Ä‰∏™ÂäüËÉΩÂÆåÂñÑÁöÑ‰∫ëÂéüÁîüÂ∫îÁî®Âπ≥Âè∞ÔºåÁªèËøáËá™Â∑±Á≠õÈÄâÂíåÊúãÂèãÊé®ËçêÔºåÂâ©‰∏ã KubeSphere Âíå Rainbond Ëøô‰∏§‰∏™‰∫ßÂìÅ„ÄÇ:ÂºÄÊ∫ê‰∫ëÂéüÁîüÂπ≥Âè∞ KubeSphere ‰∏é Rainbond ÂØπÊØî ËøôÊòØ Markdown Ê†ºÂºèÁöÑÂçáÁ∫ßÁâàÔºå‰øÆÊ≠£‰∫Ü‰∏Ä‰∫õ‰∏çÂêàÁêÜÂíåÈöæÁî®ÁöÑÂú∞Êñπ„ÄÇÊàëÂæàÂñúÊ¨¢Ëøô‰∏™Ê†ºÂºèÔºå‰ΩÜÊÑøËÉΩÂ§üÊé®ÂπøÂºÄÊù•„ÄÇ‰ΩúËÄÖ John MacFarlane ÊòØÂä†Â∑ûÂ§ßÂ≠¶ÁöÑÂì≤Â≠¶ÊïôÊéàÔºå‰πüÊòØÁ®ãÂ∫èÂëò„ÄÇ‰ªñÁöÑ‰∏ªË¶ÅÈ°πÁõÆÊòØÊñáÊ°£Â∑•ÂÖ∑ PandocÔºå‰ªñËøòÂèÇ‰∏é‰∫Ü CommonMark Ê†áÂáÜÁöÑÂà∂ÂÆö„ÄÇDjot ‰∏ÄÊ¨æÂ•ΩÁî®Âº∫Â§ßÁöÑÂºÄÊ∫êÂª∫Á´ôÂ∑•ÂÖ∑ÔºåÂü∫‰∫é SpringÔºåÊúÄËøëÂèëÂ∏É‰∫Ü 2.0 ÁâàÔºåÂú® GitHub Êúâ 24k+ ÊòüÔºåÊü•Áúã Demo„ÄÇ:Halo [Ààhe…™lo ä] Â•ΩÁî®ÂèàÂº∫Â§ßÁöÑÂºÄÊ∫êÂª∫Á´ôÂ∑•ÂÖ∑„ÄÇ ‰∏Ä‰∏™Êï∞ÊçÆÊé¢Á¥¢ÂíåÊï∞ÊçÆÂèØËßÜÂåñÂ∑•ÂÖ∑ÔºåÂèØ‰ª•‰∏éÂêÑÁßçÊï∞ÊçÆÊ∫êÂæàÂ•ΩÂú∞ÈõÜÊàê„ÄÇ:Apache Superset is a modern data exploration and visualization platform ‰∏Ä‰∏™ Node.js ÁΩëÁ´ôÊ°ÜÊû∂ÔºåÁâπÁÇπÊòØÁªìÊûÑÁÆÄÂçïÔºå‰∏Ä‰∏™ HTML È°µÈù¢Â∞±ÊòØ‰∏Ä‰∏™Ë∑ØÁî±„ÄÇ:Enhance Docs Âπ≥Èù¢ËÆæËÆ°ËΩØ‰ª∂ Canva Êé®Âá∫‰∫ÜÂõõÊ¨æ‰∏≠ÊñáÂ≠ó‰ΩìÔºåÂèØ‰ª•ÂÖçË¥π‰ΩøÁî®ÔºàÂåÖÊã¨ÂïÜÁî®Ôºâ„ÄÇ:Canva ÂèØÁîªÂéüÂàõÂ≠ó‰ΩìÈõÜÂèëÂ∏ÉÔΩúÊ±üÂçóÁôæÂë≥ÔºåÊ≠§ÂàªÊ≤âÈÜâ ‰∏Ä‰∏™ Node.js Â∑•ÂÖ∑ÔºåÂú®ÂëΩ‰ª§Ë°åÊòæÁ§∫‰∏§‰∏™ÊñπÊ°ÜÔºå‰∏Ä‰∏™ËæìÂÖ•‰ª£Á†ÅÔºå‰∏Ä‰∏™ÊòæÁ§∫ÁªìÊûú„ÄÇ:„ÄêÂºÄÊ∫êËá™Ëçê„Äë‰∏Ä‰∏™ Node.js ‰∫§‰∫íÂºèËß£ÈáäÂô®ÁªàÁ´Ø ChatGPT ÁöÑÊñ∞Áî®ÈÄîÔºåÁé∞Âú®ÊØèÂ§©ÈÉΩÂú®Â¢ûÂä†„ÄÇÊúâ‰∫∫ËÆ©ÂÆÉËß£Èáä‰ª£Á†ÅÔºåÊúâ‰∫∫ËÆ©ÂÆÉÂÜôÁ®ãÂ∫èÂíåÊâæ BugÔºåÁîöËá≥Êúâ‰∫∫ËÆ©ÂÆÉÊâÆÊºîËôöÊãüÊú∫ÔºåÊàëËØ¥‰∏ÄÊù°ÂëΩ‰ª§Ôºå‰Ω†ÊääÊâßË°åÁªìÊûúÂëäËØâÊàë„ÄÇ:Building A Virtual Machine inside ChatGPT ÁæéÂõΩÁ©∫ÂÜõÊ≠£Âú®ËØïÈ™å‰∏ÄÁßç&quot;‰ΩìÂ§ñÈ™®È™º&quot;ÔºåÂ£´ÂÖµÁ©ø‰∏äËøôÁßçÊú∫Ê¢∞Ë£ÖÁΩÆ‰ª•ÂêéÔºå‰ºöÊã•ÊúâÊõ¥Â§ßÁöÑÂäõÈáèÔºåÂÆåÊàêÂêÑÁßç‰ªªÂä°„ÄÇ:US Air Force tests exoskeleton to give cargo-loading porters a boost Ë•øÈìÅÂüéÊâãË°®ÁöÑÂÆòÁΩëÊúâ‰∏Ä‰∏™È°µÈù¢ÔºåÊïô‰Ω†ÊÄé‰πàÁî®ÊâãË°®‰Ωú‰∏∫ÊåáÂçóÈíàÔºåÔºàÂú®ÂåóÂçäÁêÉÔºâÊâæÂà∞ÂçóÊñπÔºåÂæàÂÆûÁî®ÁöÑÂ∞èÁü•ËØÜ„ÄÇ:Â¶Ç‰Ωï‰ΩøÁî®ÊâãË°®‰Ωú‰∏∫ÊåáÂçóÈíàÔºà‰ª•ÂåóÂçäÁêÉ‰∏∫‰æãÔºâ ChatGPT È°πÁõÆÔºöWelcome to ChatGPT Log in with your OpenAI account to continue ChatGPT Áü•‰πéÊèí‰ª∂ ChatGPT google Êèí‰ª∂ 2022-11-27‰ªäÂ§©ÂæóÊï¥ÁêÜ‰∏Ä‰∏ã ToolsÔºåÊääÈáåÈù¢ÈùûÂ∑•ÂÖ∑ÁöÑÈÉ®ÂàÜÔºåÊå™Âà∞ Mark ÈáåÈù¢ 37 Â≤ÅÁôΩÊâãËµ∑ÂÆ∂ÔºåÂπ≤Êàê‰∏ñÁïåÁ¨¨‰∏ÄÔºåËµÑ‰∫ß 5000 ‰∫øÔºåÈÇìÂ∞èÂπ≥Êé•ËßÅ‰ªñ 9 Ê¨°ÔºÅ 2020 Âπ¥ÂÖ®ÁêÉÊ£ÆÊûóËµÑÊ∫êËØÑ‰º∞ 2022-11-18 ÂõΩ‰∫ßÊñáÂÖ∑Â§™Èöæ‰∫Ü...Êó•Êú¨ÊñáÂÖ∑Áé©ËΩ¨‚ÄúÈªëÁßëÊäÄ‚ÄùÔºåÁΩëÂèãÁúãÂÆåÔºöÁúüÁªùÔºåÂ∑ÆË∑ù‰∏çÊ≠¢‰∏ÄÁÇπÁÇπ]]></content>
  </entry>
  <entry>
    <title><![CDATA[Êï∞Â≠¶]]></title>
    <url>%2Fblog%2Fmath%2Findex.html</url>
    <content type="text"><![CDATA[Êï∞Â≠¶ÊòØÁßëÂ≠¶ÁöÑÁéãÂÜ† ÊäΩË±°ÊòØ‰∫∫Á±ªÊô∫ÊÖßÁöÑ‰ΩìÁé∞„ÄÇÂ¶ÇÊûúËØ¥Êúâ‰ªÄ‰πàÂ≠¶ÈóÆÊòØÈùûÂ∏∏ÂÆåÁæéÁöÑËØ†Èáä‰∫ÜÊäΩË±°ÔºåÈÇ£‰πàËøôÈó®Â≠¶ÈóÆÈùûÊï∞Â≠¶Ëé´Â±û„ÄÇ ËøôÁØáÂçöÂÆ¢Áî®Êù•ÂΩíÁ∫≥ÊàëÁöÑÊï∞Â≠¶ÊñπÈù¢ÁöÑÂçöÂÆ¢„ÄÇ Â§ßÂ≠¶Êï∞Â≠¶Âü∫Á°Ä È´òÊï∞Ôºà‰∏ªË¶ÅÊòØÂæÆÁßØÂàÜÔºâ Á∫øÊÄß‰ª£Êï∞ Ê¶ÇÁéáËÆ∫‰∏éÊï∞ÁêÜÁªüËÆ° Êàë‰∏ÄÁõ¥ËßâÂæóÊï∞Â≠¶ÁöÑÁ¨¨‰∏ÄË¶Å‰πâÊòØÊé®ÂØºÔºå‰Ω†Âè™ÈúÄË¶Å‰∏çÂÅúÁöÑÊé®ÂØºÔºåÂæóÂà∞‰∏ÄÂº†Êï∞Â≠¶ÂõæË∞±ÔºåÈÇ£‰πàÊàëÂ∞±‰ºöËØ¥‰Ω†ÁöÑÊï∞Â≠¶Â≠¶ÁöÑÂ•Ω„ÄÇ ‰∏ãÈù¢ÊòØÊàëÁöÑ‰∏Ä‰∫õÊï∞Â≠¶Á¨îËÆ∞Ôºö Êï∞Â≠¶Âü∫Á°ÄÂÖ¨ÂºèÊé®ÂØº ÂæÆÁßØÂàÜ$\lim_{x\rightarrow 0} \frac{\sin x}{x} = 1$ÁöÑËØÅÊòé]]></content>
  </entry>
  <entry>
    <title><![CDATA[ËµÑÊ∫êÂØºËà™]]></title>
    <url>%2Fblog%2Fnavigation%2Findex.html</url>
    <content type="text"><![CDATA[ËøôÊòØÊàë‰∏äÁΩëÂÜ≤Êµ™ÂèëÁé∞ÁöÑ‰∏Ä‰∫õÂ•Ω‰∏úË•øÔºåÂ§ßÈÉ®ÂàÜÊòØÁΩëÁ´ôÔºå‰πüÊúâ‰∫õÂÖ∂‰ªñÁ±ªÂûãÁöÑÂ∑•ÂÖ∑ÔºåËµÑÊ∫ê„ÄÇ ÊàëÁöÑÊúãÂèã‰ª¨ Lianera&#39;s homepage Hi, I&#39;m Jiyang ÊõæÂ∞è‰π± ‚Äì Âú®ÊèèÁªò‰ªñÁöÑÁîüÊ¥ªÂÄíÂΩ± ÊûúÂ∞èÂè≥ Êé®ËçêÁöÑÂçö‰∏ª hexo-next-themeÁöÑ‰ΩúËÄÖÔºöIIssNan&#39;s Notes Á®ãÂ∫èÂëòÁöÑÂñµ ÈòÆ‰∏ÄÂ≥∞ÁöÑÂçöÂÆ¢ ÂÜ¥ÁæΩ icheer.me matrix67Ôºåmatrix67 ÁöÑÂçöÂÆ¢ËÆøÈóÆ‰∏ç‰∫Ü‰∫ÜÔºåÂ•ΩÂÉèÊê¨Âà∞‰∫Ü itch.ioÔºåÂ•ΩÂÉèÊòØ‰∏™‰∏çÈîôÁöÑÊ∏∏ÊàèÂºÄÂèëÁΩëÁ´ô„ÄÇËøôÊòØ liqi ÂØπ‰ªñÂÅöÁöÑ‰∏Ä‰∏™ÈááËÆø„ÄÇhttps://www.sohu.com/a/68883280_372416 ÈÖ∑Â£≥ÁöÑÂª∂Áª≠ÔºåÂ∑¶ËÄ≥ÊúµËÄóÂ≠êÂ∑≤ÁªèÊ≠ª‰∫ÜÔºåÂéüÂçöÂÆ¢Âú∞ÂùÄÔºöhttps://coolshell.cn/ ÁéãÂû†ÁöÑÂçöÂÆ¢ ÊßΩËæπÂæÄ‰∫ãÔºåÊßΩËæπÂæÄ‰∫ã ÊùéÁ¨ëÊù• ‰∏™‰∫∫ÂçöÂÆ¢‰∏≠Êñá ÊßΩËæπÂæÄ‰∫ã ‰∫ëÈ£éÁöÑ BLOG ÊãîËµ§ Áü•‰πé vczh ËΩÆÂ≠êÂì• ÂàòÊú™Èπè ÁøÅÂ§©‰ø° Á®ãÂ∫èÂëòÁöÑÂñµ geekplux geekplux ÁöÑ‰π¶Âçï lcomplete ÁöÑÊäÄÊúØÂàÜ‰∫´ Shidenggui folyd Star Rocket Blog t9t ÂÜ¥ÁæΩÁöÑÂçöÂÆ¢ Âå†ÂøÉÂçöÂÆ¢ Â∞èÂºüË∞ÉË∞É ‚Ñ¢ Â±±ÊúàË°å Êü≥Â©º „ÅÆ blog Âç¢ÊòåÊµ∑‰∏™‰∫∫‰∏ªÈ°µ Wang Jie - Biofy English meyerweb dogatekin humanwhocodes standardista stuffwithstuff Anish Athalye ÊàëÁöÑÂ∑•ÂÖ∑ liqi - Âà©Âô® ÊúçÂä°Âô®Ë¥≠‰π∞Âπ≥Âè∞ Ëê§ÂÖâ‰∫ëÁÆ°ÁêÜÊéßÂà∂Âè∞ ÁªºÂêàËµÑÊ∫ê Â±ÖÂ±ÖË•øÔºöËøôÊòØÊàëËá™Â∑±Âà∂‰ΩúÁöÑËµÑÊ∫êÂàÜ‰∫´ÁΩëÁ´ôÔºåÁî®‰∫éÂàÜ‰∫´ÊàëÂñúÁà±ÁöÑÁΩëÁªúËµÑÊ∫êÔºåÂ¶ÇÊûúÊúâ‰æµÊùÉÁöÑÂú∞ÊñπÔºåÂèØ‰ª•Áõ¥Êé•ËÅîÁ≥ªÊàëÂà†Èô§ Internet Archive: Digital Library of Free &amp; Borrowable Books, Movies, Music &amp; Wayback Machine Êñ∞ÈóªÁÉ≠ÁÇπ ‰ªäÊó•ÁÉ≠Ê¶ú Êë∏Êë∏È±ºÁÉ≠Ê¶ú Áü•ÂæÆ‰∫ãËßÅ ÊûúÊ±ÅÊéíË°åÊ¶ú - ÂêÑÁ±ªÊ¶úÂçïÊéíÂêçÂ§ßÂÖ® ÂØºËà™ ÂΩ±ËßÜÂØºËà™ AI ÂØºËà™ ÂºÄÊ∫êÈ°πÁõÆ HelloGitHub AI ChatGPT openprompt AI Ëß£ËØª‰∏ÄÂº†ÁÖßÁâáÂÜÖÂåÖÂê´ÁöÑ‰ø°ÊÅØÔºöThey See Your Photos AI ÂÜôÊ≠åÔºöGitHub - ASLP-lab/DiffRhythm: Di‚ô™‚ô™Rhythm: Blazingly Fast and Embarrassingly Simple End-to-End Full-Length Song Generation with Latent Diffusion ÊµãËØï AI Êô∫ÂäõÊ∞¥Âπ≥ÔºöHumanity&#39;s Last Exam Raphael - ÂÖçË¥πÊó†ÈôêÂà∂ AI ÂõæÂÉèÁîüÊàêÂô® | FLUX.1-Dev Ê®°Âûã Hika AI - Free AI Search Engine for Deep Insights and Smart Knowledge Mapping MemFree - Hybrid AI Search „ÄêÂÆòÁΩë„Äë302.AI - Ê±áÈõÜÂÖ®ÁêÉÈ°∂Á∫ßÂìÅÁâåÁöÑ AI Ë∂ÖÂ∏ÇÔºåÈõ∂ÊúàË¥πÔºåÊåâÈúÄ‰ªòË¥πÔºåÂÖ®Èù¢ÂºÄÊîæ Áî® Slea.ai ÂÖçË¥π AI Logo ÁîüÊàêÂô®ËΩªÊùæÂàõÂª∫‰∏ì‰∏ö Logo ËΩØ‰ª∂ Everything - Âü∫‰∫éÂêçÁß∞Âø´ÈÄüÂÆö‰ΩçÊñá‰ª∂ÂíåÊñá‰ª∂Â§π„ÄÇ Â±ÄÂüüÁΩë‰º†ËæìÔºölandrop Ê≠£ÁâàÊìç‰ΩúÁ≥ªÁªü‰∏ãËΩΩÁΩëÁ´ôÔºöitellyou iPA ÂïÜÂ∫ó-ÊúÄ‰ºòÁßÄÁöÑ iPA ËµÑÊ∫ê‰∏ãËΩΩÁΩëÁ´ô „Äåstardew valley„ÄçÁöÑÊêúÁ¥¢ÁªìÊûú_È©¨ÂÖãÂñµ ÈÖçËâ≤ Color Leap - Ëâ≤ÂΩ©Êó∂ÂÖâÊú∫ ‰∏≠ÂõΩ‰º†ÁªüÈ¢úËâ≤ ÂõæÁâá unsplash pixabay - 2.6 million+ Stunning Free Images to Use Anywhere project:~Pixorama/1 ¬∑ db.eboy.com ÂÜú‰ΩúÁâ©Êï∞ÊçÆÂ∫ìÔºöNational Agricultural Library Digital Collections ‰ºä‰∏ΩËééÁôΩÊ§çÁâ©ÊâãÁªòÔºöILLUSTRATIONS of the NATURAL ORDERS of PLANTS ÊãæÂÖâ - Â£ÅÁ∫∏ËΩØ‰ª∂ Ê¢óÂõæÂæÆÁº©‰∏ñÁïå ËßÜÈ¢ë ÂΩ±ËßÜÁΩëÁ´ôÔºö Âä™Âä™ÂΩ±ËßÜ ËâæÊó¶ËßÜÈ¢ë ‰∫ëÂ™í‰ΩìÔºöËÄÅÁîüÂ∏∏Ë∞à‰∫ëÂ™í‰ΩìÔºåÂÖöÂíå‰∫∫Ê∞ëÂú®‰∏ÄËµ∑ ‚òÅÔ∏è ÊäñÈü≥ÁΩëÈ°µÁâà Á∫™ÂΩïÁâáÔºöDocumentaries - watch free online documentaries - ihavenotv.com ÂâßÊú¨Ê°•ÊÆµÔºöTV Tropes Èü≥‰πê Êó†ÊçüÁîüÊ¥ª - ÂÖ®ÁΩëÊó†ÊçüÈü≥‰πêÂÖçË¥π‰∏ãËΩΩÔºåÈü≥‰πêÊêúÁ¥¢,Èü≥‰πêÂú®Á∫øËØïÂê¨,‰∏ãËΩΩ,Âú®Á∫øËß£ÊûêÁΩë Ëá™Â∑±Êî∂ÈõÜÁöÑÂá†‰∏™ÂèØÁî®Ê∫ê ¬∑ Issue #1769 ¬∑ lyswhut/lx-music-desktop ¬∑ GitHub ÂÖ≠Èü≥ËΩØ‰ª∂Ê∞∏‰πÖÂú∞ÂùÄÂèëÂ∏ÉÈ°µÔºåÊî∂ËóèÊàëÂõûÂÆ∂‰∏çËø∑Ë∑ØÔºÅ ‰π¶Á±ç ‰π¶Á±çÂ∑•ÂÖ∑Ôºö Calibre Ê≤âÊµ∏ÂºèÁøªËØë Âπ≥Âè∞Ôºö zlibrary È¶ñÈ°µ | itbox | ‰∏ìÊ≥® IT Á±ªÂõæ‰π¶ÂàÜ‰∫´ ÊäÄÊúØ‰π¶Âú®Á∫øÈòÖËØª ÂõæÁÅµÁ§æÂå∫ PDF ‰πãÂÆ∂ È∏†Êë©Êêú‰π¶ ‰π¶‰º¥ ‚Äì ‰Ω†ÁöÑÁîµÂ≠ê‰π¶‰º¥‰æ£ Âè§ËØóÊñáÁΩë-Âè§ËØóÊñáÁªèÂÖ∏‰º†Êâø ‰∏≠ÂõΩÁõ≤‰∫∫Êï∞Â≠óÂõæ‰π¶È¶Ü ÂÖ∑‰Ωì‰π¶Á±çÔºö Software Engineering at Google Textbook for Electrical Engineering &amp; Electronics HTML with Superpowers | HTML with Superpowers The Illustrated Machine Learning Website ËÆ°ÁÆóÊú∫ÁΩëÁªúÁîµÂ≠ê‰π¶ÔºöComputer Networks: A Systems Approach SICP - Structure and Interpretation of Computer Programs, 2e JavaScript Guidebook python Ëã±ÊñáÁîµÂ≠ê‰π¶ÔºöPython 3 Module of the Week ‚Äî PyMOTW 3 Êï∞ÊçÆÂ∫ìËã±ÊñáÁîµÂ≠ê‰π¶ÔºöFoundations of Databases Êìç‰ΩúÁ≥ªÁªüËã±ÊñáÁîµÂ≠ê‰π¶ÔºöOperating Systems: Three Easy Pieces ËÆ°ÁÆóÊú∫ÁªÑÊàêÂéüÁêÜËã±ÊñáÁîµÂ≠ê‰π¶ÔºöThe Math Behind the Magic - Processor Design ÁÆóÊ≥ïÔºöAlgorithms by Jeff Erickson ‰∏ÄÊú¨Ëã±ÊñáÁîµÂ≠ê‰π¶ÔºöThe Design of Web APIs Learn CSS Introduction to Information Retrieval Introduction - Rust and WebAssembly Software Engineer interviews: Everything you need to prepare | Tech Interview Handbook Introduction to Probability for Data Science Software Engineering at Google Tiny_Python_Projects The Art of Assembly Language Programming python ËÆæËÆ°Ê®°Âºè game math The Flask Mega-Tutorial Effective Shell Ë¥πÊõºÁâ©ÁêÜÂ≠¶ËÆ≤‰πâÔºöThe Feynman Lectures on Physics AI ‰ΩúÁîªÔºö AI ‰ΩúÁîªÁΩëÁ´ôÊî∂ÈõÜ Nolibox Creator Âπ≥Èù¢ËÆæËÆ°Ôºö ÂèØÁîª ÂõæÁâáÊêúÁ¥¢Ôºö TinEye Reverse Image Search Anime Scene Search Engine - trace.moe New Scientist | Science news and science articles from New Scientist 3058 live iptv channels tested today in 78 different languages from 131 countries around the world. ÂçÅ‰∏á‰∏™‰∏∫‰ªÄ‰πà - Âú®Á∫øÈùíÂ∞ëÂπ¥ÁôæÁßëÂÖ®‰π¶ È¶ñÈ°µ - ÂêàÂêåÁ§∫ËåÉÊñáÊú¨Â∫ì - ÂõΩÂÆ∂Â∏ÇÂú∫ÁõëÁù£ÁÆ°ÁêÜÊÄªÂ±Ä Âú®Á∫øÂê¨Ê≠åÔºöMyFreeMP3 Âê¨Ê≠åËΩØ‰ª∂ÔºöÊ¥õÈõ™Èü≥‰πê ÊäòÁ∫∏ÁΩëÁ´ô 100 Bytes of CSS to look great everywhere VOCALOID - the modern singing synthesizer - Aerial - A free and open-source Mac Screen Saver AutoCut: ÈÄöËøáÂ≠óÂπïÊù•Ââ™ÂàáËßÜÈ¢ë Metaphor 90&#39;s Cursor Effects ËßÜÈ¢ë ÈáèÂ≠êËµÑÊ∫êÁΩë ËâæÊó¶ÂΩ±ËßÜ-ÂÖçË¥πÁ¶èÂà©ÂΩ±Èô¢ ÁΩëÁõò PanSearch | ÁΩëÁõòËµÑÊ∫êÊêúÁ¥¢ | ÁΩëÁõòÊêúÁ¥¢ÂºïÊìé Ë∂ÖËÉΩÊêú - ÁôæÂ∫¶ÁΩëÁõòÊêúÁ¥¢Á•ûÂô® ÊêúÁ¥¢Áõò Â≠ó‰Ωì jaywcjlove/free-font: Êî∂ÂΩïÂïÜÁî®ÂÖçË¥πÊ±âÂ≠óÂ≠ó‰ΩìÔºåËøòÂåÖÊã¨ÂºÄÊ∫êËã±ÊñáÂ≠ó‰Ωì Free Font ÂõæÁâáÁºñËæë ÂõæÁâáÁºñËæëÔºöEdit ‚Ä¢ Photo - The Free Online Photo Editor In Your Browser Êì¶Èô§ÂõæÁâá‰∏≠‰∏çÈúÄË¶ÅÁöÑÈÉ®ÂàÜÔºöMagic Eraser ‰øùÊåÅÂõæÁâáÂÜÖÂÆπÁº©ÊîæÂõæÁâáÔºöJS IMAGE CARVER ËÄÅÁÖßÁâáÊÅ¢Â§çÁΩëÁ´ôÔºöBaseten AI Ê†πÊçÆÁÖßÁâáÁîüÊàêÂ§¥ÂÉè ÁºñËæë - ËæìÂá∫ ÂõæÂ∫äÔºösm.ms Êï∞Â≠¶‰ΩúÂõæËΩØ‰ª∂ÔºöGeoGebra ËßÜÈ¢ë‰∏ãËΩΩÂô®ÔºöYoutube ËßÜÈ¢ë‰∏ãËΩΩ - ÂÖçË¥πÂú®Á∫ø YouTube ‰∏ãËΩΩÂô® DeepL ÁøªËØëÔºöÂÖ®‰∏ñÁïåÊúÄÂáÜÁ°ÆÁöÑÁøªËØë ÁºñÁ®ãÁºñÁ®ãÈ°πÁõÆ ÁîµÂ≠ê‰π¶ÈòÖËØªÂô®ÔºöKOReader ÁôΩÊùøÂ∑•ÂÖ∑Ôºöpointless Run Python in Your HTMLÔºöPyScript | Run Python in your HTML È°πÁõÆÂèØËßÜÂåñ &lt;/&gt; htmx - high power tools for html Vexip UI - ÂàõÈÄ†ÊúâË∂£ÁöÑÂºÄÂèë‰ΩìÈ™å ÂºπÂπïËßÜÂ±èÊí≠ÊîæÂô®ÔºöPowerful danmaku video player | NPlayer Á¶ªÁ∫øËØ≠Èü≥ËØÜÂà´ÔºöVosk Á¶ªÁ∫øËØ≠Èü≥ËØÜÂà´ macOS ‰∏äÁöÑ‰∏ÄÊ¨æÂ∞ÜÁ≥ªÁªüÂ£∞Èü≥ËØÜÂà´ÊàêÊñáÂ≠óÁöÑËΩØ‰ª∂ÔºöEngineerDraft - BeMyEars Âê¨¬∑ËßÅÂ£∞Èü≥ Markdown Âêë Tree ÁõÆÂΩïËΩ¨ÂåñÁîüÊàêÂô®¬∑ ÂºÄÂèëËÄÖÂ∑•ÂÖ∑ÁÆ± ÁΩëÊòì‰∫ëÈü≥‰πê NodeJS Áâà API ‰ª£Á†ÅËΩ¨ PNG ÂõæÁâáÔºàÁæéÂåñÔºâÔºöCodepng | Create awesome images from your code. ÈöèÊú∫Êèê‰æõ‰∏ÄÂº†ÁãóÁãóÂõæÔºöplace.dog ÈöèÊú∫Êèê‰æõ‰∏ÄÂº†Áå´ÂõæÔºö{placekitten} - Placeholder kitten images for developers md-block: Render styleable Markdown in your HTML Ê≠£ÂàôË°®ËææÂºèÂèØËßÜÂåñÔºö RegulexÔºöJavaScript Regular Expression Visualizer*%3F%24&gt;) Regular Expression Tester and Visualizer ÁºñËØëÂéüÁêÜÔºö Crafting Interpreters Ëá™Â∑±Âä®ÊâãÂÜôÁºñËØëÂô® ‚Äî Ëá™Â∑±Âä®ÊâãÂÜôÁºñËØëÂô® Writing Compilers JavaScript ASTÔºö Esprima: Parser AST explorer Êää C++‰ª£Á†ÅËΩ¨Êàê RustÔºöC2Rust Demonstration hexo ‰∏ªÈ¢òÔºö argon Ë°®ÊÉÖÊ∑∑ÂêàÂô®Ôºöemojimix by Tikolu AI ÊãüÂ£∞: 5 ÁßíÂÜÖÂÖãÈöÜÊÇ®ÁöÑÂ£∞Èü≥Âπ∂ÁîüÊàê‰ªªÊÑèËØ≠Èü≥ÂÜÖÂÆπ Â±±Ê∞¥ÁîªÁîüÊàêÔºöGrok {Shan, Shui}*: Advent of understanding the generative art ÂÆûÁé∞‰∏Ä‰∏™ËöÇËöÅÊ£ÆÊûóËá™Âä®Êî∂ËÉΩÈáèËæÖÂä©Â∑•ÂÖ∑ | ÈùõÈùíÂçöÂÆ¢ Tweet Photo got acquired | Marc K√∂hlbrugge Â≠óÁ¨¶‰ΩúÁîªÔºåÊàëÁî®Â≠óÁ¨¶Áîª‰∏™ÂÜ∞Â¢©Â¢© countercomplex: Algorithmic symphonies from one line of code -- how and why? Gyroflow v1.1 is out! | Gyroflow Awesome Open Source Games How Does a Database Work? | Let‚Äôs Build a Simple Database Althttpd: The Althttpd Webserver Â¶Ç‰ΩïÂÜô‰∏Ä‰∏™ web ÊúçÂä°Âô®Ôºü Tutorial - Write a Shell in C ‚Ä¢ Stephen Brennan SimpleWebServer ÊòØ‰∏ÄÊ¨æ‰ΩøÁî® Java Âü∫‰∫é NIO ÁºñÂÜôÁöÑË∂ÖËΩªÈáèÁ∫ßÂºÄÊ∫ê Web Application Server tiny.c - A simple, iterative HTTP/1.0 Web server that uses the GET method to serve static and dynamic content. Â¶Ç‰ΩïÂÜô‰∏Ä‰∏™ Web ÊúçÂä°Âô® 500lines/web-server at master ¬∑ aosabook/500lines 100 Ë°åÂÆûÁé∞ÁöÑ react Ë∑ØÁî±Ôºöashok-khanna/react-snippets Â¶Ç‰Ωï‰ªéÈõ∂ÂºÄÂßãÂºÄÂèë‰∏Ä‰∏™ Chrome Êèí‰ª∂Ôºü I Spent 2 years Launching Tiny Projects | Tiny Projects GitHub ÂºÄÊ∫êÈ°πÁõÆÁª¥Êä§Âçè‰ΩúÊåáÂçó Building an aircraft radar system in JavaScript ÁªòÂõæ„ÄÅÁôΩÊùø„ÄÅËÆæËÆ°Ôºö Excalidraw paint-boardÔºåLHRUN/paint-board: üé® A powerful multi-end drawing board that brings together a lot of creative brushes to experience a whole new range of drawing effects! yft-design ÁºñÁ®ãÂ∑•ÂÖ∑ MongoDB Atlas Êèê‰æõÂÖçË¥πÁöÑ 500M ‰∫ëÊï∞ÊçÆÂ∫ìÔºöMongoDB Atlas | Â§ö‰∫ëÂºÄÂèëËÄÖÊï∞ÊçÆÂπ≥Âè∞ | MongoDB Typescript ÁºñËØëÁΩëÁ´ôÔºöTypeScript: TS Playground - An online editor for exploring TypeScript and JavaScript Vue SFC Playground ÂèØËßÜÂåñÁºñÁ®ãÔºöPython Tutor: Learn Python, JavaScript, C, C++, and Java by visualizing code Âú®Á∫øÁºñÁ®ãÁéØÂ¢ÉÔºöStackBlitz | Instant Dev Environments | Click. Code. Done. - StackBlitz Ê≠£ÂàôÊµãËØïÁΩëÁ´ôÔºöRegExr: Learn, Build, &amp; Test RegEx json Ê†°È™åÔºöÂú®Á∫ø JSON Ê†°È™åÊ†ºÂºèÂåñÂ∑•ÂÖ∑ÔºàBe JSONÔºâ Êó†‰ª£Á†ÅÔºö UI ËÆæËÆ°Á®øËΩ¨ÂâçÁ´Ø‰ª£Á†ÅÔºöCodeFun - UI ËÆæËÆ°Á®øÊô∫ËÉΩÁîüÊàêÊ∫ê‰ª£Á†Å The best way to build web apps without code | Bubble Aspect ‚Äî Build UI, fast ‰Ωé‰ª£Á†ÅÔºö H5DS6.x ÂõõÂ∑ùÁà±Ë∂£‰∫îÁßëÊäÄÊúâÈôêÂÖ¨Âè∏ HTTPS ËØÅ‰π¶Áî≥ËØ∑Ôºö OHTTPS - ÂÖçË¥π HTTPS ËØÅ‰π¶„ÄÅËá™Âä®Êõ¥Êñ∞„ÄÅËá™Âä®ÈÉ®ÁΩ≤ FreeSSL È¶ñÈ°µ - FreeSSL.cn ‰∏Ä‰∏™Êèê‰æõÂÖçË¥π HTTPS ËØÅ‰π¶Áî≥ËØ∑ÁöÑÁΩëÁ´ô Public API Lists SolidJS ¬∑ Reactive Javascript Library Â∏∏Áî®ËΩØ‰ª∂ÁöÑÈªëËâ≤‰∏ªÈ¢òÔºöDracula ‚Äî Dark theme for 271+ apps Quick Reference ‰ª£Á†ÅËΩ¨ÂõæÁâáÔºö Carbon | Create and share beautiful images of your source code CodeImage - A tool to manage and beautify your code screenshots ÊµÅÁ®ãÂõæÔºö D2 Playground Create a new site from git | Netlify Vercel arnog/mathlive: A web component for easy math input ÁºñÁ®ãÂ≠¶‰π† leetcode IO Wiki Vue.js ÊåëÊàò | ‰∏Ä‰∏™ Vue.js Âú®Á∫øÊåëÊàòÂπ≥Âè∞ ÊïôÂ≠©Â≠êÂíåÂ¶ªÂ≠êÁºñÁ®ã | ÁÆóÊ≥ïÂíåÊï∞ÊçÆÁªìÊûÑÊïôÁ®ãËßÜÈ¢ë International Journal of PoC or GTFO (Proof-of-Concept or Get The Fuck Out) | evmn.github.io WebAssembly WebAssembly Explorer A TypeScript-like language for WebAssembly ÊâìÂåÖ Parcel ‰∏≠ÊñáÁΩë WebGL WebGL2 ÁêÜËÆ∫Âü∫Á°Ä Á®ãÂ∫èÂëòËÉΩÂäõÁü©ÈòµÔºöProgrammer Competency Matrix | Sijin Joseph Ëá™Â≠¶ËÆ°ÁÆóÊú∫ÁßëÂ≠¶ÔºöTeach Yourself Computer Science ÂØÜÁ†ÅÂ≠¶ÂÖçË¥πËØæÁ®ãÔºöCrypto 101 ÂõæÂΩ¢Â≠¶ÂÖçË¥πÊïôÁ®ãÔºöLearnOpenGL CN Â§∫ÊóóËµõÁÆÄ‰ªãÔºöÁÆÄ‰ªã - CTF Wiki Êï∞ÊçÆÂ∫ìËß£È¢òÁΩëÁ´ôÔºöMaster Coding for Data Science - StrataScratch python Â∫ìÊü•ËØ¢ÁΩëÁ´ôÔºöPyPI ¬∑ The Python Package Index ÂºÄÊ∫êÂ∫îÁî®Á®ãÂ∫èÔºöThe Architecture of Open Source Applications vue ÂéüÁêÜËß£ÊûêÔºöÊ∑±ÂÖ•ÊµÖÂá∫ - vue ÂèòÂåñ‰æ¶ÊµãÂéüÁêÜ Ê∑±ÂÖ•Â≠¶‰π† CSSÔºöCSS-Tricks - Tips, Tricks, and Techniques on using Cascading Style Sheets. JavaScript È´òÁ∫ßÁ®ãÂ∫èËÆæËÆ°Á¨¨ÂõõÁâà‰ª£Á†Å demo ÂºÄÊ∫êÁ§æÂå∫ÔºöLinuxStory - ÊúÄÊñ∞ÁöÑ Linux ÂíåÊìç‰ΩúÁ≥ªÁªüËµÑËÆØ Á®ãÂ∫èÂëòÁ§æÂå∫ÔºöV2EX ËÆ°ÁÆóÊú∫Êú¨ÁßëËØæÁ®ã‰ΩìÁ≥ªÔºöÁΩëÊòì‰∫ëËØæÂ†Ç - È°∂Â∞ñ‰∏≠ÊñáÂ§ßÂ≠¶ËÆ°ÁÆóÊú∫‰∏ì‰∏öËØæÁ®ã‰ΩìÁ≥ª LABULADONG ÁöÑÁÆóÊ≥ïÁΩëÁ´ô CS Ëá™Â≠¶ÊåáÂçó ÂÅöÈ¢òÁΩëÁ´ô Ê†ëËéìÊ¥æÈò≤ÂêÉÁÅ∞ÊåáÂçó ÂâçÁ´ØÂºÄÂèëÂ≠¶‰π†Ë∑ØÁ∫øÔºàÂ≠¶+ÊµãÔºâ - ÈòøÈáå‰∫ëÂÖ®ÁêÉÂüπËÆ≠‰∏≠ÂøÉ ËÆ°ÁÆóÊú∫ÊïôËÇ≤‰∏≠Áº∫Â§±ÁöÑ‰∏ÄËØæ ¬∑ the missing semester of your cs education ‰∏âÁßçÂâçÁ´ØÂÆûÁé∞ VR ÂÖ®ÊôØÁúãÊàøÁöÑÊñπÊ°àÔºÅËØ¥‰∏çÂÆöÂì™Â§©Â∞±Áî®Âæó‰∏äÔºÅ - ÊéòÈáë Áå¥Â≠êÈÉΩËÉΩÊáÇÁöÑ GIT ÂÖ•Èó® | Ë¥ùÊ†º‰πêÔºàBacklogÔºâ Lodash ÁÆÄ‰ªã | Lodash ‰∏≠ÊñáÊñáÊ°£ | Lodash ‰∏≠ÊñáÁΩë ËôöÊãüÂÜÖÂ≠òÊé¢Á©∂ÔºåÊ∑±ÂÖ•ÁêÜËß£ËøõÁ®ãÂú∞ÂùÄÁ©∫Èó¥ Êñá‰ª∂Á≥ªÁªü‰ªãÁªç Daryl&#39;s TCP/IP Primer ËìùÊ°•‰∫ëËØæ Introductory HTTP - Beginner-friendly book on HTTP Web Skills Game Programming Patterns ËÆæËÆ°Ê®°ÂºèÔºö The Catalog of Design Patterns ÂâçÁ´ØÂºÄÂèëËÆæËÆ°Ê®°ÂºèÔºöPatterns.dev - Modern Web App Design Patterns ÂâçÁ´ØÂ≠¶‰π†ËßÜÈ¢ëÔºö2022 Âπ¥Â∫¶ÂÖ®ÁΩëÊúÄÂÖ® Web ÂâçÁ´ØÂ≠¶‰π†Ë∑ØÁ∫ø CTFÔºö CTFever Toolkit by uniiem HackTricks - HackTricks CTFHub We Chall Forgotten Security‚Äôs CTF Wiki linux: An intro to finding things in Linux ‰∏ÄË°åÂëΩ‰ª§ÔºöBash-Oneliner Reliably Send an HTTP Request as a User Leaves a Page | CSS-Tricks - CSS-Tricks Tauri Á≥ªÂàó - Áü•‰πé Web Scraping via Javascript Runtime Heap Snapshots - Adrian Cooney&#39;s Blog OAuth with Cloudflare Workers on a Statically Generated Site ‰ªãÁªç‰∫Ü‰∏ÄÁßçÂéãÁº©ÁÆóÊ≥ïÔºöH.264 is Magic The Illustrated TLS 1.3 Connection Three Pillars of Observability | Datadog What is WebAuthn and why should you care? - FusionAuth ÂâçÁ´ØÈù¢ËØï ËÖæËÆØ IVWebÔºà‰∏ÄÈù¢Ôºâ ‰πùÁßçË∑®ÂüüÊñπÂºèÂÆûÁé∞ÂéüÁêÜÔºàÂÆåÊï¥ÁâàÔºâ - ÊéòÈáë Â∏∏ËßÅÂâçÁ´ØÈù¢ËØïÈ¢ò ÂÅö‰∫Ü‰∏Ä‰ªΩÂâçÁ´ØÈù¢ËØïÂ§ç‰π†ËÆ°ÂàíÔºå‰øùÁÜüÔΩû - ÊéòÈáë ÊµèËßàÂô®ËæìÂÖ• URL ÂêéÂèëÁîü‰∫Ü‰ªÄ‰πàÔºü - Áü•‰πé ËÆ©Èù¢ËØïÂÆòËÜúÊãú‰Ω†ÁöÑ HTTPS ËøêË°åÊµÅÁ®ãÔºàË∂ÖËØ¶ÁªÜÔºâ - Áü•‰πé ÂΩªÂ∫ïÊêûÊáÇ HTTPS ÁöÑÂä†ÂØÜÂéüÁêÜ - Áü•‰πé HTTP Áõ∏ÂÖ≥Áü•ËØÜ | ÂâçÁ´ØÂ∑•Á®ãÂ∏àÊàêÈïøË∑ØÁ∫ø HTTPS Âä†ÂØÜÔºàÊè°ÊâãÔºâËøáÁ®ã - ÁÆÄ‰π¶ HTTPS ËØ¶Ëß£‰∏ÄÔºöÈôÑÂ∏¶ÊúÄÁ≤æÁæéËØ¶Â∞ΩÁöÑ HTTPS ÂéüÁêÜÂõæ - SegmentFault ÊÄùÂê¶ HTTPS Âä†ÂØÜËøáÁ®ãËØ¶Ëß£ - SegmentFault ÊÄùÂê¶ È´òÁ∫ßÂâçÁ´ØËøõÈò∂ÂçöÊñá | Êú®ÊòìÊù®ÂâçÁ´ØËøõÈò∂ Êú®ÊòìÊù®ÂâçÁ´ØËøõÈò∂ ÂâçÁ´ØÈù¢ËØïÂ∏∏ËßÅÁöÑÁü•ËØÜÁÇπÔºàÂõõÂ§ÑÊêúÂàÆÔºâüíª - ÊéòÈáë ÂèØËÉΩÊòØÊúÄÂÖ®ÁöÑ ‚ÄúÊñáÊú¨Ê∫¢Âá∫Êà™Êñ≠ÁúÅÁï•‚Äù ÊñπÊ°àÂêàÈõÜ - ÊéòÈáë Daily-Interview-Question Â£πÈ¢òÊ±áÊÄª | Êú®ÊòìÊù®ÂâçÁ´ØËøõÈò∂ Â§ßÊè≠ÁßòÔºÅ‚ÄúÊÅêÊÄñ‚ÄùÁöÑÈòøÈáå‰∏ÄÈù¢ÔºåÊàëÁ©∂Á´üÊÉ≥ÈóÆ‰ªÄ‰πà - ÊéòÈáë ÊåëÊàò‰∏ÄËΩÆÂ§ßÂéÇÂêéÁöÑÈù¢ËØïÊÄªÁªì (Âê´ÂÖ≠‰∏™ÊñπÂêë) - javascript ÁØá(‰∏áÂ≠óÈïøÊñá) - ÊéòÈáë JavaScript ÂéüÂûãÈìæÔºöJavascript Object Hierarchy „Äå2021„ÄçÈ´òÈ¢ëÂâçÁ´ØÈù¢ËØïÈ¢òÊ±áÊÄª‰πã JavaScript ÁØáÔºà‰∏äÔºâ - ÊéòÈáë 2020 ÊúÄÊñ∞Ôºö100 ÈÅìÊúâÁ≠îÊ°àÁöÑÂâçÁ´ØÈù¢ËØïÈ¢òÔºà‰∏äÔºâ - ÊéòÈáë 2021 Âπ¥ web ÂâçÁ´ØÂºÄÂèëÁªèÂÖ∏Èù¢ËØïÈ¢òÊÄªÁªìÊï¥ÁêÜÔºàÂª∫ËÆÆÊî∂ËóèÔºâ - ÂìîÂì©ÂìîÂì© ÂâçÁ´ØÈù¢ËØïÊØèÊó• 3+1Ôºå‰ª•Èù¢ËØïÈ¢òÊù•È©±Âä®Â≠¶‰π†ÔºåÊèêÂÄ°ÊØèÊó•Â≠¶‰π†‰∏éÊÄùËÄÉÔºåÊØèÂ§©ËøõÊ≠•‰∏ÄÁÇπÔºÅ Web ‰∏≠È´òÁ∫ßÂâçÁ´ØÈù¢ËØïÈ¢òÈõÜÂêàÔºà200+Ôºâ - SegmentFault ÊÄùÂê¶ Â§ßÂâçÁ´ØÈù¢ËØïÂÆùÂÖ∏ - ÂõæËß£ÂâçÁ´Ø ‰∏ìÊ†è‰ªãÁªç | ÂâçÁ´ØÈÉ®ÁΩ≤ÂçÅ‰∫îÁØá | Â§ßÂéÇÈù¢ËØï ÂâçË®Ä | Â§ßÂéÇÈù¢ËØïÈ¢òÊØèÊó•‰∏ÄÈ¢ò ÁêÜËß£ js ÂéüÂûã„ÄÅÂéüÂûãÈìæÂíåÁªßÊâø | Jiuto&#39;s blog JavaScript Ê∑±ÂÖ•Á≥ªÂàó UI ËÆæËÆ° iconÔºö Font Awesome iconfinder Iconic ‚Äî Free ‚Äúdo wtf you want with‚Äù pixel-perfect icons iconfont-ÈòøÈáåÂ∑¥Â∑¥Áü¢ÈáèÂõæÊ†áÂ∫ì UI È¢úËâ≤ÈÄâÊã©ÁΩëÁ´ôÔºöKhroma - The AI color tool for designers Êï∞ÊçÆ ËÇ°Á•®Êï∞ÊçÆÔºöÂçïÂè™ËÇ°Á•®Êï∞ÊçÆ Âä†ÂØÜË¥ßÂ∏Å Èó®ÁΩóÂ∏ÅÁüøÊ±† - heromiers Èó®ÁΩóÂ∏ÅÁΩëÈ°µÁâàÈí±ÂåÖ - mymonero AXS Staking Dashboard axie Â∏ÇÂú∫ Âä†ÂØÜË¥ßÂ∏Å‰∫§ÊòìÊâÄ API ÊñáÊ°£ Âü∫Êú¨‰ø°ÊÅØ | Binance Open Platform ÁÆÄ‰ªã | Bitget API ÂçöÂÆ¢ÊñáÁ´† ÂÅö‰∫íËÅîÁΩë‰∏äÁöÑÊàø‰∏úËÄå‰∏çÊòØÁßüÂÆ¢ÔºöBe A Property Owner And Not A Renter On The Internet ¬∑ Den Delimarsky Â¶Ç‰ΩïÊµãËØïÁîµÊ¢Ø ‚Äì Èü©Â∏àÂÇÖÂ∞±ÊòØÊàë 7 reasons to use Canva over PowerPoint for better presentation design Next-level frosted glass with backdrop-filter ‚Ä¢ Josh W. Comeau Ideas from &quot;A Philosophy of Software Design&quot; zhangchenchen/self-consistent-coder: Â¶Ç‰ΩïÊàê‰∏∫‰∏ÄÂêçËá™Ê¥ΩÁöÑÁ®ãÂ∫èÂëò ÂÖ≥‰∫é AI Â≠¶‰π†ÊñπÊ≥ïÁöÑÊÄùËÄÉ‚Äî‚Äî‰∫ßÂìÅÁªèÁêÜÂÖ•Èó®‰∫∫Â∑•Êô∫ËÉΩ | ‰∫∫‰∫∫ÈÉΩÊòØ‰∫ßÂìÅÁªèÁêÜ ÈáçÁ£Ö | ÂÆåÂ§áÁöÑ AI Â≠¶‰π†Ë∑ØÁ∫øÔºåÊúÄËØ¶ÁªÜÁöÑËµÑÊ∫êÊï¥ÁêÜÔºÅ:ai-roadmap/ai-union-201904/README.md at master ¬∑ apachecn/ai-roadmap Ëá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜÁõ∏ÂÖ≥Êé®Ëçê‰π¶ÁõÆ:research_tao/00_books.md at master ¬∑ zibuyu/research_tao ÂõæÁÅµÂ•ñÂæó‰∏ª Yann LeCun ‰∏áÂ≠óÊºîËÆ≤Ôºö‰ªäÂ§©ÁöÑ AI ÊØîÁå´ËøòÁ¨®ÔºåËá™ÊõùÊó©Â∑≤ÊîæÂºÉÂ§ßÊ®°Âûã-36 Ê∞™ ÊµÅÊµ™Â§©‰∏ã ‚Äì ËÉåÂåÖË°åËµ∞ÔºåÊµÅÊµ™Â§©‰∏ã Is the 10,000-Year-Old Yonaguni Monument a Man-Made Marvel or Nature&#39;s Art? ËøôÁØáÊñáÁ´†ËÆ≤‰∫Ü‰∏Ä‰∫õËØØÁî®Â∏ÉÂ∞îÁöÑ‰æãÂ≠êÔºöBooleans Are a Trap ÁîµÂ≠êÊùÇÂøó bestblogs.dev - Ê±áÈõÜÈ°∂Á∫ßÁºñÁ®ã„ÄÅ‰∫∫Â∑•Êô∫ËÉΩ„ÄÅ‰∫ßÂìÅ„ÄÅÁßëÊäÄÊñáÁ´†ÔºåÂ§ßËØ≠Ë®ÄÊ®°ÂûãÊëòË¶ÅËØÑÂàÜËæÖÂä©ÈòÖËØªÔºåÊé¢Á¥¢ÁºñÁ®ãÂíåÊäÄÊúØÊú™Êù• Ëã±ËØ≠Â≠¶‰π†ËµÑÊ∫ê BBC Learning English - Learn English vocabulary Áî∞Èó¥Â∞èÁ´ô - È´òÁ∫ßËã±ËØ≠Â≠¶‰π† ÂÖ∂‰ªñ Êï∞Â≠¶ÈõïÂ°ëÔºöSculpture by Zachary Abel Google Ëâ∫ÊúØ‰∏éÊñáÂåñ Âàõ‰∏öÂ§ßÂÖ® - Â§ßÂ≠¶ÁîüÂàõÊñ∞Âàõ‰∏öÈ°πÁõÆËµÑÊ∫êÂ∫ì BeddyStories - ÂÖ®ÁêÉÁªèÂÖ∏ÂÑøÁ´•Áù°ÂâçÊïÖ‰∫ãÂ∫ìÔºà0-12 Â≤ÅÔºâ ÁÇºÂì•ÂÖ¨Âè∏Âõ¢ÈòüÊ≠£Âú®ÂÅöÁöÑÊ∏∏ÊàèÔºöJungoJam-Dive into a wonderland where friends create, play, and stay together PDF ËΩ¨ÊàêÂÖ∂‰ªñÊñá‰ª∂Ê†ºÂºèÔºöGitHub - oomol-lab/pdf-craft: PDF craft can convert PDF files into various other formats. This project will focus on processing PDF files of scanned books. The project has just started. ÂõΩÂ§ñÁ®ãÂ∫èÂëòÂú£ËØûËäÇ‰ºöÁé©ÁöÑ‰ª£Á†ÅÂ§ßÂÜíÈô©ÔºöAdvent of Code 2024 Dollar Street - photos as data to kill country stereotypes WATCHING THE WORLD ËßÇÁúãÂÖ®ÁêÉÂÖçË¥π TVÔºöWatch Global &amp; Local Live TV Online for Free - tv.garden VPS Black Friday - Cheapest VPS Flash Deals ÂçïËØç‰π¶ÁΩëÈ°µÁâàÔºöWordsFunny ÊåëÊàòÊãºÊé•ÂçïËØçÔºöMaster Lexical Puzzles with Combinations Game - Daily Word Challenge LinkChecker Proofs without words ÂõΩÂÜÖÂÖÉÂÆáÂÆôÈ°πÁõÆÔºöBlockCity ÂõΩÂ§ñÊúçÂä°Âô®ÔºöÊê¨Áì¶Â∑• macos Â£ÅÁ∫∏ËΩØ‰ª∂Ôºöirvue ÁøªÂ¢ôÂ∑•ÂÖ∑ÔºöClashX pro ÁøªÂ¢ôË¥≠‰π∞ÊúçÂä°Âú∞ÂùÄÔºöhttps://portal.shadowsocks.nz/login gfwlistÔºöhttps://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt ‰∫∫‰ΩìÊûÑÈÄ†Ôºö3dbody ÊàøÂ±ãËÆæËÆ°ÁΩëÁ´ôÔºöhomestyler ÂÆûÂÜµÊëÑÂÉèÂ§¥ÔºöÂÖ®ÁêÉÈ´òÊ∏ÖÂÆûÂÜµÊëÑÂÉèÂ§¥ÔºÅ - SkylineWebcams markdown ÁÆÄÂéÜÁºñËæëÂô®Ôºö Â±±Êúà-ÂâçÁ´ØÂ∑•Á®ãÂ∏à-‰∏ÄÁ∫∏ÁÆÄÂéÜ ÂÖçË¥π MarkDown Âú®Á∫øÁÆÄÂéÜ-‰∏ì‰∏öÁÆÄÂéÜÂà∂‰ΩúÂ∑•ÂÖ∑-Êú®ÂèäÁÆÄÂéÜ DeFi Áü•ËØÜÂ∫ì Ê†πÊçÆÁªèÁ∫¨Â∫¶ÂÆö‰Ωç Êó•Êú¨Âè§Âª∫Á≠ëÔºöKAMIKATSU ZERO WASTE CENTER | Hiroshi Nakamura &amp; NAP ÔΩú‰∏≠ÊùëÊãìÂøóÔºÜNAP Âª∫ÁØâË®≠Ë®à‰∫ãÂãôÊâÄ ÁÆ°È£éÁê¥Èü≥‰πêÔºöMy Music Diary ÂÅ•Ë∫´ÔºöDAREBEE 1800+ Workouts Êï∞Â≠¶ÔºöDoga Tekin&#39;s Blog | The Hypnotic World of Degenerate Spirals Áâ©ÁêÜÔºöMotion Â•≥‰ºòÊî∂ÈõÜÁΩëÁ´ôÔºöJAV Model listing AV ËµÑÊ∫êÔºöAVHD101 bt ËµÑÊ∫êÁΩëÁ´ôÔºöbt4g Áà±ÂèëÁîµ Âà∂‰πêÔºöÂºÄÂßã | Learning Synths Êú∫Ê¢∞Ë°®ÂéüÁêÜ ÂÖ¨ÂºèÂåñÂâñÊûêËâ≤ÂΩ©‰∏âË¶ÅÁ¥†ÔºöËâ≤Áõ∏„ÄÅÈ•±ÂíåÂ∫¶„ÄÅÊòéÂ∫¶ Gold Price History Chart | Gold Price Trends | Goldhub]]></content>
  </entry>
  <entry>
    <title><![CDATA[Êñ∞Èóª]]></title>
    <url>%2Fblog%2Fnews%2Findex.html</url>
    <content type="text"><![CDATA[Êñ∞ÊàêÁ´ã‰∫Ü‰∏Ä‰∏™Ê†èÁõÆÔºå‰∏ìÈó®Áî®‰∫éËÆ∞ÂΩïÊúÄËøëÂèëÁîüÁöÑ‰∏Ä‰∫õÂ§ßÊñ∞Èóª„ÄÇ 2025-06-26‰∏≠ÂõΩÂûÉÂúæ‰∏çÂ§üÁÉß‰∫Ü ‚Äú‰∏≠ÂõΩÁöÑÂûÉÂúæ‰∏çÂ§üÁÉß‰∫Ü‚ÄùÔºåÂà∞Â∫ïÊòØ‰ªÄ‰πàÊÉÖÂÜµÔºü ÂûÉÂúæÁÑöÁÉß‰∏ªË¶ÅÁî®‰∫éÂèëÁîµÔºåÂà©Ê∂¶‰∏ªË¶ÅÊù•Ëá™‰∫éÊîøÁ≠ñË°•Ë¥¥Ôºö ÁîµÂÖ•ÁΩëÊØèÂ∫¶ÊèêÈ´ò 2 ÊØõ ÂûÉÂúæÂ§ÑÁêÜË¥πÔºåÊØèÂê® 100 Â∑¶Âè≥ ÂûÉÂúæ‰∏çÂ§üÁÉßÁöÑÂéüÂõ†ÊòØÂûÉÂúæÂàÜÁ±ªË°å‰∏öÂÖ¥Ëµ∑ÔºåÁÑöÁÉß‰æùËµñÁöÑ‰∏âÂ§ßÁ±ªÔºöÂ°ëÊñô„ÄÅÁªáÁâ©„ÄÅÁ∫∏ÊùøÔºåÂõûÊî∂ÁéáÂ§ßÂπÖÊèêÈ´ò‰∫ÜÔºåÂÜçÂéªÁÉßÈÇ£‰∫õ‰∏çÊÄé‰πà‰∫ßÁîüÁÉ≠ÈáèÁöÑÂûÉÂúæÂ∞±Âèë‰∏ç‰∫ÜÂ§öÂ∞ëÁîµ„ÄÇÁõÆÂâçÂûÉÂúæÁÑöÁÉß‰∫ß‰∏öÊ≠£ËΩ¨ÊàòË∂äÂçó ‰ª•Ëâ≤ÂàóÂíå‰ºäÊúóÊâì‰ªó]]></content>
  </entry>
  <entry>
    <title><![CDATA[ÈòÖËØª]]></title>
    <url>%2Fblog%2Freading%2Findex.html</url>
    <content type="text"><![CDATA[ËøôÈáåÁî®Êù•ÂÜô‰∏§Ê†∑‰∏úË•øÔºå‰∏ÄÊòØÊé®ËçêÊàëÁúãËøáÁöÑÂ•Ω‰ΩúÂìÅÔºà‰π¶Á±çÔºåÁîµÂΩ±Á≠âÔºâÔºå‰∫åÊòØÂàó‰∏™Âπ¥Â∫¶ÈòÖËØªËÆ°ÂàíÔºåËßÑÂàí‰∏Ä‰∏ãËá™Â∑±Ëøô‰∏ÄÂπ¥ÊÉ≥Ë¶ÅÂÆåÊàêÁöÑÈòÖËØª„ÄÇ Â∑≤ËØªÊé®Ëçê‰π¶Á±ç „Ää‰∏â‰Ωì„Äã:ËøôÊòØÊàë‰π∞ÁöÑÁ¨¨‰∏Ä‰∏™ kindle ÁúãÂÆåÁöÑÂîØ‰∏Ä‰∏ÄÊú¨‰π¶Ôºå‰∏∫‰∫ÜËøôÊú¨‰π¶ÔºåÊàëËøòÂºÑ‰∏¢‰∫ÜÊàëÁöÑÂ∞èÁ±≥ 3ÔºàÂ§ß‰∫åÁöÑÊó∂ÂÄôÂú®Â≠¶Ê†° D Â∫ßÊÉÖ‰∫∫Âù°ÁúãËøôÊú¨‰π¶ÁúãÂæóÂÖ•Ëø∑‰∫ÜÔºåË¢´‰∫∫ÂÅ∑‰∫ÜÊâãÊú∫ÔºâÔºå‰∏∫Ê≠§ÊàëÂ•ΩÂ§öËäÇÊìç‰ΩúÁ≥ªÁªüËØæÈÉΩÊ≤°Âê¨ËÆ≤„ÄÇÁúãÂÆåËøôÊú¨‰π¶‰∏âÈÉ®‰πãÂêéÔºå‰∏Ä‰∏™Á§ºÊãúÊàëÈÉΩÁ≤æÁ•ûÊÅçÊÉöÔºåÊÑüËßâÂà∞ÁúºÂâçÁîüÊ¥ªÁöÑËôöÂÅá‰∏éÁêêÁ¢éÔºå‰ª•Âèä‰∫∫ÁîüÁöÑÊó†ÊÑè‰πâÊÑü„ÄÇ „ÄäÊ≤âÈªòÁöÑÂ§ßÂ§öÊï∞„Äã:ÁéãÂ∞èÊ≥¢ÁöÑÊï£ÊñáÈõÜÔºåÂ§ß‰∏ÄÁöÑÊó∂ÂÄôÁúãÔºåËßâÂæóÂÜôÂæóÈùûÂ∏∏Â•ΩÔºå‰ΩÜÂ•ΩÂÉèÊ≤°ÁúãÂÆåÔºåÂú®ÂñúÈ©¨ÊãâÈõÖÂê¨‰π¶ÔºåÂê¨‰∫Ü‰∏çÂ∞ëÔºåÂõûÂ§¥ËøòÊòØÁªßÁª≠Áúã‰∏Ä‰∏ãÔºåÂÆåÊï¥ÁöÑÁúã‰∏ÄÈÅçÔºåÂç∞Ë±°‰∏çÊ∑±‰∫Ü„ÄÇ „ÄäÁºñÂÜôÂèØËØª‰ª£Á†ÅÁöÑËâ∫ÊúØ„ÄãÔºöÂº∫ÁÉàÊé®ËçêÁöÑÁºñÁ®ã‰π¶Á±ç ÁîµÂΩ± „ÄäÊ•öÈó®ÁöÑ‰∏ñÁïå The Truman Show (1998)„Äã:ËÆ©‰∫∫ÈöæÂøòÁöÑ‰∏ÄÈÉ®ÁîµÂΩ±Ôºå‰ªéÊ≠§Ê∑±Èô∑‰∫∫ÁîüÂà∞Â∫ïÊòØÂê¶ÁúüÂÆûÁöÑÂπªËßâ‰∏≠„ÄÇ „ÄäËÇñÁî≥ÂÖãÁöÑÊïëËµé The Shawshank Redemption (1994)„Äã:Ëøô‰∏™ÂâßÁªìÂ∞æÈÇ£‰∏ÄÊÆµÔºåÊàëËßâÂæóÊàë‰∏ÄËæàÂ≠êÈÉΩÂøò‰∏ç‰∫ÜÔºåÈÇ£ÁßçËá™Áî±ÁöÑÊÑüËßâÔºåÈÇ£ÁßçÊÉ¨ÊÑè„ÄÇ‰ª•ÂèäÂÆâËø™ÂíåÈªë‰∫∫ÁöÑÂèãË∞ä‰πüËÆ©‰∫∫ÈöæÂøò„ÄÇ „ÄäÁõóÊ¢¶Á©∫Èó¥ Inception (2010)„Äã:ÊúÄÂ•ΩÁöÑÁßëÂπªÁâá‰πã‰∏Ä „ÄäÈªëÂÆ¢Â∏ùÂõΩ The Matrix (1999)„Äã:ÊúÄÂ•ΩÁöÑÁßëÂπªÁâá‰πã‰∏Ä „ÄäÈòøÁîòÊ≠£‰º† Forrest Gump (1994)„ÄãÔºöËøôÈÉ®ÂâßÊàëÁúã‰∫Ü‰∏âÈÅçÔºåÊØèÊ¨°ÁúãÂÆåÈÉΩËßâÂæóÂÖÖÊª°‰∫ÜÂäõÈáèÔºå‰∫∫ÁîüÊòØÂÖÖÊª°ÁùÄÂèòÊï∞ÁöÑÔºåÊòØÊÅ¢ÂºòÁöÑ„ÄÇ „Ää‰∏âÂÇªÂ§ßÈóπÂÆùËé±Âùû 3 Idiots (2009)„ÄãÔºöÈ´ò‰∫åÊúüÈó¥Áúã‰∫ÜËøôÈÉ®ÂâßÔºåËÆ©ÊàëÊ∑±ÊÑüÂ≠¶Ê†°ÁöÑÊïôËÇ≤ÊúâËÆ∏Â§öÈîôËØØ‰πãÂ§ÑÔºåÊïôËÇ≤ÁöÑÊú¨Ë¥®ÊòØËÆ©‰∫∫ÁúüÊ≠£ÁêÜËß£ÂêÑÁßçÁü•ËØÜÁöÑÊú¨Ë¥®ÔºåÊ≠ªËÆ∞Á°¨ËÉåÊòØÁªùÂØπ‰∏çË°åÁöÑ„ÄÇÁúã‰∫Ü‰∏âÈÅç„ÄÇ „ÄäÊòüÈôÖÁ©øË∂ä Interstellar (2014)„ÄãÔºöÁ¨¨‰∏ÄÈÅçÊòØÂú®ÁîµÂΩ±Èô¢ÁúãÁöÑ 3D ÁâàÔºåÂΩìÊó∂ÁúüÁöÑÊ≤âÊµ∏‰∫ÜÂæà‰πÖÔºåÊÑüÂèπ‰∫∫ÁîüÁöÑÁü≠ÊöÇÂïä „ÄäÊó†Âßì‰πã‰∫∫ Mr. Nobody (2009)„ÄãÔºöËøôÈÉ®ÂâßÊàëÁúã‰∫Ü‰∏§ÈÅçÔºåÂÆûÂú®ÊòØ‰∏ÄÈÉ®Â•ΩÂâßÔºåÁúãÂÆå‰πãÂêéÔºåÊàëÂº∫ÁÉàÁöÑÊÑüËßâÂà∞Ôºå‰∫∫ÁîüÁöÑ‰∏ÄÂàáÈÉΩÊòØÂõ†ÈÄâÊã©ËÄåËµ∑ÔºåÂ¶ÇÊûúÊ≤°ÊúâÂΩì‰∏ãÁöÑÈÄâÊã©ÔºåËÆ°ÂàíÂíåË°åÂä®ÔºåÈÇ£‰πàÂèØ‰ª•ËÇØÂÆöÁöÑÔºåÊú™Êù•‰∏ç‰ºöÂ¶Ç‰Ω†ÊâÄÊÑøÔºå‰∏ÄÂàáÈÉΩÂú®Ëá™Â∑±ÁöÑË°åÂä®‰∏≠ÈòêËø∞„ÄÇ „ÄäÂ§ßÈ±º Big Fish (2003)„ÄãÔºöËøôÈÉ®ÂâßÁöÑÊµ™Êº´‰∏ª‰πâËâ≤ÂΩ©ÈùûÂ∏∏ÊµìÁÉàÔºåÊâÄ‰ª•ÂæàÁ¨¶ÂêàÊàëÁöÑËÉÉÂè£ÔºåÁúã‰∫Ü‰∏§ÈÅçÔºåÁõ∏ÂΩìÂñúÊ¨¢„ÄÇËøòËÆ∞ÂæóÁúãËøôÈÉ®ÂâßÁöÑÊó∂ÂÄôÊòØ 2017 Âπ¥ÔºåÂΩìÊó∂ÊàëÁöÑ‰∫∫ÁîüÈô∑ÂÖ•‰∫Ü‰ΩéË∞∑ÔºåË∑üË°®Â¶π‰∏ÄËµ∑ÂéªÁ∫¢Âè∂Â±±ÁöÑÊó∂ÂÄôËøòÁªôÂ•πÊé®Ëçê‰∫ÜËøôÈÉ®Ââß„ÄÇ „ÄäÁæéÂõΩÂæÄ‰∫ã Once Upon a Time in America (1984)„ÄãÔºöÁúãÂÆåËøôÈÉ®Âõõ‰∏™Â∞èÊó∂ÁöÑÁîµÂΩ±ÔºåÂ∞±ÂÉèËøáÂÆå‰∫Ü‰∏ÄÁîüÔºåÁúüÊòØÊÑüÊÖ®‰∏áÂçÉ„ÄÇ „ÄäÊµ∑‰∏äÈí¢Áê¥Â∏à La leggenda del pianista sull&#39;oceano (1998)„ÄãÔºöÁúã‰∫Ü‰∏âÈÅçÔºå‰∫∫ËØ•ÊÄéÊ†∑Â∫¶Ëøá‰∏ÄÁîüÂë¢ „ÄäÂºÇÊ¨°ÂÖÉÈ™áÂÆ¢ The Thirteenth Floor (1999)„ÄãÔºöÊàëÊó∂Â∏∏ÊÉ≥Ëá™Â∑±ÊòØÂê¶ÁîüÊ¥ªÂú®‰∏Ä‰∏™ËôöÊãü‰∏ñÁïå‰∏≠ÔºåÊòØÂê¶ËøòÊúâ‰∏ä‰∏ÄÂ±Ç‰∏ñÁïåÁöÑÂ≠òÂú®„ÄÇ ËøûÁª≠Ââß „ÄäÈªëÈïú Á¨¨‰∏ÄÂ≠£ Black Mirror Season 1 (2011)„Äã:ÈùûÂ∏∏ÈùûÂ∏∏Êé®ËçêÁöÑÁßëÂπªËã±ÂâßÔºåËôΩÁÑ∂ÂêéÈù¢ÁÉÇÂ∞æ‰∫ÜÔºå‰ΩÜÂâçÈù¢Âá†Â≠£ÁöÑÊÉ≥Ë±°ÂäõÁúüÁöÑ‰∏çÈîô„ÄÇ „ÄäÊÅ∞ÂêåÂ≠¶Â∞ëÂπ¥ (2007)„Äã:ËøôÁÆóÊòØÊàë‰∫∫Áîü‰∏≠ÊúÄÂñúÊ¨¢ÁöÑÂâß‰πã‰∏Ä‰∫ÜÔºåÊàëÂÆåÊï¥ÁöÑÁúã‰∫Ü‰∏âÈÅçÔºåÂá†‰πéÂèØ‰ª•ËØ¥ÊòØÁôæÁúã‰∏çÂéå„ÄÇÂú®ÊàëÂπ¥Â∞ëÊó∂ÔºåÊ≤°ÊúâÁªèÂéÜËøáÁ§æ‰ºöÁöÑÊØíÊâìÊó∂ÔºåÁúãËøôÈÉ®ÂâßËÉΩÂæóÂà∞ÊûÅÂ§ßÁöÑÊ≠£ËÉΩÈáèÔºåÊøÄÂä±ÁùÄÊàëÂÅöÊõ¥Â•ΩÁöÑËá™Â∑±ÔºåËÄå‰∏îÊòØÂà©‰ªñÂûãÁöÑËá™Â∑±„ÄÇËøôÈáåÂ∞±Ë¶ÅËØ¥Âà∞Âè¶‰∏ÄÈÉ®ÂâßÔºö„ÄäÊùéÂ∞èÈæô‰º†Â•á„ÄãÔºåËøôÊòØË∑üÊÅ∞ÂêåÂ≠¶Â∞ëÂπ¥Âπ∂ÂàóÂú®ÊàëÈùíÂ∞ëÂπ¥Âç†ÊçÆÊúÄÈáçË¶ÅÂú∞‰ΩçÁöÑ‰∏§ÈÉ®ÂâßÔºåÊøÄÂä±ÊàëÂèòÂæóÊõ¥Âº∫„ÄÇ‰ΩÜÊùéÂ∞èÈæô‰º†Â•áÁªôÊàëÁöÑÊÑüËßâÊòØÂÆåÂÆåÂÖ®ÂÖ®ÁöÑ‰∏ìÊ≥®‰∫éËá™Â∑±ÁöÑÊàêÈïøÔºåÂ∞èÂøóÂêëÔºåÂπ∂ÈùûÊÅ∞ÂêåÂ≠¶Â∞ëÂπ¥ÈÇ£ÁßçËÉ∏ÊÄÄÂ§©‰∏ãÁöÑÂ§ßÂøóÂêë„ÄÇ‰ΩÜË∂äÈïøÂ§ßÊàëÂç¥Ë∂äÂÅèÂêë‰∫éÊùéÂ∞èÈæô‰º†Â•á‰∫ÜÔºåÂõ†‰∏∫ÊàëÁ¶ªÊàê‰∏∫ÊØõÁöÑÂèØËÉΩÊÄßË∂äÊù•Ë∂äËøú‰∫ÜÔºåÊØïÁ´üÊàëÂè™ÊòØ‰∏™‰∫∫ÁüøÔºåÂà´‰∫∫ÁöÑ‰∫∫Âè£Á∫¢Âà©„ÄÇËÉΩÂÅöÂ•ΩËá™Â∑±Â∞±Â∑≤ÁªèÈùûÂ∏∏‰∏çÈîô‰∫Ü„ÄÇ „ÄäÊùéÂ∞èÈæô‰º†Â•á (2008)„ÄãÔºöÂàù‰∏â‰∏äÂ≠¶ÊúüÊàë‰ªéÂ≠¶Ê†°ÁöÑÂ§©Ê°•‰∏äÊëî‰∫Ü‰∏ãÊù•ÔºåÂú®ÂÆ∂‰ºëÂÖª‰∫Ü‰∏â‰∏™ÊúàÔºåÊúüÈó¥Âü∫Êú¨ÊòØÂ§ñÂ©ÜÁÖßÈ°æÊàëÁöÑË°£È£üËµ∑Â±ÖÔºåÁé∞Âú®ÊØèÂΩìÊàëÊÉ≥Ëµ∑ËøôÈÉ®ÂâßÔºåÊàëÂ∞±‰ºöÊÉ≥Ëµ∑Â§ñÂ©ÜÔºå‰ª•ÂèäÈÇ£ÊÆµÊó∂ÂÖâÔºåÈÇ£‰∏™Êó∂ÂÄôÊù•‰∫Ü‰∏ÄÊù°Â∞èÈªëÁãóÔºåÈÇ£‰∏™Êó∂ÂÄôÂ§ñÂ©ÜÊúÄÂ∏∏Ë∑üÊàëËØ¥ÁöÑÊòØÔºöÂ≠¶Êâì deiÔºàÁ¨¨‰∏âÂ£∞ÔºâÊâìÔºåÊî∏ÂéøÂúüËØùÔºåÊÑèÊÄùÊòØÂ≠¶ÊâìÔºàÊ≠¶ÊúØÔºâÁöÑËøô‰ª∂‰∫ãÊú¨Ë∫´‰ºöÂºïËµ∑ÂêéÊù•Êó†Â∞ΩÁöÑÊåëÊàòÔºàÁ∫¶Êû∂ÔºâÔºåÊâÄ‰ª•‰∏çË¶ÅÂ≠¶Êâì„ÄÇÁúüÊòØËÆ©‰∫∫Ëã¶Á¨ë‰∏çÂæó„ÄÇ‰∏çËøáÈÇ£‰∏™Êó∂ÂÄôËµ∞Ë∑ØÂèëÂëÜÈÉΩÂú®Â≠¶ÊùéÂ∞èÈæôÔºåÂ≠¶ÂäüÂ§´Ôºå‰∏çÂæó‰∏çËØ¥ÔºåÊùéÂ∞èÈæôÁúüÁöÑÊòØ‰∏™ÂæàÊúâÂΩ±ÂìçÂäõÁöÑ‰∫∫„ÄÇ „ÄäË•øÈÉ®‰∏ñÁïå Á¨¨‰∏ÄÂ≠£ Westworld Season 1 (2016)„ÄãÔºöÈùûÂ∏∏Â•ΩÁöÑÁßëÂπªÂâßÔºåËÆ≤Ëø∞‰∫Ü AI ÁöÑËßâÈÜí „ÄäÁ°ÖË∞∑„ÄãÔºö‰∫íËÅîÁΩëË°å‰∏öÂñúÂâß „ÄäÊùÉÂäõÁöÑÊ∏∏Êàè Á¨¨‰∏ÄÂ≠£ Game of Thrones Season 1 (2011)„ÄãÔºöË¥®ÈáèÈùûÂ∏∏Â•ΩÁöÑÂâßÔºåÊØè‰∏ÄÈõÜÈÉΩÂÉèÁîµÂΩ±‰∏ÄÊ†∑ „ÄäËÉúËÄÖÂç≥ÊòØÊ≠£‰πâ „É™„Éº„Ç¨„É´„Éª„Éè„Ç§ (2012)„ÄãÔºöÈùûÂ∏∏Â•ΩÁúãÁöÑÂæãÊîøÂñúÂâß „ÄäÂçäÊ≥ΩÁõ¥Ê†ë ÂçäÊ≤¢Áõ¥Ê®π (2013)„ÄãÔºöÂêåÊòØÂ†∫ÈõÖ‰∫∫‰∏ªÊºîÁöÑÔºåÈùûÂ∏∏Â•ΩÁúãÁöÑÈáëËûç‰∏öÂñúÂâßÔºåÊâìÂ∑•‰∫∫ÁàÜÈî§‰∏äÂè∏ Âä®Êº´ „ÄäÂàÄÂâëÁ•ûÂüü „ÇΩ„Éº„Éâ„Ç¢„Éº„Éà„Éª„Ç™„É≥„É©„Ç§„É≥ (2012)„Äã:ÂàÄÂâëÁ•ûÂüüÊòØ‰∏Ä‰∏™Á≥ªÂàóÔºåËÆ≤Ëø∞‰∏Ä‰∏™Â∞ëÂπ¥ËøõÂÖ•Ê≤âÊµ∏ÂºèÊ∏∏Êàè‰∏ñÁïåÁöÑÁªèÂéÜÔºåËôΩÁÑ∂ÊòØ‰∏™ÂêéÂÆ´Êº´Ôºå‰ΩÜÊÉ≥Ë±°ÂäõÁúüÁöÑ‰∏çÈîôÔºåÁÆóÊòØÊàëÈùûÂ∏∏ÂñúÊ¨¢ÁöÑ‰∏ÄÈÉ®ÁßëÂπªÂä®Êº´ „Ää‰∏Ä‰∫∫‰πã‰∏ã Á¨¨‰∏ÄÂ≠£ (2016)„ÄãÔºöÊØèÊ¨°ÁúãÈÇ£ÁßçÈïøÁîü‰∏çÊ≠ªÁöÑÂâßÔºåÈÉΩËÆ©ÊàëÊúâÂêåÊ†∑ÁöÑÊÑüËß¶ÔºåÂÜØÂÆùÂÆùËÆ§ËØÜÁöÑ‰∫∫Ê≠ªÂéªÁöÑÊó∂ÂÄôÔºåÊàë‰πüÊÉ≥Âì≠„ÄÇÂèàËÆ©ÊàëÊÉ≥Ëµ∑‰∫Ü„ÄäÊàëÂíåÂÉµÂ∞∏Êúâ‰∏™Á∫¶‰ºö„ÄãÔºå„ÄäÁ•ûËØù„Äã „ÄäÊùÄÊàÆÈÉΩÂ∏ÇÔºöO GANTZ:O (2016)„ÄãÔºöËøôÈÉ®ÂâßÊàëÊÄªËßâÂæóÂç∞Ë±°ÈùûÂ∏∏Ê∑±ÂàªÔºåÂõ†‰∏∫‰ªéÊüêÁßçÊÑè‰πâ‰∏äÊù•ËØ¥ÔºåÂÆÉÂæàÂÉèÊàë‰ª¨ÁöÑ‰∫∫ÁîüÔºåÊ≤°Â§¥Ê≤°Â∞æÁöÑÂ∞±ÂºÄÂßã‰∫ÜÔºå‰πüÊ≤°Êúâ‰ªª‰ΩïÊÑè‰πâÔºåÂ∞±‰ªÖ‰ªÖÊòØ‰ΩìÈ™åÊ¥ªÂú®ÂΩì‰∏ãÔºåÊú™Êù•‰πü‰∏çÁü•ÈÅìÂèëÁîü‰ªÄ‰πàÔºåÂºïËµ∑‰∫ÜÊàëÂº∫ÁÉàÁöÑÂÖ±È∏£ÔºåÂ≠òÂú®‰∏ª‰πâÂêß „ÄäÁëûÂÖãÂíåËé´ËíÇ Á¨¨‰∏ÄÂ≠£ Rick and Morty Season 1 (2013)„ÄãÔºöÊä´ÁùÄÁßëÂπªÂ§ñË°£ÁöÑÔºåËôöÊó†‰∏ª‰πâÂì≤Â≠¶Ââß ÁΩóÂ∞èÈªëÊàòËÆ∞ (2011):Ëøô‰∏™Âä®Êº´Êõ¥Êñ∞ÂæóÂæàÊÖ¢Ôºå‰ΩÜÁúüÁöÑÈùûÂ∏∏Ê≤ªÊÑà ÂÆ´Â¥éÈ™è „ÄäÂ§©Á©∫‰πãÂüé Â§©Á©∫„ÅÆÂüé„É©„Éî„É•„Çø (1986)„ÄãÔºö‰∏çÁü•ÈÅì‰∏∫‰ªÄ‰πàÔºåÁúãÂÆåËøôÈÉ®ÂâßËÆ©ÊàëÊúâÁßçÊ∑°Ê∑°ÁöÑÂøß‰º§ÔºåÊå•‰πã‰∏çÂéª „ÄäÂìàÂ∞îÁöÑÁßªÂä®ÂüéÂ†° „Éè„Ç¶„É´„ÅÆÂãï„ÅèÂüé (2004)„ÄãÔºöÂàùÁúãÂìàÂÑøÁöÑÁßªÂä®ÂüéÂ†°ÔºåË¢´ÂÖ∂Â•áÂ¶ôÁöÑÊÉ≥Ë±°ÂäõÂíåÊÑü‰∫∫ÁöÑÊÉÖËäÇÊâÄÈúáÊíºÔºåÁªìÂ±ÄÁöÑ‰∏ÄÂπï‰πüÊòØÊàëÈùûÂ∏∏ÂñúÊ¨¢ÁöÑÔºåÊõæÊÉ≥Áî®Êù•ÂÅöÂ£ÅÁ∫∏„ÄÇÂΩìÊó∂Êàë‰∏ãËΩΩ‰∫ÜÂÆ´Â¥éÈ™èÊâÄÊúâÂä®Êº´ÁöÑËìùÂÖâÁâàÔºå‰∏ÄÈÉ®ÁîµÂΩ±Â∞±ÊòØ 10 Â§ö GÔºåÂä†Ëµ∑Êù•Â•ΩÂÉèÊòØ 500 Â§ö GÔºåÁî®ÁßªÂä®Á°¨ÁõòË£ÖÁùÄÔºåÈÖçÂêà macbook ÁöÑËßÜÁΩëËÜúÂ±èÔºåËßÇÁúãÁúüÊòØ‰∏ÄÁßç‰∫´ÂèóÔºåÂ§¥‰∏ÄÊ¨°ËßâÂæóÁúãÂä®Êº´Â¶ÇÊ≠§Ê∏ÖÊô∞„ÄÇ „ÄäÈæôÁå´ „Å®„Å™„Çä„ÅÆ„Éà„Éà„É≠ (1988)„ÄãÔºöË∑üÊâÄÊúâÂÆ´Â¥éÈ™èÁöÑÂä®Êº´‰∏ªË∞É‰∏ÄÊ†∑ÔºåÊ≤ªÊÑà„ÄÇËøôÈÉ®Â∞§ÂÖ∂Ê≤ªÊÑà„ÄÇ „ÄäÂçÉ‰∏éÂçÉÂØª ÂçÉ„Å®ÂçÉÂ∞ã„ÅÆÁ•ûÈö†„Åó (2001)„ÄãÔºöËøôÊòØÈùûÂ∏∏ËÄÅÁöÑ‰∏ÄÈÉ®Âä®Êº´‰∫ÜÔºåÂÜÖÂÆπÊàëÈÉΩ‰∏çÂ§ßËÆ∞Âæó‰∫Ü È£é‰πãË∞∑ È¢®„ÅÆË∞∑„ÅÆ„Éä„Ç¶„Ç∑„Ç´ (1984)ÔºöÂΩìÊó∂ÁúãËßâÂæóÂæà‰∏çÈîôÔºåÂÜÖÂÆπ‰πüÊòØËÆ∞‰∏çÊ∏Ö‰∫Ü Â¥ñ‰∏äÁöÑÊ≥¢Â¶û Â¥ñ„ÅÆ‰∏ä„ÅÆ„Éù„Éã„Éß (2008)ÔºöÂ•ΩÁúãÔºåÂç≥‰æøÊàëÂ∑≤Áªè‰∏çÊòØÂ∞èÂ≠©Â≠ê‰∫Ü È≠îÂ•≥ÂÆÖÊÄ•‰æø È≠îÂ•≥„ÅÆÂÆÖÊÄ•‰æø (1989)ÔºöÂæàÊúâË∂£ Ê≠¶Â∫öÁ∫™ Á¨¨‰∏ÄÂ≠£ (2016)ÔºöËøô‰πàÂ§öÂä®Êº´‰∏≠ÔºåÊàëÊØîËæÉÂñúÊ¨¢ËøôÈÉ®Ôºå‰∏ÄÊòØÊÑüËßâËøôÈÉ®ÂâßÊ≤°ÊúâÁÉÇÂ∞æË∂äÊãçË∂äÂ•ΩÔºåËÄåÊòØÊÑüËßâÂâßÊÉÖÈùûÂ∏∏ÁöÑ‰∏çËêΩ‰øóÂ•óÔºåÂºï‰∫∫ÂÖ•ËÉú„ÄÇ ÁÉ≠Ë°ÄÂä®Êº´ ÁÅ´ÂΩ±ÂøçËÄÖ NARUTO -„Éä„É´„Éà- (2002)ÔºöÈô™‰º¥‰∫ÜÊàëÂíåÊàëÂ†ÇÂºüÊï¥‰∏™ÈùíÂ∞ëÂπ¥ÁöÑ‰∏ÄÈÉ®ÂâßÔºåÊÉ≥Ë±°ÂäõÂíå‰∏ñÁïåËßÇÈÉΩ‰∏çÈîôÔºåÊûÑÂª∫‰∫Ü‰∏Ä‰∏™Â•áÂ¶ôÁöÑ‰∏ñÁïå„ÄÇËôΩÁÑ∂‰ª•ÂâçËØª‰π¶ÁöÑÊó∂ÂÄôÔºåÁúãÁöÑÊñ≠Êñ≠Áª≠Áª≠Ôºå‰ΩÜ‰πüÂü∫Êú¨‰∏äÁúãÂÆå‰∫Ü„ÄÇ Êµ∑Ë¥ºÁéã „ÉØ„É≥„Éî„Éº„Çπ (1999)ÔºöÊµ∑Ë¥ºÁéãÁõ∏ÂØπ‰∫éÁÅ´ÂΩ±Êù•ËØ¥ÂÆûÂú®ÊòØÂèàËá≠ÂèàÈïø‰∫ÜÔºå‰∏≠Èó¥ÂæàÂ§öÈõÜÁúã‰∏ç‰∏ãÂéªÔºåÂè™Áúã‰∫ÜÂÖ≥ÈîÆÁöÑÈÉ®ÂàÜÔºåÁâπÂà´ÊòØÈ°∂‰∏äÊàò‰∫âÂíåÂ§öÂºóÊúóÊòéÂì•Ëøô‰∏ÄÈò∂ÊÆµÔºåËøòÁúüÊòØÂ•ΩÁúã„ÄÇÊµ∑Ë¥ºÁéãÂàöÂºÄÂßãÁªô‰∫∫Áßç‰∏ãÁöÑÈÇ£ÁßçÊ¢¶ÊÉ≥‰∏éÊøÄÊÉÖÊàëÂà∞Áé∞Âú®ËøòËÆ∞Âæó„ÄÇÂ§ß‰∫åÁöÑÊó∂ÂÄôÂõ†‰∏∫Ëøô‰∏™ÂâßÔºåÊàëÊÄªÊòØÂØπ‰∫∫ÁîüÔºåÂØπÊú™Êù•ÂÖÖÊª°ÁùÄÂ∏åÊúõ„ÄÇ‰ΩÜÂèØÊÉúÊó∂Èó¥ÈÉΩÊ≤°ÊúâËä±Âú®ÂØπÁöÑÂú∞ÊñπÔºåÂ§ßÂ≠¶Âá†‰πéÈÉΩËôöÂ∫¶‰∫Ü„ÄÇ ÁàΩÂâß „ÄäÂêûÂô¨ÊòüÁ©∫ (2020)„ÄãÔºöËôΩÁÑ∂Áü•ÈÅìÊòØÂçáÁ∫ßÁàΩÂâßÔºå‰ΩÜÊòØ‰πü‰∏çÂæó‰∏ç‰Ω©Êúç‰ΩúËÄÖÊÅ¢ÂºòÁöÑÊÉ≥Ë±°Âäõ„ÄÇÂú®ÂñúÈ©¨ÊãâÈõÖ‰∏äÂü∫Êú¨‰∏äÂø´Âê¨ÂÆå‰∫ÜÔºà2022 Âπ¥Ôºâ „ÄäÊñóÁ†¥ËãçÁ©π Á¨¨ÂõõÂ≠£ (2021)„ÄãÔºöÂü∫Êú¨‰∏ä‰πüÊòØÂú®ÂñúÈ©¨ÊãâÈõÖ‰∏äÂê¨ÁöÑÔºå2017 Âπ¥Êó†ËÅäÁöÑÊó∂ÂÄôÈÉΩÂú®Âê¨Ëøô‰∏™ „ÄäÊñóÁΩóÂ§ßÈôÜ 1 (2018)„ÄãÔºöËøô‰∏™ÊòØÁúãÁöÑÂä®Êº´ÔºåÊØè‰∏ÄÈõÜÈÉΩÊ≤°ËêΩ‰∏ã Á∫™ÂΩïÁâáÔºåÂÖ¨ÂºÄËØæ „ÄäÂ∞èÊ£ÆÊûó Â§èÁßãÁØá „É™„Éà„É´„Éª„Éï„Ç©„É¨„Çπ„Éà Â§è„ÉªÁßã (2014)„ÄãÔºöÈùûÂ∏∏Â•ΩÁöÑÁ∫™ÂΩïÁâáÔºåËÆ©‰∫∫ÊÑüÂèóÁîüÊ¥ªÔºåÂõõÂ≠£ÁöÑÂèòÂåñ „ÄäÁæé‰∏Ω‰∏≠ÂõΩ Wild China (2008)„ÄãÔºöÈùûÂ∏∏Â•ΩÁöÑÈ£éÊôØÔºåÈ£éÂúü‰∫∫ÊÉÖÁ∫™ÂΩïÁâá „ÄäÊøÄËç°¬∑1978-2008 (2008)„ÄãÔºöÈùûÂ∏∏ÈùûÂ∏∏Â•ΩÁöÑÁªèÊµéÂíåÊîøÊ≤ªÂâßÔºåËÆ©‰∫∫‰∫ÜËß£ÊîπÈù©ÂºÄÊîæÁöÑÊï¥‰∏™ËøáÁ®ãÔºåÊî∂Ëé∑ÈùûÂ∏∏Â§ö„ÄÇ „ÄêÂê¥ÂõΩÁõõ„ÄëÁßëÂ≠¶ÈÄöÂè≤ ÔºàÂÖ® 39 ËÆ≤Ôºâ:Ëøô‰∏™ÂÖ¨ÂºÄËØæÔºåÊÄªÁªì‰∫ÜÂæàÂ§öÊàë‰ª•ÂâçÂ∏∏ÊÉ≥ÁöÑÈóÆÈ¢òÁöÑÁªìËÆ∫ÔºåÊ∑±ÂÖ•ÂØπÊØî‰∫Ü‰∏≠Ë•øÊñπÊñáÂåñÔºåÊàëÂØπËøôÊñπÈù¢Á°ÆÂÆûÈùûÂ∏∏ÊÑüÂÖ¥Ë∂£ ‰∫íËÅîÁΩëÊó∂‰ª£ (2014)ÔºöÁúã‰∫Ü‰∏âÈÅçÁöÑÁ∫™ÂΩïÁâáÔºåÊØè‰∏ÄÈÅçÈÉΩÊúâÊñ∞ÁöÑÊî∂Ëé∑ÂíåÊÑüÊÇü Âπ¥Â∫¶ÈòÖËØªËÆ°Âàí2025 Âπ¥ÁîµËßÜÂâß ÊΩú‰ºè 2024 Âπ¥‰π¶Á±ç „ÄäÁºñÂÜôÂèØËØª‰ª£Á†ÅÁöÑËâ∫ÊúØ„ÄãÔºöÂº∫ÁÉàÊé®ËçêÁöÑÁºñÁ®ã‰π¶Á±ç„ÄÇÂ∑≤ÁªèËØªËøá‰∏ÄÈÅç 2023 Âπ¥‰π¶Á±ç „ÄäCSS Ëß£ÂØÜ„ÄãÔºöÁõÆÂâçÁúãÂÆå‰∫ÜÁ¨¨‰∏ÄÁ´†ÔºåËÉåÊôØ‰∏éËæπÊ°ÜÔºåÁúüÁöÑÂÜôÁöÑÂæàÂ•Ω Ê≤âÈªòÁöÑÂ§ßÂ§öÊï∞:ÊâìÁÆóÈáçËØªËøôÊú¨‰π¶ ‰π¶Ëô´.ÁâõÊ¥•Ëã±Ê±âÂèåËØ≠ËØªÁâ©ÂÖ®Â•óÁõíË£ÖÔºöÊàëËá™Â∑±‰∏ã‰∫Ü„Ää‰π¶Ëô´¬∑ÁâõÊ¥•Ëã±Ê±âÂèåËØ≠ËØªÁâ©(ÂÖ®Â•ó)(Â•óË£ÖÂÖ± 137 ÂÜå)„ÄãÔºåazw3 Ê†ºÂºèÁöÑÔºåÊâìÁÆóÂº•Ë°•‰∏Ä‰∏ãÁ´•Âπ¥Ê≤°Êúâ‰π¶ËØªÁöÑÁóõËã¶ ÂâëÊåá offerÔºöËøôÊú¨‰π¶ÊàëÂæàÊó©Â∞±‰π∞‰∫ÜÔºåÂú®ÊàëÂ§ßÂõõÂàöÊØï‰∏öÔºåËøòÊ≤°Â§öÂ∞ëÁºñÁ®ãÁªèÈ™åÁöÑÊó∂ÂÄôÔºåÂΩìÊó∂ÁúãÂÆåÊî∂Ëé∑Â∞±ÂæàÂ§ß„ÄÇÊó∂Èöî 7 Âπ¥ÔºåÊàëÊâìÁÆóÈáçÊñ∞Áúã‰∏ÄÈÅçÔºåÊÑüËßâ‰ºöÊî∂Ëé∑‰∏çÂ∞è„ÄÇÂÆûÂú®ÊòØÂ§™ÁªèÂÖ∏‰∫ÜËøôÊú¨‰π¶„ÄÇ Unix ÁºñÁ®ãËâ∫ÊúØÔºöËøôÊú¨‰π¶ËÆ≤Ëø∞‰∫ÜÂ¶Ç‰ΩïÂÜôÂá∫Â•ΩÁöÑ‰ª£Á†ÅÔºåÈùûÂ∏∏ÂÄºÂæó‰∏ÄËØª„ÄÇ Âä®Êº´ „Ää‰∏≠ÂõΩÂ•áË∞≠ (2023)„Äã:Áúã‰∫ÜÂâçÈù¢‰∏§ÈõÜÔºåÊÑüËßâ‰∏çÊÄé‰πàÊ†∑ ÁîµÂΩ± ËµõÂæ∑ÂÖã¬∑Â∑¥Ëé±ÔºöËøôÈÉ®ÂâßÁúüÊå∫Â•ΩÁúãÁöÑ]]></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2Fblog%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[ÊÄùËÄÉ]]></title>
    <url>%2Fblog%2Fthinking%2Findex.html</url>
    <content type="text"><![CDATA[ËøôÈáåÂ≠òÊîæÊàëÁöÑ‰∏Ä‰∫õÂÄºÂæóËÆ∞ÂΩï‰∏ãÊù•ÁöÑÊÄùËÄÉ 2025-06-26ÂÅöËá™Â™í‰ΩìÊúÄÈáçË¶ÅÁöÑÁÇπÔºåÊåâÈáçË¶ÅÂ∫¶ÊéíÂ∫èÔºö Êõ¥Êñ∞È¢ëÁéáÂõ∫ÂÆö„ÄÇËøôÊ†∑ËÄÅËØªËÄÖÂ∞±‰ºöËøΩÊõ¥ Ë°®Áé∞ÂΩ¢ÂºèÔºöËßÜÈ¢ë&gt;ÂõæÁâá/Èü≥È¢ë&gt;ÊñáÂ≠ó Á¥ßË∑üÊó∂‰∫ãÁÉ≠ÁÇπ„ÄÇÂõ†‰∏∫Êó∂‰∫ãÁÉ≠ÁÇπËá™Â∏¶ÊµÅÈáè 2025-06-25ËÆ§ÁúüÊêûÈáèÂåñ‰∫§ÊòìÂ∑≤ÁªèÂ∑Æ‰∏çÂ§öÂõõ‰∏™Êúà‰∫ÜÔºàËá™Â∑±Á†îÁ©∂ÁöÑÁ≠ñÁï•ÔºåËá™Â∑±ÂÜôÁöÑ‰ª£Á†ÅÔºâÔºåÊÄªÁªì‰∏ãÊù•Â∞±ÊòØÊØîËæÉÈöæ„ÄÇ1200u Êú¨ÈáëÔºåÊúÄÈ´òÂÜ≤Âà∞ 4100uÔºåÁîöËá≥‰∏é 12000u Â§±‰πã‰∫§ËáÇÔºå‰ΩÜÊòØÂõûÊí§ÈùûÂ∏∏Â§ßÔºåÊàëÂú® 3000 Â§ö u ÁöÑÊó∂ÂÄôÊèêËµ∞‰∫ÜÊú¨ÈáëÔºå2600uÔºå‰∏ÄË∑Ø‰∫èÂà∞‰∏çË∂≥ 1000u ÊàëËßâÂæóËøòÊòØÂæóÊääÁ≤æÂäõËΩ¨ÁßªÂà∞Ëá™Â™í‰Ωì‰∏äÂéª‰∫ÜÔºåÈáèÂåñ‰∫§ÊòìÊúâ‰∏§‰∏™Ëá¥ÂëΩÁöÑÁº∫ÁÇπÔºö ÈúÄË¶ÅÊú¨ÈáëÔºåÊú¨ÈáëÂ∞èÂæàÈöæËµöÂà∞ÂæàÂ§ö ÁõàÂà©Âõ∞ÈöæÔºåÁîöËá≥ÂèØËÉΩ‰∫èÊçü ‰ΩÜËá™Â™í‰ΩìÂç¥ÂèØ‰ª• 0 Êú¨Èáë 0 ‰∫èÊçüÊêûËµ∑Êù•ÔºåÂè™Ë¶ÅÂüãÂ§¥ÁåõÂπ≤Â∞±Ë°å‰∫Ü„ÄÇÊõ¥ÂÆπÊòìÂá∫ÊàêÊûú 2025-06-24Âë®Êú´Âú®ÁΩóÊπñÁöÑÊ¥™Êπñ„ÄÅËÄÅË°óÈÇ£ËæπÁé©ÔºåÂú®Âú∞ÈìÅÈáåÁúãÂà∞Ê∑±Âú≥ÂÖÉÂÆáÂÆôÁöÑÂπøÂëäÔºöBlockCityÔºåÊü•‰∫Ü‰∏Ä‰∏ãÊòØÁæéÂõ¢ÁéãÂÖ¥ÊäïËµÑÁöÑÈ°πÁõÆÔºåËÄå‰∏î 2025 Âπ¥ 6 ÊúàÂàöÈÄöËøáÂõΩÂÆ∂ÂÆ°Ê†∏ÔºåÊòØ‰∏≠ÂõΩÂ∞ëÊï∞Âá†‰∏™ÊúâËµÑË¥®ÁöÑÂÖÉÂÆáÂÆôÈ°πÁõÆ„ÄÇÊàëËßâÂæóÈ°πÁõÆËøòÂú®Êó©ÊúüÂ∞±‰π∞‰∫Ü‰∏â‰∏™Âå∫ÂùóÔºåÂä†Ëµ∑Êù•Â§ßÊ¶Ç 3300 Â§öÂùóÈí±„ÄÇ AI Ëß£ËØª BlockCity È°πÁõÆ Âø´Êç∑ÊñπÂºè‰∫íËÅîÁΩëÊó∂‰ª£Êµ∑ÈáèÁöÑ‰ø°ÊÅØÔºåÊàëÂèëÁé∞‰∏ÄÁßçË¢´‰∫∫‰ª¨ÂøΩËßÜÂç¥ÂæàÈáçË¶ÅÁöÑËÉΩÂäõÔºåÈÇ£Â∞±ÊòØÂø´ÈÄüÊâæÂà∞Ëá™Â∑±‰ª•ÂâçÁúãËøáÁöÑÊüê‰∏™‰∏úË•øÁöÑËÉΩÂäõ„ÄÇÂèØËÉΩÊòØ‰∏ÄÊÆµËßÜÈ¢ëÔºå‰∏ÄÁØáÊñáÁ´†Ôºå‰∏ÄÂº†ÂõæÁâáÔºåÊàñ‰∏Ä‰∏™ÁΩëÂùÄ„ÄÇÊàëÁöÑÂçöÂÆ¢‰∏äËÆ∞ÂΩï‰∫ÜÂ§ßÈáèÁöÑÁΩëÂùÄÔºåÂ∞±ÊòØ‰∏∫‰∫ÜÂ§áÂøò„ÄÇ‰∫íËÅîÁΩëÊó∂‰ª£Êó©ÊúüËØûÁîüÁöÑÂêÑÂ§ßÈó®Êà∑ÂØºËà™ÁΩëÁ´ô‰πüÊòØËøô‰∏™‰ΩúÁî®ÔºåÂêÑ‰∏™Á§æ‰∫§Â™í‰Ωì APP ÁöÑÊî∂ËóèÁÇπËµûÂÖ≥Ê≥®‰ª•ÂèäÊµèËßàÂéÜÂè≤‰πüÊòØÂåÖÂê´‰∫ÜËøô‰∏™‰ΩúÁî®„ÄÇ ÊâÄ‰ª•ÊàëÂÖ∂ÂÆû‰∏ÄÁõ¥ÊÉ≥ÂÅö‰∏Ä‰∏™ APPÔºåÂèØ‰ª•‰øùÁΩó‰∏áË±°ÔºåÊî∂ËóèÂíåÂàÜ‰∫´Ëá™Â∑±Âú®‰∫íËÅîÁΩëÂêÑÂ§ÑÁúãÂà∞ÁöÑ‰∏úË•ø„ÄÇ 2025-06-23ÊàëÁöÑÊ∂àË¥πËßÇ2025 Âπ¥Â∑≤ÁªèËøáÂéª‰∏ÄÂçä‰∫ÜÔºå‰ªäÂπ¥Âπ∂ÈùûÊ≤°ÊúâÂÜôÂçöÂÆ¢ÔºåËÄåÊòØÊê¨Âà∞‰∫Ü wolai Á¨îËÆ∞ËΩØ‰ª∂‰∏ä‰∫ÜÔºåÂèØËÉΩÂõ†‰∏∫ÂÖÖ‰∫Ü wolai Á¨îËÆ∞ÁöÑÂπ¥Â∫¶‰ºöÂëò„ÄÇ‰ΩÜÊÑüËßâÊòéÂπ¥‰∏ç‰ºöÂÜçÁª≠Ë¥π‰∫ÜÔºåÂÄí‰∏çÊòØËØ¥ wolai Á¨îËÆ∞‰∏çÂ•ΩÔºåËÄåÊòØÂõ†‰∏∫ÊàëÁ©∑ÔºåÊàñËÄÖËßâÂæóÂèØ‰ª•ÁúÅ‰∏ãËøôÁ¨îÈí±„ÄÇÊõæÁªè‰πüËä±Èí±‰π∞ËøáÂüüÂêçÔºå‰ΩÜÊúÄÁªàÊ≤°ÊúâÂùöÊåÅÁª≠Ë¥πÔºåÂõ†‰∏∫ÂèØËÉΩ‰πü‰∏çÊòØÂàöÈúÄ„ÄÇËÄå‰ªäÂàöÈúÄÂè™Ââ©‰∏ãËøôÂá†Ê†∑Ôºö ÁøªÂ¢ô„ÄÇhttps://portal.shadowsocks.nz/login $49.95 USD ‰∏âÂπ¥ÔºåÊê≠ÈÖç clash ÂÆ¢Êà∑Á´Ø‰ΩøÁî® ÊúçÂä°Âô®„ÄÇhttps://www.racknerd.com/ $43.46 USD ‰∏§Âπ¥ÔºåÂú®Ë∑ëÊàëËá™Á†îÁöÑÈáèÂåñ‰∫§ÊòìÁõ∏ÂÖ≥ÁöÑÁ®ãÂ∫è„ÄÇËøòÊúâ‰∏Ä‰∏™Ëê§ÂÖâ‰∫ëÁöÑÊñ∞Âä†Âù°ÊúçÂä°Âô®Ôºå‰∏ìÈó®Ë∑ëÂ∏ÅÂÆâÁöÑÈáèÂåñ‰∫§ÊòìÁõ∏ÂÖ≥ÁöÑÁ®ãÂ∫èÔºåÂèØÊÅ∂ÁöÑÂ∏ÅÂÆâ API ‰∏çÊîØÊåÅÁæéÂõΩ IPÔºåÂØºËá¥ÊàëÂ§öËä±‰∫Ü 500 Â§öÂùóÈí±ÔºåÊòéÂπ¥Â∫îËØ•‰∏ç‰ºöÁª≠Ë¥π‰∫Ü„ÄÇ ÁõÆÂâçÂÆûÁé∞ÂÖçË¥πÁöÑÊúâÔºöÂê¨Èü≥‰πêÔºåÂê¨‰π¶ÔºåÁúãÂâßÔºåÁúãÁîµÂ≠ê‰π¶ÔºåÂÜôÂçöÂÆ¢ÂíåÁ¨îËÆ∞ ‰ªäÂπ¥ÁîüÊó•ÔºåËÄÅÂ©ÜÁªôÊàë‰π∞‰∫Ü‰∏Ä‰∏™ switchÔºåÂä†‰∏Ä‰∏™È¢ùÂ§ñÁöÑÊâãÊüÑÂ§ßÊ¶Ç 2000 Â§ö„ÄÇÂêåÊ†∑ÊòØ‰∏çÊÑøÊÑè‰∏∫Ê∏∏Êàè‰ªòË¥πÔºåË£ÖÁöÑÊòØÊ≠£ÁâàÁõóÁâàÂèåÁ≥ªÁªüÔºåÁé©ÁöÑÈÉΩÊòØÁõóÁâàÊ∏∏ÊàèÔºåÊØïÁ´üÈöè‰æø‰∏Ä‰∏™Ê∏∏ÊàèÈÉΩË¶Å‰π∞ 200 Â§öÂùóÁöÑÊ∏∏ÊàèÂç°„ÄÇ ÊàëÁ°ÆÂÆö‰∫ÜÊàëÊòØ‰∏çÊÑøÊÑè‰∏∫ËΩØ‰ª∂‰ªòË¥πÔºåÂè™ÊÑøÊÑè‰∏∫Á°¨‰ª∂‰ªòË¥πÁöÑ„ÄÇÊâÄ‰ª•ËØ¥ËøôÊòØ‰∏Ä‰∏™ÂæàÂ•áÊÄ™ÁöÑÊó∂‰ª£ÔºåÈªëÂÜ∞ÈáåÈù¢ËØ¥Â∫ïÂ±Ç‰∫∫ÁöÑÁ≤æÁ•û‰æõÂ∫îÂá†‰πéÊòØ 0ÔºåÂú®‰ø°ÊÅØÊó∂‰ª£ÂÖ∂ÂÆûÊòØÈîôÁöÑÔºå‰ø°ÊÅØÊó∂‰ª£Á≤æÁ•û‰æõÂ∫îÂÖ∂ÂÆûÊòØÈùûÂ∏∏ÂÖÖË∂≥ÁöÑÔºåËÄåÁâ©Ë¥®‰æõÂ∫îÂèçËÄåÂæàÈöæËææÂà∞ÂÖÖË∂≥„ÄÇÊàëÂèØ‰ª•ÂÖçË¥πÊêûÂà∞ÂæàÂ§öÁ≤æÁ•û‰æõÂ∫îÔºå‰ΩÜÊàëÂç¥‰∏çËÉΩ‰øùËØÅÊàë‰∏çÂ∑•‰ΩúËÑ±‰∫ßÂêé‰∏ç‰ºöÈ•øÊ≠ªÔºåÊàñËÄÖËØ¥‰∏çÂÜçËÉΩ‰ΩìÈù¢ÁöÑËøáÊ¥ª„ÄÇ ‰ªäÂ§©ËÄÅÂ©ÜË∑üÊàëËØ¥Ôºå‰ªñ‰ª¨ÂåªÈô¢ÂÅúËΩ¶Âú∫‰∏äÂÅú‰∫Ü‰∏ÄËæÜÈùûÂ∏∏ÊºÇ‰∫ÆÁöÑÂ§©ËìùËâ≤‰øùÊó∂Êç∑ÔºåÊàëËØ¥Â∫îËØ•ÊòØÊüê‰ΩçÈ´òÂπ≤ÁóÖÊàøÁöÑ‰∫≤Â±ûÁöÑËΩ¶ÔºåÊ≤°ÊÉ≥Âà∞ËøòÁúüÁöÑÂæàÊúâÂèØËÉΩÔºåÂõ†‰∏∫Â•πËØ¥ÁúüÁöÑÂÅúÂú®È´òÂπ≤ÁóÖÊàøËæπ‰∏ä„ÄÇÊàëÊÉ≥‰πüÊòØÔºåË¶Å‰∏çÁÑ∂Ê†™Ê¥≤Ëøô‰πàÂ∞è‰∏™Âú∞ÊñπÔºåË±™ËΩ¶Ëá™ÁÑ∂‰πü‰∏çÂ¶ÇÊ∑±Âú≥ÈÇ£Ëà¨Â§öÔºåÊÄé‰πà‰ºöÁ™ÅÁÑ∂ÂÜíÂá∫Êù•‰∏ÄËæÜ„ÄÇ ÂΩì‰∏ãÁ§æ‰ºö‰πãÊÄ™Áä∂ - ÂéüÂ≠êÂåñÁöÑ‰∏™‰∫∫Êò®Â§©‰∏≠ÂçàÂêÉÈ•≠ÁöÑÊó∂ÂÄôÔºåË∑üÊõæÊµ∑ÈúûÈó≤ËÅäÔºåËØ¥Ëµ∑Áé∞‰ª£Á§æ‰ºöÁöÑ‰∏™‰ΩìÂéüÂ≠êÂåñÈóÆÈ¢òÔºåÂ∞±ÊòØËØ¥ÔºåÂæàÂ§öÂú®Â§ñÊâìÂ∑•ÁöÑÂπ¥ËΩª‰∫∫ÔºåÁà∂ÊØç‰∏çÂú®Ë∫´ËæπÔºå‰πüÊ≤°ÊúâÊàø‰∫ßÔºå‰πüÊ≤°ÊúâÊúãÂèãÔºå‰πü‰∏çÁªìÂ©öÔºåÁªì‰∫ÜÂ©öÂèØËÉΩ‰πüÊ≤°ÊúâÂ≠©Â≠êÔºåÊúâÂ≠©Â≠ê‰πüÂèØËÉΩÁïôÂÆà„ÄÇÂç≥‰æøÊúâ‰∫ÜÊàø‰∫ßÔºå‰πüÂèØËÉΩ‰ºöÊç¢Â∑•‰ΩúÔºåËÄå‰∏îÂÜçÊç¢Â∑•‰Ωú‰πü‰∏ç‰∏ÄÂÆöÊòØÊàøÂ≠êÊâÄÂú®ÁöÑÂüéÂ∏Ç„ÄÇ‰∫∫Âè™Ë∑üÂÖ¨Âè∏ÊúâÂÖ≥Ôºå‰ΩÜË∑üÂÖ¨Âè∏ÁöÑÂÖ≥Á≥ª‰πüÊòØËñÑÂº±ÁöÑÔºåÈöèÊó∂ÂèØËÉΩ‰ºöË¢´Ë£ÅÂëòÔºå‰∫∫Â∞±ÂÉèÊºÇÊµÆÁùÄÁöÑÊµÆËêçÔºåÊ≤°ÊúâÊ†πÔºåÊ≤°Êúâ‰æùÈù†„ÄÇÂÖ≥Á≥ªÂè™Êúâ‰∏ÄÁßçÔºåÂ∞±ÊòØÂêå‰∫ãÂÖ≥Á≥ªÔºåÊç¢‰∏Ä‰∏™ÂüéÂ∏ÇÂ∞±‰∏çÂÜçËÅîÁ≥ª„ÄÇ ÁªìÂêàÊàëÊú¨‰∫∫ÁöÑËøô‰πàÂ§öÂπ¥ÁªèÂéÜÔºåÂÖ∂ÂÆûËøôÁßçÂ≠§Áã¨ÊÑüÁ°ÆÂÆûÊòØÊúâ„ÄÇÊàëÂú®Êù≠Â∑ûÔºåÈïøÊ≤ôÔºåÊ∑±Âú≥‰∏â‰∏™ÂüéÂ∏Ç‰∏äËøáÁè≠„ÄÇÂÖ∂ÂÆû‰∏äÂ§ßÂ≠¶ÂêéÔºåË∑üÁà∏Â¶à‰∏ÄÂπ¥ÈÉΩËßÅ‰∏ç‰∫ÜÂá†Ê¨°ÔºåÂ§ßÂ≠¶ËøòÂ•ΩÊúâÂØíÊöëÂÅáÂèØ‰ª•ËßÅ„ÄÇ ‰∏çËøá‰ªé‰∏ÅÂÖÉËã±ÁöÑÂº∫ÂäøÊñáÂåñÊÄùÁª¥ÂíåÊØõÊ≥Ω‰∏úÁöÑ‰∏ªËßÇËÉΩÂä®ÊÄßÁöÑËßíÂ∫¶Êù•ÁúãÔºåÂÆûÈôÖ‰∏äÂº∫ËÄÖÂèØËÉΩÂπ∂‰∏ç‰ºöËßâÂæó‰∏çÈÄÇÂ∫îËøôÁßçÂéüÂ≠êÂåñ„ÄÇ‰ΩÜÂ§ßÈáèÁöÑÂº±ÂäøÊñáÂåñÁæ§‰ΩìÈù¢ÂØπ‰∏™‰ΩìÂéüÂ≠êÂåñÔºåÂèØËÉΩ‰ºöÊØîËæÉÈöæÂèó„ÄÇÂ§ßÂÆ∂ÂèØËÉΩÈÉΩÈúÄË¶ÅÊñ∞ÁöÑÊñπÂºèÂéªÂõ¢ÁªìÂú®‰∏ÄËµ∑ÔºåÁõ∏‰∫íÊúâ‰∏™‰æùÈù†„ÄÇ Êé•‰∏ãÊù•Ë¶ÅÂÅöÁöÑ‰∫ãÁî±‰∫éË∑üËÄÅÂ©ÜÂºÇÂú∞ÔºåÊàëÂá†‰πéÊØè‰∏§Âë®Â∞±‰ºöÂùêÈ´òÈìÅÊù•Âõû‰∏ÄË∂üÊ∑±Âú≥ÂíåÊ†™Ê¥≤ÔºåÈ´òÈìÅ‰∏ä‰ø°Âè∑ÁúüÁöÑÂæàÂ∑ÆÔºåÂè™ËÉΩÂê¨Âê¨Ê¥õÈõ™Èü≥‰πêÊàñËÄÖÈ£ûÈ∏üÂê¨‰π¶„ÄÇÊ¥õÈõ™Èü≥‰πêÊòØ‰ºöËá™Âä®ÁºìÂ≠òÂê¨ËøáÁöÑÈü≥‰πêÁöÑÔºåËÄåÈ£ûÈ∏üÂê¨‰π¶ÂàôÂ∫îËØ•‰ºöÁºìÂ≠òÂ∞ÜË¶ÅÊí≠ÊîæÁöÑ‰π¶Á±ç„ÄÇ ‰∏äÂë®ÂõûÂÆ∂ÊàëÁ™ÅÂèëÂ•áÊÉ≥ÔºåËÄÅÊòØÂê¨ÊóßÁöÑÊ≠åÂ∑≤ÁªèÂê¨ËÖª‰∫ÜÔºåËÉΩ‰∏çËÉΩÁªôÊ¥õÈõ™Èü≥‰πêÂä†‰∏™Á±ª‰ººË±ÜÁì£ FM ÁöÑÂäüËÉΩÔºåÊàëÂΩìÂπ¥ÂæàÂñúÊ¨¢ÊâìÂºÄË±ÜÁì£ FM ÈöèÊú∫Êí≠ÊîæÈü≥‰πêÔºåÂæàÂ§öÂ•ΩÂê¨ÁöÑÊ≠åÈÉΩÊòØËøôÊ†∑ÂèëÁé∞ÁöÑ„ÄÇÊâÄ‰ª•ÊàëÂÜ≥ÂÆöÁªôÊ¥õÈõ™Èü≥‰πêË¥°ÁåÆ‰ª£Á†ÅÔºåÂ¢ûÂä†Ëøô‰∏™Êñ∞ÂäüËÉΩÔºåÂ∫îËØ•ÊúâÂæàÂ§ö‰∫∫‰ºöÊÉ≥Áî®„ÄÇ ÁÑ∂Âêé‰ªäÂ§©ÊâìÂºÄÊ¥õÈõ™Èü≥‰πêÁöÑ github È°πÁõÆÔºåÂèëÁé∞‰πãÂâçÈÅáÂà∞ÁöÑÂè¶‰∏Ä‰∏™ÈóÆÈ¢òÂÖ∂ÂÆûÊúâÊØîËæÉÂ•ΩÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåÂè™ÊòØÂõ†‰∏∫ÊàëÊáíÂæóÂéªÊêû„ÄÇÂ∞±ÊòØÂÉèÁΩëÊòì‰∫ëÈü≥‰πêËøôÁßçÈü≥‰πê APPÔºåÂÆÉÊòØÊúâ‰∫ëÁ´ØÂêåÊ≠•ÂäüËÉΩÁöÑÔºåÂèØ‰ª•ËÆ©ÊâãÊú∫ÔºåÁîµËÑëÂ§öÁ´ØÂêåÊ≠•„ÄÇÊ¥õÈõ™Èü≥‰πêÂÖ∂ÂÆû‰πüÂèØ‰ª•Ôºå‰πãÂâçÊàëÁî®ÁîµËÑëÂêåÊ≠•‰∫ÜÊâãÊú∫‰∏äÁöÑÈü≥‰πêÔºå‰ΩÜÊØèÊ¨°ÈÉΩË¶ÅÊâãÂä®ÂêåÊ≠•ÊúâÁÇπÈ∫ªÁÉ¶„ÄÇÂÖ∂ÂÆûËá™Â∑±ÊúâÊúçÂä°Âô®ÁöÑËØùÔºåÊòØÂèØ‰ª•Êï∞ÊçÆÂêåÊ≠•ÊúçÂä°ÊîæÂà∞ÊúçÂä°Âô®ÁöÑÔºöhttps://github.com/lyswhut/lx-music-sync-server#readme „ÄÇËøô‰∏™‰πüÂøÖÈ°ªÊêûËµ∑Êù• mac os ‰∏äÁöÑ FinalShell ‰∏çËÉΩÁúãÊñ∞Âä†Âù°ÊúçÂä°Âô®ÁöÑ‰∏Ä‰∫õËØ¶ÁªÜ‰ø°ÊÅØÔºå‰ΩÜËÉΩÁúãÁæéÂõΩÊúçÂä°Âô®ÁöÑËØ¶ÁªÜ‰ø°ÊÅØÔºå‰∏ÄÁõ¥‰ª•‰∏∫ÊòØÊñ∞Âä†Âù°ÊúçÂä°Âô®Êúâ‰ªÄ‰πàÈóÆÈ¢ò„ÄÇ‰ΩÜ‰ªäÂ§©ÂèëÁé∞ÂéüÊù• windows ÁâàÁöÑ FinalShell ÊòØÂèØ‰ª•ÁúãÁöÑÔºåÊôö‰∏äÂõûÂÆ∂Êõ¥Êñ∞‰∫Ü‰∏Ä‰∏ã mac os ‰∏äÁöÑ FinalShellÔºå‰æùÊóß‰∏çË°åÔºåÂ∫îËØ•ÊòØ FinalShell ÁöÑ bug ‰∫Ü„ÄÇ 2024-08-08‰∏ÄÁõ¥‰ª•Êù•Á°ÆÂÆûÊúâÁÇπËØª‰π¶ËØªÂÇª‰∫ÜÔºåÂ¶ÇÊûúÊàëÊúâÂ∞èÂ≠©ÔºåÊàëÂ∏åÊúõ‰ªñ‰ª∑ÂÄºËßÇ‰∏çË¶ÅÂá∫ÈóÆÈ¢ò„ÄÇÂ≠¶Ê†°ÁöÑ‰ª∑ÂÄºËßÇÂ§™ÊúâÈóÆÈ¢ò‰∫Ü„ÄÇ Ê∏ÖÂçéÂΩïÂèñÈÄöÁü•‰π¶Âíå‰∏Ä‰∏™‰∫øÔºåÂ∞èÊúãÂèãÂ¶Ç‰ΩïÈÄâÔºü È´òËÄÉÂ§±Ë¥•=‰∫∫ÁîüÂÆåËõãÔºüÂ§çËØªËÄÉ‰∏ä‰∫§Â§ßÔºåËøõÂÖ•Á§æ‰ºöÊâçÂèëÁé∞Â≠¶ÂéÜÂè™ÊòØ‰∏ÄÂº†Á∫∏Ôºå985 Ê†πÊú¨ÈÖç‰∏ç‰∏äÂ≠¶ÁîüÁöÑ‰ºòÁßÄ Èí±ÔºåË¥¢ÂØåÈÇ£‰∏çÊòØËÇÆËÑèÁöÑ‰∏úË•ø„ÄÇËßÜÈáëÈí±Â¶ÇÁ≤™ÊòØÈîôÁöÑ ‰ªÅ‰πâÁ§ºÊô∫‰ø°ÔºåÂú®Ë¥µÊóèË∫´‰∏äÔºåÈÇ£ÊòØÂ§ßÂä†Êàê„ÄÇÂú®Á©∑‰∫∫Ë∫´‰∏äÔºåÈÇ£ÊòØÂ§ßÊû∑ÈîÅ„ÄÇÂ∫ïÂ±Ç‰∫∫Êï¢ÈóØÊï¢Êãº‰ΩéÈÅìÂæ∑ÂéöËÑ∏ÁöÆÊòØÂ§ßÂä†Êàê„ÄÇ Á§æ‰ºöÊòØ‰∫∫Ë∑ü‰∫∫ÁöÑÁ§æ‰ºö„ÄÇ‰∫∫ÈôÖÂÖ≥Á≥ªÔºåÊØî‰ªÄ‰πàÈÉΩÈáçË¶Å„ÄÇÁé©Âà∞ÊûÅËá¥ÔºåÂ∞±ÊòØÊîøÊ≤ª Âà©ÁõäÂÜ≥ÂÆöËÑëË¢ã„ÄÇ‰πüÂè´Â±ÅËÇ°ÂÜ≥ÂÆöËÑëË¢ã„ÄÇÂà´‰∫∫ËØ¥‰ªÄ‰πàÈÉΩÊòØÁ´ôÂú®Ëá™Â∑±ÁöÑÂà©ÁõäÔºàÊàñËÄÖÂøóÂêëÔºâÁ´ãÂú∫‰∏äËØ¥ËØùÁöÑ„ÄÇ È´òËÄÉÊòØÁïôÁªôÊúÄÂ∫ïÂ±ÇÂ≠©Â≠êÁöÑÈÄöÈÅì„ÄÇÊúâÂÆûÂäõÁöÑÂà´ÂéªÂç∑ÔºåÊàñËÄÖËä±Ê†∑Âç∑„ÄÇÂ•∂Ëå∂Â¶πÂ¶πÔºàÂàòÂº∫‰∏úËÄÅÂ©ÜÁ´†Ê≥ΩÂ§©ÔºâÂÅ•ÁæéÊìç‰∏äÊ∏ÖÂçéÔºåÈ°æÊ£ÆÔºàmatrix67Ôºâ‰ø°ÊÅØÁ´ûËµõÈì∂Áâå‰∏äÂåóÂ§ßÔºåÂì™ÊÄïÂ≠ôÂâ≤ÔºàÂ≠ôÂÆáÊô®Ôºâ‰πüÊòØËá™‰∏ªÊãõÁîüÂä†‰∫ÜÂàÜÔºàËôΩÁÑ∂Â≠ôÂâ≤ÂàÜÊï∞Âπ∂‰∏ç‰ΩéÔºåÁ¶ªÂåóÂ§ßÂàÜÊï∞Á∫øËøòÂ∑ÆÂá†ÂàÜÔºâ„ÄÇ 2024-08-07ËÖæËÆØÈòøÈáå‰πãÂ§ñ Â≠óËäÇ Â∞èÁ±≥ Âçé‰∏∫ ÁΩëÊòì ‰∫¨‰∏ú ÊãºÂ§öÂ§ö ÁæéÂõ¢ Â§ßÁñÜ ÂÆáÊ†ë SHEIN ‰º†Èü≥ËÇ°‰ªΩ AI Âà∞Â∫ïÊòØ‰ªÄ‰πà‰ªé‰∫∫Êú∫‰∫§‰∫íÁöÑËßíÂ∫¶Áúã AIÔºåAI ÂÖ∂ÂÆûÊòØ‰∏Ä‰∏™‰ª£ÁêÜ„ÄÇÊúÄÊó©ÁöÑ‰∫∫Êú∫‰∫§‰∫íÊòØ CLIÔºàCommand Line InterfaceÔºåÂëΩ‰ª§Ë°åÁïåÈù¢ÔºâÔºåÁÑ∂ÂêéÊòØ GUIÔºàGraphic User InterfaceÔºåÂõæÂΩ¢Áî®Êà∑ÁïåÈù¢ÔºâÔºåÁÑ∂ÂêéÊòØÁé∞Âú®ÁöÑ AIÔºàArtificial IntelligenceÔºå‰∫∫Â∑•Êô∫ËÉΩÔºâ„ÄÇ‰ªé CLI Âà∞ GUI ÁúüÁöÑÊòØÂæàÂ§ßÁöÑ‰∏Ä‰∏™ËøõÊ≠•ÔºåÊôÆÈÄöÁî®Êà∑ÊòØÁúü‰∏çÂñúÊ¨¢ CLIÔºåÂ§™‰∏ì‰∏öÔºå‰∏çÂ•ΩÂ≠¶„ÄÇ‰ΩÜÂÖ∂ÂÆû GUI ÂèòÂ§çÊùÇÔºå‰πü‰∏çÂ•ΩÂ≠¶„ÄÇÁé∞Âú®Â§™Â§öÁöÑ‰∏ì‰∏öÁâàËΩØ‰ª∂ÔºåÂäüËÉΩÁâπÂà´Â§öÔºåÁïåÈù¢ÁâπÂà´Â§çÊùÇ„ÄÇÂæàÂ§öÁ®ãÂ∫èÂëòÈÉΩÊÄÄÂøµ unix Êó∂‰ª£ÔºåÂ∞èËÄåÁ≤æÔºåÂ∞èËÄåÁæéÁöÑËΩØ‰ª∂ÔºåÊØè‰∏™ËΩØ‰ª∂ÈÉΩÂè™Ë¥üË¥£‰∏Ä‰ª∂ÁâπÂà´ÂÖ∑‰ΩìÁÆÄÂçïÁöÑ‰∫ãÔºåÈÄöËøáÁÆ°ÈÅìË°îÊé•ËæìÂÖ•ËæìÂá∫„ÄÇÂæàÂ§öËΩØ‰ª∂ÂºÄÂèëÂá∫Êù•ÂêéÔºåÂá†‰πéÈÉΩ‰∏çÁî®Ê∑ªÂä†Êñ∞‰ª£Á†Å‰∫ÜÔºåÁ®≥ÂÆö‰∏çÂèòÂá†ÂçÅÂπ¥„ÄÇÈÇ£ÁúüÊòØËΩØ‰ª∂ÁöÑÈªÑÈáëÊó∂‰ª£Âïä„ÄÇÂèòÊàê GUI ÂêéÔºåËΩØ‰ª∂Â∞±ÊòØ‰∏Ä‰∏™ÈõÜÊàêÂ∑•‰ΩúÁéØÂ¢ÉÔºåÂï•ÂäüËÉΩÈÉΩË¶ÅÊúâÔºåÂï•ÂäüËÉΩÈÉΩÊÉ≥ÂæÄÈáåÈù¢Â°û„ÄÇ‰∏ç‰ªÖÂºÄÂèëÂõ∞ÈöæÔºåÁî®Êà∑Â≠¶Ëµ∑Êù•‰πüÂçÅÂàÜËâ∞Èöæ„ÄÇ AI ÁöÑÂà∞Êù•ÊâìÁ†¥‰∫ÜËøô‰∏™Â±ÄÈù¢„ÄÇÁî®Êà∑ÁîöËá≥‰∏çÈúÄË¶ÅÊâãÂÜåÂíåÊïôÂ≠¶ÔºåÊúâ‰ªÄ‰πà‰∏ç‰ºöÁöÑÁé∞Âú∫ÈóÆ AIÔºåÂì™Èáå‰∏ç‰ºöÁÇπÂì™Èáå„ÄÇ‰∏çÂ≠òÂú®Êâæ‰∏çÂà∞ÊåáÂºïÂíåÂÖ•Âè£Ôºå‰πü‰∏çÂ≠òÂú®ÁªÜËäÇÈóÆÈ¢òÈöæ‰ª•Ê∑±ÂÖ•‰∫ÜËß£„ÄÇÂ∞±ÂæàÁ±ª‰ºº‰∫∫‰∏é‰∫∫‰πãÈó¥ÁöÑÊ≤üÈÄö‰∫Ü„ÄÇ ÊÄª‰πãÔºåËÆ© AI ‰ª£ÁêÜ‰∏ÄÂàáËΩØ‰ª∂Á°¨‰ª∂Ôºå‰Ωú‰∏∫Êñ∞ÁöÑ‰∫∫Êú∫‰∫§‰∫íÁïåÈù¢ Ëøô‰∏™Â∏ÇÂú∫ÈùûÂ∏∏Â§ß ÈÇ£‰πàÁ©∂Á´üÂ¶Ç‰ΩïËÆ© AI ËÉΩÂ§ü‰ª£ÁêÜ‰∏ÄÂàáÂë¢Ôºü ÊØîËæÉÁÆÄÂçïÁöÑÊñπÂºèÊòØÔºåËØ¢ÈóÆ AIÔºå‰Ω†ËØ•Â¶Ç‰ΩïÂÅöÔºåÊØîÂ¶Ç‰∏Ä‰∏™Â§çÊùÇÁöÑËΩØ‰ª∂‰∏ç‰ºöÁî®ÔºåÁ±ª‰ºº photoshop ËøôÁßç„ÄÇÂ∞±ÂèØ‰ª•ÈóÆ AI„ÄÇ‰ΩÜËøô‰∏™ËøòÊòØÂ§™Âü∫Á°Ä‰∫Ü„ÄÇÂ¶ÇÊûúËÉΩÂ§ü‰∏ãËææÊåá‰ª§ËÆ© AI ‰ª£‰∏∫ÂÆåÊàêÔºåÈÇ£ÊòØÊúÄÁêÜÊÉ≥ÁöÑ„ÄÇ ‰∫éÊòØÊúâ‰∫∫ÊèêÂá∫‰∫Ü AI Agent„ÄÇ 2024-08-06ÂÖ≥‰∫éÊåëÊàò‰ªÄ‰πàÂõ∞ÈöæË¶ÅÂéªÊåëÊàòÈùû‰∫∫‰∏∫Âà∂ÂÆöÁöÑÂõ∞ÈöæÔºåËÄå‰∏çË¶ÅÂéªÊåëÊàò‰∫∫‰∏∫Âà∂ÂÆöÁöÑÂõ∞Èöæ„ÄÇ ‰∫∫‰∏∫Âà∂ÂÆöÁöÑÂõ∞ÈöæÔºåÂÖ∂ÈöæÂ∫¶‰∏çÊòØÂõ∫ÂÆöÁöÑÔºåÈöèÁùÄÂèÇ‰∏é‰∫∫Êï∞ÁöÑÂ§öÂ∞ëËÄåÂä®ÊÄÅÂèòÂåñ„ÄÇÊØîÂ¶ÇÈ´òËÄÉÔºåÂá∫È¢òÈöæÂ∫¶‰∏çÊòØÂõ∫ÂÆöÁöÑÔºåÊãõÁîüÊØî‰æã‰πü‰∏çÊòØÂõ∫ÂÆöÁöÑ„ÄÇÂ••ËøêÊØîËµõÔºåÈöæÂ∫¶ÊòØÂõ∫ÂÆöÁöÑÔºåË∑ë 100 Á±≥Â§öÂ∞ëÁßíÔºåÊòØÂõ∫ÂÆöÁöÑÈöæÂ∫¶ÔºåÊ≤°Ê≥ï‰∫∫‰∏∫ÊîπÂèò„ÄÇ ËµöÈí±‰πü‰∏ÄÊ†∑ÔºåÂΩì‰Ω†ÂèëÁé∞ÊäïÂÖ•‰∏éÂõûÊä•‰∏çÊàêÊ≠£ÊØîÔºåÊûÅÈöæËµöÈí±ÁöÑÊó∂ÂÄôÔºåÂ∞±Â∫îËØ•Ë¶ÅÊÑèËØÜÂà∞ÔºåËá™Â∑±ÊòØÂê¶ÊéâÂÖ•‰∫Ü‰∫∫‰∏∫Âõ∞ÈöæÁöÑÈô∑Èò±„ÄÇÂÅáÂ¶ÇËØ¥ÔºåÁ≥ªÁªüÂíåÂπ≥Âè∞Â∞±ÊòØÊïÖÊÑèËÆ©‰Ω†Ëµö‰∏çÂà∞Èí±ÔºåÊïÖÊÑèËÆ©‰Ω†ËµöÈí±ÂæàÈöæÂæàÈöæÂë¢Ôºü ÊÄß‰ª∑ÊØîÁ°ÆÂÆûÂæàÈáçË¶Å„ÄÇËµöÈí±‰πü‰∏ÄÊ†∑Ôºå‰∫∫‰∏∫ËÆæÁΩÆÈöæÂ∫¶È´òÁöÑÈ¢ÜÂüü‰∏çË¶ÅÂéªÂç∑ÔºåÊØîÂ¶ÇÂÜúÊ∞ëÔºåÈÄÅÂ§ñÂçñÔºåÂºÄÂá∫ÁßüËΩ¶„ÄÇÈÉΩÊòØÂπ≥Âè∞ÈôêÂà∂‰∫ÜÂÆö‰ª∑„ÄÇÁ®ãÂ∫èÂëòÁõ∏ÂØπÊù•ËØ¥ÊÄß‰ª∑ÊØîÔºåÊØî‰ª•‰∏ä‰æãÂ≠ê‰∏≠ÁöÑÂá†‰∏™È´òÂ§ö‰∫ÜÔºå‰ΩÜËøòÊúâÊÄß‰ª∑ÊØîÊõ¥È´òÁöÑ„ÄÇ Â§¥ÈÉ®‰∏éÂ∫ïÈÉ®ÂÖ∂ÂÆû‰∏çÁÆ°‰ªÄ‰πàË°å‰∏öÔºåÈÉΩÊòØÂ§¥ÈÉ®ÈÄöÂêÉÔºåÂ∫ïÈÉ®ËøûÊ±§ÈÉΩÂñù‰∏ç‰∏ä„ÄÇÂì™ÊÄïÂºÄ‰∏™ËãçËùáÈ¶ÜÂ≠êÈÉΩÊòØÂ¶ÇÊ≠§„ÄÇ ‰ª•ÂâçÂºÄÁΩëÂ∫óÔºåÂÅöËá™Â™í‰ΩìË¥¶Âè∑ÔºåÊå∫ËµöÈí±ÁöÑ„ÄÇÂÖ∂ÂÆûÁé∞Âú®‰πüËµöÈí±„ÄÇÁé∞Âú®ÊòØÂ§¥ÈÉ®‰æùÊóßÂæàËµöÈí±ÔºåÂ∫ïÈÉ®‰∏çËµöÈí±„ÄÇÁ®ãÂ∫èÂëòÁöÑËØùÔºåÂõ†‰∏∫ÊòØÁªôÂà´‰∫∫ÊâìÂ∑•ÔºåÊâÄ‰ª•Á®ãÂ∫èÂëòË°å‰∏öÂ§¥ÈÉ®ÂæàËµöÈí±ÔºåÂ∫ïÈÉ®‰πüËøòË°å„ÄÇ Â∞±ÊãøÊàëËá™Â∑±‰∏æ‰æãÔºåËøòÊòØÂõ†‰∏∫‰æùËµñ‰∫ÜÂòâÁ´ãÂàõÂπ≥Âè∞ÔºàÂ§¥ÈÉ®ÔºâÔºåÊâçÊãøÂà∞Ëøô‰πàÂ§öÈí±„ÄÇ‰ΩÜÂú®Á®ãÂ∫èÂëòË°å‰∏ö‰∏≠ÔºåÊàëÂÖ∂ÂÆûÊòØÂ∫ïÈÉ®ÔºåÊØî‰∏ç‰∫ÜËÖæËÆØÔºåÈòøÈáåÔºåÂ≠óËäÇÁöÑÁ®ãÂ∫èÂëò„ÄÇ ÊâÄ‰ª•ÔºåÂ¶ÇÊûúÊòØËá™Â∑±ÂºÄÁΩëÂ∫óÔºåÂÅöËá™Â™í‰ΩìË¥¶Âè∑ÔºåÊòØÁªôËá™Â∑±ÊâìÂ∑•ÔºåÂ∫ïÈÉ®Ê±§ÈÉΩÂñù‰∏ç‰∏ä„ÄÇ‰ΩÜÁªôÂ§¥ÈÉ®ÁΩëÂ∫óÊàñËÄÖËá™Â™í‰ΩìË¥¶Âè∑ÊâìÂ∑•Ôºå‰πüËµöÊå∫Â§öÁöÑ„ÄÇ ÊôÆÈÄö‰∫∫ÁúüÊ≠£ÈúÄË¶ÅÂØªÊâæÁöÑÊòØ Â∫ïÈÉ®‰πüËÉΩËµöÈí±Ôºà‰∏ãÈôê‰∏ç‰ΩéÔºâ ‰∏î ÁªôËá™Â∑±ÊâìÂ∑• Ôºà‰∏äÈôêÈ´òÔºâÁöÑË°å‰∏ö„ÄÇ ËµöÈí±ÁöÑÊú¨Ë¥®ÊòØÂÆö‰ª∑ÊùÉÊàñËÄÖÂÆö‰ª∑È´òÊÉ≥Ë¶ÅÊÄß‰ª∑ÊØîÈ´òÁöÑËµöÈí±„ÄÇÂàôÂøÖÈ°ªÊéåÊè°ÂÆö‰ª∑ÊùÉÔºåÊàñËÄÖËôΩÁÑ∂Ê≤°ÊéåÊè°ÂÆö‰ª∑ÊùÉÔºå‰ΩÜÊòØÁõÆÂâçÂÆö‰ª∑È´ò„ÄÇ‰∏∫‰ªÄ‰πàÂÆáÂÆôÁöÑÂ∞ΩÂ§¥ÊòØÂçñË¥ßÔºåÂçñ‰∏úË•øÊ∞∏ËøúÊØîÂÅö‰∏úË•øËµöÈí±ÔºåÂõ†‰∏∫Âçñ‰∏úË•øÂ•ΩÂøΩÊÇ†Ê∂àË¥πËÄÖÔºåÂÆö‰ª∑ÊùÉÂú®Ëá™Â∑±ËøôÈáåÔºåÂ∞±ÁúãÂøΩÊÇ†ËÉΩÂäõ‰∫Ü„ÄÇÂÅö‰∏úË•ø‰∏ìÊ≥®‰∫éÂÜÖÂÆπÔºå‰æùËµñÂçñ‰∏úË•øÁöÑ„ÄÇÊâÄ‰ª•ÂèëË¥¢ÁöÑÈÉΩÊòØ‰∏Ä‰Ωç‰ºòÁßÄÁöÑÂøΩÊÇ†ÁùÄÔºåÂÅö‰∏úË•øÁöÑÈúÄË¶ÅË∑üÁùÄ‰ºòÁßÄÁöÑÂøΩÊÇ†ËÄÖÂàÜ‰∏ÄÊùØÁæπ„ÄÇ Ëé∑ÂèñÈ´òË¥®Èáè‰ø°ÊÅØÁõÆÂâçËé∑Âèñ‰ø°ÊÅØÁöÑÊ∏†ÈÅìÊúâÂ¶Ç‰∏ãÂá†ÁßçÔºö ÊêúÁ¥¢ÂºïÊìé„ÄÇ‰∏ªÂä®ÂûãÔºåÊêúËá™Â∑±ÊÉ≥Ë¶ÅÁü•ÈÅìÁöÑ‰∏úË•ø ÁÆóÊ≥ïÊé®Ëçê„ÄÇË¢´Âä®Âûã ËÆ¢ÈòÖÂÖ≥Ê≥®Ôºànews-letterÔºâ„ÄÇË¢´Âä®Âûã ‰ø°ÊÅØËé∑ÂèñÔºåËÇØÂÆöÊòØË∂ä‰∏ªÂä®ÔºåË∂äÈ´òÊïàÁöÑ„ÄÇ‰∏ÄËà¨Êù•ËØ¥ÊêúÁ¥¢ÊòØ‰∏∫‰∫ÜËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ Ëá™Â™í‰ΩìË¥¶Âè∑ÊÄé‰πàÂÅöËµ∑Êù•‰∏çÂÅöÂûÇÁõ¥È¢ÜÂüüÔºå‰∏çÂÅöÁàÜÊ¨æÊâπÈáèÂ§çÂà∂Ôºàrouge like Ëá™Â™í‰ΩìÂÜÖÂÆπÔºâÔºåÂ∞±ÁúüÁöÑÊ≤°Ê≥ïÂÅöËµ∑Êù•Âêó ÊàëËßâÂæó‰∏ç‰∏ÄÂÆöÔºåÂ¶ÇÊûúÊàëÂè™ÊòØÂàÜ‰∫´‰∏Ä‰∫õËá™Â∑±‰∫ÜËß£Âà∞ÁöÑ‰ø°ÊÅØÔºåÊàñËÄÖ‰∏Ä‰∫õÊùÇ‰∏ÉÊùÇÂÖ´ÁöÑ‰∏úË•ø„ÄÇ‰∏ç‰∏ÄÂÆöÂ∞±ÂÅö‰∏çËµ∑Êù•„ÄÇ ÊØîÂ¶ÇÊàëÂèØ‰ª•ÂàÜ‰∫´ÊàëÁôΩÂ´ñÈü≥‰πêÔºåÁîµÂ≠ê‰π¶ÔºåÂê¨‰π¶ÔºåËßÜÈ¢ëÁöÑÁªèÈ™å„ÄÇÊàëÂèØ‰ª•ÂàÜ‰∫´ÊàëÊØîÁâπÂ∏ÅËµöÈí±ÁöÑÁªèÈ™å„ÄÇÂèØ‰ª•ÂàÜ‰∫´Ê∏∏ÊàèÈíªÁ†îÂøÉÂæóÔºàÂ∑≤ÁªèÂàÜ‰∫´Ëøá‰∫ÜÔºå‰πüÊî∂Ëé∑Ëøá‰∏Ä‰∫õÁÇπËµûÔºâ„ÄÇÁºñÁ®ãÁªèÈ™å‰πüÂèØ‰ª•ÂàÜ‰∫´„ÄÇÊÄª‰πãÊúâ‰ªÄ‰πàÔºåÁªèÂéÜËøá‰ªÄ‰πàÂ∞±ÂèØ‰ª•ÂàÜ‰∫´‰ªÄ‰πà„ÄÇ‰∏ç‰∏ÄÂÆöÂÜÖÂÆπÂæóÊòØÁ≤æÂìÅÔºåÂà∂‰ΩúË¶ÅÊúâÂ§öÈ´òÂ§ß‰∏ä„ÄÇÈÇ£‰∫õÈÉΩÊòØÂàÜ‰∫´ËøáÂæàÂ§öÂæàÂ§ö‰ª•ÂêéÔºåË¥®ÈáèËá™ÁÑ∂‰ºöÊÖ¢ÊÖ¢ÊèêÂçá„ÄÇÊØîÂ¶ÇÂì™ÊÄï‰ªäÂ§©‰∏ã‰∫Ü‰∏ÄÂú∫Ë∂ÖÂ§ßÁöÑÈõ®ÔºåÊàë‰πüÂèØ‰ª•ÂàÜ‰∫´„ÄÇ Á§æ‰∫§Â™í‰ΩìÔºåÁ§æ‰∫§Â™í‰ΩìÔºåÂ™í‰Ωì‰∏çÊòØÂÖ≥ÈîÆÔºåÁ§æ‰∫§ÊâçÊòØ„ÄÇÂì™ÊÄïÂ§öË∑üÂà´‰∫∫‰∫íÂä®‰∏Ä‰∏ãÔºàÂèãÂ•ΩÁöÑ‰∫íÂä®ÔºâÔºå‰πüÊòØ‰∏çÈîôÁöÑ„ÄÇÊµÅÈáè‰∏ç‰∏ÄÂÆöË¶ÅÊòØÂçïÂêëÁöÑÔºå‰∏ÄÁõ¥‰ªéÁ§æ‰∫§Â™í‰Ωì‰∏äËé∑ÂèñÔºåÂç¥ÊÉßÊÄïÂàÜ‰∫´ÔºåÊòØ‰∏çË°åÁöÑ„ÄÇÊÉ≥Ë¶ÅÂÅöËá™Â™í‰ΩìÔºåÂÖàÊîæ‰∏ãÂ™í‰ΩìÁöÑË¥üÊãÖÔºåÂú®‰∫íËÅîÁΩë‰∏äÁ§æ‰∫§„ÄÇ ÊàëÊØîËæÉÂñúÊ¨¢ÁöÑÂπ≥Âè∞ÔºöÂ∞èÁ∫¢‰π¶ÔºåÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÔºåÁü•‰πé„ÄÇÂèØ‰ª•ÂÖàÂÅöËøô‰∏â‰∏™Âπ≥Âè∞ÁöÑÁ§æ‰∫§„ÄÇ]]></content>
  </entry>
  <entry>
    <title><![CDATA[ÁºñÁ®ãÁ¨îËÆ∞]]></title>
    <url>%2Fblog%2Fprogramming-note%2Findex.html</url>
    <content type="text"><![CDATA[ËøôÊòØÊàë‰ª•ÂâçÊâÄÊúâÁöÑÁºñÁ®ãÁ¨îËÆ∞ÁöÑÊ±áÊÄª„ÄÇ‰ª•ÂâçÊòØÂàÜÁ±ª‰ºò‰∫éÊó•ÊúüÔºåÂ∞±ÊòØÊàëÂºÄ‰∫ÜÂæàÂ§ö‰∏™Ê†èÁõÆÔºåÁºñÁ®ãÊòØÂÖ∂‰∏≠ÁöÑ‰∏Ä‰∏™Ê†èÁõÆÔºåÁÑ∂ÂêéÁºñÁ®ãÈáåÈù¢ÊåâÊó•ÊúüËÆ∞ÂΩïÁ¨îËÆ∞„ÄÇ‰ΩÜÁé∞Âú®ÊòØÊó•Êúü‰ºòÂÖàÔºåÂú®ÊØèÂ§©ÁöÑÊó•Âøó‰∏≠ËÆ∞ÂΩïÊâÄÊúâÂèëÁîüÁöÑ‰∫ãÊÉÖÔºå‰∏çÁÆ°Á±ªÂà´„ÄÇÁî®Ê†áÁ≠æÂíåÊêúÁ¥¢ÁÆ°ÁêÜËøô‰∫õÁ¨îËÆ∞„ÄÇ ‰∏∫‰ªÄ‰πàÊàëÊâìÁÆóËøô‰πàÂÅöÔºåÂõ†‰∏∫Âç≥‰æøÊàëÊåâÂàÜÁ±ªÊù•ËÆ∞ÂΩï‰∫Ü‰ø°ÊÅØÔºåÂèØ‰ª•ÁúãÂà∞ÁºñÁ®ãÁ¨îËÆ∞‰∏≠‰ªçÁÑ∂ÊòØ‰∏çÊòØ‰ºöÂ§πÊùÇËøô‰∏éÁºñÁ®ãÊó†ÂÖ≥ÁöÑÂÜÖÂÆπÔºåËøô‰∏ÄÁÇπÂÖ∂ÂÆûÊòØÈÅøÂÖç‰∏ç‰∫ÜÁöÑ„ÄÇ‰∏ñÈó¥ÁöÑ‰∫ãÁâ©Âì™ÊúâÂçï‰∏ÄÁª¥Â∫¶ÁöÑÂàíÂàÜÊú∫Âà∂„ÄÇÂîØ‰∏ÄÁúüÂÆûÂ≠òÂú®ÁöÑÊòØÂ¶ÇÂ§ßÊ±üÂ§ßÊ≤≥Ëà¨ÊªöÊªöËÄåÈÄùÁöÑÊó∂Èó¥„ÄÇÁ¨îËÆ∞Âè™ÊòØËÆ©Ëøô‰∫õÊó∂Èó¥ËÉΩÊúâ‰∏™Á∫™Âøµ„ÄÇ ËøôÈáå‰∏ªË¶ÅÁî®Êù•ËÆ∞ÂΩïÊàëÁîüÊ¥ª‰∏≠ÁöÑÊâÄÊÄùÊâÄÊÉ≥ÔºåÂΩìÁÑ∂Â§ßÈÉ®ÂàÜÂèØËÉΩÊòØË∑üËÆ°ÁÆóÊú∫„ÄÅÁºñÁ®ãÊúâÂÖ≥ÁöÑ„ÄÇËøô‰∫õÊÉ≥Ê≥ïÊàñËÄÖÊëòÊäÑÊØîËæÉÁü≠Â∞èÔºå‰∏çË∂≥‰ª•ÂΩ¢Êàê‰∏ÄÁØáÊñáÁ´†Ôºå‰ΩÜ‰ªçÁÑ∂ÂÄºÂæóËÆ∞ÂΩï‰∏ãÊù•ÂèçÂ§çÂìÅÂë≥ÔºåÂõûÈ°æ„ÄÇÂÆÉ‰ª¨ÁöÑÁºñÊéíÊñπÂºèÊòØÊåâÊó•ÊúüÂÄíÂ∫èÊù•ÁöÑ„ÄÇ 2025-06-26‰ªäÂ§©ÁøªÁúã„ÄäJavaScript È´òÁ∫ßÁ®ãÂ∫èËÆæËÆ°Á¨¨ 4 Áâà„ÄãÁ™ÅÁÑ∂ÂèëÁé∞‰∫ÜËøô‰∏™ËÆÆÈ¢òÔºöÈÄâÊã© Object ËøòÊòØ MapÔºåËøô‰∏™ÈóÆÈ¢òÊàë‰ª•Ââç‰πüÊÉ≥Âà∞ËøáÔºå‰∏çËøáÊ≤°ÊúâÊ∑±Á©∂ ÊÄªÁöÑÊù•ËØ¥Â∑ÆÂà´‰∏çÂ§ßÔºåÊàë‰∏™‰∫∫ÂñúÊ¨¢Áî® ObjectÔºåÂõ†‰∏∫ÊÑüËßâÂÜôËµ∑Êù•Êõ¥ÁÆÄÂçï„ÄÇ 2025-06-25Êò®Â§©Êï¥ÁêÜ chrome ‰π¶Á≠æÁöÑÊó∂ÂÄôÔºåÁúãÂà∞‰∏ÄÁØáÊñáÁ´†ÂæàÊÑüÂÖ¥Ë∂£ÔºöIdeas from &quot;A Philosophy of Software Design&quot;ÔºåÁÆóÊòØ‰∏ÄÊú¨‰π¶ÁöÑËØª‰π¶Á¨îËÆ∞ÔºåËøôÊú¨‰π¶‰πüÂæà‰∏çÈîôÔºöA Philosophy of Software Design„ÄÇ Âú®Ë±ÜÁì£‰π¶ËØÑ‰∏≠ÁúãÂà∞ËøôÊ†∑‰∏Ä‰∏™‰æãÂ≠êÔºö Âà†Èô§Ê≠£Âú®‰ΩøÁî®ÁöÑÊñá‰ª∂ÔºàUnix ÁöÑËÆæËÆ°Êó∂Â•ΩÁöÑËÆæËÆ°ÔºâÔºåWindows ‰∏çËÉΩÂà†Èô§ÔºåÂπ∂‰∏î‰ºöÊä•ÈîôÔºåÁé∞Âú®ÂèØ‰ª•Âà†Èô§Êñá‰ª∂‰∫ÜÔºå‰ΩÜÊòØÂà†Èô§Ê≠£Âú®‰ΩøÁî®ÁöÑÁõÆÂΩïËøòÊòØ‰ºöÊä•ÈîôÔºõUnix ‰ºöÊääÊñá‰ª∂‰ªéÊñá‰ª∂Á≥ªÁªüÁõ¥Êé•Âà†Èô§ÔºåÊ≠£Âú®‰ΩøÁî®ÁöÑËøõÁ®ãËøòËÉΩÁªßÁª≠‰ΩøÁî®ÔºàÊñá‰ª∂È©ªÁïôÂú®ÂÜÖÂ≠òÔºâÔºåÂΩìÊúÄÂêé‰∏Ä‰∏™‰ΩøÁî®ËØ•Êñá‰ª∂ÁöÑËøõÁ®ãÈÄÄÂá∫‰πãÂêéÔºåÊñá‰ª∂Â∞±‰ºöÂú®ÂÜÖÂ≠ò‰∏≠Ê∂àÂ§±ÁúüÊ≠£Ë¢´Âà†Èô§ ‰ª•ÂâçÂ∞±ËßâÂæó Windows ÁöÑËøô‰∏™ËÆæËÆ°ÈùûÂ∏∏ÁöÑÊÅ∂ÂøÉÔºåÁªèÂ∏∏Â∞±ÊòØÂà†Êñá‰ª∂ÂíåÁõÆÂΩïÂà†‰∏çÊéâÔºåÊèêÁ§∫Ê≠£Ë¢´Âç†Áî®Ôºå‰ΩÜÊòØ‰πü‰∏çÁü•ÈÅìÊòØÂì™‰∏™Á®ãÂ∫èÂú®Âç†Áî®ÔºåÊÄªÊòØËé´ÂêçÂÖ∂Â¶ôÔºåÈÅáÂà∞ËøôÁßçÊÉÖÂÜµÊàë‰∏ÄËà¨ÊòØÈáçÂêØÁ≥ªÁªüÂêéÂÜçÂà†Ôºå‰ΩìÈ™åÊòØÈùûÂ∏∏ÁöÑÂ∑Æ„ÄÇ 2025-06-24‰ªäÂ§©ÊäΩÁ©∫Ëß£ÂÜ≥‰∫Ü‰∏Ä‰∏ãÔºåÂçöÂÆ¢ÊêúÁ¥¢‰∏çËÉΩÊêúÁ¥¢Ê†èÁõÆÁöÑÈóÆÈ¢ò(Âú® hexo ÈáåÈù¢Ê†èÁõÆÂè´ÂÅö page)„ÄÇÂõ†‰∏∫ÊàëÂºÄ‰∫ÜÊØîËæÉÂ§öÁöÑÊ†èÁõÆÔºåÂ¶ÇÊûú‰∏çËÉΩÂú® search ÈáåÈù¢Áªü‰∏ÄÊêúÁ¥¢ÔºåËøòË¶ÅÁÇπÂºÄÊØè‰∏™Ê†èÁõÆÂçïÁã¨Áî®ÊµèËßàÂô®ÁöÑÊêúÁ¥¢ÂäüËÉΩÔºåÂ∞±‰ºöÈùûÂ∏∏È∫ªÁÉ¶„ÄÇËøôÂèØËÉΩ‰πüÊòØÊàë‰ª•ÂâçÊÉ≥Ë¶ÅÊîæÂºÉÊ†èÁõÆÁöÑÂéüÂõ†Ôºå‰ΩÜÊ†èÁõÆÂèàÁúüÁöÑÂæàÂ•ΩÁî®ÔºåÊâÄ‰ª•ËøòÊòØÂä®ÊâãËß£ÂÜ≥Ê≠§ÈóÆÈ¢ò‰∫Ü„ÄÇ ËØ¥Ëµ∑Êù•Êå∫ÁÆÄÂçïÁöÑÔºåÊâìÂºÄ hexo Âíå‰∏ªÈ¢òÁöÑ‰∏§‰∏™_config.ymlÊñá‰ª∂ÔºåÊêú‰∫Ü‰∏Ä‰∏ã searchÔºåÁúãÁúãÈÖçÁΩÆÊòØÂê¶ÊîØÊåÅÔºåÈ°∫Ëó§Êë∏ÁìúÊâæÂà∞‰∫ÜËøô‰∏™Ôºöhexo-generator-search„ÄÇËøô‰∏™È°πÁõÆÁöÑ readme ÈáåÈù¢ÂÜôÁöÑÂæàÊ∏ÖÊ•öÔºå‰øÆÊîπfield: allÔºåÂ∞±ÂèØ‰ª•ÊêúÁ¥¢ÊâÄÊúâ posts Âíå pages ‰∫Ü„ÄÇ 2025-06-23‰ªÄ‰πàÊòØ MCPÔºåModel Context ProtocalÔºåÊ®°Âûã‰∏ä‰∏ãÊñáÂçèËÆÆÔºü ‰ªäÂ§©Âú®Â∞èÁ∫¢‰π¶‰∏äÁúãÂà∞‰∏Ä‰∏™ËÆ≤ MCP ËÆ≤ÂæóÂæàÂ•ΩÁöÑËßÜÈ¢ë„ÄÇÊÄªÁªìÂ∞±ÊòØ MCP ‰∏ÄÁßçÂçèËÆÆÔºåÁî®‰∫é AI Ë∞ÉÁî®ËµÑÊ∫êÂíåÂ∑•ÂÖ∑ÔºåÊØîÂ¶Ç AI ËÆøÈóÆÁΩëÈ°µÂ∞±ÈúÄË¶ÅÈÄöËøá MCP„ÄÇÊúâ‰∫Ü MCP ÁöÑÂ•ΩÂ§ÑÂ∞±ÊòØÊñπ‰æøÂ§çÁî®ÔºåÂ§ßÂÆ∂‰∏çÂøÖÈáçÂ§çÂºÄÂèëËΩÆÂ≠ê„ÄÇAI ÂàöÂá∫Êù•ÈÇ£‰ºöÂÑøÊàëÂ∞±Âú®ÊÉ≥Ëøô‰∏™ÈóÆÈ¢òÔºåÂ∞±ÊòØ AI ÊÄé‰πà‰ΩøÁî®ÂéüÂÖàÁöÑÈÇ£‰∫õËΩØ‰ª∂Âäû‰∫ãÔºåÊØîÂ¶ÇËÆ© AI Â∏ÆÊàëÊâìÁîµËØùÔºåÂÅöÊèêÈÜíÔºåÊü•‰ø°ÊÅØÁ≠âÁ≠â„ÄÇÁé∞Âú® Agentic AI ÈÉΩÂ∑≤ÁªèÂú®ËêΩÂú∞‰ΩøÁî®‰∫ÜÔºåÊ†πÊú¨‰∏çÊòØÁÆÄÂçïÁöÑËÅä‰∏™Â§©‰∫Ü„ÄÇ Ëøô‰∏™‰∫∫ÂæàÊìÖÈïøÁªèËê•Â±•ÂéÜÁöÑÊ†∑Â≠êÔºöhttps://www.guofei.site/ Âø´Êç∑ÁºñËæëÊäÄÂ∑ßÁªèÂ∏∏ÂÜô‰ª£Á†ÅÊàñËÄÖÂÜôÂçöÂÆ¢ÔºåÊúâÁöÑÊó∂ÂÄô‰ºöÊúâ‰∏Ä‰∫õÂø´Êç∑ÁºñËæëÁöÑÈúÄË¶ÅÔºåÊØîÂ¶ÇÔºö Âêë‰∏äÊàñÂêë‰∏ãÁßªÂä®‰∏ÄË°åÔºöalt + ‚Üë/‚Üì üéØ ‚Äã‚Äã2. È´òÁ∫ßÂ§öÂÖâÊ†áÊìç‰Ωú ‚Äã‚Äã ÈùûËøûÁª≠Ë°åÁºñËæëÔºöAlt + Èº†Ê†áÁÇπÂáª Êàñ Ctrl + Alt + ‚Üë/‚Üì ÂûÇÁõ¥Ê∑ªÂä†ÂÖâÊ†á ‚Äã‚ÄãÔºöCtrl + Alt + ‚Üë/‚ÜìÔºàWindows/LinuxÔºâÊàñ Cmd + Option + ‚Üë/‚ÜìÔºàMacÔºâÔºåÂú®ÈÄâ‰∏≠Ë°åÁöÑ‰∏äÊñπÊàñ‰∏ãÊñπÈÄêË°åÊ∑ªÂä†ÂÖâÊ†á„ÄÇ ÂÖ®Ë°åÊú´Â∞æÊ∑ªÂä†ÂÖâÊ†á ‚Äã‚ÄãÔºöÈÄâ‰∏≠Â§öË°åÂêéÊåâ Shift + Alt + IÔºåÂú®ÊâÄÊúâË°åÁöÑË°åÂ∞æÊèíÂÖ•ÂÖâÊ†á„ÄÇÈÄÇÁî®Âú∫ÊôØÔºöÂú®Â§öË°åÊú´Â∞æÁªü‰∏ÄÊ∑ªÂä†ÂàÜÂè∑„ÄÅÈÄóÂè∑Á≠â„ÄÇ Êùè‰ªÅÂíåÂ∑¥Êó¶Êú®ÁöÑÂå∫Âà´Êùè‰ªÅÂíåÂ∑¥Êó¶Êú®ÁöÑÂå∫Âà´ 2025-01-03‰øÆÊîπ location.searchÔºå‰ΩÜ‰∏çÂà∑Êñ∞ÂèØ‰ª•ÂÅöÂà∞ÂêóÔºü 1Ôºö history.pushStateÊñπÊ≥ïÔºàHTML5ÔºâÔºåÊ≠§ÊñπÊ≥ïÂèØ‰ª•‰∫ßÁîü‰∏Ä‰∏™ÂéÜÂè≤ËÆ∞ÂΩïÔºåÂèØ‰ª•ÂêéÈÄÄ 12345// ÂÅáËÆæÂΩìÂâçURLÊòØhttps://example.com/page.htmllet newSearchParams = "?param1=value1";let newUrl = location.origin + location.pathname + newSearchParams;history.pushState(null, "", newUrl);console.log(location.search); // ËæìÂá∫:?param1=value1 2Ôºö history.replaceStateÊñπÊ≥ïÔºàHTML5ÔºâÔºåÊ≠§ÊñπÊ≥ï‰∏ç‰∫ßÁîüÂéÜÂè≤ËÆ∞ÂΩï 1234let url = new URL(location.href);url.search = "?newParam=newValue";history.replaceState(null, "", url);console.log(location.search); // ËæìÂá∫:?newParam=newValue 2024-12-27vscode ‰∏äÁßª‰∏ãÁßª‰∏ÄË°å‰ª£Á†ÅÂø´Êç∑ÈîÆÔºöalt+‰∏ä‰∏ãÊñπÂêëÈîÆ 2024-12-26ÂâçÁ´ØÊ†∑Âºè: resize: both Ëøô‰∏™ resize ÂÜ≥ÂÆö‰∫Ü dom ÂÖÉÁ¥†ÊòØÂê¶ÂèØ‰ª•ÊãñÊãΩÂ§ßÂ∞è„ÄÇ ÂÆòÊñπÊñáÊ°£: resize - CSS: Cascading Style Sheets - MDN Web Docs - Mozilla 2024-12-13js ÁöÑ attribute Âíå property ÁöÑÂå∫Âà´Ôºö ÂØπ‰∫é‰∏Ä‰∏™ input ÂÖÉÁ¥†Ôºåinput.setAttribute(&#39;value&#39;, &#39;111&#39;);ÊòØ‰∏çËÉΩÊàêÂäüÁöÑÔºåÂõ†‰∏∫ input Ê≤°Êúâ value Ëøô‰∏™ attributeÔºåÂè™Êúâ input.value Ëøô‰∏™ property„ÄÇ ÁªìËÆ∫ÊòØÔºåÁ≥ªÁªüËá™Â∏¶ÁöÑ‰∏Ä‰∫õÁâπÊÆäÂ±ûÊÄß attribute Âíå property ÊòØÂèØ‰ª•ÂêåÊ≠•ÁöÑÔºåÊØîÂ¶Ç input.title=&#39;111&#39;Âíå input.setAttribute(&#39;title&#39;, &#39;111&#39;)„ÄÇËá™ÂÆö‰πâÁöÑÂ±ûÊÄßÂ∞±Ë¶ÅÂ∞èÂøÉ‰øÆÊîπ‰∫ÜÔºåÂõ†‰∏∫‰∏çËÉΩÂêåÊ≠•ÔºåÊØîÂ¶Ç‰Ω† input.setAttribute(&#39;aaa&#39;, &#39;111&#39;)ÔºåÁî® input.aaa ÊòØËé∑Âèñ‰∏çÂà∞ÁöÑÔºåinput.bbb = &#39;222&#39;ÔºåÁî® input.getAttribute(&#39;bbb&#39;)‰πüÊòØËé∑Âèñ‰∏çÂà∞ÁöÑ„ÄÇËøòÊúâÂ∞±ÊòØË¶ÅËÆ∞ÂøÜ‰∏Ä‰∏ãÂì™‰∫õÂ±ûÊÄßÊòØÂèØ‰ª•ÂêåÊ≠•ÁöÑÔºåÊØîÂ¶Ç‰∏äÈù¢ÁöÑ value Â∞±ÊòØ‰∏™Âùë„ÄÇ 2024-12-10clientWidth Ëé∑ÂèñÁöÑÊòØÊï¥Êï∞ÔºåÊúâ‰∏ÄÂÆöËØØÂ∑ÆÔºåÁº©ÊîæÁöÑÊó∂ÂÄôÂ∞§‰∏∫ÊòéÊòæÔºåÂèØËÉΩ‰ºöÂØºËá¥‰∏Ä‰∫õÂ∏ÉÂ±ÄÊéíÁâàÁöÑ bugÔºåÊâÄ‰ª•ÊúÄÂ•ΩÊòØÁî® getBoundingClientRect().widthÔºåÂÆÉÂèØ‰ª•ËøîÂõûÊµÆÁÇπÊï∞ÔºåÂ∞±ÂèØ‰ª•Áî®Êù•Ëß£ÂÜ≥‰ª•‰∏ä bug 2024-10-21‰ªÄ‰πàÊÉÖÂÜµ‰∏ã‰∏ç‰ºöËøõ try finally ÁöÑ finally ÈÉ®ÂàÜÔºü ‰ªäÂ§©ÈÅáÂà∞‰∏Ä‰∏™ÂºÇÊ≠•Âç°Âú® pending ÁöÑÊÉÖÂÜµÔºåÂØºËá¥‰∏ç‰ºöËøõ finally„ÄÇÂÖ∑‰ΩìÊÉÖÂÜµÊòØÔºå‰∏Ä‰∏™ÂºÇÊ≠•ÁöÑÂºπÊ°ÜÔºåÊ≤°ÊúâÂÜô onCloseÔºåË¶ÅÂú® onClose ÈáåÈù¢ resolve(false) 2024-10-16ÊúÄËøëÈÅáÂà∞‰∏Ä‰∏™Ôºö 123text-overflow: ellipsis;overflow: hidden;white-space: nowrap; Â§±ÊïàÁöÑÈóÆÈ¢ò„ÄÇÊúÄÁªàÊü•ÊòéÂéüÂõ†ÊòØÔºödisplay: flex;ÂºïËµ∑ÁöÑ 2024-10-10‰ªäÂ§©ÈÅáÂà∞‰∏Ä‰∏™ÈóÆÈ¢òÊòØÔºåÂêå‰∏ÄÂº†ÂõæÁâáËµÑÊ∫êÔºåÂõæÁâáÂèëÁîü‰∫ÜÊõ¥Êñ∞„ÄÇ‰ΩÜÂ¶ÇÊûú URL ‰∏çÂèòÁöÑËØùÔºåÂ∞±‰∏ç‰ºöÂéªËÆøÈóÆÊñ∞ÁöÑÂõæÁâáÔºàÈô§ÈùûÂà∑Êñ∞ÊµèËßàÂô®Ôºâ„ÄÇËß£ÂÜ≥ÂäûÊ≥ïÊòØÁªô URL Âä†Êó∂Èó¥Êà≥„ÄÇ 1backgroundImage: `url($&#123;content + "?" + Date.now()&#125;)`; Ëøô‰∏™ÊòØ‰∏çÈúÄË¶ÅÂêéÁ´ØÈÖçÂêàÊîπ‰ªÄ‰πà‰∏úË•øÁöÑÔºåÂêéÁ´ØÂè™Ë¶ÅÊó†ËßÜËøô‰∏™Êó∂Èó¥Êà≥ÂèÇÊï∞Âç≥ÂèØ 2024-09-23‰ªé‰∏ÄÂà∞Êó†Á©∑Â§ßÁúüÁöÑËÆ≤‰∫ÜËõÆÂ§öËøô‰∏™‰∏ñÁïåÁöÑÂ∫ïÂ±ÇÁü•ËØÜÁöÑ„ÄÇ ÂéüÂ≠êÊëÑÂΩ±ÊúØËøô‰∏ÄÂ∞èËäÇËÆ≤Âà∞Ôºö‰∏çË¶Å‰ª•‰∏∫ÁªôÂéüÂ≠êÊãçÁÖßÊòØ‰ª∂ÂÆπÊòìÁöÑ‰∫ãÔºåÂõ†‰∏∫Âú®ÁªôËøô‰πàÂ∞èÁöÑÁâ©‰ΩìÁÖßÁõ∏Êó∂ÔºåÂ¶ÇÊûúÊâÄÁî®ÁöÑÁÖßÊòéÂÖâÁ∫øÁöÑÊ≥¢ÈïøÊØîË¢´ÊãçÊëÑÁâ©‰ΩìÁöÑÂ∞∫ÂØ∏Â§ßÔºåÁÖßÁâáÂ∞±‰ºöÊ®°Á≥äÂæó‰∏ÄÂ°åÁ≥äÊ∂Ç„ÄÇ‰Ω†ÊÄª‰∏çËÉΩÁî®Âà∑Â¢ôÁöÑÊéíÁ¨îÊù•ÁîªÂ∑•Á¨îÁîªÂêßÔºÅÂíåÂæÆÂ∞èÁöÑÊòæÂæÆÁªÑÁªáÊâìËøá‰∫§ÈÅìÁöÑÁîüÁâ©Â≠¶ÂÆ∂ÈÉΩÂæàÊòéÁôΩËøôÁßçÂõ∞ÈöæÔºåÂõ†‰∏∫ÁªÜËèåÁöÑÂ§ßÂ∞èÔºàÁ∫¶ 0.000 1 ÂéòÁ±≥ÔºâÂíåÂèØËßÅÂÖâÁöÑÊ≥¢ÈïøÁõ∏‰ªø„ÄÇÂ¶ÇÊûúË¶Å‰ΩøÁªÜËèåÂëàÁé∞Âá∫Ê∏ÖÊô∞ÁöÑÂÉèÔºåÂ∞±ÂæóÁî®Á¥´Â§ñÁ∫øÁªôÁªÜËèåÊëÑÂΩ±ÔºåÊâçËÉΩËé∑ÂæóËæÉÂ•ΩÁöÑÁªìÊûú„ÄÇ‰ΩÜÊòØÂàÜÂ≠êÁöÑÂ∞∫ÂØ∏ÂèäÂÖ∂Âú®Êô∂Ê†º‰∏≠ÁöÑÈó¥ÈöîÊòØÂ¶ÇÊ≠§‰πãÂ∞èÔºà0.000 000 01 ÂéòÁ±≥ÔºâÔºåÊó†ËÆ∫ÊòØÂèØËßÅÂÖâËøòÊòØÁ¥´Â§ñÁ∫øÈÉΩÊó†Ê≥ïÂÖÖÂΩìÁîªÂÖ∑„ÄÇÂ¶ÇÊûúÊÉ≥Ë¶ÅÁúãÂà∞Âçï‰∏™ÂéüÂ≠êÔºåÈùûÁî®Ê≥¢ÈïøÊØîÂèØËßÅÂÖâÁü≠Âá†ÂçÉÂÄçÁöÑÂ∞ÑÁ∫ø‚Äî‚ÄîX ÂÖâ‚Äî‚Äî‰∏çÂèØ„ÄÇ‰ΩÜËøô‰πà‰∏ÄÊù•ÔºåÂèà‰ºöÈÅáÂà∞‰∏Ä‰∏™‰ºº‰πéÊó†Ê≥ïÂÖãÊúçÁöÑÂõ∞ÈöæÔºöX ÂÖâÂèØ‰ª•Á©øÈÄèÁâ©‰ΩìËÄå‰∏çÂèëÁîüÊäòÂ∞ÑÔºåÂõ†Ê≠§ÔºåÊó†ËÆ∫ÊòØÊîæÂ§ßÈïúËøòÊòØÊòæÂæÆÈïúÔºåÈÉΩ‰∏ç‰ºö‰Ωø X ÂÖâËÅöÁÑ¶„ÄÇËøôÁßçÊÄßË¥®ÂÜçÂä†‰∏ä X ÂÖâÁöÑÂº∫Â§ßÁ©øÈÄèÂäõÔºåÂú®ÂåªÂ≠¶‰∏äÂΩìÁÑ∂ÊòØÂæàÊúâÁî®ÁöÑÔºåÂõ†‰∏∫ X ÂÖâÂ¶ÇÊûúÂú®Á©øÈÄè‰∫∫‰ΩìÊó∂ÂèëÁîüÊäòÂ∞ÑÔºåÂ∞±‰ºöÊää X ÂÖâÂ∫ïÁâáÂºÑÊàê‰∏ÄÁâáÊ®°Á≥ä„ÄÇ‰ΩÜÂ∞±ÊòØËøô‰∏™ÊÄßË¥®Ôºå‰ºº‰πéÂèàÊéíÈô§‰∫ÜÂæóÂà∞‰ªª‰Ωï‰∏ÄÂº†ÊîæÂ§ßÁöÑ X ÂÖâÁÖßÁâáÁöÑÂèØËÉΩÊÄßÔºÅ 2024-09-11ÊúÄËøëÂú®Áé©‰∏§‰∏™Ê∏∏ÊàèÔºöfactorioÔºàÂºÇÊòüÂ∑•Âú∫ÔºâÂíå terrariaÔºàÊ≥∞ÊãâÁëû‰∫öÔºâÂú®ÁúãÁöÑ‰π¶Ôºö‰ªé‰∏ÄÂà∞Êó†Á©∑Â§ß ËÇùÊ≥∞ÊãâÁëû‰∫öÊúâÁÇπËÇù‰∏çÂä®‰∫ÜÔºåÊàëÁ°ÆÂÆûÂæàÂñúÊ¨¢Ê∏∏ÊàèÈáåÁöÑËøôÁßçËÉΩÂäõËé∑ÂæóÊÑüÔºå‰ª•ÂèäÈÄöËøáÊü•Ê∏∏ÊàèÊîªÁï•Êù•Ëß£ÂÜ≥ÈóÆÈ¢ò„ÄÇÈïøÊó∂Èó¥Áé©Ê∏∏ÊàèÁúºÁùõÂêÉ‰∏çÊ∂à‰∫ÜÔºåÊâìÁÆóÂºÄÂßãÁ†îÁ©∂ÁúüÂÆû‰∏ñÁïå„ÄÇÊØïÁ´üÁúüÂÆû‰∏ñÁïåÊõ¥Âä†‰∏∞ÂØåËÄå‰∏îÁ•ûÁßò„ÄÇ Êää 10 ÊãÜÊàê‰∏§‰∏™Êï∞Ôºå‰∏§‰∏™Êï∞Áõ∏‰πòÁ≠â‰∫é 40ÔºåË¶ÅÊÄé‰πàÊãÜÔºü ÈúÄË¶ÅÂÄüÂä©ËôöÊï∞ÔºåÊãÜÊàêÔºö$$5+\sqrt{-15}$$Âíå$$5-\sqrt{-15}$$ Âú®„Ää‰ªé‰∏ÄÂà∞Êó†Á©∑Â§ß„ÄãËøôÊú¨‰π¶ÂÜôÂÆåÂêéÔºåËÆ∏Â§ö‰∏ñÁ∫™ÈöæÈ¢òÈÉΩË¢´ÊîªÂÖã‰∫ÜÔºåÂÆÉ‰ª¨ÊúâÔºö Âì•Âæ∑Â∑¥Ëµ´ÁåúÊÉ≥ Ë¥πÈ©¨Â§ßÂÆöÁêÜ ÂõõËâ≤ÈóÆÈ¢ò 2024-09-09ÈÇ£Â§©Ë∑ü‰πùÊ∫êÂú®Ë∑Ø‰∏äËÆ®ËÆ∫ËøáÔºåËøô‰∏™‰∏ñÁïåÂèòÂæóÊûÅÂº∫ÁöÑÊñπÂºèÔºå‰∏çÊòØ‰∏™‰∫∫ËÉΩÂäõÔºåËÄåÊòØ‰∫∫ÈôÖÂÖ≥Á≥ªÁΩëÁªú„ÄÇÊàê‰∏∫‰∏Ä‰∏™È¢ÜË¢ñÊàñËÄÖÊïô‰∏ªÔºåÊã•Êúâ‰∏ÄÊâπÁ≤â‰∏ùÔºåÊàñËÄÖ‰ø°Âæí„ÄÇËÉΩÂ§üË∞ÉÂä®Áôæ‰∏á‰∫∫ÁöÑÂäõÈáèÔºåÊâçÊòØÂº∫ËÄÖ„ÄÇÂõ†‰∏∫Ëøô‰∏™‰∏ñÁïåÔºå‰∏Ä‰∏™‰∫∫ÁöÑÂäõÈáèÁªàÁ©∂ÊòØÂæàÊúâÈôêÁöÑÔºåÂÆÉ‰∏çÂÉèÂä®Êº´Ôºå‰øÆ‰ªôÊàñËÄÖÊ≠¶‰æ†ÈáåÊèèËø∞ÁöÑÂºÇ‰∏ñÁïåÔºå‰∫∫ÂèØ‰ª•‰ª•‰∏ÄÊïåÁôæÔºå‰ª•‰∏ÄÊïåÁôæ‰∏á„ÄÇ‰ΩÜÂÆÉÂèØ‰ª•‰∏ÄÈ¢ÜÂØº‰∏ÄÁôæ‰∏áÔºå‰ª•‰∏ÄÊåáÊå•‰∏ÄÁôæ‰∏á„ÄÇ ÊâÄ‰ª•Âú®Ëøô‰∏™‰∏ñÁïå‰∏äÔºåÂèòÂº∫ÔºåÁöÑÊÑèÊÄùÂ∞±ÊòØÂÅö‰∏Ä‰∏™Êïô‰∏ªÊàñËÄÖÁ≤æÁ•ûÈ¢ÜË¢ñ„ÄÇ ËÄåËææÊàêËøô‰∫õÔºåÈúÄË¶ÅÊúâ‰∏™‰∫∫È≠ÖÂäõÔºåÂ°ëÈÄ†ÂÖ±ËØÜ„ÄÇ 2024-09-06‰ªäÂ§©Âêå‰∫ãÈÅáÂà∞‰∏Ä‰∏™ position: relative ÁöÑÂÖÉÁ¥†ÔºåÂÆΩÂ∫¶ËÆæÁΩÆ‰∫Ü 16pxÔºå‰ΩÜ‰∏ÄÁõ¥ÊòæÁ§∫ÊòØ 0pxÔºåÂéüÂõ†ÊòØ relative Âú®ÂÆΩÈ´ò‰∏çÂ§üÁöÑÊó∂ÂÄô‰ºöË¢´Êå§Êéâ„ÄÇÂèØ‰ª•Áî® position: absoluteÔºåËøô‰∏™‰∏ç‰ºöË¢´Êå§Êéâ„ÄÇ 2024-09-03‰ªäÂ§©Âêå‰∫ãÈóÆÊàëÂÖ≥‰∫évisibility: hiddenÁöÑÁà∂ÂÖÉÁ¥†ÔºåÂ≠êÂÖÉÁ¥†ÊòØvisibility: visibleÔºåÊòæÁ§∫Âá∫‰∫ÜÂ≠êÂÖÉÁ¥†ÁöÑÈóÆÈ¢ò„ÄÇ‰ª•ÂâçÈù¢ËØïÁöÑÊó∂ÂÄôÊàëÂÜôËøá‰∏ÄÁØáÊÄªÁªìÔºå‰ΩÜÊòØÊâæ‰∏çÂà∞‰∫Ü„ÄÇ‰πãÂêé‰ºöË°•‰∏ÄÁØá„ÄÇÂèØ‰ª•ÂÖàÂèÇËÄÉ‰∏Ä‰∏ãËøôÁØáÊñáÁ´†ÔºöCSS ‰∏≠Áî® opacity„ÄÅvisibility„ÄÅdisplay Â±ûÊÄßÂ∞Ü ÂÖÉÁ¥†ÈöêËóè ÁöÑ ÂØπÊØîÂàÜÊûê Â§öË°åÊñáÊú¨ÊòæÁ§∫Êú´Â∞æÁúÅÁï•Âè∑Â§öË°åÊñáÂ≠ó text-overflow: ellipsis ÁúÅÁï•Âè∑Â§±ÊïàÈóÆÈ¢ò 12345text-overflow: ellipsis;overflow: hidden;display: -webkit-box; //ÁâπÂà´ÊòæÁ§∫Ê®°Âºè-webkit-line-clamp: 8; //Ë°åÊï∞-webkit-box-orient: vertical; //ÁõíÂ≠ê‰∏≠ÂÜÖÂÆπÁ´ñÁõ¥ÊéíÂàó ‰∏çÁî®ÈôêÂÆöÈ´òÂ∫¶ÔºåÂõ†‰∏∫Â∑≤ÁªèÈôêÂÆö‰∫ÜË°åÊï∞ 2024-09-02‰∫ø‰∏áÂØåÁøÅÊåáÁöÑÊòØË∫´‰ª∑Âú®‰∏Ä‰∫øÁæéÂÖÉ‰ª•‰∏äÁöÑÂØåË±™„ÄÇËÄå‰∏çÊòØË∫´‰ª∑Âú®‰∏Ä‰∏á‰∫øÁæéÂÖÉ‰ª•‰∏äÁöÑÂØåË±™„ÄÇ‰∏áÂÖÉÊà∑ÔºåÁôæ‰∏áÂØåÁøÅÔºåÂçÉ‰∏áÂØåÁøÅËøô‰∫õÈÉΩÊòØÂÜôÂÆû„ÄÇ‰∫ø‰∏áÂØåÁøÅÊòØ‰∏™ËôöÊï∞„ÄÇÁêÜÂ∫îÂè´‰∫øÂØåÁøÅ„ÄÇ 2024-08-30‰ªäÊó•ÈòÆ‰∏ÄÂ≥∞Âë®Êä•ÊÑüÂÖ¥Ë∂£ÁöÑ‰∏úË•øÔºö Áé∞‰ª£ÊñáËΩ¨Âè§Êñá 2024-08-29position: fixed ‰∏ÄÂÆöÂü∫‰∫éËßÜÂè£Âêó‰∏ç‰∏ÄÂÆöÔºåÂ¶ÇÊûúÁ•ñÂÖàÁöÑ transform ‰∏ç‰∏∫ noneÔºåÂ∞±‰ºöÂü∫‰∫éÁ•ñÂÖàËÄåÈùûËßÜÂè£Ôºö‰∏çÂèóÊéßÂà∂ÁöÑ position:fixed git ÂêàÂπ∂ÂÜ≤Á™Å‰ªäÂ§©Âú® git rebase ÁöÑËøáÁ®ã‰∏≠ÈÅáÂà∞‰∏Ä‰∏™ÈóÆÈ¢òÔºåÈòªÊñ≠‰∫ÜÊàëÁöÑ rebase Ëß£ÂÜ≥ÂÜ≤Á™ÅÊµÅÁ®ãÔºö 1Git: &apos;pro-api/&apos; does not have a commit checked out ÊúÄÂêéÊü•ÊòéÂéüÂõ†ÊòØÊüê‰∏™Â≠êÁõÆÂΩïÂ§ö‰∫Ü‰∏Ä‰∏™.gitÊñá‰ª∂Â§πÔºå‰∏Ä‰∏™‰ªìÂ∫ìÊòØ‰∏çÂèØ‰ª•Êúâ‰∏§‰∏™.gitÁöÑ„ÄÇÂà†ÊéâËøô‰∏™Â§ö‰ΩôÁöÑÂç≥ÂèØÁªßÁª≠Ëß£ÂÜ≥ rebase ÁöÑÂÜ≤Á™Å„ÄÇ How to fix: error: &#39;&#39; does not have a commit checked out fatal: adding files failed when inputting &quot;git add .&quot; in command prompt ÂêàÂπ∂ÁöÑÊó∂ÂÄôÔºåÊúÄÂ•ΩÁî® rebaseÔºå‰ΩÜËØ•Âá∫ÈóÆÈ¢òÁöÑÂú∞ÊñπËøòÊòØ‰ºöÂá∫ÈóÆÈ¢ò„ÄÇÊØîÂ¶ÇÊàë‰ªé2.2.CÂàÜÊîØÂü∫Á°Ä‰∏äÊñ∞Âª∫‰∏Ä‰∏™liuqin/updateCBB/2.2.CÂàÜÊîØÔºåÁÑ∂ÂêéÂºÄÂèëÂà∞‰∏ÄÂçäÔºåÈ¢ÜÂØºÂü∫‰∫é2.2.CÂàÜÊîØÂºÄÂá∫‰∫Ü2.2.DÂàÜÊîØÔºåÁÑ∂Âêé‰∏Ä‰∫õÂêå‰∫ãÔºåÂú®2.2.DÂàÜÊîØÂíåliuqin/updateCBB/2.2.CÂàÜÊîØÔºå‰øÆÊîπ‰∫ÜÂêå‰∏ÄÂùó‰ª£Á†ÅÔºåËÄå‰∏îÁî±‰∫éÊàëÁöÑÂàÜÊîØÊ≤°ÊúâÂØπÂ∫îÁöÑÊûÑÂª∫ÂèëÂ∏ÉÔºàÊàëËá™Â∑±Âú®Êú¨Âú∞ÊµãÔºâÔºå‰ª•Ëá≥‰∫é‰øÆÊîπÂá∫‰∫ÜÈóÆÈ¢òÔºå‰πüÊ≤°Êúâ‰∫∫ÂØüËßâÔºàÊàë‰ª¨ÊûÑÂª∫ÂèëÂ∏ÉÁöÑÂàÜÊîØÔºå‰∏ÄÊó¶ÊûÑÂª∫Êä•ÈîôÔºåÂ∞±‰ºöÈÄöÁü•Âà∞ÂÜÖÁΩëËÅäÂ§©Ë¥¶Âè∑‰∏äÔºåÊâÄ‰ª•‰ºöÁ¨¨‰∏ÄÊó∂Èó¥ÂæóÂà∞Ëß£ÂÜ≥Ôºâ„ÄÇÊúÄÂêéÂêàÂπ∂ÁöÑÊó∂ÂÄôÔºà‰ªéliuqin/updateCBB/2.2.CÂàÜÊîØÂêàÂπ∂Âà∞2.2.DÂàÜÊîØÔºâÔºå‰∏ÄÂ†ÜÊä•Èîô„ÄÇ ÂéÜÂè≤ÁöÑÂèòËøÅ ËÆ©Êàë‰ª¨ËÆ§ÁúüËÆ®ËÆ∫‰∏Ä‰∏ã‚ÄúAI Èú∏ÊùÉ‚ÄùÊó∂‰ª£‰∫∫Á±ªÁöÑÂëΩËøêÔºåËøôÁØáÊñáÁ´†Â∏ÆÂä©ÊàëÂõûÈ°æ‰∫ÜÂ§ßÈáèÊ∂àÂ§±Âú®ÂéÜÂè≤‰∏≠ÁöÑËÅå‰∏öÔºå‰πüËÆ©ÊàëÊõ¥Âä†Ê∏ÖÈÜíÁöÑËÆ§ËØÜÂà∞Êó∂‰ª£ÈÉΩÂú®ÂèòÂåñÔºåÊõ¥‰ΩïÂÜµ‰∫∫Âë¢Ôºå‰∫∫ÊÄé‰πàËÉΩ‰∏ÄÂ∞ò‰∏çÂèòÂë¢Ôºå‰Ω†‰∏çÂèòÔºåÊó∂‰ª£Â∞±Âº∫Ëø´‰Ω†Âèò„ÄÇËøòÊúâÊ∂àÂ§±Âú®ÂéÜÂè≤‰∏≠ÁöÑÁâ©ÂìÅÔºöÁ£ÅÂ∏¶ÔºåÂÖâÁõòÔºåU ÁõòÔºåMP3ÔºåÊúâÁ∫øËÄ≥Êú∫ÔºåÊî∂Èü≥Êú∫ÔºåÂπøÊí≠Âè∞„ÄÇ Êñ∞Êóß‰∫ãÁâ©ÂØπÊØîÊóß‰∫ãÁâ© ‰º†ÂëºÊú∫ÔºàBP Êú∫ÔºâÔºåÊõæÁªèÊòØÈáçË¶ÅÁöÑÈÄöËÆØÂ∑•ÂÖ∑Ôºå‰∫∫‰ª¨ÈÄöËøá‰º†ÂëºÊú∫Êé•Êî∂ÁÆÄÁü≠ÁöÑ‰ø°ÊÅØÔºåÁÑ∂ÂêéÂØªÊâæÂõ∫ÂÆöÁîµËØùÂõûÁîµ„ÄÇ‰ΩÜÈöèÁùÄÊâãÊú∫ÁöÑËøÖÈÄüÂèëÂ±ïÔºå‰º†ÂëºÊú∫ÂæàÂø´Ë¢´Ê∑òÊ±∞ÔºåÂ¶Ç‰ªäÂ∑≤Âá†‰πé‰∏çËßÅÂÖ∂Ë∏™ÂΩ±„ÄÇÊàëÊõæÊúâÂπ∏Âú®ÊàëËàÖËàÖÂÆ∂Ê•º‰∏äÁøªÂá∫Ëøá‰∏Ä‰∏™ BP Êú∫ÔºåÂèØÊÉúÊ≤°ÊêûÊáÇÊÄé‰πàÁî®„ÄÇ ËΩØÁõòÔºåÂú®Êó©ÊúüËÆ°ÁÆóÊú∫Â≠òÂÇ®‰∏≠ÂèëÊå•ËøáÈáçË¶Å‰ΩúÁî®Ôºå‰ΩÜÂ≠òÂÇ®ÂÆπÈáèÂ∞èÔºå‰∏îÂÆπÊòìÊçüÂùè„ÄÇÈöèÁùÄ U Áõò„ÄÅÁßªÂä®Á°¨ÁõòÁ≠âÂ≠òÂÇ®ËÆæÂ§áÁöÑÂá∫Áé∞ÔºåËΩØÁõòËøÖÈÄüÈÄÄÂá∫ÂéÜÂè≤ËàûÂè∞„ÄÇËΩØÁõòÊàëÊòØÁúüÊ≤°ËßÅËøá„ÄÇ VCD Âíå DVD Êí≠ÊîæÂô®ÔºåÂÖâÁõòÔºöÂú®ËøáÂéªÔºå‰∫∫‰ª¨ÈÄöËøá VCD Âíå DVD Êí≠ÊîæÂô®ËßÇÁúãÁîµÂΩ±„ÄÅÁîµËßÜÂâßÁ≠âËßÜÈ¢ëÂÜÖÂÆπÔºåÂπ∂‰∏î‰ºöË¥≠‰π∞ÊàñÁßüËµÅÁõ∏Â∫îÁöÑÂÖâÁõò„ÄÇ‰ΩÜÁé∞Âú®ÔºåÂú®Á∫øËßÜÈ¢ëÂπ≥Âè∞ÁöÑÊôÆÂèäËÆ©‰∫∫‰ª¨ÂèØ‰ª•ÈÄöËøáÁΩëÁªúÁõ¥Êé•ËßÇÁúãÂêÑÁßçËßÜÈ¢ëËµÑÊ∫êÔºåÊó†ÈúÄ‰ΩøÁî®ÂÖâÁõòÂíåÊí≠ÊîæÂô®„ÄÇVCD Âíå DVD Êí≠ÊîæÂô®‰ª•ÂèäÂÖâÁõòÈÄêÊ∏êË¢´Ê∑òÊ±∞ÔºåÁõ∏ÂÖ≥ÁöÑÁîü‰∫ßÂéÇÂÆ∂‰πüÂ§ßÈáèÂáèÂ∞ë„ÄÇÂ∞èÁöÑÊó∂ÂÄôÂÄüËøá‰∏Ä‰∫õÂÖâÁõòÔºåÁúãÈ¨ºÁâáÔºåÂä®ÁîªÁâá„ÄÇ U ÁõòÔºöÂàö‰∏äÂ§ßÂ≠¶ÁöÑÊó∂ÂÄôÔºåËøòÊòØ‰∫∫Êâã‰∏Ä‰∏™ U ÁõòÔºåÂêéÊù•Â∞±Ê∏êÊ∏êÁöÑ‰∏çÁî®‰∫Ü„ÄÇ ÊâìÂ≠óÊú∫ÔºåÊõæÁªèÊòØÂäûÂÖ¨ÂÆ§ÁöÑÂøÖÂ§áËÆæÂ§áÔºåÁî®‰∫éÊí∞ÂÜôÊñáÊ°£Âíå‰ø°‰ª∂„ÄÇÈöèÁùÄÁîµËÑëÂíåÊâìÂç∞Êú∫ÁöÑÊôÆÂèäÔºåÊâìÂ≠óÊú∫ÁöÑ‰ΩøÁî®Ë∂äÊù•Ë∂äÂ∞ëÔºåÁé∞Âú®Êõ¥Â§öÂú∞Êàê‰∏∫‰∏ÄÁßçÂ§çÂè§ÁöÑÊî∂ËóèÂìÅ„ÄÇÊâìÂ≠óÊú∫Êàë‰πüÊòØÁúüÊ≤°ËßÅËøá„ÄÇ ÈªëÁôΩÁîµËßÜÊú∫ÔºåÂú®ÂΩ©Ëâ≤ÁîµËßÜÊú∫Âá∫Áé∞‰πãÂâçÔºåÈªëÁôΩÁîµËßÜÊú∫ÊòØ‰∫∫‰ª¨‰∫ÜËß£‰∏ñÁïåÁöÑÈáçË¶ÅÁ™óÂè£„ÄÇ‰ΩÜÈöèÁùÄÁßëÊäÄÁöÑËøõÊ≠•ÔºåÂΩ©Ëâ≤„ÄÅÈ´òÊ∏Ö„ÄÅÊô∫ËÉΩÁîµËßÜÁöÑÊôÆÂèäÔºåÈªëÁôΩÁîµËßÜÊú∫ÈÄêÊ∏êË¢´Ê∑òÊ±∞„ÄÇÈªëÁôΩÁîµËßÜÊú∫ÔºåÊ≤°Âï•Âç∞Ë±°ÔºåÂ•ΩÂÉèÊ≤°ËßÅËøá„ÄÇ ‰º†ÁªüËÉ∂ÁâáÁõ∏Êú∫ÂíåËÉ∂Âç∑ÔºåÂú®Êï∞Á†ÅÊëÑÂΩ±ÊäÄÊúØÂÖ¥Ëµ∑ÂâçÔºåËÉ∂ÁâáÁõ∏Êú∫ÊòØËÆ∞ÂΩïÂΩ±ÂÉèÁöÑ‰∏ªË¶ÅÂ∑•ÂÖ∑„ÄÇ‰ΩÜÈöèÁùÄÊï∞Á†ÅÁõ∏Êú∫„ÄÅÊâãÊú∫ÊãçÁÖßÂäüËÉΩÁöÑ‰∏çÊñ≠Âº∫Â§ßÔºåÂÖ∂‰æøÊç∑ÊÄß„ÄÅÊàêÂÉèÈÄüÂ∫¶‰ª•ÂèäÊàêÊú¨Á≠â‰ºòÂäøÔºå‰ΩøÂæó‰º†ÁªüËÉ∂ÁâáÁõ∏Êú∫ÂíåËÉ∂Âç∑ÁöÑ‰ΩøÁî®Ë∂äÊù•Ë∂äÂ∞ë„ÄÇÁé∞Âú®Âè™ÊúâÂ∞ëÊï∞ÊëÑÂΩ±Áà±Â•ΩËÄÖÊàñ‰∏ì‰∏ö‰∫∫Â£´Ëøò‰ºöÂú®ÁâπÂÆöÈ¢ÜÂüü‰ΩøÁî®ËÉ∂ÁâáÁõ∏Êú∫Ôºå‰ª•ËøΩÊ±ÇÁã¨ÁâπÁöÑÂ§çÂè§Ë¥®ÊÑüÂíåËâ∫ÊúØÊïàÊûú„ÄÇ Âõ∫ÂÆöÁîµËØùÔºöÊõæÁªèÊòØÂÆ∂Â∫≠ÂíåÂäûÂÖ¨Âú∫ÊâÄÁöÑÈáçË¶ÅÈÄöËÆØÂ∑•ÂÖ∑„ÄÇ‰ΩÜÈöèÁùÄÁßªÂä®ÁîµËØùÁöÑÊôÆÂèäÔºå‰∫∫‰ª¨ÂèØ‰ª•ÈöèÊó∂ÈöèÂú∞ËøõË°åÈÄöËØùÔºåÂõ∫ÂÆöÁîµËØùÁöÑÈáçË¶ÅÊÄßÈÄêÊ∏êÈôç‰Ωé„ÄÇÁé∞Âú®ÂæàÂ§öÂÆ∂Â∫≠Â∑≤‰∏çÂÜçÂÆâË£ÖÂõ∫ÂÆöÁîµËØùÔºå‰∏Ä‰∫õÂäûÂÖ¨Âú∫ÊâÄ‰πüÂáèÂ∞ë‰∫ÜÂõ∫ÂÆöÁîµËØùÁöÑÊï∞ÈáèÔºå‰ªÖ‰øùÁïôÈÉ®ÂàÜÁî®‰∫éÁâπÂÆö‰∏öÂä°ÊàñÂ∫îÊÄ•ËÅîÁªú„ÄÇ‰ª•ÂâçÂÆ∂ÈáåÊúâËøáÂõ∫ÂÆöÁîµËØùÔºåÊàë‰πüÁî®Ëøá„ÄÇ ÂÖ¨ÂÖ±ÁîµËØù‰∫≠ÔºöÊõæÁªèÂú®Ë°óÈÅì„ÄÅËΩ¶Á´ô„ÄÅÂïÜÂú∫Á≠âÂÖ¨ÂÖ±Âú∫ÊâÄÂπøÊ≥õÂàÜÂ∏ÉÔºå‰∏∫‰∫∫‰ª¨Êèê‰æõÁ¥ßÊÄ•ÈÄöËÆØÊàñ‰∏¥Êó∂ÈÄöËÆØÁöÑ‰æøÂà©„ÄÇ‰ΩÜÈöèÁùÄÊâãÊú∫ÁöÑÊôÆÂèäÔºå‰∫∫‰ª¨Âá†‰πéÂèØ‰ª•ÈöèÊó∂ÈöèÂú∞ËøõË°åÈÄöËØùÔºåÂÖ¨ÂÖ±ÁîµËØù‰∫≠ÁöÑ‰ΩøÁî®ÈúÄÊ±ÇÊÄ•ÂâßÂáèÂ∞ë„ÄÇËÆ∏Â§öÂÖ¨ÂÖ±ÁîµËØù‰∫≠ÈÅ≠Âà∞ÊçüÂùèÊàñÂ∫üÂºÉÔºåÈÉ®ÂàÜÂú∞Âå∫ÂºÄÂßãÊãÜÈô§ÊàñÊîπÈÄ†Ëøô‰∫õÁîµËØù‰∫≠„ÄÇ Êä•Á∫∏ÂíåÊùÇÂøóÔºöËøáÂéªÊòØ‰∫∫‰ª¨Ëé∑ÂèñÊñ∞Èóª„ÄÅËµÑËÆØÂíåÂ®±‰πêÂÜÖÂÆπÁöÑ‰∏ªË¶ÅÊ∏†ÈÅì‰πã‰∏Ä„ÄÇÁÑ∂ËÄåÔºåÈöèÁùÄ‰∫íËÅîÁΩëÁöÑÂèëÂ±ïÔºå‰∫∫‰ª¨Ë∂äÊù•Ë∂äÂÄæÂêë‰∫éÈÄöËøáÁîµÂ≠êËÆæÂ§áÂú®Á∫øËé∑Âèñ‰ø°ÊÅØÔºåÊñ∞ÈóªÁΩëÁ´ô„ÄÅÁîµÂ≠êÊùÇÂøó„ÄÅÁ§æ‰∫§Â™í‰ΩìÁ≠âÊèê‰æõ‰∫ÜÊõ¥ÂèäÊó∂„ÄÅ‰∏∞ÂØå‰∏î‰æøÊç∑ÁöÑÂÜÖÂÆπ„ÄÇÊä•Á∫∏ÂíåÊùÇÂøóÁöÑÂèëË°åÈáè‰∏çÊñ≠‰∏ãÈôçÔºåËÆ∏Â§ö‰º†ÁªüÁöÑÊä•ÂàäÂ™í‰ΩìÈù¢‰∏¥ÁªèËê•Âõ∞ÈöæÔºåÈÉ®ÂàÜÁîöËá≥ÂÅúÊ≠¢ÂèëË°å„ÄÇÂ∞èÁöÑÊó∂ÂÄôÊúÄÂñúÊ¨¢ÁúãÊùÇÂøóÔºåÊØîÂ¶ÇÔºöÊÑèÊûóÔºåËØªËÄÖÔºåÈùíÂπ¥ÊñáÊëòÔºåÊïÖ‰∫ã‰ºöÔºåÁßëÂπª‰∏ñÁïå„ÄÇ ÈóπÈíüÔºà‰º†ÁªüÊú∫Ê¢∞ÂºèÔºâÔºö‰ª•ÂâçÔºå‰º†ÁªüÁöÑÊú∫Ê¢∞ÂºèÈóπÈíüÊòØ‰∫∫‰ª¨Ëµ∑Â∫äÂíåÂÆâÊéíÊó∂Èó¥ÁöÑÈáçË¶ÅÂ∑•ÂÖ∑„ÄÇËÄåÂ¶Ç‰ªäÔºåÊô∫ËÉΩÊâãÊú∫ÂÖ∑Â§á‰∫ÜÈóπÈíüÂäüËÉΩÔºå‰∏îÊõ¥Âä†Êô∫ËÉΩ„ÄÅÊñπ‰æøÔºåÂèØ‰ª•ËÆæÁΩÆÂ§ö‰∏™ÈóπÈíü„ÄÅÈÄâÊã©‰∏çÂêåÁöÑÈìÉÂ£∞ÔºåËøòËÉΩ‰∏éÊó•Á®ãÂÆâÊéíÁ≠âÂÖ∂‰ªñÂäüËÉΩÁõ∏ÁªìÂêà„ÄÇÂõ†Ê≠§Ôºå‰º†ÁªüÊú∫Ê¢∞ÂºèÈóπÈíüÁöÑ‰ΩøÁî®Âú∫ÊôØÂ§ßÂπÖÂáèÂ∞ëÔºåÂ∏ÇÂú∫ÈúÄÊ±Ç‰πüÈÄêÊ∏êËêéÁº©„ÄÇÊú∫Ê¢∞ÂºèÁöÑÈóπÈíüÊàëÊòØÁúüÊ≤°Áî®ËøáÔºåÁîµÂ≠êÁöÑÁî®Ëøá„ÄÇ Áé∞ÈáëÔºöÈöèÁùÄÁîµÂ≠êÊîØ‰ªòÁöÑÂπøÊ≥õÂ∫îÁî®ÔºåÂ¶ÇÁßªÂä®ÊîØ‰ªòÔºàÂæÆ‰ø°ÊîØ‰ªò„ÄÅÊîØ‰ªòÂÆùÁ≠âÔºâ„ÄÅÈì∂Ë°åÂç°ÊîØ‰ªòÁ≠âÔºå‰∫∫‰ª¨Âú®Êó•Â∏∏ÁîüÊ¥ª‰∏≠ÁöÑÁé∞Èáë‰ΩøÁî®È¢ëÁéáË∂äÊù•Ë∂ä‰Ωé„ÄÇË¥≠Áâ©„ÄÅÈ§êÈ•Æ„ÄÅ‰∫§ÈÄöÁ≠âËÆ∏Â§öÂú∫ÊôØÈÉΩÊîØÊåÅÁîµÂ≠êÊîØ‰ªòÔºå‰∫∫‰ª¨Âè™ÈúÄÊê∫Â∏¶ÊâãÊú∫ÊàñÈì∂Ë°åÂç°Âç≥ÂèØÂÆåÊàê‰∫§Êòì„ÄÇÁé∞Èáë‰∫§Êòì‰∏ç‰ªÖÂ≠òÂú®ÊâæÈõ∂‰∏ç‰æø„ÄÅÂÆπÊòì‰∏¢Â§±Á≠âÈóÆÈ¢òÔºåËÄå‰∏îÂú®ÊîØ‰ªòÊïàÁéá‰∏ä‰πü‰Ωé‰∫éÁîµÂ≠êÊîØ‰ªò„ÄÇÂõ†Ê≠§ÔºåÁé∞ÈáëÂú®ÊµÅÈÄö‰∏≠ÁöÑ‰ΩúÁî®ÈÄêÊ∏êÂáèÂº±ÔºåÊú™Êù•ÂèØËÉΩ‰ºöËøõ‰∏ÄÊ≠•ÂáèÂ∞ë„ÄÇÁé∞Âú®Âá∫Èó®ÈÉΩÊòØÊâãÊú∫ÊîØ‰ªòÔºåÂÖúÈáåÊ†πÊú¨Ê≤°Êúâ‰∏ÄÂàÜÈí±‰∫Ü„ÄÇ Á∫∏Ë¥®Âú∞ÂõæÔºöÂú®ÂØºËà™Â∫îÁî®ÂíåÁîµÂ≠êÂú∞ÂõæÂá∫Áé∞‰πãÂâçÔºåÁ∫∏Ë¥®Âú∞ÂõæÊòØ‰∫∫‰ª¨Âá∫Ë°åÊó∂ÂøÖ‰∏çÂèØÂ∞ëÁöÑÂ∑•ÂÖ∑„ÄÇ‰ΩÜÁé∞Âú®ÔºåÊô∫ËÉΩÊâãÊú∫‰∏äÁöÑÂêÑÁßçÂØºËà™ËΩØ‰ª∂Êèê‰æõ‰∫ÜÂÆûÊó∂ÂÆö‰Ωç„ÄÅË∑ØÁ∫øËßÑÂàí„ÄÅ‰∫§ÈÄöÁä∂ÂÜµÊü•ËØ¢Á≠âÂäüËÉΩÔºåÊØîÁ∫∏Ë¥®Âú∞ÂõæÊõ¥Âä†ÂáÜÁ°Æ„ÄÅ‰æøÊç∑ÂíåÂÆûÁî®„ÄÇÁ∫∏Ë¥®Âú∞ÂõæÁöÑÁîü‰∫ßÂíåÈîÄÂîÆÊï∞ÈáèÂ§ßÂπÖ‰∏ãÈôçÔºå‰ªÖÂú®‰∏Ä‰∫õÁâπÂÆöÂú∫ÂêàÊàñ‰Ωú‰∏∫Êî∂ËóèÁ∫™ÂøµÂìÅÂ≠òÂú®„ÄÇ‰ª•ÂâçÂÆ∂ÈáåÂøÖÊåÇ‰∏§Âº†Âú∞ÂõæÔºå‰∏ÄÂº†‰∏ñÁïåÂú∞ÂõæÔºå‰∏ÄÂº†‰∏≠ÂõΩÂú∞Âõæ„ÄÇ ÁîµÊ¢ØÊìç‰ΩúÂëò ÁîµËØùÊé•Á∫øÂëò Êñ∞‰∫ãÁâ© ÂÖ±‰∫´ÂçïËΩ¶ÔºåÂÖ±‰∫´ÂÖÖÁîµÂÆùÔºöÂÆûÈôÖ‰∏äÊòØÁßüËµÅÔºå‰∏çÊòØÁæ§‰ºóÁöÑÁâ©ËµÑÔºå‰πüÈÖçÂè´ÂÖ±‰∫´ÂêóÔºü‰ªéÊúÄÂºÄÂßãÁöÑÁÉßÈí±Êä¢Âç†Â∏ÇÂú∫ÔºåÂà∞ÊúÄÂêéÁöÑËé∑ÂæóÂÆö‰ª∑ÊùÉÂêéÔºåÁñØÁãÇÊèê‰ª∑„ÄÇÊàëÁé∞Âú®ÈÉΩ‰∏çÁî®ÂÖ±‰∫´ÂçïËΩ¶ÂíåÂÖÖÁîµÂÆùÔºåÈô§ÈùûÈÄº‰∏çÂæóÂ∑≤ÔºåÂõ†‰∏∫ÁúüÁöÑË¥µÂæóÁ¶ªË∞±„ÄÇ Â§ñÂçñÔºöÂ§ñÂçñ‰πüÊòØ‰∏ÄÊ†∑‰ªéÊúÄÂºÄÂßãÁöÑÁÉßÈí±Êä¢Âç†Â∏ÇÂú∫ÔºåÂà∞ÊúÄÂêéÁöÑËé∑ÂæóÂÆö‰ª∑ÊùÉÂêéÔºåÁñØÁãÇÊèê‰ª∑„ÄÇ Êô∫ËÉΩÁ©øÊà¥ËÆæÂ§áÔºöÂ¶ÇÊô∫ËÉΩÊâãË°®„ÄÅÊô∫ËÉΩÊâãÁéØÁ≠â„ÄÇÂèØ‰ª•ÁõëÊµãÂÅ•Â∫∑Êï∞ÊçÆ„ÄÅÊé•Êî∂ÈÄöÁü•„ÄÅËøõË°åËøêÂä®ËøΩË∏™Á≠âÔºå‰∏∫‰∫∫‰ª¨ÁöÑÁîüÊ¥ªÂ∏¶Êù•ÊûÅÂ§ßÁöÑ‰æøÂà©„ÄÇÂÆÉÂ∞ÜÁßëÊäÄ‰∏éÊó•Â∏∏ÁîüÊ¥ªÁ¥ßÂØÜÁªìÂêàÔºåËÆ©‰∫∫‰ª¨Êõ¥Âä†ÂÖ≥Ê≥®Ëá™Ë∫´ÂÅ•Â∫∑ÂíåÁîüÊ¥ªÂìÅË¥®„ÄÇÊàëÁé∞Âú®Êà¥Âçé‰∏∫ watch4proÔºå‰∏ªË¶ÅÁî®ÈÄîÔºö1. ÁúãÊó∂Èó¥Ôºå2. Âà∑Âú∞ÈìÅÔºå3. ÊîØ‰ªòÔºå4. ÁúãÂ§©Ê∞îÔºå5. ÂÄíËÆ°Êó∂Ôºå6. ÂæÆ‰ø°Ê∂àÊÅØÊèêÈÜí ËôöÊãüÁé∞ÂÆûÔºàVRÔºâÂíåÂ¢ûÂº∫Áé∞ÂÆûÔºàARÔºâÊäÄÊúØÔºö‰∏∫Â®±‰πê„ÄÅÊïôËÇ≤„ÄÅÂåªÁñóÁ≠âÈ¢ÜÂüüÂ∏¶Êù•ÂÖ®Êñ∞ÁöÑ‰ΩìÈ™å„ÄÇÂú®Ê∏∏Êàè‰∏≠ÔºåÁé©ÂÆ∂ÂèØ‰ª•Ê≤âÊµ∏Âú®ËôöÊãü‰∏ñÁïå‰∏≠ÔºõÂú®ÊïôËÇ≤È¢ÜÂüüÔºåÂ≠¶ÁîüÂèØ‰ª•ÈÄöËøáËôöÊãüÁé∞ÂÆûÊäÄÊúØËøõË°åÁîüÂä®ÁöÑÂ≠¶‰π†ÔºõÂú®ÂåªÁñóÊñπÈù¢ÔºåÂåªÁîüÂèØ‰ª•Âà©Áî®Â¢ûÂº∫Áé∞ÂÆûÊäÄÊúØËøõË°åÊâãÊúØËæÖÂä©„ÄÇÁé©Ëøá‰∏Ä‰∫õËôöÊãüÁé∞ÂÆûÁöÑÊ∏∏ÊàèÔºåÂ∞±ÊòØÊà¥‰∏™Â§¥ÁõîÔºåÁÑ∂ÂêéÂùêÂú®‰∏Ä‰∏™ÊëáÊëáËΩ¶‰∏äÔºå‰ΩìÈ™åÁüøËΩ¶‰∏äÊâìÂÉµÂ∞∏„ÄÇ ‰∫∫Â∑•Êô∫ËÉΩÂä©ÊâãÔºöÂÉè Siri„ÄÅÂ∞èÁà±ÂêåÂ≠¶Á≠âÔºåÂèØ‰ª•ÈÄöËøáËØ≠Èü≥Êåá‰ª§ÂÆåÊàêÂêÑÁßç‰ªªÂä°ÔºåÂ¶ÇÊü•ËØ¢‰ø°ÊÅØ„ÄÅÊí≠ÊîæÈü≥‰πê„ÄÅËÆæÁΩÆÊèêÈÜíÁ≠â„ÄÇÂÆÉ‰ª¨ÊûÅÂ§ßÂú∞ÊèêÈ´ò‰∫Ü‰∫∫‰ª¨ÁöÑÁîüÊ¥ªÊïàÁéáÔºåËÆ©‰∫∫‰ª¨‰∏éÁßëÊäÄÁöÑ‰∫§‰∫íÊõ¥Âä†Ëá™ÁÑ∂Âíå‰æøÊç∑„ÄÇÁõÆÂâçÂú®Áî® chatgpt ÂíåË±ÜÂåÖ„ÄÇ Êñ∞ËÉΩÊ∫êÊ±ΩËΩ¶ÔºöÈöèÁùÄÁéØ‰øùÊÑèËØÜÁöÑÊèêÈ´òÂíåÊäÄÊúØÁöÑÂèëÂ±ïÔºåÊñ∞ËÉΩÊ∫êÊ±ΩËΩ¶ÈÄêÊ∏êÊàê‰∏∫‰∏ªÊµÅ„ÄÇÁõ∏ÊØî‰º†ÁªüÁáÉÊ≤πÊ±ΩËΩ¶ÔºåÊñ∞ËÉΩÊ∫êÊ±ΩËΩ¶Êõ¥Âä†ÁéØ‰øù„ÄÅËäÇËÉΩÔºåÂπ∂‰∏îÂú®ÊÄßËÉΩÂíåÊô∫ËÉΩÂåñÊñπÈù¢‰πü‰∏çÊñ≠ÊèêÂçá„ÄÇ Áõ¥Êí≠ÂíåÁü≠ËßÜÈ¢ëÂπ≥Âè∞Ôºö‰∏∫‰∫∫‰ª¨Êèê‰æõ‰∫ÜÂ±ïÁ§∫Ëá™Êàë„ÄÅÂàÜ‰∫´ÁîüÊ¥ªÁöÑÊñ∞Ê∏†ÈÅì„ÄÇÊó†ËÆ∫ÊòØÊôÆÈÄö‰∫∫ËøòÊòØ‰∏ì‰∏öÂàõ‰ΩúËÄÖÔºåÈÉΩÂèØ‰ª•ÈÄöËøáÁõ¥Êí≠ÂíåÁü≠ËßÜÈ¢ëÂπ≥Âè∞Ëé∑ÂæóÂÖ≥Ê≥®ÂíåÊî∂Áõä„ÄÇÂêåÊó∂Ôºå‰πü‰∏∫‰ºÅ‰∏öÊèê‰æõ‰∫ÜÊñ∞ÁöÑËê•ÈîÄÊñπÂºè„ÄÇ Ëá™Âä®È©æÈ©∂ÔºöÁôæÂ∫¶Êóó‰∏ãÁöÑËêùÂçúÂø´Ë∑ëÂá∫ÁßüËΩ¶Ê≠£Âú®ÂÖ®ÂõΩÈì∫ÂºÄ„ÄÇÂÖ∂ÂÆûËá™Âä®È©æÈ©∂ÁöÑÊäÄÊúØÂ∑≤ÁªèÊàêÁÜüÔºåÂè™ÊòØÁõ∏Â∫îÁöÑÊ≥ïÂæãÊ≥ïËßÑÊ≤°ÊúâÊàêÁÜüÔºåÊúÄÈáçË¶ÅÁöÑ‰∏ÄÊù°ÊòØÔºåÂ¶ÇÊûúÊòØËá™Âä®È©æÈ©∂Ê±ΩËΩ¶Âá∫‰∫ÜËΩ¶Á•∏ÔºåË¥üË¥£‰ªªÁöÑÂ∫îËØ•ÊòØÊ±ΩËΩ¶ÂéÇÂïÜÔºå‰ΩÜÂè¶‰∏Ä‰∏™ÈóÆÈ¢òÈöè‰πãËÄåÊù•ÔºåÊÄé‰πàËØÅÊòéÂá∫‰∫ãÁöÑÊó∂ÂÄôÊòØËΩ¶Ëá™Â∑±ÂºÄÁöÑÔºåËÄå‰∏çÊòØ‰∫∫ÂºÄÁöÑ„ÄÇËá™Âä®È©æÈ©∂‰∏ÄÊó¶ÊôÆÂèäÔºåÂè∏Êú∫‰πü‰ºöË∑üÁîµÊ¢ØÊìç‰ΩúÂëòÂíåÁîµËØùÊé•Á∫øÂëò‰∏ÄÊ†∑Êàê‰∏∫ÂéÜÂè≤‰∏≠Ê∂àÂ§±ÁöÑËÅå‰∏ö‰∫Ü„ÄÇ 2024-08-28 Open Source Intelligence TechniquesÔºöÂÖ®‰π¶ÈÉΩÊòØÂú®Êïô‰Ω†Â¶Ç‰ΩïÂú®ÁΩë‰∏äÊêúÁ¥¢ÂÆö‰ΩçÂÖ¨ÂºÄ‰ø°ÊÅØÔºà‰∏•Ê†ºÊù•ËØ¥ÔºåÊàëËßâÂæóÂ∫îËØ•ÁÆóÂçäÂÖ¨ÂºÄ‰ø°ÊÅØÔºâ„ÄÇ‰ΩúËÄÖÊòØ‰∏Ä‰ΩçÂèóÈõá‰∫éÁæéÂõΩÊîøÂ∫úÁöÑÁîµËÑëÁäØÁΩ™Ë∞ÉÊü•Âëò„ÄÇ Âàõ‰∏öÂÖ≥‰∫éËµÑ‰∫ßÊàëÁöÑÁúãÊ≥ïÂæàÁÆÄÂçïÔºåÊâæÂà∞ÈÇ£‰∫õÂºÄ‰∫ÜÂæà‰πÖÁöÑÁ∫ø‰∏ãÈ§êÈ¶ÜÔºåÂ¶ÇÊûúÊòØËÄÅÊùøËá™Â∑±‰∏çÊù•ÔºåÈõá‰∫Ü‰∫∫ÊâìÂ∑•ÁöÑÈ§êÈ¶ÜÔºåÊâæ‰∏™ÂêàÁêÜÁöÑ‰ª∑Ê†ºÁõò‰∏ãÊù•ÔºåÈÇ£Â∞±ÊòØÂ¶•Â¶•ÁöÑËµÑ‰∫ßÔºåÁé∞ÈáëÊµÅ„ÄÇÁîöËá≥ÈÉΩ‰∏çÁî®Ëá™Â∑±Ë¥πÂä≤ÁöÑÁªèËê•ÔºåÁõ¥Êé•ÂéüÁè≠‰∫∫È©¨ÁªßÁª≠ÊêûÂ∞±Ë°å„ÄÇÂì™ÁÆ°‰∏äÈù¢ËÄÅÊùøÊòØË∞ÅÂë¢ ‰πüÂèØ‰ª•ÂàÜÊûêÂà´‰∫∫ÁöÑÁªèËê•‰∏çÂñÑÁöÑÈóÆÈ¢òÔºåÁõò‰∏ã‰∏çËâØËµÑ‰∫ßÔºåÁõòÊ¥ªÂÆÉ„ÄÇ ‰ΩÜÂ¶ÇÊûúÊòØËá™Â∑±ÂàõÂª∫‰∏Ä‰∏™ÔºåÂ∞±ÈúÄË¶ÅÂèëÁé∞Â∏ÇÂú∫ÁöÑÈúÄÊ±ÇÂíåÁ©∫Áº∫„ÄÇ ÊàëÁöÑÂàõ‰∏öÊÉ≥Ê≥ïÂàóË°®Ôºö Âπ¥ËΩª‰∫∫ÁöÑÂïÜ‰∏öÁßòÁ±ç„ÄÇ‰∏Ä‰∏™ÂïÜ‰∏öÊï∞ÊçÆÁΩëÁ´ôÔºåÊî∂ÂΩïÂΩì‰∏ãÊâÄÊúâÂ∏∏ËßÅÂïÜÂìÅÁöÑ‰ª∑Ê†ºÔºàÂåÖÊã¨ÂéüÊùêÊñôÔºâÔºåÊî∂ÂΩïÂêÑË°åÂêÑ‰∏öÁöÑÂêØÂä®ËµÑÈáëÔºåÂàõ‰∏öÊàêÊú¨ÔºàÂõ∫ÂÆöÊàêÊú¨ÔºåÊåâ‰ª∂ÊàêÊú¨ÔºâÔºåÊî∂ÁõäÔºåÂõûÊú¨Âë®ÊúüÔºåÊ†áËÆ∞Âì™‰∫õÊòØËìùÊµ∑ÔºåÂì™‰∫õÊòØÁ∫¢Êµ∑ÔºàÁõ∏ÂØπÊù•ËØ¥Ôºâ„ÄÇÁõ∏ÂΩì‰∫éÁªôÁé∞ÂÆû‰∏ñÁïåÂä†‰∏ä‰∏Ä‰∏™Âçñ‰ªÄ‰πàÁöÑÊîªÁï•ÔºåÁé©ËøáÊòüÈú≤Ë∞∑Áâ©ËØ≠ÊàñËÄÖÊ®°ÊãüÂüéÂ∏ÇÊàëÊòØÂ∏ÇÈïøËøôÁ±ªÁªèËê•Á±ªÊ∏∏ÊàèÁöÑÊúãÂèãÈÉΩÂ∫îËØ•Áü•ÈÅì„ÄÇÈÄâÂà©Ê∂¶È´òÁöÑÁîüÊÑèÂÅöÈùûÂ∏∏ÈáçË¶Å„ÄÇ‰ΩÜÊòØÂïÜ‰∏öÁöÑÊú¨Ë¥®Â∞±ÊòØ‰ø°ÊÅØÂ∑ÆÂíåËµÑÊ∫êÂ∑ÆÂèòÁé∞„ÄÇÊÑüËßâËøôÁ±ª‰ø°ÊÅØÊú¨Ë∫´ÊòØ‰∏çÂ•ΩÊî∂ÈõÜÁöÑÔºåÂõ†‰∏∫ÊàëÊÑüËßâ‰ªñ‰ª¨ÂæàÂÄºÈí±„ÄÇ ‰ΩúÂìÅÁâàÊùÉËØÅÂà∏ÂåñÔºöÁÆÄÂçïÊù•ËÆ≤ÔºåÁõÆÂâçÁöÑÁΩëÊòì‰∫ëÈü≥‰πêËøôÁ±ªÂπ≥Âè∞ÂÖ∂ÂÆûÊòØ‰ø°ÊÅØÁ±ª‰∫ßÂìÅÔºàÈü≥‰πêÔºâÁöÑÁßüËµÅÂπ≥Âè∞„ÄÇÁõÆÂâçÂ∏ÇÂú∫Áº∫‰πèË¥≠‰π∞Âπ≥Âè∞„ÄÇ‰ΩúÂìÅÁâàÊùÉËØÅÂà∏ÂåñÂèØ‰ª•ÂÆûÁé∞Ëøô‰∏™ÁõÆÊ†á„ÄÇ Âú®Â°òÊúóÂ±±‰∏äÁúãÂà∞Êúâ‰∫∫ÂçñÁüøÊ≥âÊ∞¥ÔºàÊó†‰∫∫ÂÄºÂÆàÁöÑÔºâÔºåÂÖ®Èù†Ëá™ËßâÔºå‰∏çÊ∏ÖÊ•öËÉΩ‰∏çËÉΩËµöÈí±Ôºå‰ΩÜÊÄªÁöÑÊù•ËØ¥ÂõΩÊ∞ëÁ¥†Ë¥®Âú®ÊèêÈ´òÔºåÊØîÂ¶ÇÈªëÁ•ûËØùÊÇüÁ©∫Âú®‰ª•Ââç‰∏ÄÂÆö‰ºöË¢´ÁõóÁâàÂáªÂûÆÔºå‰ΩÜÁé∞Âú®Âç¥ËÉΩÂ§ßËµö„ÄÇËØ¥ÊòéÂõΩÊ∞ëÁöÑÊ∂àË¥πÁ¥†Ë¥®Ê∂àË¥πÊÑèËØÜËµ∑Êù•‰∫Ü„ÄÇ Âú®Ëé≤Ëä±Â±±‰∏äÁöÑËá™Âä®ÂîÆÂçñÊú∫ÔºåÂÆ¢ÊµÅÈáèÂíåÈîÄÂîÆÈáèÈÉΩËøò‰∏çÈîôÔºå‰∏çËøá‰∏çÊ∏ÖÊ•öÊàêÊú¨ÔºåËµö‰∏çËµöÈí±Â≠òÁñë„ÄÇ ÊàëÊúâÊúãÂèãÂú®ÂçñÂ£ÆÈò≥ËçØÔºåÁî®Áü≠‰ø°ÈîÄÂîÆÂíåÈ°∫‰∏∞ÈÄüÈÄíË¥ßÂà∞‰ªòÊ¨æÁöÑÊñπÂºè„ÄÇËµö‰∫ÜËõÆÂ§öÈí±ÁöÑÔºåËøôÊòØ‰∏Ä‰∏™ËµöÈí±ÁöÑÂÆû‰æãÔºåÂèØÊÉúÂØπÊñπ‰∏çÊÑøÊÑèË∑üÊàëÂàÜ‰∫´„ÄÇ Âè¶‰∏Ä‰∏™ÊúãÂèãÂú®ÊêûÁîµÂïÜÔºåÁü≠‰ø°ÈîÄÂîÆ+ÁßØÂàÜ‰ª£ÈáëÁöÑÂΩ¢Âºè„ÄÇËøô‰πüÊòØ‰∏Ä‰∏™ËµöÈí±ÁöÑÂÆû‰æãÔºåÈÉΩÈõá‰∫Ü‰∏Ä‰∏™Â∞èÂûãÂõ¢Èòü‰∫Ü„ÄÇËÄå‰∏îÊêû‰∫ÜÂ•ΩÂá†Âπ¥ÁöÑËøô‰∏™‰∫Ü„ÄÇ 2024-08-26 Putting the ‚ÄúYou‚Äù in CPUÔºåËÆ≤Ëß£ CPU Â∑•‰ΩúÂéüÁêÜÁöÑ Fake InsectsÔºå‰∏Ä‰∏™Â∞èÊ∏∏ÊàèÔºå‰∏§Âº†ÁÖßÁâá‰∏≠ÔºåÂà§Êñ≠Âì™Âº†ÊòØ AI ÁîüÊàêÁöÑÊòÜËô´ Introduction to Bash ScriptingÔºåbash ËÑöÊú¨ÁºñÁ®ã Fighting Through Mental Struggles: Incredible Renderings Created with Only a PencilÔºåÁî®ÈìÖÁ¨îÁîªÈáëÂ±ûÂÖâÊ≥Ω Hugging FaceÁ§æÂå∫ÊúâÁÇπÊÑèÊÄùÔºåAI Áà±Â•ΩËÄÖÁöÑÁ§æÂå∫core77ÔºåÂ∑•‰∏öËÆæËÆ°Áà±Â•ΩËÄÖÁΩëÁ´ô 2024-08-18Êàë‰∏ÄÁõ¥ÊúâÁúãÊñóÁ†¥ËãçÁ©πÂíåÊñóÁΩóÂ§ßÈôÜÁöÑ‰π†ÊÉØÔºåÊØèÂë®ÂÖ≠ÈÉΩ‰ºöÊî∂Áúã„ÄÇ‰ΩÜÊòØÂèà‰∏çÊÉ≥ÂÖÖËÖæËÆØËßÜÈ¢ëÁöÑ‰ºöÂëòÔºåÊçÆËØ¥Áé∞Âú®Â•ΩÂÉèÊúâ‰ºöÂëò‰πüÁúã‰∏ç‰∫ÜÊúÄÊñ∞‰∏ÄÈõÜÔºåË¶Å‰ªòË¥πÊâçË°åÔºåÁúüÊòØË∂äÊù•Ë∂äÁãó‰∫Ü„ÄÇÂàöÂàöÂéªÁúã‰∫Ü‰∏Ä‰∏ãÔºåÊòØÊñóÁ†¥ËãçÁ©πÂπ¥Áï™ÂøÖÈ°ªË¶Å SVIP ÊâçËÉΩÁúãÔºåVIP Áúã‰∏ç‰∫ÜÊúÄÊñ∞‰∏ÄÈõÜ„ÄÇÊàë‰∏ÄÁõ¥ËßâÂæóËøôÁßçÁßüËµÅÁöÑÊ®°ÂºèÊåÅÁª≠‰∏ç‰∫ÜÂ§™Â§öÂπ¥‰∫ÜÔºåÂπ≥Âè∞‰πüÊçû‰∏çÂà∞Â•ΩÔºåÁî®Êà∑‰πüÊçû‰∏çÂà∞Â•ΩÔºàÈÇ£‰πàË∞ÅÊçûÂà∞Â•ΩÔºüÊàëËßâÂæóÂ∫îËØ•ÊòØÈÇ£‰∫õÁÉÇ‰ΩúÂìÅÊçûÂà∞‰∫ÜÂ•ΩÔºâ„ÄÇË®ÄÂΩíÊ≠£‰º†Ôºå‰ªäÂ§©ÊàëÊÉ≥ÂàÜ‰∫´ÁöÑÊòØÂ¶Ç‰ΩïÂÖçË¥πÁúãËßÜÈ¢ëÔºåÊàëÈÄöÂ∏∏ÊòØËøôÂá†‰∏™Âú∞ÊñπÔºö ÊäñÈü≥ÔºåÊüê‰∫õ‰∏™‰∫∫Ë¥¶Âè∑ÂàÜ‰∫´ÁöÑÔºå‰∏Ä‰∏çÊòØÂæàÊ∏ÖÊô∞Ôºå‰∫åÁîöËá≥ÊòØÂØπÁùÄÊâãÊú∫ÊãçÁöÑÔºåÁîªÈù¢ÂæàÂ∞è„ÄÇÂè¶Â§ñÂ∞±ÊòØÊó∂ÊïàÊÄßÔºå‰ºöÂú®ÊØîËæÉÁü≠ÁöÑÊó∂Èó¥ÂÜÖ‰∏ãÊû∂Ôºà‰∏∫‰∫ÜÈÅøÂÖçÂêÉÂÆòÂè∏Ôºâ Âä™Âä™ËßÜÈ¢ëÔºåËÆ∏Â§öÈìæË∑Ø‰ºöÂ§±ÊïàÔºåÁÑ∂ÂêéÈÄüÂ∫¶‰∏çÊòØÂæàÂø´ÔºåÂæàÂÆπÊòìÂç°ÔºåÂç°Âæó‰∫∫Ê≤°ÂøÉÊÉÖÁúã‰∫ÜÈÉΩ„ÄÇ‰ºòÁÇπÊòØÊâÄÊúâËßÜÈ¢ëÂÖçË¥π ËâæÊó¶ËßÜÈ¢ëÔºåÈÉ®ÂàÜÂÜÖÂÆπÊòØË¶Å‰ªòË¥πÁöÑÔºàË≤å‰ººÂ∞èÈªÑÁâáÊâçÈúÄË¶Å‰ªòË¥πÔºâÔºå‰ΩÜËßÜÈ¢ëËµÑÊ∫êÊûÅÂÖ∂‰∏∞ÂØå„ÄÇÁº∫ÁÇπ‰πüÊòØÂú®Á∫øÁúãÊúâÁÇπÂç°Ôºå‰ΩÜÊîØÊåÅ‰∏ãËΩΩÔºå‰∏ãËΩΩÁúã‰ΩìÈ™å‰∏çÈîô„ÄÇ ÈáèÂ≠êËµÑÊ∫êÁΩëÔºåÂÜÖÂÆπ‰πüÊòØÁõ∏ÂΩì‰∏∞ÂØåÔºåËÄå‰∏îÊí≠ÊîæÈùûÂ∏∏ÊµÅÁïÖÔºåÂº∫ÁÉàÊé®Ëçê„ÄÇ ÂõßÊ¨°ÂÖÉ appÔºåÁúãÂä®Êº´‰∏ìÁî®ÔºåÂèØ‰ª•ÁúãËìùÂÖâË¥®ÈáèÁöÑËßÜÈ¢ëÔºåÁº∫ÁÇπÊòØÊúâÂπøÂëä„ÄÇ ÁîµÊä•ÊûÅÊêúÊêúÁ¥¢ÂºïÊìéÔºåÊµ∑ÈáèËµÑÊ∫ê ‰ΩÜÊàë‰ªäÂ§©ÂèëÁé∞ IINA Â±ÖÁÑ∂ÂèØ‰ª•Áõ¥Êé•Áî®ÊâìÂºÄ URL ÁöÑÊñπÂºèÁúãËâæÊó¶ËßÜÈ¢ëÁöÑ‰∏ãËΩΩÈìæÊé•ÔºåÁúüÁöÑÊòØÈùûÂ∏∏‰∏çÈîôÁöÑ‰ΩìÈ™å„ÄÇÔºàÂéüÂõ†ÊâæÂà∞‰∫ÜÔºåËâæÊó¶ËßÜÈ¢ëÂíåÈáèÂ≠êËµÑÊ∫êÁöÑÊñóÁ†¥ËãçÁ©π 108 ÈõÜÈÉΩÊòØÂêå‰∏Ä‰∏™ÈìæÊé•ÔºåÊòØ‰∏Ä‰∏™ mp4 ËµÑÊ∫êÔºåÊâÄ‰ª•ÊâçÂèØ‰ª•Áõ¥Êé•Áî® IINA ÊâìÂºÄÔºâ IINAÊòØ mac os ‰∏äÁã¨ÊúâÁöÑËßÜÈ¢ëÊí≠ÊîæÂô®ÔºåÈùûÂ∏∏Ê£íÁöÑÊí≠ÊîæÂô® 2024-08-13chrome Á¶ªÁ∫ø‰∏ãËΩΩÂ∑•Ê¨≤ÂñÑÂÖ∂‰∫ãÂøÖÂÖàÂà©ÂÖ∂Âô®ÔºåÊúÄËøëÂÖ¨Âè∏È°πÁõÆÂºÄÂèë‰∏äÔºåchrome ÊµèËßàÂô®ÔºàÁâàÊú¨Ôºö127.0.6533.100ÔºâÁöÑ devtool ÁªèÂ∏∏ÊÄßÂç°Ê≠ªÔºåÁúüÁöÑÊääÊàëÁöÑËÄêÂøÉÁ£®Ê≤°‰∫ÜÔºåÁúüÁöÑÊòØË∂äÂÅöË∂äÁÉÇ‰∫Ü„ÄÇÊâìÁÆóË£ÖÂõûÊóßÁâàÊú¨ÁöÑ chrome„ÄÇÈÇ£‰πàÂ¶Ç‰ΩïÂÆâË£ÖÊóßÁâàÊú¨ÁöÑ chrome Âë¢ÔºåÊâæÁ¶ªÁ∫øÂÆâË£ÖÂåÖ‰πüÊå∫Ë¥πÂä≤ÁöÑÔºö Chromium ÂéÜÂè≤ÁâàÊú¨Á¶ªÁ∫øÂÆâË£ÖÂåÖ - ‰∏ãËΩΩÊñπÊ≥ï ÂâçÁ´ØÊâìÂåÖÂ∑•ÂÖ∑‰∏ÄËßà webpack esbuild rollup farm rolldown rspack 2024-08-07ÂÖ¨Âè∏ÁöÑÂâçÁ´ØÈ°πÁõÆÔºåÁªèÂ∏∏ÈúÄË¶ÅÁî®Âà∞Ë°®Ê†ºÔºåËÄå‰∏îÈúÄË¶ÅÁõ∏ÂΩì‰∏∞ÂØåÁöÑÂäüËÉΩ„ÄÇ‰ΩÜÊàë‰ª¨‰πãÂâçÂÅöÁöÑË°®Ê†ºÂÆûÂú®ÊòØÊãâË∑®Ôºå‰ª£Á†ÅÈáèÂ§ßÔºåAPI ËÆæËÆ°‰∏ÄËà¨ÔºåËøòÊúâËÆ∏Â§ö‰∏öÂä°Â±ÇÁöÑ‰ª£Á†ÅÊ∏óÈÄèËøõ‰∫ÜÁªÑ‰ª∂‰ª£Á†ÅÔºåÂäüËÉΩ‰πü‰∏çÊòØÂçÅÂàÜÂÆåÂñÑÔºàÊØîÂ¶ÇÂçïÂÖÉÊ†ºÂêàÂπ∂Â∞±Ê≤°ÊúâÔºâ„ÄÇ ‰∫éÊòØÊàëÊÉ≥Ë¶ÅÂÖàË∞ÉÁ†î‰∏Ä‰∏ãÂ∏ÇÈù¢‰∏äÁöÑ react Ë°®Ê†ºÁªÑ‰ª∂ÔºåÁúãËÉΩÂê¶ÊâæÂà∞‰∏Ä‰∏™ÁâπÂà´Â•ΩÁî®ÁöÑ ÊúÄÂ•ΩÁöÑ 6 ‰∏™ React Table ÁªÑ‰ª∂ËØ¶ÁªÜ‰∫≤ÊµãÊé®ËçêÔºö‰ΩúËÄÖÊúÄÊé®Ëçê React Table 2024-08-06font awesomeÊú¨Âú∞ÁöÑ node ÁâàÊú¨‰∏çÈÄÇÈÖç hexo ÁâàÊú¨ÔºåÊâÄ‰ª•‰∏çËÉΩÂú®Êú¨Âú∞Ë∞ÉËØïÂçöÂÆ¢Ôºå‰ΩÜÈúÄË¶ÅÂø´ÈÄüÁ°ÆËÆ§Âì™‰∫õ font awesome icon ËÉΩÁî®„ÄÇ‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂäûÊ≥ïÊòØÊü•Áúã networkÔºåÊâæÂà∞ font-awesome ÁöÑÁâàÊú¨„ÄÇÊàëÁúã‰∫Ü‰∏Ä‰∏ãÊòØ 4.6.2Ôºå‰∏äÁΩëÊêú‰∫Ü‰∏Ä‰∏ãËøô‰∏™ÁâàÊú¨ÁöÑÊâÄÊúâÂèØÁî®ÂõæÊ†áÔºöhttps://fontawesome.com/v4/icons/ Êñá‰ª∂Â§πÂëΩÂêçËßÑËåÉÊîπ‰∫Ü‰∏Ä‰∏ãÂçöÂÆ¢Êñá‰ª∂Â§πÁöÑÈ¶ñÂ≠óÊØçÂ§ßÂ∞èÂÜôÔºåÁÑ∂ÂêéÂèëÁé∞ git Âπ∂‰∏çËÉΩÊääËøôÁßçÂèòÂåñÊé®ÈÄÅÂà∞‰∫ëÁ´Ø„ÄÇ ÊúâÊù°‰ª∂ÁöÑÊï∞ÁªÑÂºÄÂèëËøáÁ®ã‰∏≠ÁªèÂ∏∏ÈÅáÂà∞‰∏Ä‰∫õÊúâÊù°‰ª∂ÁöÑÊï∞ÁªÑÂÖÉÁ¥†Ôºå‰∏ÄËà¨ÊàëÊòØÁî®‰∏Ä‰∏™Á©∫Êï∞ÁªÑËµ∑Â§¥ÔºåÁÑ∂ÂêéÁΩóÂàóÂêÑÁßçÊù°‰ª∂‰∏ã push ‰ªÄ‰πàÔºö 1234567let arr = [];if (xxx) &#123; arr.push(balabala1);&#125;if (xxx1) &#123; arr.push(balabala2);&#125; ÊÄªÊÑüËßâÂÜôÊ≥ï‰∏çÊòØÂæà‰ºòÈõÖ„ÄÇ ÂéüÂõ†ÊòØÊ≤°ÊúâÂæàÂ•ΩÁöÑ‰ΩìÁé∞Âá∫Êï∞ÁªÑÁöÑÈ°∫Â∫èÊÄß„ÄÇ‰∏ãÈù¢Êç¢‰∏ÄÁßçÂÜôÊ≥ïÔºö 123456[ xxx &amp;&amp; balabala1, (function () &#123; /** do a lot of things */ &#125;)() &amp;&amp; balabala2,].filter(Boolean); ÂΩìÁÑ∂ËøôÁßçÂÜôÊ≥ïÊòØÈíàÂØπÂÖÉÁ¥†È°∫Â∫èÂõ∫ÂÆöÔºå‰ΩÜÂÖÉÁ¥†‰∏ç‰∏ÄÂÆöÊúâÁöÑÊÉÖÂÜµ„ÄÇÂ¶ÇÊûúÂÖÉÁ¥†È°∫Â∫è‰∏çÂõ∫ÂÆöÔºåÈÇ£ËøôÁßçÂÜôÊ≥ïÂ∞±‰∏çÂ§üÁÅµÊ¥ª substringjs Â¶Ç‰ΩïÊà™ÂèñÂ≠êÂ≠óÁ¨¶‰∏≤ÔºåÁî®substring(startIndex, endIndex)Ôºöhttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/substring „ÄÇÂú®ÊéßÂà∂Âè∞ËæìÂÖ•ÁöÑÊó∂ÂÄôÔºåËøòÊúâ‰∏Ä‰∏™ apiÔºösubstr(startIndex, subStrLength)ÔºåËøô‰∏™ api Â∑≤ÁªèÂ∫üÂºÉ‰∫ÜÔºöhttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/substr Â§ßÊ¶ÇÊòØÂõ†‰∏∫ÂâçËÄÖÊõ¥Á¨¶Âêà‰ΩøÁî®ËÄÖÁöÑÁõ¥ËßâÂêß„ÄÇ substringÔºåsubstrÔºåslice ‰∏âËÄÖÁöÑÂå∫Âà´ setPropertyËøô‰∏™ api ÁöÑÁî®Â§ÑÂú®‰∫éÔºåÂèØ‰ª•Áªô css ËÆæÁΩÆ!important„ÄÇÂê¶ÂàôÂ∞±Ë∑ü style.height ‰∏ÄÊ†∑„ÄÇ 1style.setProperty("height", "calc(100% - 24px)", "!important"); ‰ª•‰∏ã‰∏§‰∏™ÊïàÊûúÊòØ‰∏ÄÊ†∑ÁöÑÔºö 12style.setProperty("height", "calc(100% - 24px)");style.height = "calc(100% - 24px)"; 2024-08-05ÊúÄËøëÊé®ÈÄÅÂçöÂÆ¢Âà∞ github ËÄÅÊòØÂá∫ÈóÆÈ¢òÔºögit connection reset by 20.205.243.160 port 443Ôºå‰∫éÊòØÊü•‰∫Ü‰∏Ä‰∏ãÔºö https://www.v2ex.com/t/841032 eslintÂêå‰∫ãÂª∫ËÆÆÁöÑ eslint ËßÑÂàôÔºöhttps://github.com/zengxiaoluan/eslint-plugin-jlc window.openÂÖ¨Âè∏È°πÁõÆÊúâ‰∏™ÈúÄÊ±ÇÊòØÊúâ‰∏™Â±ûÊÄßÂè´ÔºöÊï∞ÊçÆÊâãÂÜåÔºåÁÑ∂ÂêéÁÇπÂáªÂêéË¶ÅË∑≥ËΩ¨Âà∞Áî®Êà∑ÊåáÂÆöÁöÑÈìæÊé•Ôºå‰ΩÜËøô‰∏™ÈìæÊé•ÂèØËÉΩÊòØÊú¨Âú∞ÈìæÊé•„ÄÇÂ¶ÇÊûúÊòØÂú®ÂÆ¢Êà∑Á´ØÁéØÂ¢ÉÔºåÂ∞±ËÉΩÁªïËøáÊµèËßàÂô®ÁöÑÂÆâÂÖ®Á≠ñÁï•ÔºåÊâìÂºÄÊú¨Âú∞ÈìæÊé•ÔºåÂ¶ÇÊûúÊòØÊµèËßàÂô®ÁéØÂ¢ÉÔºåÂ∞±Ë¶ÅÈòªÊ≠¢ÊâìÂºÄ„ÄÇ‰ΩÜÂæàÂèØÊÉúÁöÑÊòØÔºåÂú®Êüê‰∫õÁâàÊú¨ÁöÑ chrome ÊµèËßàÂô®‰∏äÔºå‰ºöËá™Âä®ÊãºÊé•ÂΩìÂâçÂüüÂêç„ÄÇÊØîÂ¶ÇÊú¨Âú∞ÈìæÊé•ÊòØÔºöC:\Users\win10\Pictures\1.pngÔºåÂΩìÂâçÂüüÂêçÊòØÔºöwww.baidu.comÔºåÂ∞±‰ºöÊâìÂºÄÈìæÊé•Ôºöhttps://www.baidu.com/C:\Users\win10\Pictures\1.png„ÄÇÊØîËæÉÊ£òÊâã 2024-08-01github ÊÄªÊòØÊäΩÈ£éÔºåpush ‰∏ç‰∏äÂéªÔºåÂÆûÂú®Âèó‰∏ç‰∫Ü‰∫ÜÔºåÂèàÊù•Êêû‰ª£ÁêÜ‰∫ÜÔºåËÆ∞‰∏ç‰ΩèÂëΩ‰ª§ÔºåÊØèÊ¨°ÈÉΩË¶Å‰∏äÁΩëÊü•ÂÆûÂú®‰∏çÊñπ‰æøÔºåËøòÊòØËÆ∞ÂΩïÂà∞Ëá™Â∑±ÂçöÂÆ¢‰∏äÂêß git Êü•Áúã„ÄÅËÆæÁΩÆ„ÄÅÂèñÊ∂à‰ª£ÁêÜÊü•Áúã‰ª£ÁêÜÔºö 12git config --global --get http.proxygit config --global --get https.proxy ËÆæÁΩÆ‰ª£ÁêÜÔºö 12git config --global http.proxy http://127.0.0.1:1080git config --global https.proxy http://127.0.0.1:1080 ÂèñÊ∂à‰ª£ÁêÜÔºö 12git config --global --unset http.proxygit config --global --unset https.proxy ËßÇÂØüËÄÖÁªÜÁ≤íÂ∫¶ onChange ÁöÑËß£ÂÜ≥ÊñπÊ°à Â¶ÇÊûúÂè™Ê∂âÂèäÂà∞ÊòæÁ§∫ÈóÆÈ¢òÔºåÂàôÁî® debounce Ëß£ÂÜ≥Âç≥ÂèØ Â¶ÇÊûúÊ∂âÂèäÂà∞Êï∞ÊçÆÔºåÂàôÂøÖÈ°ªË¶ÅÊ±ÇÊó∂Â∫èÊ≠£Á°ÆÊÄßÔºåÂøÖÈ°ªÁî®‰∫ãÂä°+Á≤óÁ≤íÂ∫¶ onChange side project‰ªÄ‰πàÊ†∑ÁöÑ side project ÊòØÂ•ΩÁöÑÔºåÈ¶ñÂÖàË¶Å Â∑•‰ΩúÈáèÂ∞èÔºåËôΩÁÑ∂‰∏ÄËà¨Êù•ËØ¥Â∑•‰ΩúÈáèÂ∞èÊÑèÂë≥ÁùÄÊ≤°ÊúâÊä§ÂüéÊ≤≥Ôºå‰ΩÜÊ≤°ÂÖ≥Á≥ªÔºåÂèØ‰ª•Áî® Ë¥®ÈáèÁ≤æÊàñËÄÖÂ∞è‰ºóËìùÊµ∑ Êù•Ëß£ÂÜ≥„ÄÇÂ∑•‰ΩúÈáèÂ§ß‰∏ÄÂÆöÊòØ‰∏çË°åÁöÑÔºåÂõ†‰∏∫Êú¨Êù•Â∞±‰∏çÊòØ‰∏ªËÅåÔºåÊ†πÊú¨Ê≤°ÊúâÈÇ£‰πàÂ§öÊó∂Èó¥Á≤æÂäõÂéªÂÅö„ÄÇË∞ÅÊâìÂÆå‰∏ÄÂ§©Â∑•ÔºåËøòÊÉ≥Êêû‰∏úÊêûË•øÂïä„ÄÇ 2024-07-31Âä†‰∫Ü disabled ÁöÑ inputÔºåÁÇπÂáªÁöÑÊó∂ÂÄôÊòØ‰∏ç‰ºöÊé•Âèó onClick ‰∫ã‰ª∂ÁöÑÔºöhttps://developer.mozilla.org/zh-CN/docs/Web/HTML/Attributes/disabled ‰∫ã‰ª∂ ‰∫ã‰ª∂ÂÜíÊ≥° event.stopPropagation ÁºñÁ®ãÊÄùËÄÉÂÅöÊñ∞ÈúÄÊ±Ç‰∏ªË¶ÅÁúã‰∏§‰∏™ÊñπÈù¢Ôºö ÂØπÂéüÂÖà‰ª£Á†ÅÁöÑÁ†¥ÂùèÁ®ãÂ∫¶ ‰ª£Á†ÅÈáèÂ§ß‰∏çÂ§ß Â¶ÇÊûúËÉΩÊï¥Âá∫‰∏ÄÂ•óÔºåÂØπËøô‰∏§ÁÇπÈÉΩÂ•ΩÁöÑËÆæËÆ°ÔºåÂ∞±ËàíÊúç‰∫Ü Êñ∞Âä†ÈúÄÊ±Ç‰ª£Á†Å‰ΩçÁΩÆÁöÑÈóÆÈ¢òÔºö ‰∏çÊîæÂ∫ïÂ±ÇÂÆûÁé∞‰∏ç‰∫ÜÁöÑÔºåÂ∞±ÊîæÂ∫ïÂ±Ç„ÄÇÂê¶ÂàôÂ∞ΩÈáè‰∏çÊîæÂ∫ïÂ±Ç Âü∫Á°ÄÁöÑ‰∏úË•øÔºåÊîæÂ∫ïÂ±ÇÔºå‰∏çÂèòÁöÑ‰∏úË•øÊîæÂ∫ïÂ±Ç Â∫ïÂ±ÇÂ∞ΩÈáèÁ®≥ÂÆöÔºå‰∏çÊîπ„ÄÇÂ∞ΩÈáè‰∏çÂæÄÂ∫ïÂ±ÇÂä†‰∏úË•ø ‰∏öÂä°Â±ÇÂèØ‰ª•ËÜ®ËÉÄÔºå‰ΩÜÊòØÂ∫ïÂ±Ç‰∏çÂèØ‰ª• Â∫ïÂ±ÇÁöÑËåÉÂõ¥ÔºöÈô§‰∏öÂä°Â±ÇÂ§ñÁöÑÊâÄÊúâÂ±ÇÈÉΩÁÆóÂ∫ïÂ±Ç ‰∏ÄËà¨ÊòØ‰∏âÂ±ÇËÆæËÆ°ÔºöMVCÔºàModel View ControllorÔºâÔºåÂç≥ÔºöÊï∞ÊçÆÂ±ÇÔºåËßÜÂõæÂ±ÇÔºåÊéßÂà∂Â±ÇÔºà‰∏öÂä°Â±ÇÔºâ Âè™Êúâ‰∏öÂä°Â±ÇÊòØÂèØ‰ª•ËÜ®ËÉÄÁöÑÔºåÊï∞ÊçÆÂ±ÇÂíåËßÜÂõæÂ±ÇÂü∫Êú¨Á®≥ÂÆö‰∏çÂèò„ÄÇ ÂõûËøáÂ§¥Êù•ÁúãÔºåÂØπÂéüÂÖà‰ª£Á†ÅÁöÑÁ†¥ÂùèÁ®ãÂ∫¶‰ΩéÔºåÂÖ∂ÂÆûÁî® ÂàÜÂ±Ç Â∞±ÂèØ‰ª•ÂÆûÁé∞„ÄÇ‰ª£Á†ÅÈáèÂ§ß‰∏çÂ§ßÔºåÂàô‰æùËµñ Ëá™Âä®Êå° Êù•Ëß£ÂÜ≥ÔºàÊâãÂä®Êå°ÂØπÂ∫îÂéüÂ≠êÂåñÔºåËá™Âä®Êå°ÂØπÂ∫îÂ∞ÅË£ÖËâØÂ•ΩÁöÑ API+ËßÇÂØüËÄÖ+‰∫ãÂä°Ôºâ ÂéüÂ≠êÂåñÊòØÂü∫Á°ÄÔºåÁªÑÂêàÂéüÂ≠êÂåñÁöÑ API ÂΩ¢Êàê‰∏∞ÂØåÁöÑÁªÑÂêàÂäüËÉΩÊòØ‰∏ã‰∏ÄÊ≠•„ÄÇ 2024-07-30ÊñáÊú¨Ë∂ÖÈïøÁúÅÁï•Âè∑ÊääÊñáÊú¨ÊîπÊàêÈìæÊé•ÔºåËøòË¶ÅÂÆûÁé∞text-overflow:ellipsisÊïàÊûúÔºåË¶ÅÊÄé‰πàÊêûÔºü typescript ÂáΩÊï∞ÈáçËΩΩ„ÄÇÂú®ÂºÄÂèëÁöÑÊó∂ÂÄôÔºåÁªèÂ∏∏ÈÅáÂà∞ËøôÊ†∑‰∏ÄÁßçÊÉÖÂÜµÔºåÂ¶ÇÊûúÊï∞ÊçÆÊòØÂ§öÂ±ÇÁ∫ßÁöÑÂØπË±°ÔºåÊÉ≥Áî®‰∏Ä‰∏™ÂáΩÊï∞Êù•ÂÆûÁé∞Â§öÁßçÁ≠ñÁï•‰∏ãËé∑Âèñ‰∏çÂêåÂ±ÇÁ∫ßÁöÑÊï∞ÊçÆÔºå‰ΩÜÊòØÂë¢Âèà‰∏çÊÉ≥Âú®Ë∞ÉÁî®ÁöÑÊó∂ÂÄôÂº∫Âà∂ËΩ¨Êç¢Á±ªÂûãÔºàÂõ†‰∏∫‰∏çÂêåÂ±ÇÁ∫ßÁöÑÊï∞ÊçÆÁ±ªÂûãÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑÔºâÔºåËøô‰∏™Êó∂ÂÄôÔºåÂ∞±ÂèØ‰ª•Áî®Âà∞ÂáΩÊï∞ÈáçËΩΩÔºö 1234567get(): BatchInstanceAttr;get(tabId: string): InstanceAttr;get(tabId: string, eid: string): AttrIdData;get(tabId: string, eid: string, propertyKey: string): string;get(tabId?: string, eid?: string, propertyKey?: string): BatchInstanceAttr | InstanceAttr | AttrIdData | string &#123; // ÂÖ∑‰ΩìÂÆûÁé∞&#125;; Âõ†‰∏∫‰∏çÁÆ°‰Ω†‰ΩøÁî®Âì™‰∏ÄÁßçÂèÇÊï∞ÔºåÈÉΩÊúâÂÖ∑‰ΩìÁöÑËøîÂõûÁ±ªÂûãÂØπÂ∫îÔºåÊâÄ‰ª•Ë∞ÉÁî®ÊñπÂ∞±‰∏çÁî®ÊâãÂä®Ê≥®ÊòéÁ±ªÂûã‰∫Ü„ÄÇ 2024-07-29Âæà‰πÖÊ≤°ÊúâÂÅöËÆ∞ÂΩïÔºåÂπ∂ÈùûÊòØÊ≤°Êúâ‰∏úË•øË¶ÅÂÜôÔºåËÄåÊòØ‰πãÂâçÊúçÂä°Âô®ÂíåÂüüÂêçËøáÊúüÔºåÂØºËá¥ github pages ËÆøÈóÆ‰∏ç‰∫ÜÔºå‰∏ÄÊó∂Âçä‰ºöÂÑøÊàëÊ≤°ÂºÑÂ•ΩÔºåÁÑ∂ÂêéÂ∞±Âéª wolai ‰∏äÈù¢ËÆ∞ÂΩï‰∫Ü„ÄÇÁªìÊûúÂèëÁé∞ wolai ÔºàË¶Å‰ªòË¥πÊâçËÉΩÂàÜ‰∫´Á¨îËÆ∞ÔºâÂíå notionÔºàË¶ÅËßÇÁúãÊñπÂÖàÊ≥®ÂÜå notion ÊâçËÉΩÁúãÔºâ Â±ÖÁÑ∂Ê≤°Ê≥ïÂæàÂ•ΩÁöÑÂàÜ‰∫´Á¨îËÆ∞‰∫Ü„ÄÇÂ§ß‰∏∫ÊÅºÁÅ´„ÄÇËøòÊòØÂõûÂà∞Áî® githubs pages ËÆ∞ÂΩïËøôÁßçÂè§ËÄÅÁöÑÊñπÊ≥ïÊù•„ÄÇ‰πãÂâçÊé¢ËÆ®ËøáÔºöÁî±‰∫éÂçöÂÆ¢Ê≤°‰∫∫ÁúãÔºåËÄå‰∏î‰∏çÊñπ‰æøËÆ∞ÂΩïÔºåÊâÄ‰ª•ÔºåÂÆûÈôÖ‰∏äÁî®ÂçöÂÆ¢ËÆ∞ÂΩï+ÂàÜ‰∫´ÊòØ‰∏ÄÁßç‰∏çÂ•ΩÁöÑÊñπÂºèÔºåÁº∫ÁÇπÊòØÊó¢‰∏çÂ•ΩËÆ∞ÂΩïÔºå‰πü‰∏çÂ•ΩÂàÜ‰∫´Ôºå‰ºòÁÇπÊòØÁªìÂêà‰∫ÜËÆ∞ÂΩïÂíåÂàÜ‰∫´Ôºåall in oneÔºå‰∏ÄÁ´ôÂºèÊúçÂä°„ÄÇÁÆóÊòØ‰∏ÄÁßçÊäò‰∏≠Âêß„ÄÇÊúÄÂ•ΩÁöÑÊñπÂºè‰ªçÁÑ∂ÊòØÁî®‰∏Ä‰∏™Â•ΩÁöÑÁ¨îËÆ∞Â∑•ÂÖ∑ËÆ∞ÂΩïÔºåÁÑ∂ÂêéÂÜçÂºÑÂà∞ÊµÅÈáèÂæàÂ§ßÁöÑÁΩëÁ´ôÔºàÂ∞èÁ∫¢‰π¶ÔºåÊäñÈü≥ÔºåÁü•‰πéÔºåÂæÆÂçöÔºåB Á´ôÁ≠âÁ≠âÔºâ„ÄÇ‰ΩÜÁé∞Âú®Â±ÖÁÑ∂Ëøû‰∏Ä‰∏™ÂæàÂ•ΩÁöÑÁ¨îËÆ∞Â∑•ÂÖ∑ÈÉΩÊ≤°Êúâ‰∫Ü„ÄÇ‰πãÂêéÊàë‰ºöËÄÉËôëËá™Â∑±ÂÅö‰∏Ä‰∏™ÔºåË¶ÅÂÅöÁöÑ‰∏úË•øÂÖ∂ÂÆûËõÆÂ§öÁöÑÔºö Á¨îËÆ∞ËΩØ‰ª∂ÔºåÊúÄÂ•ΩÊòØÂä†ÂÖ•ÁªòÂõæÂ∑•ÂÖ∑ UGC ÂàÜ‰∫´Âπ≥Âè∞Ôºå‰ΩÜÊï∞ÊçÆË¶ÅÂ±û‰∫éÁî®Êà∑ÔºåÁî®Êà∑ÁöÑÊï∞ÊçÆÁ•ûÂú£‰∏çÂèØ‰æµÁäØ„ÄÇÂÜÖÂÆπ‰∏çÊòØÂπ≥Âè∞ÁöÑÔºåÊääÂÜÖÂÆπÁöÑÊâÄÊúâÊùÉËøòÁªôÁî®Êà∑ ‰ΩúÂìÅÁâàÊùÉËØÅÂà∏Âåñ all in one ‰∫ã‰ª∂ÁõëÂê¨ÂÖ¨Âè∏È°πÁõÆ‰∏≠ÈÅáÂà∞‰∏Ä‰∏™ÈóÆÈ¢òÊòØÔºåÁî®Êà∑Ê≠£Âú®ÁºñËæë‰∏≠ÊñáÔºåÁÑ∂ÂêéÊåâ esc ÈÄÄÂá∫‰∫Ü‰∏Ä‰∏™ iframe ÂÜÖÁöÑ textareaÔºåÊü•Áúã‰ª£Á†ÅÂêéÂèëÁé∞ window.top ÂØπ textarea ÊòØÊúâ‰∏ÄÂ•ó compositionstart ÁöÑÁõëÂê¨ÁöÑÔºå‰ΩÜ iframe ÈáåÈù¢Ê≤°ÊúâÁõëÂê¨„ÄÇ document ‰∏äÂä†ÁõëÂê¨ÊòØÁõëÂê¨‰∏çÂà∞ÂÖ∂ÂÜÖ iframe ÂÜÖÁöÑÂÖÉÁ¥†ÁöÑ„ÄÇÂ¶ÇÊûúË¶ÅÁõëÂê¨ iframe ÂÜÖÁöÑÂÖÉÁ¥†ÁöÑ‰∫ã‰ª∂ÔºåÂàôÂøÖÈ°ªË¶ÅÂÜçÂØπ iframe ÁöÑ document ÂÜçÂÅöÁõëÂê¨„ÄÇ ÂõΩÂÜÖ github ÊúàÁªèÈóÆÈ¢òÂàöÂàö github ÂèàÂá∫ÈóÆÈ¢òÔºåÊèêÁ§∫ Git: connection reset by xxxip xxxport„ÄÇËß£ÂÜ≥ÂäûÊ≥ïÔºögit config --global --unset-all remote.origin.proxy Êú¨Êú∫ ping ‰∫Ü‰∏Ä‰∏ã githubÔºåÂèëÁé∞ÊèêÁ§∫‰∏äÁöÑ ip Âíå ping Âá∫Êù•ÁöÑ ip ‰∏ç‰∏ÄÊ†∑„ÄÇ https://stackoverflow.com/questions/71571965/openssl-ssl-connect-connection-was-reset-in-connection-to-github-com443-while ÁºñÁ®ãÁöÑËÆæËÆ°Ê®°Âºè ÁÆÄÂçïÁöÑ‰∏öÂä°Áî®ÂëΩ‰ª§ÂºèÁºñÁ®ã Â§çÊùÇÁöÑÁî® reactÔºåÂè™ÂÖ≥Ê≥®Êï∞ÊçÆÔºå‰∏çÂÖ≥ÂøÉ DOM Êìç‰Ωú„ÄÇÂç≥ÔºöÂ£∞ÊòéÂºèÁºñÁ®ã Êõ¥Â§çÊùÇÁöÑÁî®ËßÇÂØüËÄÖÔºåÂè™ÂÖ≥Ê≥®Êï∞ÊçÆÔºå‰∏çÂÖ≥ÂøÉÂÖ∂‰ªñÊ®°ÂùóÁöÑÊõ¥Êñ∞„ÄÇ Êõ¥Êõ¥Â§çÊùÇÁöÑÔºåËøûÊï∞ÊçÆÊõ¥Êñ∞ÈÉΩÂ§çÊùÇÔºå‰∏ä‰∫ãÂä°ÔºåÁÆ°ÁêÜÂ•ΩÊï∞ÊçÆÊõ¥Êñ∞„ÄÇ ‰ΩÜÊòØÁî®Â§çÊùÇÁöÑËÆæËÆ°Ê®°Âºè‰πüÂ∏¶Êù•Áõ∏Â∫îÁöÑÈóÆÈ¢ò„ÄÇ ÊØîÂ¶ÇËßÇÂØüËÄÖÈÅáÂà∞‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂ∞±ÊòØÊï∞ÊçÆÂèòÂåñ onChange Á≤íÂ∫¶Â§™ÁªÜÔºå‰ºöÈÄ†ÊàêÂæàÂ§ö‰∏çÂøÖË¶ÅÁöÑÊòæÁ§∫Êõ¥Êñ∞„ÄÇËß£ÂÜ≥ÂäûÊ≥ïÊúâËøôÊ†∑Âá†ÁßçÔºö Èò≤Êäñ Á≤óÁ≤íÂ∫¶ÁöÑ onChange Èò≤ÊäñÊØîËæÉÁÆÄÂçïÔºåÂ∞±‰∏çËÆ≤‰∫Ü„ÄÇÂÆûÁé∞Á≤óÁ≤íÂ∫¶Ôºå‰πüÂ∞±ÊòØ‰∏ÄÁªÑÊìç‰Ωú‰∏Ä‰∏™ onChange„ÄÇÂÆûÈôÖ‰∏äÊääËøôÁªÑÊìç‰ΩúÊîæÂÖ•‰∫ãÂä°Ôºå‰∫ãÂä°ÁªìÊùüÂêéÂèëÂá∫ onChangeÔºåÂ∞±ËÉΩËææÂà∞ÁõÆÁöÑ„ÄÇ 2024-05-20ÊúÄËøëÂú®ÁúãÊÄéÊ†∑ÂÜôÂ•Ω reactÔºö ÊàëÂú®Â∑•‰Ωú‰∏≠ÂÜô ReactÔºåÂ≠¶Âà∞‰∫Ü‰ªÄ‰πàÔºüÊÄßËÉΩ‰ºòÂåñÁØá Â¶Ç‰ΩïÂÜôÂá∫‰ºòÁßÄÁöÑ React ‰ª£Á†Å ‰ª£Á†ÅÈáçÊûÑ‰πãË∑ØÔºöÁºñÂÜôÂπ≤ÂáÄÁöÑ React Components &amp; JSX Â¶Ç‰ΩïÂÜôÂá∫‰ºòÈõÖÁöÑ react ÁªÑ‰ª∂Ôºü React ÊúÄ‰Ω≥ÂÆûË∑µ--Â¶Ç‰ΩïÂÜôÂá∫Êõ¥Â•ΩÁöÑ React ‰ª£Á†ÅÔºà2022 Âπ¥ÁâàÔºâ 2024-05-17ÊúÄËøëÂÆûÁé∞ react Table ÁªÑ‰ª∂ÈÅáÂà∞‰∏çÂ∞ëÈóÆÈ¢òÔºåÊâÄ‰ª•ÊâìÁÆóÂ§öÂ≠¶ÁÇπ reactÔºåËøôÁØáÊñáÁ´†ËÆ≤useReducerÔºåËÆ≤ÂæóÂæàÂ•Ω: Ëøô‰∏ÄÊ¨°ÂΩªÂ∫ïÊêûÂÆö useReducer-‰ΩøÁî®ÁØá 2024-04-17hmr invalidate https://www.lcs.show/blog/common/vite-hmr 2024-04-09react ÁªÑ‰ª∂Âú®ÂÜôÊàêÂáΩÊï∞ÁöÑÊó∂ÂÄôÔºåÊòØ‰ºöÂºïËµ∑Áà∂ÁªÑ‰ª∂Ê∏≤ÊüìÁöÑÔºö App.tsx 123456789101112import "./App.css";import &#123; Child &#125; from "./Child";export default function App() &#123; alert("Áà∂ÁªÑ‰ª∂Ê∏≤Êüì"); return ( &lt;main&gt; React ‚öõÔ∏è + Vite ‚ö° + Replit üåÄ &#123;Child()&#125; &lt;/main&gt; );&#125; Child.tsx 1234567891011121314import &#123; useState &#125; from "react";export const Child = () =&gt; &#123; const [a, setA] = useState(0); return ( &lt;div onClick=&#123;() =&gt; &#123; setA(a + 1); &#125;&#125; &gt; &#123;a&#125; &lt;/div&gt; );&#125;; Êîπ‰∏∫ÁªÑ‰ª∂ÂºèÂÜôÊ≥ïÔºåÊâçËÉΩÈÅøÂÖçÁà∂ÁªÑ‰ª∂Ë¢´Ê∏≤ÊüìÔºö 123456789101112import "./App.css";import &#123; Child &#125; from "./Child";export default function App() &#123; alert("Áà∂ÁªÑ‰ª∂Ê∏≤Êüì"); return ( &lt;main&gt; React ‚öõÔ∏è + Vite ‚ö° + Replit üåÄ &lt;Child&gt;&lt;/Child&gt; &lt;/main&gt; );&#125; Ëá≥‰∫éÂéüÂõ†ÔºåËøò‰∏ç‰∫ÜËß£„ÄÇ ÂèÇËÄÉÔºö https://www.zhihu.com/question/448269343 2024-03-24ÊÄé‰πàÁÆÄÂåñÂ§ßÈáèÁöÑ if else ÁªìÊûÑÔºåÂèØ‰ª•Áî® map Êù•ÂÆûÁé∞Ôºö 123456789101112131415161718192021222324class A &#123;&#125;class B &#123;&#125;function a() &#123;&#125;function b() &#123;&#125;function f1(x) &#123; if (x instanceof A) &#123; a(); &#125; else if (x instanceof B) &#123; b(); &#125;&#125;const h = [ &#123; cb: a, match: (x) =&gt; x instanceof A &#125;, &#123; cb: b, match: (x) =&gt; x instanceof B &#125;,];function f2(x) &#123; h.find((y) =&gt; y.match(x))?.cb();&#125; 2024-03-23eslint ÈÖçÁΩÆÂú®Êñá‰ª∂Â§¥ÈÉ®ÂÜôÂ¶Ç‰∏ãÊ≥®ÈáäÔºåÂç≥ÂèØËÆ© eslint ÊüêÈÉ®ÂàÜÊ£ÄÊü•Ë∑≥ËøáÊ≠§Êñá‰ª∂Ôºö 12/* eslint no-console: &quot;off&quot; *//* eslint no-fallthrough: &quot;off&quot; */ ÂèÇËÄÉÔºöhttps://uovol.com/unexpected-console-statement--no-console ËøôÊ†∑ÁöÑËÆæËÆ°ÁúüÊòØËõÆÂ•ΩÁî®ÁöÑ scrollWidth, offsetWidth, clientWidth ÁöÑÂå∫Âà´ scrollWidth ÊòØÂÖÉÁ¥†ÁúüÂÆûÁöÑÂÆΩÂ∫¶Ôºà‰ΩÜ‰∏çÂåÖÂê´ border ÂíåÊªöÂä®Êù°Ôºå‰ΩÜÂåÖÂê´ paddingÔºâ offsetWidth ‰πüÊòØÁúüÂÆûÁöÑÂÖÉÁ¥†ÂÆΩÂ∫¶Ôºà‰ΩÜÂåÖÂê´ border ÂíåÊªöÂä®Êù°Ôºâ clientWidth ÊòØÂÖÉÁ¥†ÁöÑÂèØËßÜÂÆΩÂ∫¶Ôºà‰∏çÂåÖÂê´ border ÂíåÊªöÂä®Êù°Ôºâ scrollHeightÔºåoffsetHeightÔºåclientHeight ÂêåÁêÜ ÂèØ‰ª•Áî®Â¶Ç‰∏ã‰æãÂ≠êÊµãËØïÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt; &lt;head&gt; &lt;meta charset="UTF-8" /&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge" /&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; div &#123; border: 1px solid #000; width: 100px; height: 200px; padding-right: 15px; padding-bottom: 15px; background-color: aquamarine; margin-left: 10px; overflow: hidden; overflow-x: scroll; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;sdsssssssssssssssssssssssssssdssssssssssssssssssssssssss&lt;/div&gt; &lt;script&gt; console.log( "scrollWidth: ", document.querySelectorAll("div")[0].scrollWidth ); console.log( "clientWidth: ", document.querySelectorAll("div")[0].clientWidth ); console.log( "offsetWidth: ", document.querySelectorAll("div")[0].offsetWidth ); console.log( "scrollHeight: ", document.querySelectorAll("div")[0].scrollHeight ); console.log( "clientHeight: ", document.querySelectorAll("div")[0].clientHeight ); console.log( "offsetHeight: ", document.querySelectorAll("div")[0].offsetHeight ); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; useCallback ÁöÑÂÆûË∑µ‰æãÂ≠êhttps://replit.com/@liuqinh2s/useCallback#README.md 2024-03-09react ÂºÄÂèëËøáÁ®ã‰∏≠ÔºåÁªèÂ∏∏ÈÅáÂà∞‰∏Ä‰∫õÂ•áÊÄ™ÁöÑÈóÆÈ¢ò„ÄÇÊúÄËøëËß£ÂÜ≥ÁöÑËøô‰∏™Â∞§‰∏∫Â•áÊÄ™ÔºåÊä•ÈîôÔºörendered fewer hooks than expected. this may be caused by an accidental early return statement„ÄÇ‰ΩÜÊàëÂπ∂Ê≤°ÊúâÊää hooks ÂÜôÈÅìÊù°‰ª∂ËØ≠Âè•ÈáåÈù¢„ÄÇÊúÄÁªà‰ªéËøôÁØáÊñáÁ´†ÊâæÂà∞‰∫ÜÊàëÊÉ≥Ë¶ÅÁöÑÁ≠îÊ°àÔºöhttps://medium.com/@jonchurch/how-to-fix-react-error-rendered-fewer-hooks-than-expected-e6a378985d3c ÂéüÂõ†ÊòØÊàëÁî®ÊôÆÈÄöÂáΩÊï∞Ë∞ÉÁî®ÁöÑÂÜôÊ≥ïÔºåÂ∫îËØ•Êîπ‰∏∫ÁªÑ‰ª∂ÂÜôÊ≥ïÔºö ÈîôËØØÂÜôÊ≥ïÔºö 1234567export const Component1 = () =&gt; &#123; function getHtml() &#123; return &lt;div&gt;&lt;/div&gt;; &#125; return &lt;div&gt;&#123;getHtml()&#125;&lt;/div&gt;;&#125;; Ê≠£Á°ÆÂÜôÊ≥ïÔºö 1234567891011export const Component1 = () =&gt; &#123; function GetHtml() &#123; return &lt;div&gt;&lt;/div&gt;; &#125; return ( &lt;div&gt; &lt;GetHtml&gt;&lt;/GetHtml&gt; &lt;/div&gt; );&#125;; Ê≥®ÊÑè React ÁªÑ‰ª∂È¶ñÂ≠óÊØçË¶ÅÂ§ßÂÜô 2024-02-18Â¶Ç‰ΩïÂÆûÁé∞ÊØõÁéªÁíÉÊïàÊûúÔºåcss: 1filter: blur(5px); 2023-01-30ÊúÄËøëÂÆûÁé∞‰∫Ü‰∏Ä‰∏™ÊãñÊãΩÊù°ÁªÑ‰ª∂ÔºåÂèëÁé∞ÊãñÊãΩÁöÑÊó∂ÂÄô‰ºöÈÄâ‰∏≠‰∏Ä‰∫õÊñáÊú¨Ôºå‰ªéËÄåÂØºËá¥‰∏ã‰∏ÄÊ¨°ÊãñÊãΩÊó∂ pointerup ÁõëÂê¨‰∏çÂà∞„ÄÇËß£ÂÜ≥ÂäûÊ≥ïÊòØÔºöÊãñÊãΩÁöÑÊó∂ÂÄôËÆæÁΩÆÊ†∑Âºèuser-select: none;Âà∞ document.body ‰∏äÔºåÁ¶ÅÊ≠¢ÈÄâ‰∏≠Ôºå‰ªéËÄåËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ 2023-12-08Âú®ÁΩë‰∏äÁúãÂà∞ÂÜôÁöÑÂæàÂ•ΩÁöÑ‰∫∫Â∑•Êô∫ËÉΩÂÖ•Èó®ÊñáÁ´†ÔºöNeural Networks From Scratch 2023-11-28Â¶Ç‰ΩïËÆ©Ë∂ÖÂá∫ÁöÑÊñáÂ≠óÊòæÁ§∫Ôºö... 123overflow: hidden;white-space: nowrap;text-overflow: ellipsis; 2023-11-22‰ªäÊó•ËØùÈ¢òÔºö react ÁªÑ‰ª∂Â¶Ç‰ΩïÊ≠£Á°ÆÁöÑÂç∏ËΩΩ ÊµèËßàÂô®Â¶Ç‰ΩïÂä†ËΩΩÊú¨Âú∞ÊâÄÊúâÂ≠ó‰Ωì Êñ∞ÁöÑ apiÔºåawait window.queryLocalFonts()ÂèØ‰ª•Âä†ËΩΩÊú¨Âú∞ÊâÄÊúâÂ≠ó‰Ωì„ÄÇÂèÇÁúãÊñáÊ°£Ôºöwindow: queryLocalFonts() method - Web APIs | MDN 2023-11-21‰ªäÊó•ËØùÈ¢òÔºö requestAnimationFrame Â§ßÈáèÂæ™ÁéØÈáçÂ§çËé∑ÂèñÊüê‰∏™ÂÄºÊó∂ÔºåÂ¶Ç‰ΩïÂä†ÈÄüÔºü Window: requestAnimationFrame() method - Web APIs | MDN requestAnimationFrame(callbackFn)ËÆ©ÊµèËßàÂô®Âú®‰∏ãÊ¨°ÈáçÁªò‰πãÂâçË∞ÉÁî®‰Ω†ÁöÑ callback ÂáΩÊï∞ÔºåËøô‰∏™ÊñπÊ≥ïÊòØ‰∏ÄÊ¨°ÊÄßÁöÑÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥ÊåÅÁª≠Áî®ÔºåÂ∞±Ë¶ÅÊåÅÁª≠Ë∞ÉÁî®„ÄÇ Âú®ÂÆûÈôÖÁöÑÂºÄÂèëÁéØËäÇÔºåÂ§ßÈáèÂæ™ÁéØÈáçÂ§çËé∑ÂèñÊüê‰∏™ÂÄºÊó∂ÔºåÂ¶Ç‰ΩïÂä†ÈÄüÔºüËøôÊó∂ÂÄôÂ∞±ÈúÄË¶ÅÂÅöÁºìÂ≠òÔºå‰ΩÜËøô‰∏™ÁºìÂ≠ò‰∏çÂèØ‰ª•Â§™‰πÖÔºåÂê¶ÂàôÂèØËÉΩ‰ºöÈù¢‰∏¥‰∏çÂ§üÊñ∞ÁöÑÈóÆÈ¢òÔºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344function costManyTime() &#123; let count = 0; for (let i = 0; i &lt; 100_0000; i++) &#123; count += Math.random(); &#125; return count;&#125;function getValue(key) &#123; const value = costManyTime(); return value;&#125;const cache = new Map();function getValue2(key) &#123; setTimeout(() =&gt; &#123; if (cache.size &gt; 0) &#123; cache.clear(); &#125; &#125;, 500); if (cache.has(key)) &#123; return cache.get(key); &#125; const value = costManyTime(); cache.set(key, value); return value;&#125;console.time("costManyTime");costManyTime();console.timeEnd("costManyTime");console.time("loop getValue");let hh = [];for (let i = 0; i &lt; 1000; i++) &#123; hh.push(getValue("key"));&#125;console.timeEnd("loop getValue");hh.length = 0;console.time("loop getValue2");for (let i = 0; i &lt; 1000; i++) &#123; hh.push(getValue2("key"));&#125;console.timeEnd("loop getValue2"); ‰ª•‰∏ä‰ª£Á†ÅÔºåÁºìÂ≠òÂ≠òÂú® 500msÔºå‰æùÊóßÂ≠òÂú®Â¶Ç‰∏ã‰∏§‰∏™ÈóÆÈ¢òÔºö Â¶ÇÊûúÂÄºÂú®Ëøô 500ms ÂÜÖÊõ¥Êñ∞‰∫ÜÔºåÈÇ£‰πàÂ∞±‰ºöÈÅáÂà∞Ê≤°Ëé∑ÂèñÂà∞ÊúÄÊñ∞ÂÄºÁöÑÈóÆÈ¢ò Â¶ÇÊûúloop getValueÊï¥‰ΩìÊó∂ÈïøË∂ÖËøá‰∫Ü 500msÔºåÈÇ£‰πàÁºìÂ≠ò‰ºöÂ§±ÊïàÂπ∂ËøõË°åÈáçÂª∫ 2023-11-14‰ªäÊó•ÈúÄÊ±Ç Â±±ÂüéÂØºËà™ Âú®ÈáçÂ∫ÜÁöÑÊó∂ÂÄôÔºåÂèëÁé∞Âú∞ÂõæÂØºËà™ÂÆåÂÖ®ÊòØÈîôÁöÑÔºå‰∏çÁÆ°ÊòØÊ≠•Ë°åÂØºËà™ÔºåËøòÊòØÈ©æÈ©∂ÂØºËà™„ÄÇÁÑ∂ÂêéÂè∏Êú∫ËØ¥Ë¶ÅÁî®Êú¨Âú∞ÁöÑÁ¶ªÁ∫øÂú∞ÂõæÂåÖÔºåÊàëÂΩìÊó∂Âú®ÊÉ≥Á¶ªÁ∫øÂú∞ÂõæÂåÖËøòÊúâÊ≠§Á≠âÁ•ûÂ•áÁöÑ‰ΩúÁî®ÂêóÔºüÂÉèÈáçÂ∫ÜËøôÁßçÂ±±ÂüéÔºåÈ´òÂ∫¶ÂÆö‰Ωç‰ºº‰πéÂæà‰∏çÂáÜÔºåÂú®‰∏çÂêåÁöÑÊµ∑ÊãîÈ´òÂ∫¶ÔºåË∑ØÁ∫øÊ†πÊú¨‰∏ç‰∏ÄÊ†∑„ÄÇË¶ÅÊÄé‰πàËß£ÂÜ≥ËøôÁßçÈóÆÈ¢òÂë¢ I had a dream that I speak English in any situation all the night. ÊàëÊò®ÊôöÊ¢¶Âà∞Ëá™Â∑±Âú®Ê¢¶Èáå‰∏ÄÁõ¥ËÆ≤Ëã±ËØ≠ÔºåÂ∞±ÊòØ‰ªª‰ΩïÂú∫ÊôØ‰∏ãÈÉΩÂú®Áî®Ëã±ËØ≠ËæìÂá∫„ÄÇÁúüÊòØ‰∏™ÊÄ™Áé∞Ë±° ‰ΩÜÁ°ÆÂÆûÂèØ‰ª•ÂÅöÂà∞ÂÖ∂ÂÆûÔºåÁé∞Âú®Êúâ‰∫Ü chatgpt Â∞±Áõ∏ÂΩì‰∫éÊúâ‰∫Ü‰∏Ä‰∏™ÈöèË∫´ÁöÑËã±ËØ≠ËÄÅÂ∏àÔºåÂÆÉÁîöËá≥ÂèØ‰ª•Â∏ÆÊàëÈõ∂ÊàêÊú¨ÁöÑÂêåÂ£∞‰º†ËØë„ÄÇ 2023-11-13‰ªäÊó•ÂèëÁé∞ÁöÑ bugÔºö Âú®Áî® label for ÁöÑÊó∂ÂÄôÂèëÁé∞ id ÈáçÂ§çÔºåÂØºËá¥Êó†Ê≥ïÁÇπÂáªËß¶Âèë checkbox ÂãæÈÄâ http post ÂèÇÊï∞‰º†ÈîôÂØºËá¥ 404 ÊúãÂèãÊèêÂá∫ÔºåÂèØ‰ª•Áî®useIdÊù•ÈÅøÂÖç id ÈáçÂ§ç ‰ªäÊó•ÂèëÁé∞ÁöÑÈúÄÊ±ÇÔºö ‰∫åÁª¥Ë°®Ê†ºÔºöÁîª‰∏Ä‰∏™Á¨õÂç°Â∞îÁßØÔºà‰∫å‰ΩçË°®Ê†ºÔºâÁöÑÊó∂ÂÄôÂèëÁé∞Ôºå‰∫åÁª¥Ë°®Ê†ºÁî® markdown Âæà‰∏çÂ•ΩÁîªÔºåÊÉ≥Ë¶ÅÂú®‰∏Ä‰∏™ÂçïÂÖÉÊ†ºÈáåÈù¢Áîª‰∏ÄÊ†πÊñúÁ∫øÊõ¥ÊòØÈöæÔºàÁîªÊñúÁ∫øÂÖ∂ÂÆûÂèØ‰ª•Áõ¥Êé•Êï≤‰∏™Â≠óÁ¨¶\ÔºåÊØïÁ´üÊòØÁªô‰∫∫ÁúãÁöÑÔºå‰∫∫ËÉΩÊáÇÂ∞±Ë°åÔºâ„ÄÇ‰∫éÊòØÊàëÁî® eda Áîª‰∫Ü‰∏Ä‰∏™‰∫å‰ΩçË°®Ê†º Êü•ÊâæÈ°πÁõÆ‰∏≠ÁöÑ‰∏Ä‰∏™Êñá‰ª∂ÁöÑÊüê‰∏™ÂáΩÊï∞‰∏≠ÁöÑÂéÜÂè≤‰ª£Á†ÅÔºàÊÉ≥ÁúãÊºîÂèòËøáÁ®ãÔºâÔºåÂèëÁé∞Ê≤°ÊúâÂæàÂ•ΩÁöÑÂ∑•ÂÖ∑ÔºåÂè™ËÉΩÁúãÂà∞Êñá‰ª∂ÁöÑÊèê‰∫§ÂéÜÂè≤„ÄÇËÉΩÂê¶Ëá™Â∑±ÂÅö‰∏Ä‰∏™Âá∫Êù• window location href Âíå hashÔºà#Ôºâ ‰øÆÊîπ‰∫Ü hash ‰∏ç‰ºöÂà∑Êñ∞Ôºå‰øÆÊîπ‰∫ÜÈùû hash ‰ºöÂà∑Êñ∞ Êúâ#ÁöÑÊÉÖÂÜµ‰∏ãÔºåËá™Â∑±Á≠â‰∫éËá™Â∑±‰∏ç‰ºöÂà∑Êñ∞ÔºåÊ≤°Â∏¶#ÁöÑÊÉÖÂÜµ‰∏ãÔºåËá™Â∑±Á≠â‰∫éËá™Â∑±‰ºöÂà∑Êñ∞ ÂéªÊéâ#‰ºöÂà∑Êñ∞ Âä†‰∏ä#‰∏ç‰ºöÂà∑Êñ∞ 2023-10-23ts È°πÁõÆ‰ΩøÁî® js ÂåÖts È°πÁõÆÂºïÂÖ• js ÂåÖ‰ºöÊä•ÈîôÔºåÊàë‰ª¨Âè™ÈúÄË¶ÅÂú®È°πÁõÆÁöÑ‰ªªÊÑè‰ΩçÁΩÆÊñ∞Âª∫‰∏Ä‰∏™xxx.d.tsÊñá‰ª∂ÔºåÂÜÖÂÆπÂ°´ÂÖ•Ôºö 1declare module '„Äêimport ÁöÑÁ¨¨‰∏âÊñπÂ∫ìÂêç„Äë'; Âç≥ÂèØËß£ÂÜ≥Êä•Èîô TODO: ÂèëÂ∏É‰∏Ä‰∏™ typescript ÁöÑ npm ÂåÖ nginx Âêå‰∏ÄÁ´ØÂè£‰∏çÂêåË∑ØÂæÑÊò†Â∞ÑÂà∞‰∏çÂêåÈ°πÁõÆ123456789location /project1 &#123; alias /xxx/project1 index index.html&#125;location /project2 &#123; alias /xxx/project2 index index.html&#125; 2023-10-20ÂèëÁé∞‰∏Ä‰∏™ÈóÆÈ¢ò Object.defineProperty ‰∏ÄÊó¶ËÆæÁΩÆ‰∫Ü set ÊñπÊ≥ïÔºåÂ∞±Ê≤°ÂäûÊ≥ïËÆæÁΩÆÂÄºÂà∞ËØ•Â±ûÊÄß‰∏ä‰∫ÜÔºåÂè™ËÉΩÈÄöËøá get ÁöÑÊó∂ÂÄôËøîÂõûÂØπÂ∫îÂÄºÊù•ËææÂà∞‰∏çÂΩ±ÂìçÂéüÊù•‰ª£Á†ÅÁöÑÁõÆÁöÑ„ÄÇÊØîÂ¶ÇÔºö 12345678910111213var a = &#123; a: 1 &#125;;Object.defineProperty(a, "a", &#123; set(x) &#123; console.log(x); this.b = x; &#125;, get() &#123; return this.b; &#125;,&#125;);a.a = 8;console.log(a);console.log(a.a); Â∞ùËØïÂú® set ÈáåÈù¢ÂÜôthis.a = x;‰ºöÂØºËá¥Ê≠ªÂæ™ÁéØÔºåËÄåÂÜôreturn x;Âàô‰æùÊóßÊ≤°ÊúâËÆæÁΩÆ‰∏ä a.a 2023-10-18Â¶Ç‰ΩïÂèëÂ∏ÉËá™Â∑±ÁöÑ npm ÂåÖÔºü Âà∞https://www.npmjs.com/Ê≥®ÂÜåË¥¶Âè∑ npm init -yÊñ∞Âª∫‰∏Ä‰∏™È°πÁõÆ Âú®ÊéßÂà∂Âè∞npm loginÁôªÂΩïËá™Â∑±Ë¥¶Âè∑ Âà∞È°πÁõÆÁõÆÂΩï‰∏ãnpm publish --access publicÔºåÂèëÂ∏ÉÂÖ¨ÂºÄÂåÖÔºàÁßÅÊúâÂåÖË¶ÅÊî∂Ë¥πÔºâ Ê≥®ÊÑè‰∫ãÈ°πÔºåÊñ∞Âª∫È°πÁõÆÁöÑÁõÆÂΩï‰∏çËÉΩÊòØ‰∏≠Êñá‰ºöÊä•ÈîôÔºåÂ¶ÇÊûúÊ≤°ÂÖÖÈí±--access publicÊòØÂøÖÈ°ªÁöÑÔºåÂåÖÂêçÂèØËÉΩ‰ºöË∑üÂ∑≤ÊúâÁöÑÂåÖÂêçÂÜ≤Á™ÅÔºåÂèØ‰ª•ÈÄöËøánpm search xxxÊü•ËØ¢ npm ‰æùËµñÂåÖÁâàÊú¨Âè∑npm ËØ≠‰πâÁâàÊú¨(npm ‰æùËµñÂåÖÁâàÊú¨ÁöÑ~„ÄÅ&gt;„ÄÅ^Á¨¶Âè∑ÂêÑ‰ª£Ë°®‰ªÄ‰πàÔºü) 2023-10-17SVG ÈªòËÆ§ÂºÄ‰∫ÜÊäóÈîØÈΩøÔºå‰ºöÊää 1 ÂÉèÁ¥†ÁöÑÁ∫øÊù°Áî® 2 ÂÉèÁ¥†ÊòæÁ§∫ SVG Â¶ÇÊûúÊÉ≥Â±ïÁ§∫ÁúüÂÆûÁöÑÂÉèÁ¥†ÔºàÂÖ≥Èó≠ÊäóÈîØÈΩøÔºâÔºåÂèØ‰ª•ËÆæÁΩÆ cssÔºöshape-rendering: crispEdges ‰ΩÜ HTML5 canvas ‰∏çËÉΩËøôÊ†∑ËææÂà∞ÁõÆÁöÑ graphics - SVG / Canvas :: shape-rendering=&quot;crispEdges&quot; via JavaScript? - Stack Overflow canvas ÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÊñπÊ≥ïÊù•ËææÂà∞ÁõÆÁöÑÔºö 1ÂΩìÁ∫øÂÆΩ‰∏∫ÂÅ∂Êï∞Êó∂ÔºåÂùêÊ†áÂ∫îÊåáÂÆö‰∏∫Êï¥Êï∞„ÄÇÂê¶ÂàôÂùêÊ†áÂ∫îÊåáÂÆö‰∏∫Êï¥Êï∞+0.5px„ÄÇ canvas ÂõæÂÉèÈáçÂè†Â§ÑÁêÜ - Kaiqisan 2023-10-16Âú® disabled ÁöÑ input ‰∏äÈù¢ÔºåÂè≥ÈîÆÔºåÁà∂Á∫ß div ÁöÑ onMouseDown Ëøõ‰∏ç‰∫ÜÔºåË¶ÅÊÄé‰πàÂäûÔºüÂèØ‰ª•Âú®‰∫ã‰ª∂ÁöÑÊçïËé∑Èò∂ÊÆµÁõëÂê¨Ôºö 123elem.addEventListener(..., &#123;capture: true&#125;)// ÊàñËÄÖÔºåÁî® &#123;capture: true&#125; ÁöÑÂà´Âêç "true"elem.addEventListener(..., true) DOM ‰∫ã‰ª∂Ê†áÂáÜÊèèËø∞‰∫Ü‰∫ã‰ª∂‰º†Êí≠ÁöÑ 3 ‰∏™Èò∂ÊÆµÔºö ÊçïËé∑Èò∂ÊÆµÔºàCapturing phaseÔºâ‚Äî‚Äî ‰∫ã‰ª∂Ôºà‰ªé WindowÔºâÂêë‰∏ãËµ∞ËøëÂÖÉÁ¥†„ÄÇÁõÆÊ†áÈò∂ÊÆµÔºàTarget phaseÔºâ‚Äî‚Äî ‰∫ã‰ª∂Âà∞ËææÁõÆÊ†áÂÖÉÁ¥†„ÄÇÂÜíÊ≥°Èò∂ÊÆµÔºàBubbling phaseÔºâ‚Äî‚Äî ‰∫ã‰ª∂‰ªéÂÖÉÁ¥†‰∏äÂºÄÂßãÂÜíÊ≥°„ÄÇ Â¶ÇÊûúÊòØ react ÁöÑËØùÔºåÂ∞±Áî® onMouseDownCapture„ÄÇ ‰∏çËøáÊúÄÂêéÂèëÁé∞‰æùÁÑ∂‰∏çË°åÔºåË¶ÅÁî® onPointerDownCapture ÊâçÂèØ‰ª•„ÄÇ 2023-08-11Systems, math and explosions (in no particular order) ËøôÁØáÊñáÁ´†ËÆ≤Á≥ªÁªüÊòØÊÄé‰πàÂèòÂ§çÊùÇÁöÑÔºàÂõ†ËøûÊé•ËÄåÂ§çÊùÇÔºâÔºå‰ª•ÂèäÊÄé‰πàÊ∂àÈô§Â§çÊùÇÂíåÊ∑∑‰π±ÔºàÂáèÂ∞ëËäÇÁÇπÔºâ„ÄÇ PJ Onori‚Äôs blog 2023-08-10JavaScript Ê®°ÂùóÁöÑÂæ™ÁéØÂä†ËΩΩ 2023-08-07html Á©∫Ê†ºËá™Âä®ÂêàÂπ∂ÁöÑÈóÆÈ¢òHTML Êèê‰æõ‰∫Ü 5 ÁßçÁ©∫Ê†ºÂÆû‰ΩìÔºàspace entityÔºâÔºåÂÆÉ‰ª¨Êã•Êúâ‰∏çÂêåÁöÑÂÆΩÂ∫¶ÔºåÈùûÊñ≠Ë°åÁ©∫Ê†º( )ÊòØÂ∏∏ËßÑÁ©∫Ê†ºÁöÑÂÆΩÂ∫¶ÔºåÂèØËøêË°å‰∫éÊâÄÊúâ‰∏ªÊµÅÊµèËßàÂô®„ÄÇÂÖ∂‰ªñÂá†ÁßçÁ©∫Ê†º( &amp;ensp;&amp;emsp;&amp;thinsp;&amp;zwnj;&amp;zwj;ÔºâÂú®‰∏çÂêåÊµèËßàÂô®‰∏≠ÂÆΩÂ∫¶ÂêÑÂºÇ„ÄÇ &amp;nbsp;ÂÆÉÂè´‰∏çÊç¢Ë°åÁ©∫Ê†ºÔºåÂÖ®Áß∞ No-Break SpaceÔºåÂÆÉÊòØÊúÄÂ∏∏ËßÅÂíåÊàë‰ª¨‰ΩøÁî®ÊúÄÂ§öÁöÑÁ©∫Ê†ºÔºåÊåâ‰∏ã space ÈîÆ‰∫ßÁîüÁöÑÁ©∫Ê†º„ÄÇÂú® HTML ‰∏≠ÔºåÂ¶ÇÊûú‰Ω†Áî®Á©∫Ê†ºÈîÆ‰∫ßÁîüÊ≠§Á©∫Ê†ºÔºåÁ©∫Ê†ºÊòØ‰∏ç‰ºöÁ¥ØÂä†ÁöÑÔºàÂè™ÁÆó 1 ‰∏™Ôºâ„ÄÇË¶Å‰ΩøÁî® html ÂÆû‰ΩìË°®Á§∫ÊâçÂèØÁ¥ØÂä†ÔºåËØ•Á©∫Ê†ºÂç†ÊçÆÂÆΩÂ∫¶ÂèóÂ≠ó‰ΩìÂΩ±ÂìçÊòéÊòæËÄåÂº∫ÁÉà„ÄÇ &amp;ensp;ÂÆÉÂè´&quot;ÂçäËßíÁ©∫Ê†º&quot;ÔºåÂÖ®Áß∞ÊòØ En SpaceÔºåen ÊòØÂ≠ó‰ΩìÊéíÂç∞Â≠¶ÁöÑËÆ°ÈáèÂçï‰ΩçÔºå‰∏∫ em ÂÆΩÂ∫¶ÁöÑ‰∏ÄÂçä„ÄÇÊ†πÊçÆÂÆö‰πâÔºåÂÆÉÁ≠âÂêå‰∫éÂ≠ó‰ΩìÂ∫¶ÁöÑ‰∏ÄÂçäÔºàÂ¶Ç 16px Â≠ó‰Ωì‰∏≠Â∞±ÊòØ 8pxÔºâ„ÄÇÂêç‰πâ‰∏äÊòØÂ∞èÂÜôÂ≠óÊØç n ÁöÑÂÆΩÂ∫¶„ÄÇÊ≠§Á©∫Ê†º‰º†ÊâøÁ©∫Ê†ºÂÆ∂Êóè‰∏ÄË¥ØÁöÑÁâπÊÄßÔºöÈÄèÊòéÁöÑÔºåÂÖ∂Âç†ÊçÆÁöÑÂÆΩÂ∫¶Ê≠£Â•ΩÊòØ 1/2 ‰∏™‰∏≠ÊñáÂÆΩÂ∫¶ÔºåËÄå‰∏îÂü∫Êú¨‰∏ä‰∏çÂèóÂ≠ó‰ΩìÂΩ±Âìç„ÄÇ &amp;emsp;ÂÆÉÂè´‚ÄúÂÖ®ËßíÁ©∫Ê†º‚ÄùÔºåÂÖ®Áß∞ÊòØ Em SpaceÔºåem ÊòØÂ≠ó‰ΩìÊéíÂç∞Â≠¶ÁöÑËÆ°ÈáèÂçï‰ΩçÔºåÁõ∏ÂΩì‰∫éÂΩìÂâçÊåáÂÆöÁöÑÁÇπÊï∞„ÄÇ‰æãÂ¶ÇÔºå1 em Âú® 16px ÁöÑÂ≠ó‰Ωì‰∏≠Â∞±ÊòØ 16px„ÄÇÊ≠§Á©∫Ê†º‰πü‰º†ÊâøÁ©∫Ê†ºÂÆ∂Êóè‰∏ÄË¥ØÁöÑÁâπÊÄßÔºöÈÄèÊòéÁöÑÔºåÂÖ∂Âç†ÊçÆÁöÑÂÆΩÂ∫¶Ê≠£Â•ΩÊòØ 1 ‰∏™‰∏≠ÊñáÂÆΩÂ∫¶ÔºåËÄå‰∏îÂü∫Êú¨‰∏ä‰∏çÂèóÂ≠ó‰ΩìÂΩ±Âìç„ÄÇ &amp;thinsp;ÂÆÉÂè´Á™ÑÁ©∫Ê†ºÔºåÂÖ®Áß∞ÊòØ Thin Space„ÄÇÊàë‰ª¨‰∏çÂ¶®Áß∞‰πã‰∏∫&quot;Áò¶Âº±Á©∫Ê†º&quot;;ÔºåÂ∞±ÊòØËØ•Á©∫Ê†ºÂç†ÊçÆÁöÑÂÆΩÂ∫¶ÊØîËæÉÂ∞è„ÄÇÂÆÉÊòØ em ‰πãÂÖ≠ÂàÜ‰πã‰∏ÄÂÆΩ„ÄÇ &amp;zwnj;ÂÆÉÂè´Èõ∂ÂÆΩ‰∏çËøûÂ≠óÔºåÂÖ®Áß∞ÊòØ Zero Width Non JoinerÔºåÁÆÄÁß∞&quot;ZWNJ&quot;ÔºåÊòØ‰∏Ä‰∏™‰∏çÊâìÂç∞Â≠óÁ¨¶ÔºåÊîæÂú®ÁîµÂ≠êÊñáÊú¨ÁöÑ‰∏§‰∏™Â≠óÁ¨¶‰πãÈó¥ÔºåÊäëÂà∂Êú¨Êù•‰ºöÂèëÁîüÁöÑËøûÂ≠óÔºåÊîπ‰∏∫‰ª•Ëøô‰∏§‰∏™Â≠óÁ¨¶ÂéüÊú¨ÁöÑÂ≠óÂΩ¢Êù•ÁªòÂà∂„ÄÇUnicode ‰∏≠ÁöÑÈõ∂ÂÆΩ‰∏çËøûÂ≠óÂ≠óÁ¨¶Êò†Â∞Ñ‰∏∫&amp;ldquo;&amp;rdquo;Ôºàzero width non-joinerÔºåU+200CÔºâÔºåHTML Â≠óÁ¨¶ÂÄºÂºïÁî®‰∏∫:&amp;zwnj; &amp;zwj;ÂÆÉÂè´Èõ∂ÂÆΩËøûÂ≠óÔºåÂÖ®Áß∞ÊòØ Zero Width JoinerÔºåÁÆÄÁß∞‚ÄúZWJ‚ÄùÔºåÊòØ‰∏Ä‰∏™‰∏çÊâìÂç∞Â≠óÁ¨¶ÔºåÊîæÂú®Êüê‰∫õÈúÄË¶ÅÂ§çÊùÇÊéíÁâàËØ≠Ë®ÄÔºàÂ¶ÇÈòøÊãâ‰ºØËØ≠„ÄÅÂç∞Âú∞ËØ≠ÔºâÁöÑ‰∏§‰∏™Â≠óÁ¨¶‰πãÈó¥Ôºå‰ΩøÂæóËøô‰∏§‰∏™Êú¨‰∏ç‰ºöÂèëÁîüËøûÂ≠óÁöÑÂ≠óÁ¨¶‰∫ßÁîü‰∫ÜËøûÂ≠óÊïàÊûú„ÄÇÈõ∂ÂÆΩËøûÂ≠óÁ¨¶ÁöÑ Unicode Á†Å‰ΩçÊòØ U+200D(HTML: ‚Äç &amp;zwj;Ôºâ„ÄÇ Ê≠§Â§ñÔºåÊµèËßàÂô®Ëøò‰ºöÊää‰ª•‰∏ãÂ≠óÁ¨¶ÂΩì‰ΩúÁ©∫ÁôΩËøõË°åËß£ÊûêÔºöÁ©∫Ê†ºÔºà&amp;#x0020;Ôºâ„ÄÅÂà∂Ë°®‰ΩçÔºà&amp;#x0009;Ôºâ„ÄÅÊç¢Ë°åÔºà&amp;#x000A;ÔºâÂíåÂõûËΩ¶Ôºà &amp;#x000D;ÔºâËøòÊúâ‰∏≠ÊñáÂÖ®ËßíÁ©∫Ê†ºÔºà&amp;#12288;ÔºâÁ≠âÁ≠â„ÄÇ Áî®tspanÊ†áÁ≠æÂíåxml:space=&quot;preserve&quot;‰πüÂèØ‰ª•Ëß£ÂÜ≥ 2023-08-02ÊúÄËøëÊÉ≥ÊääÊüê‰∏™Ê∂àÊÅØÊîæÂú®ÁªÑ‰ª∂Êñá‰ª∂‰∏≠ËøõË°åÁõëÂê¨Ôºå‰ΩÜÂèëÁé∞Ê∂àÊÅØÊÄªÁ∫øÂèØËÉΩËøòÊ≤°Ê≥®ÂÜåÂ•ΩÔºåËøô‰∏™Êó∂ÂÄôÂèØ‰ª•Áî®DOMContentLoadedËøô‰∏™‰∫ã‰ª∂„ÄÇ ÂÆòÊñπÊñáÊ°£ÔºöWindow: DOMContentLoaded event ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåËÑöÊú¨Âè™ÈòªÂ°ûÂÖ∂ÂêéÁöÑ dom ÂÖÉÁ¥†Ëß£Êûê defer ÂëäËØâÊµèËßàÂô®ÔºåËÑöÊú¨ÈúÄË¶ÅÁ≠â HTML Ëß£ÊûêÂÆåÂêéÊâßË°åÔºàÂ§ö‰∏™ defer ËÑöÊú¨ÊåâÂá∫Áé∞È°∫Â∫èÊâßË°åÔºâ async ÂëäËØâÊµèËßàÂô®ÔºåËÑöÊú¨ÂºÇÊ≠•‰∏ãËΩΩÔºà‰∏é HTML Ëß£Êûê‰∏ÄËµ∑ËøõË°åÔºâÔºå‰∏ãËΩΩÂÆåÂêé‰ºöÁ´ãÂç≥ÊâßË°åÔºà‰∏ç‰ºöÁ≠â HTML Ëß£ÊûêÂÆåÔºâ ÊâÄ‰ª•‰∏ÄËà¨Êù•ËØ¥ÔºåÂ¶ÇÊûúËÑöÊú¨‰∏é HTML ÊúâÂÖ≥ÔºåÂ∞±Áî® deferÔºåÊó†ÂÖ≥Â∞±Áî® async 2023-07-26localeComparejs Ëá™ÁÑ∂ÊéíÂ∫èÔºölocaleCompare Áî® localeCompare ÂÆûÁé∞Â≠óÁ¨¶‰∏≤Ëá™ÁÑ∂ÊéíÂ∫è 1arr.sort((a, b) =&gt; b.localeCompare(a)); ÂØπË±°ÈÅçÂéÜÁöÑÈÄüÂ∫¶ÊØîËæÉObject.keys()ÔºåObject.values()ÔºåObject.entries()ÁöÑÊÄßËÉΩÂ∑ÆÂºÇÂ¶Ç‰ΩïÂë¢Ôºü 123456789101112131415161718192021222324let res = &#123;&#125;;for(let i=0;i&lt;100_0000;i++)&#123; res[i]=i;&#125;let count=0;// console.time('Object.keys()')// for(let k of Object.keys(res||&#123;&#125;))&#123;// count++;// &#125;// console.timeEnd('Object.keys()')// count=0;// console.time('Object.values()')// for(let v of Object.values(res||&#123;&#125;))&#123;// count++;// &#125;// console.timeEnd('Object.values()')count=0;console.time('Object.entries()')for(let [k,v] of Object.entries(res||&#123;&#125;))&#123; count++;&#125;console.timeEnd('Object.entries()') ÊµãËØïÁªìÊûúÊòØ values()ÈÄüÂ∫¶ÊúÄÂø´Ôºåvalues()ÈÄüÂ∫¶&gt;keys()ÈÄüÂ∫¶&gt;entries()ÈÄüÂ∫¶ values()Â§ßÊ¶ÇÂè™Êúâ keys()ÊâßË°åÊó∂Èó¥ÁöÑÂçÅÂàÜ‰πã‰∏ÄÔºåËÄå keys ÊâßË°åÊó∂Èó¥Â§ßÊ¶ÇÊòØ entries ÁöÑ‰∏ÄÂçä ËÄåÂÜôÊ≥ï‰∏äÊääObject.keysÂÜôÂú® for ÈáåÈù¢Âíå for Â§ñÈù¢ÂÖ∂ÂÆûÊòØ‰∏ÄÊ†∑ÁöÑÈÄüÂ∫¶Ôºö 1234for(let v of Object.keys(res||&#123;&#125;))const values = Object.keys(res||&#123;&#125;);for(let v of values) for Âæ™ÁéØÂè™‰ºöÂú®ÂàùÂßãÂåñÁöÑÊó∂ÂÄôËÆ°ÁÆó‰∏ÄÊ¨°Object.keysÔºå‰ª•‰∏ã‰ª£Á†ÅÂèØ‰ª•È™åËØÅÔºö 123456789const a = &#123;&#125;;for (let i = 0; i &lt; 10; i++) &#123; a[i] = i;&#125;for (let k of Object.keys(a || &#123;&#125;)) &#123; a[k + "a"] = k + "a"; console.log("1");&#125;console.log(a); 1Âè™‰ºöÊâìÂç∞ 10 Ê¨° ‰ª•‰∏ãÂÜôÊ≥ïÁ±ª‰ººÔºö 12345678910111213141516const a = &#123;&#125;;for (let i = 0; i &lt; 100_0000; i++) &#123; a[i] = i;&#125;let count = 0;console.time("a");for (let k of Object.keys(a || &#123;&#125;)) &#123; a[k] = k + "a";&#125;console.timeEnd("a");count = 0;console.time("b");for (let i = 0, keys = Object.keys(a || &#123;&#125;); i &lt; keys.length; i++) &#123; a[keys[i]] = keys[i] + "a";&#125;console.timeEnd("b"); for of Âíå for infor ofÁî®‰∫éÈÅçÂéÜÂèØËø≠‰ª£ÂØπË±°ÔºàÊï∞ÁªÑ‰πãÁ±ªÁöÑÔºâÔºåfor inÁî®‰∫éÈÅçÂéÜÂØπË±° for inÈÄüÂ∫¶Ë∑üfor of+Object.keys()Â∑Æ‰∏çÂ§öÔºåÂå∫Âà´ÊòØ in ‰ºöÈÅçÂéÜÂà∞ prototype ‰∏äÁöÑÂ±ûÊÄßÔºåËÄåÂêéËÄÖÂàô‰∏ç‰ºö„ÄÇÊâÄ‰ª•Â¶ÇÊûú‰∏çÊÉ≥ÈÅçÂéÜÂà∞ÂéüÂûã‰∏äÁöÑÂ±ûÊÄßÔºåË¶Å‰πàÂà´Áî®for inÔºåË¶Å‰πàË¶ÅÂ§öÂÜô‰∏Ä‰∏™ obj.hasOwnProperty ÁöÑÂà§Êñ≠ 1234567891011121314151617181920class A &#123; a = "a";&#125;class B extends A &#123; b = "b";&#125;let bb = new B();bb.__proto__.c = "c";for (let k in bb) &#123; if (bb.hasOwnProperty(k)) &#123; console.log(k); &#125; // console.log(k)&#125;for (let k of Object.keys(bb || &#123;&#125;)) &#123; console.log(k);&#125; ÂÆòÊñπÊñáÊ°£Ôºö for of for in for ofÂíå C ËØ≠Ë®ÄËØ≠Ê≥ïÁöÑÈÅçÂéÜÈÄüÂ∫¶ÊØîËæÉ12345678910111213let res = new Array(100_0000);let count = 0;console.time("a");for (let i = 0; i &lt; res.length; i++) &#123; count++;&#125;console.timeEnd("a");count = 0;console.time("b");for (let i of res) &#123; count++;&#125;console.timeEnd("b"); Â§ßÊ¶ÇÊúâ 6 ÂÄçÁöÑÂ∑ÆË∑ù 2023-07-19Ê∂àÊÅØÊÄªÁ∫øÂíåÂáΩÊï∞Ë∞ÉÁî®ÁöÑÂå∫Âà´ÔºöÊ∂àÊÅØÊÄªÁ∫øÁî®‰∫Ü‰∏Ä‰∏™ÈõÜÂêàÊù•Êî∂ÈõÜ‰∫ã‰ª∂ÂõûË∞ÉÂáΩÊï∞ÔºåÂØºËá¥‰∫ÜÊ∂àÊÅØÊÄªÁ∫øÂèØ‰ª•Âú®Â§ñÈÉ®Èõ∂Êï£ÁöÑÊ≥®ÂÜåÂõûË∞ÉÔºåËÄåÂáΩÊï∞Ë∞ÉÁî®ÂàôÁõ∏ÂΩì‰∫éÊòØÂú®Ê∂àÊÅØÂèëÂá∫ÁöÑÂú∞ÊñπÈõÜ‰∏≠Ê≥®ÂÜåÊ∂àÊÅØÁõëÂê¨„ÄÇÊâÄ‰ª•Ê∂àÊÅØÊÄªÁ∫øÂæàÂ•ΩÁöÑÂØπ‰æùËµñËøõË°å‰∫ÜÂÄíÁΩÆÔºåÂõ†‰∏∫ÔºåÊòØ‰∫ã‰ª∂ÂõûË∞ÉÂáΩÊï∞‰æùËµñ‰∫Ü‰∫ã‰ª∂ÔºåËÄå‰∏çÊòØ‰∫ã‰ª∂‰æùËµñ‰∫Ü‰∫ã‰ª∂ÁöÑÂìçÂ∫îÂáΩÊï∞„ÄÇ ÊâÄ‰ª•‰ªéÊú¨Ë¥®‰∏äÊù•ËØ¥ÔºåÂ∞±ÊòØ A ‰æùËµñ BÔºåËøòÊòØ B ‰æùËµñ A ÁöÑÈóÆÈ¢ò„ÄÇ‰Ω†Êúâ‰∏ÄÊÆµÈÄªËæë A Âíå‰∏ÄÊÆµÈÄªËæë BÔºåÂÖ∂‰∏≠ B Ë¶ÅÂú® A ‰πãÂêéÊâßË°åÔºåÂ¶ÇÊûú‰Ω†ËÆ§‰∏∫Â∫îËØ•ÊòØ A ‰æùËµñ‰∫Ü BÔºåÈÇ£‰πàÁõ¥Êé•Ë∞ÉÁî®Âç≥ÂèØÔºåÂ¶ÇÊûú‰Ω†ËÆ§‰∏∫ÊòØ B ‰æùËµñ‰∫Ü AÔºåÈÇ£‰πàÂ∞±Áî®Ê∂àÊÅØÊÄªÁ∫ø„ÄÇ Áî®ÊµèËßàÂô®ÁöÑ window.postMessage ÊàñËÄÖ worker.postMessageÔºåÂèØ‰ª•ÊääÊ∂àÊÅØÂèëÂà∞ÂÖ∂‰ªñÁöÑ window ÊàñËÄÖ worker Êù•ÊâßË°å‰∫ã‰ª∂ÂõûË∞ÉÂáΩÊï∞„ÄÇ‰ΩÜËøôÊ†∑ÁöÑËØùÂ∞±ÊòØÂºÇÊ≠•ÊâßË°å‰∫Ü„ÄÇ 12345window1.postMessage("hello", "*");window2.addEventListener("message", (event) =&gt; &#123; // event.source is window1 // event.data is "hello"&#125;); ÂºÇÊ≠•ÁöÑ‰∏çÊòØÊ∂àÊÅØÊÄªÁ∫øÔºåËÄåÊòØ postMessage„ÄÇ 2023-07-17ÁßªÂä® iframe ÂÖÉÁ¥†‰ºöÈÄ†Êàê iframe ÈáçÊñ∞Âä†ËΩΩ srcÔºåÊâÄ‰ª•Â¶ÇÊûúÊÉ≥ÁßªÂä® iframe ËÄå‰∏çÂºïËµ∑Âà∑Êñ∞Â∞±Âè™ËÉΩÁî® css„ÄÇ Â¶Ç‰ΩïÂú®‰∏ç‰∏¢Â§±Áä∂ÊÄÅÁöÑÊÉÖÂÜµ‰∏ãÂú® DOM ‰∏≠ÁßªÂä® iFrameÔºüÊó†ËÆ∫‰ΩïÊó∂ÈôÑÂä† iframe Âπ∂Â∫îÁî®‰∫Ü src Â±ûÊÄßÔºåÂÆÉÈÉΩ‰ºöËß¶Âèë‰∏Ä‰∏™Âä†ËΩΩÊìç‰ΩúÔºåËøô‰∏éÈÄöËøá JS ÂàõÂª∫ Image Ê†áËÆ∞Êó∂Á±ª‰ºº„ÄÇÂõ†Ê≠§ÔºåÂΩìÊÇ®Âà†Èô§Âπ∂ÈôÑÂä†ÂÆÉ‰ª¨Êó∂ÔºåÂÆÉ‰ª¨ÊòØÂÖ®Êñ∞ÁöÑÂÆû‰ΩìÔºåÂÆÉ‰ª¨‰ºöÂà∑Êñ∞„ÄÇËøôÂ∞±ÊòØ window.location = window.location ÈáçÊñ∞Âä†ËΩΩÈ°µÈù¢ÁöÑÊñπÂºè„ÄÇÊàëÊâÄÁü•ÈÅìÁöÑÈáçÊñ∞ÂÆö‰Ωç iframes ÁöÑÂîØ‰∏ÄÊñπÊ≥ïÊòØÈÄöËøá CSS„ÄÇ ÊâÄ‰ª•ÊúÄÂ•ΩÁöÑÊñπÊ≥ïÂÆûÈôÖ‰∏äÊòØÂºÉÁî® iframeÔºåÊîπÁî® div ÊàñËÄÖ canvas„ÄÇ Âè¶Â§ñÂ∞±ÊòØÊàëÂèëÁé∞ÁßªÂä® dom ÂÖÉÁ¥†Âè™ÈúÄË¶Å appendChild Âà∞Êñ∞ÁöÑ‰ΩçÁΩÆÂç≥ÂèØÔºåÂπ∂‰∏çÈúÄË¶ÅÂà†Èô§Âéü dom„ÄÇ importmapjavascript Áé∞Âú®ÊîØÊåÅË∑®ËÑöÊú¨ import ‰∫ÜÔºöJavaScript import maps are now supported cross-browser 12345678910111213141516171819&lt;script type="importmap"&gt; &#123; "imports": &#123; "browser-fs-access": "https://unpkg.com/browser-fs-access@0.33.0/dist/index.modern.js" &#125; &#125;&lt;/script&gt;&lt;button&gt;Select a text file&lt;/button&gt;&lt;script type="module"&gt; import &#123; fileOpen &#125; from "browser-fs-access"; const button = document.querySelector("button"); button.addEventListener("click", async () =&gt; &#123; const file = await fileOpen(&#123; mimeTypes: ["text/plain"], &#125;); console.log(await file.text()); &#125;);&lt;/script&gt; 2023-07-08ÂÖ≥‰∫é iframe ÁöÑÂü∫Êú¨Áü•ËØÜÔºö Ëé∑ÂèñÂ§ñÂ±Ç windowÔºöwindow.parent Ëé∑ÂèñÈ°∂Â±Ç window: window.top Ëé∑ÂèñÂΩìÂâçÊñáÊ°£ÊâÄÂú®ÁöÑ iframe ÂÖÉÁ¥†: window.frameElement Ëé∑ÂèñÂΩìÂâçÊñáÊ°£ÂÜÖÊâÄÊúâÁöÑ iframe: window.framesÔºåËøôÊòØ‰∏™ÂèØËø≠‰ª£ÂØπË±°ÔºåÂèØ‰ª•ÂÉèÊï∞ÁªÑ‰∏ÄÊ†∑‰ΩøÁî® 2023-07-07Âú®Á´ãÂàõ EDA ÁöÑÁºñÁ®ã‰∏≠ÁªèÂ∏∏ÈÅáÂà∞ÁöÑÈóÆÈ¢òÔºö ÂÖ¨Áî®Ê∑∑‰π±Ôºå‰ª£Á†ÅËÖêÁÉÇÔºàÂèÇÊï∞Êó†Á∫¶ÂÆöÔºåÈöèÊÑè‰øÆÊîπÔºâ Êüê‰∫õÂú∞ÊñπÊ≤°ÊúâÂêåÊ≠•Êõ¥Êñ∞ÔºàÊØîÂ¶Ç‰øÆÊîπÂêçÁß∞ÔºåÈúÄË¶ÅÂêåÊ≠•Êõ¥Êñ∞Â±ûÊÄßÈù¢ÊùøÔºåÂ∫ïÈÉ®Â∫ìÔºåtab È°µÔºåÁîªÂ∏ÉÁ≠âÁ≠âËØ∏Â§öÂú∞ÊñπÔºâ 2023-07-06ÊúÄËøëÂêå‰∫ãÈÅáÂà∞‰∏Ä‰∏™ react ÁöÑÂùëÔºå‰ªñÊää root ÁºìÂ≠ò‰∫ÜËµ∑Êù•ÔºåÁÑ∂ÂêéÂèëÁé∞Êï¥‰∏™ÁªÑ‰ª∂‰∏çÊõ¥Êñ∞Ôºö 12root = root || ReactDOMClient.createRoot(dom);root.render(&lt;App &#123;...props&#125;&gt;&lt;/App&gt;); ‰∏çÁºìÂ≠òÂ∞±ÂèØ‰ª•Êõ¥Êñ∞‰∫Ü„ÄÇ ÂÆûÈôÖ‰∏ä react ÁöÑ useState ÊòØÂè™Âú®ÂàùÂßãÂåñÁöÑÊó∂ÂÄôÁî®ÂèÇÊï∞ÁöÑÂÄºÁöÑÔºåËÄåÊÉ≥Ë¶ÅËÆ©ÁªÑ‰ª∂ÈáçÊñ∞ÂàùÂßãÂåñÔºåÂèØ‰ª•Âä† keyÔºåkey ÊîπÂèòÔºåÂ∞±‰ºöÈáçÊñ∞ÂàùÂßãÂåñ„ÄÇ Áà∂ÁªÑ‰ª∂ renderÔºåÂ≠êÁªÑ‰ª∂‰πü‰ºö renderÔºå‰ΩÜ‰∏ç‰∏ÄÂÆö‰ºöÁî® useState ÈáåÈù¢ÁöÑÂÄºÔºàÈô§ÈùûÂ≠êÁªÑ‰ª∂ÈáçÊñ∞ÂàùÂßãÂåñÔºâ Áà∂ÁªÑ‰ª∂ÈáçÊñ∞ÂàùÂßãÂåñÔºåÂ≠êÁªÑ‰ª∂‰πü‰ºöÈáçÊñ∞ÂàùÂßãÂåñÔºå‰∏î‰∏ÄÂÆö‰ºöÁî® useState ÈáåÈù¢ÁöÑÂÄº 2023-06-15Â¶Ç‰ΩïÂú® win7 ‰∏äÂÆâË£Ö obsidian ÁÆÄËÄåË®Ä‰πãÂ∞±ÊòØÂéª github ‰∏ä‰∏ãËΩΩ 1.1.x ÁöÑËÄÅÁâàÊú¨ÁöÑ obsidianÔºåÊàë‰∏ãËΩΩÁöÑÊòØ 1.1.16 2023-06-13ÊêûÂÆö‰∫Ü obsidian Â§öÁ´ØÂêåÊ≠•ÔºåÈÄöËøá git Êèí‰ª∂Ëá™Âä®ÂíåËøúÁ´Ø github ÂêåÊ≠•„ÄÇÂèØ‰ª•ÊÑâÂø´ÁöÑÂú®ÊâãÊú∫‰∏äÁ†ÅÂçöÂÆ¢‰∫Ü„ÄÇËÄå‰∏îÊçÆËØ¥ obsidian Êå∫Â•ΩÁî®ÁöÑÔºåÂ∫îËØ•ÊØî vscode ÂÜôÂçöÂÆ¢Âº∫Âêß„ÄÇ Ê∑ªÂä†‰∫Ü google analyticsÔºåGA4„ÄÇÂú®‰∏ªÈ¢òÈáåÈù¢ÊâæÂà∞google-analytics.swigÔºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 12345678910&#123;% if theme.google_analytics %&#125;&lt;script async src=&quot;https://www.googletagmanager.com/gtag/js?id=&#123;&#123; theme.google_analytics &#125;&#125;&quot;&gt;&lt;/script&gt;&lt;script&gt; window.dataLayer = window.dataLayer || []; function gtag()&#123;dataLayer.push(arguments);&#125; gtag(&apos;js&apos;, new Date()); gtag(&apos;config&apos;, &apos;&#123;&#123; theme.google_analytics &#125;&#125;&apos;);&lt;/script&gt;&#123;% endif %&#125; ‰∏ªÈ¢òÈÖçÁΩÆÊñá‰ª∂_config.yml‰∏≠Ê∑ªÂä†ÂèòÈáèÔºögoogle_analytics: G-xxx Ë∞∑Ê≠åÂàÜÊûêÁúãÊùø 2023-06-10Êêû‰∫Ü‰∏§Â§© kcptunÔºåÊúÄÂêéÂèëÁé∞Â±ÖÁÑ∂Êõ¥Êñ∞‰∏Ä‰∏ãÁâàÊú¨Â∞±Ëß£ÂÜ≥‰∫ÜÈóÆÈ¢ò ÈóÆÈ¢òÊèèËø∞Ôºö ÊâãÊú∫‰∏äÁî® kcptun ÊúâÈóÆÈ¢òÔºàÁ∫Ø shadowsocks Êó†ÈóÆÈ¢òÔºâÔºå‰ΩÜÁîµËÑë‰∏äÊ≤°ÈóÆÈ¢ò„ÄÇ ÊàëËß£ÂÜ≥ÈóÆÈ¢òÊòØ‰∏ªÁ∫øÊòØÊääÊä•Èîô‰ø°ÊÅØÊîæÂà∞Ë∞∑Ê≠å‰∏äÈù¢ÊêúÔºåËøôÂ∑≤ÁªèÊòØÊàëÊÉØÁî®ÁöÑÊâãÊÆµ‰∫ÜÔºåÊêú‰∫Ü‰∏ÄÂ§ßÊ≥¢ÔºåÊääÂèØËÉΩÁöÑÊñπÊ≥ïÈÉΩËØï‰∫Ü‰∏ÄÈÅçÔºåÊ≠£ÂΩìÊàëÂø´Ë¶ÅÊîæÂºÉÁöÑÊó∂ÂÄôÔºåÊàëËøòÊòØÊêúÂà∞‰∫Ü‰∏Ä‰∏™Á≠îÊ°àÔºöUpgrading to latest kcptun solve this problemÔºå‰ΩÜÊòØÁî®ÂÖ∂‰ªñÁöÑÊä•Èîô‰ø°ÊÅØÊêúÂà∞ÁöÑÔºå‰∏ÄÂÖ±Êúâ‰∏§‰∏™Êä•Èîô‰ø°ÊÅØÔºåÂú®ÂÆâÂçìÁâà shadowsocks 5.3.3 ‰∏äÊòØÔºöunable to resolve host &quot;cp.cloudflare.com&quot;: no address associated with hostnameÔºåÂú®ÂÆâÂçìÁâà shadowsocks 4.8.7 ‰∏äÊòØÔºölibsslocal exits too fast (exit code 70) ‰ª•‰∏ãÊòØÊàëËØïËøáÁöÑÂäûÊ≥ïÔºö Êää shadowsocks ÊúçÂä°Á´ØÊç¢Êàê goÔºåhttps://github.com/shadowsocks/go-shadowsocks2„ÄÇPythonÁâà‰πüËØïËøáÔºåshadowsocks-libev‰πüËØïËøá Êç¢ÂÆ¢Êà∑Á´ØÁâàÊú¨ÔºåÂÆâÂçìÁâà shadowsocks 5.3.3Ôºå5.2.6Ôºå5.1.1Ôºå4.8.7 Êç¢ kcptun ÁöÑÁ´ØÂè£ Âú®ÊúçÂä°Âô®ÂºÄÊîæ 53 Á´ØÂè£ÔºåÂÆâË£Ö dns ÊúçÂä° ÁªìËÆ∫Ôºå‰ª•ÂêéÂá∫ÈóÆÈ¢òÔºåÁ¨¨‰∏ÄËß£ÂÜ≥ÊñπÊ°àÂ∫îËØ•ÊòØÔºåÁ°Æ‰øùÊâÄÊúâËΩØ‰ª∂ÁâàÊú¨ÈÉΩÊòØÊúÄÊñ∞ÁöÑ„ÄÇ ‰ΩøÁî® VPS ÊåñÁüøÊåñÁÇπÊú¨ÂõûÊù•‰πåÈæüÂ∏ÅËøÅÁßªÂà∞‰∫Ü FTMÔºåËÄå‰∏îÊÑüËßâËøô‰∏™È°πÁõÆÂ∑≤ÁªèÊ≠ª‰∫°‰∫ÜÔºåÊúçÂä°Âô®ËøòÊòØÁªßÁª≠ÊåñÈó®ÁΩóÂ∏ÅÂêßÔºåËØ¥ÁúüÁöÑËôöÊãüË¥ßÂ∏ÅÁöÑÁîüÂëΩÂäõÊâçÊòØÊúÄÈáçË¶ÅÁöÑ Â¶Ç‰ΩïÈÅøÂÖç CPU Âç†Êª°Ôºöhttps://www.azurew.com/life/%E6%8C%96%E7%9F%BF/7650.htmlÔºåÊàëÈááÁî®ÁöÑÊòØÂä†-tÂèÇÊï∞ÔºåÈôêÂà∂Á∫øÁ®ãÊï∞ ‰∏ãËΩΩ github release Êñá‰ª∂ÈìæÊé•Ê†ºÂºèÂ¶Ç‰∏ãÔºö 123wget --no-check-certificate --content-disposition https://github.com/xmrig/xmrig/releases/download/v6.19.3/xmrig-6.19.3-linux-x64.tar.gzcurl -LJO https://github.com/ctripcorp/apollo/releases/download/v1.5.1/apollo-adminservice-1.5.1-github.zip 2023-06-08ÊúâËøôÊ†∑‰∏Ä‰∏™ bugÔºåÂú®ÊãñÂä®‰∏Ä‰∏™‰∏âËßíÂõæÊ†áÔºà‰∏ìÈó®Áî®‰∫éÊãñÊãΩÁöÑÁªÑ‰ª∂ÔºâÁöÑÊó∂ÂÄôÔºåÂÖâÊ†áË¶ÅÊòæÁ§∫col-resizeÔºö 1cursor: col-resize; È°πÁõÆ‰∏≠Êúâ‰∏§‰∏™ÂÖ∂‰ªñÁöÑÁªÑ‰ª∂ÁöÑË°®Áé∞ÈÉΩÊòØÁ¨¶ÂêàË¶ÅÊ±ÇÁöÑÔºàÊãñÂä®Êó∂ÂÄôÊòØcol-resizeÔºâÔºå‰ΩÜÊàë‰∏çÊ∏ÖÊ•öÔºåÂéüÁîüÁöÑË°®Áé∞ÊòØ‰ªÄ‰πàÔºåÊâÄ‰ª•‰∏ÄÁõ¥‰ª•‰∏∫ÊòØÊàëËøôËæπÁöÑ‰ª£Á†ÅÊúâÈóÆÈ¢ò„ÄÇ ÂêéÊù•ÂèëÁé∞ÂéüÊù•ÊòØÈÇ£‰∏§‰∏™ÁªÑ‰ª∂ÂÅö‰∫ÜÁâπÊÆäÂ§ÑÁêÜÔºåÂú® mousemove ÁöÑÊó∂ÂÄôÊääËøô‰∏™ cursor ÁöÑÊ†∑ÂºèÂä†Âà∞‰∫Ü body ‰∏ä„ÄÇ ÊúâÁöÑÊó∂ÂÄôÈóÆÈ¢òÁöÑÂÖ≥ÈîÆÂú®‰∫é‰Ω†ÈîÅÂÆöÁöÑËåÉÂõ¥ÔºåÂÅáÂ¶Ç‰∏ÄÂºÄÂßãÂ∞±ÂÖàÂÖ•‰∏∫‰∏ªÊâæÈîô‰∫ÜÊñπÂêëÔºåÈÇ£Â∞±Ê†πÊú¨‰∏çÂèØËÉΩËß£ÂÜ≥ÈóÆÈ¢ò‰∫Ü„ÄÇ ÊÉ≥Ë¶ÅÂºÑÊ∏ÖÊ•öÂéüÁîüÁöÑË°®Áé∞ÔºåÂÖ∂ÂÆûÂèØ‰ª•ÂÜô‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠êÔºåÊàñËÄÖ‰Ω†ÁöÑÁªÑ‰ª∂Ë∂≥Â§üÁÆÄÂçïÔºå‰Ω†Â∞±ÂèØ‰ª•Ëá™‰ø°ÁöÑËÆ§‰∏∫ÔºåÈóÆÈ¢ò‰∏çÂá∫Âú®‰Ω†ËøôËæπÔºåËΩ¨ËÄåÂºÄÂßãÊÄùËÄÉÂÖ∂‰ªñÁöÑÂèØËÉΩÊÄß„ÄÇ 2023-06-07vite ÊâìÂåÖ‰ΩøÁî®Áõ∏ÂØπË∑ØÂæÑÂùëÁàπÁöÑ vite ÊâìÂåÖÈªòËÆ§‰ΩøÁî®ÁªùÂØπË∑ØÂæÑÔºåÊÉ≥Ë¶Å‰ΩøÁî®Áõ∏ÂØπË∑ØÂæÑÂèØ‰ª•Âú®ÈÖçÁΩÆ‰∏≠Â°´Ôºöbase: &#39;./&#39; ‰∏∫‰ªÄ‰πà vite ÊâìÂåÖÂêé dist Êñá‰ª∂Êó†Ê≥ïÁõ¥Êé•ËøêË°å ResizeObserverÁõëÂê¨ dom ÁöÑÂÆΩÈ´òÂèòÂåñÔºöResizeObserver ÊØîÂ¶ÇÊàëÂÅö‰∏Ä‰∏™ scrollButton ÁªÑ‰ª∂ÔºàÁî®Êù•Êõø‰ª£Èº†Ê†áÊªöËΩÆÔºåÂÆûÁé∞ÁÇπÂáªËß¶Âèë scrollÔºâÔºåÂ∞±Ë¶ÅÁõëÂê¨ÊªöÂä®ÂØπË±°Áà∂Á∫ßÁöÑÂÆΩÈ´òÂèòÂåñÊù•ÊéßÂà∂Ëøô‰∏™ scrollButton ÁªÑ‰ª∂ÁöÑÊòæÁ§∫ÈöêËóè nginxnginx ÁöÑÈÖçÁΩÆ‰ΩçÁΩÆÔºö/etc/nginx‰∏≠ÔºåÂú®ËØ•ÁõÆÂΩï‰∏ãÔºå‰∏ªË¶ÅÁöÑÈÖçÁΩÆÊñá‰ª∂ÊòØ nginx.conf 2023-06-06‰π∞‰∫ÜÂõΩÂ§ñÁöÑÂüüÂêçÂíåÊúçÂä°Âô®ÔºåËøôÊ†∑Â∞±ÂèØ‰ª•ÈÅøÂÖçÂõΩÂÜÖÁâπÂà´È∫ªÁÉ¶ÁöÑÂ§áÊ°à‰∫ÜÔºåËØùËØ¥ÂõΩÂ§ñÁöÑÂüüÂêçÂíåÊúçÂä°Âô®ÁúüÊòØ‰æøÂÆúÂïäÔºö ÊúçÂä°Âô®ÔºàVPSÔºâÔºöracknerd.com ÂüüÂêçÔºöname.com ÊúçÂä°Âô®Ë¥≠‰π∞ÂèÇËÄÉ‰∫Ü‰∏ÄÁØáÊñáÁ´†Ôºöhttps://p3terx.com/archives/cheap-vps-racknerd.htmlÔºåÂ§ö‰∫èËøôÁØáÊñáÁ´†Êâç‰π∞Âà∞‰∫Ü‰æøÂÆúÁöÑ„ÄÇ Windows Âπ≥Âè∞Â•ΩÁî®ÁöÑËøúÁ®ã shell Â∑•ÂÖ∑ÔºöWindTermMac OS Âπ≥Âè∞Â•ΩÁî®ÁöÑËøúÁ®ã shell Â∑•ÂÖ∑ÔºöFinalShell Áé∞Âú® Windows Âπ≥Âè∞‰πüÊúâ FinalShell ‰∫ÜÔºå‰ΩìÈ™åÁªà‰∫éÂèàÁªü‰∏ÄËµ∑Êù•‰∫Ü ‰ª•ÂâçÊê≠ wordpress ÂçöÂÆ¢ÁöÑÊó∂ÂÄôÔºåË¢´ÁõóËøá‰∏§Ê¨°ÔºåË∑üÂêå‰∫ãËÆ®ËÆ∫‰∫Ü‰πãÂêéÔºåÂèëÁé∞ÂèØËÉΩÊòØÂõ†‰∏∫Êàë‰ΩøÁî®‰∫Ü root Ë¥¶Âè∑ËøúÁ®ãÁôªÂΩïÔºåË¶ÅËÆ∫ÂÆâÂÖ®ÊÄßÁöÑËØùÔºåÊúÄÂ•ΩÁöÑÊñπÂºèÊòØÔºö Á¶ÅÊ≠¢ root Ë¥¶Âè∑ËøúÁ®ãÁôªÂΩïÔºàÈÇ£‰πàÂà´‰∫∫ÊÉ≥Ë¶ÅÁôªÂΩïÔºåÂ∞±Âè™ËÉΩÁåú‰Ω†ÁöÑË¥¶Âè∑Âêç+ÂØÜÁ†ÅÔºåÂ¶ÇÊûú‰Ω†ÂºÄÊîæ‰∫Ü root ÁôªÂΩïÔºåÂà´‰∫∫Â∞±Âè™ÈúÄË¶ÅÁåú root ÂØÜÁ†ÅÔºâ Êää ssh Á´ØÂè£Êîπ‰∏∫Èùû 22 Á´ØÂè£ÔºåÈÇ£ÈªëÂÆ¢ÊÉ≥Ë¶ÅÁ†¥Ëß£ÔºåÂ∞±ÈúÄË¶ÅÁåúÁ´ØÂè£ ÊôÆÈÄöË¥¶Âè∑‰∏çÁªô root ÊùÉÈôêÔºåËøôÊ†∑Âç≥‰æøÊôÆÈÄöË¥¶Âè∑Ë¢´ÁõóÔºåÊÉÖÂÜµ‰πü‰∏çÁÆó‰∏•Èáç ËÆæÁΩÆ‰∏Ä‰∏™Âº∫ÁöÑ root ÂØÜÁ†Å ËøôÊ†∑‰∏ÄÂ•óÁªÑÂêàÊã≥Êâì‰∏ãÊù•ÔºåÈªëÂÆ¢ÊÉ≥Ë¶ÅËé∑Âèñ‰Ω†ÊúçÂä°Âô®ÁöÑÊúÄÈ´òÊùÉÈôêÔºåÈ¶ñÂÖàË¶ÅÁü•ÈÅì‰Ω†ÁöÑ ssh Á´ØÂè£ÔºåÁÑ∂ÂêéË¶ÅÁü•ÈÅì‰∏ÄÂØπÊôÆÈÄöË¥¶Âè∑ÂØÜÁ†ÅÔºåÊúÄÂêéË¶ÅÁü•ÈÅì root ÁöÑÂØÜÁ†ÅÔºåÊâçËÉΩÊúÄÁªàËé∑ÂæóÊúÄÈ´òÊùÉÈôê„ÄÇÁõ∏ÊØî‰∫éÂè™Èù† root ÂØÜÁ†ÅÁöÑÂº∫Â∫¶ÔºåÂÆâÂÖ®‰∫ÜËÆ∏Â§öËÆ∏Â§ö„ÄÇ ‰ª•‰∏ãÊòØÈúÄË¶ÅÁî®Âà∞ÁöÑ linux ÂëΩ‰ª§Ôºö Êñ∞Âª∫Áî®Êà∑Ôºöuseradd &lt;yourname&gt; ‰øÆÊîπÁî®Êà∑ÂØÜÁ†ÅÔºöpasswd &lt;yourname&gt; ‰øÆÊîπ ssh Á´ØÂè£Âè∑ÔºöÁºñËæë/etc/ssh/sshd_configÊñá‰ª∂Ôºå‰øÆÊîπ#Port 22‰∏∫ÔºöPort xxxx Á¶ÅÊ≠¢ root Ë¥¶Âè∑ËøúÁ®ãÁôªÂΩïÔºöÁºñËæë/etc/ssh/sshd_configÊñá‰ª∂Ôºå‰øÆÊîπ#PermitRootLogin yes‰∏∫ÔºöPermitRootLogin no ‰øÆÊîπÂÆå/etc/ssh/sshd_configÊñá‰ª∂ÂêéÔºåÈúÄË¶ÅÈáçÂêØ‰∏Ä‰∏ãÊúçÂä°Ôºö 12setenforce 0sudo service sshd restart ‰øÆÊîπÂÆåÁ´ØÂè£ÔºåËøòË¶ÅËÆ©Èò≤ÁÅ´Â¢ôÊîæË°åÊ≠§Á´ØÂè£Ôºö 123456// ÊîæË°åÊåáÂÆöÁ´ØÂè£firewall-cmd --zone=public --add-port=xxxx/tcp --permanent// ÈáçÂêØÈò≤ÁÅ´Â¢ôsystemctl restart firewalld.service// ÈáçÊñ∞ËΩΩÂÖ•ÈÖçÁΩÆfirewall-cmd --reload centos ÂÆâË£Ö nginxyum install Ê≤°ÊúâÂèØÁî®ËΩØ‰ª∂ÂåÖ nginx„ÄÇ 12345678Â∑≤Âä†ËΩΩÊèí‰ª∂ÔºöfastestmirrorLoading mirror speeds from cached hostfile * base: mirror.lzu.edu.cn * extras: mirror.lzu.edu.cn * updates: mirror.lzu.edu.cnÊ≤°ÊúâÂèØÁî®ËΩØ‰ª∂ÂåÖ nginx„ÄÇÈîôËØØÔºöÊó†È°ª‰ªª‰ΩïÂ§ÑÁêÜ ÂéüÂõ†ÊòØ nginx ‰Ωç‰∫éÁ¨¨‰∏âÊñπÁöÑ yum Ê∫êÈáåÈù¢ÔºåËÄå‰∏çÂú® centos ÂÆòÊñπ yum Ê∫êÈáåÈù¢ Ëß£ÂÜ≥ÊñπÊ≥ïÔºö ÂÆâË£Ö 1sudo yum install epel-release Êõ¥Êñ∞ 1yum update ÈáçÊñ∞ËØï‰∏Ä‰∏ãÔºö 1yum install -y nginx ÊòæÂç°ÊåñÁüøÂ∏ÅÂÆâÁé∞Âú®‰πüÊúâÁüøÊ±†‰∫ÜÔºöÂ∏ÅÂÆâÁüøÊ±† ÊàëÁî®ÁöÑÊòæÂç°ÔºöNVIDIA GeForce RTX 4060 Laptop GPU 8GBÔºåÊåñÁüøËΩØ‰ª∂ÔºöGMinerÔºåÊåñETC ÈÄüÂ∫¶Ôºö31.10MH/sÔºåÊïàËÉΩÔºö403.85KH/W ÁîµË¥πÈÉΩÊî∂‰∏çÂõûÊù• hexo ÈÉ®ÁΩ≤ÂêéÔºåCNAME ‰ºöË¢´Ëá™Âä®Âà†Èô§ÔºåÊÄé‰πàÂäûÔºüÂ∞ÜÈúÄË¶Å‰∏ä‰º†Ëá≥ github ÁöÑÂÜÖÂÆπÊîæÂú® source Êñá‰ª∂Â§πÔºå‰æãÂ¶Ç CNAME„ÄÅfavicon.ico„ÄÅimages Á≠â„ÄÇ hexo ÈÉ®ÁΩ≤ÂêéÔºåCNAME ‰ºöË¢´Ëá™Âä®Âà†Èô§ÔºåÊÄé‰πàÂäûÔºü - Ê≤âÁÆÄÁöÑÂõûÁ≠î - Áü•‰πé ÊãøÂõæÁâáÁîüÊàê iconÂÖçË¥π Favicon.ico ÂõæÊ†áÂú®Á∫øÁîüÊàêÂô® 2023-06-05utterancesÊääÂçöÂÆ¢ÁöÑËØÑËÆ∫Êèí‰ª∂‰ªéÊù•ÂøÖÂäõÊç¢Êàê‰∫Ü github issuesÔºåÁî®ÁöÑÊòØ utterances Êèí‰ª∂Ôºå‰∏ªË¶ÅÂèÇËÄÉ‰∫ÜËøôÁØáÊñáÁ´†Ôºöhttps://blog.lanweihong.com/posts/24011/Ôºå‰ªñÁöÑÊñáÁ´†Êúâ‰∏ÄÂ§ÑÈîôËØØÂØºËá¥Êàë‰∏ÄÂºÄÂßãÊ≤°ÊúâÊàêÂäüÔºö 12345&#123;% if theme.utterance and theme.utterance.enable %&#125;!function()&#123;var e=document.createElement(&quot;script&quot;);e.type=&quot;text/javascript&quot;,e.async=!0,e.setAttribute(&quot;issue-term&quot;,&quot;&#123;&#123; theme.utterance.issue_term &#125;&#125;&quot;),e.setAttribute(&quot;theme&quot;,&quot;&#123;&#123; theme.utterance.theme &#125;&#125;&quot;),e.setAttribute(&quot;repo&quot;,&quot;&#123;&#123; theme.utterance.repo &#125;&#125;&quot;),e.crossorigin=&quot;anonymous&quot;,e.src=&quot;https://utteranc.es/client.js&quot;,document.getElementById(&quot;utterance-container&quot;).appendChild(e)&#125;()&#123;% endif %&#125; Â∞ÜÂ¶Ç‰∏äÂÜÖÂÆπÊõøÊç¢‰∏∫Ôºö 12345678910111213141516&#123;% if theme.utterance and theme.utterance.enable %&#125;&lt;script type=&quot;text/javascript&quot;&gt;(function()&#123; var e=document.createElement(&quot;script&quot;); e.type=&quot;text/javascript&quot;, e.async=!0, e.setAttribute(&quot;issue-term&quot;,&quot;&#123;&#123; theme.utterance.issue_term &#125;&#125;&quot;), e.setAttribute(&quot;theme&quot;,&quot;&#123;&#123; theme.utterance.theme &#125;&#125;&quot;), e.setAttribute(&quot;repo&quot;,&quot;&#123;&#123; theme.utterance.repo &#125;&#125;&quot;), e.crossorigin=&quot;anonymous&quot;, e.src=&quot;https://utteranc.es/client.js&quot;, document.getElementById(&quot;utterance-container&quot;).appendChild(e) &#125;)()&lt;/script&gt;&#123;% endif %&#125; Â∞±ÊàêÂäü‰∫Ü ÊàëÁöÑÂçöÂÆ¢‰∏ÄÁõ¥ÊòØÈõ∂ËØÑËÆ∫ÔºåËÄå‰∏îÊµèËßàÈáè‰πü‰∏çÈ´òÔºåËøôÊñπÈù¢ÈúÄË¶ÅÊîπÂñÑ‰∏Ä‰∏ã‰∫ÜÔºå‰∏ªË¶ÅÊòØ SEO ÂÅöÁöÑ‰∏çÂ•ΩÔºåËøòÊúâÂ∞±ÊòØÂπ≥Â∏∏‰πüÊ≤°ÊúâÂÆ£‰º†ËøáÔºåÂÜçÂ∞±ÊòØÊñáÁ´†Êõ¥Êñ∞ÁöÑÊØîËæÉÂ∞ëÔºåËôΩÁÑ∂ notes Êõ¥Êñ∞ÂæàÈ¢ëÁπÅ„ÄÇ ÁΩëÊ†ºÂ∏ÉÂ±ÄÊúÄËøëÊêû AwesomeWeb È°πÁõÆÔºåÂèëÁé∞Áî® flex Â∏ÉÂ±ÄÊ≤°Ê≥ïÊª°Ë∂≥ËøôÊ†∑‰∏Ä‰∏™ÈúÄÊ±ÇÔºöÂ§öË°åÁöÑÊÉÖÂÜµ‰∏ãÔºåÊó¢ÂùáÂåÄÔºåÂèà‰ªéÂ∑¶ÂºÄÂßãÔºåÊØîÂ¶ÇÁ¨¨‰∏ÄË°åÂõõ‰∏™ÂÖÉÁ¥†ÔºåÁ¨¨‰∫åË°å‰∏â‰∏™ÂÖÉÁ¥†„ÄÇË¶ÅÂÆûÁé∞ËøôÁßçÂ∏ÉÂ±ÄÂ∞±Âè™ËÉΩÁî® grid Â∏ÉÂ±Ä‰∫ÜÔºåflex Â∏ÉÂ±ÄÁ°ÆÂÆûÂè™ÈÄÇÂêà‰∏ÄÁª¥ÁöÑÊÉÖÂÜµÔºå‰ΩÜ grid Â∏ÉÂ±ÄÂèØ‰ª•ÂæàËá™Áî±ÁöÑÊêûÂÆö‰∫åÁª¥Â∏ÉÂ±Ä„ÄÇ 2023-06-02react router Áî®ÁöÑÊØîËæÉÂ∞ëÔºåÂèÇËÄÉ‰ª•‰∏ãÂá†ÁØáÊñáÁ´†Ôºö react-router-dom ‰ΩøÁî®ÊåáÂçóÔºàÊúÄÊñ∞ V6.0.1Ôºâ 5 ÂàÜÈíüÂÜÖ‰∫ÜËß£ React Router‚Äî‚ÄîÂàùÂ≠¶ËÄÖÊïôÁ®ã React Ë∑ØÁî±‰ΩøÁî® 2023-06-01Ê≠£ÂàôË°®ËææÂºèÁöÑÂùë gÁöÑ‰ΩúÁî®ÊòØÂÖ®Â±ÄÊêúÁ¥¢Ôºå‰∏çÂä†gÁöÑËØùÔºåÂåπÈÖçÂà∞Á¨¨‰∏Ä‰∏™ÂåπÈÖçÈ°πÂ∞±ÂÅúÊ≠¢‰∫ÜÂåπÈÖçÔºåÂä†‰∫ÜgÂ∞±‰ºöÂåπÈÖç‰∏äÊâÄÊúâÂåπÈÖçÈ°π„ÄÇ‰ΩÜÊàë‰ª¨Âú®Áî® test ÁöÑÊó∂ÂÄôÔºåÂÖ∂ÂÆûÂπ∂‰∏çÈúÄË¶ÅgÔºåÂõ†‰∏∫ÂåπÈÖçÂà∞‰∏Ä‰∏™Â∞±ÊòØ true ‰∫Ü„ÄÇ‰ΩÜÂ¶ÇÊûúÂä†‰∫ÜgÁöÑËØùÔºåÊ≠£ÂàôË°®ËææÂºèÂØπË±°ÁöÑ lastindex Â±ûÊÄßÂ∞±‰ºöÁºñÁ®ãÊúÄÂêé‰∏Ä‰∏™ÂåπÈÖçÈ°πÔºåÈÇ£‰Ω†ÁªßÁª≠ÂÜçÁî®Ëøô‰∏™Ê≠£ÂàôË°®ËææÂºèÂØπË±°ÁöÑËØùÔºåÂ∞±ÊòØ‰ªéÊúÄÂêé‰∏Ä‰∏™ÂåπÈÖçÈ°π‰πãÂêéÂºÄÂßãÂåπÈÖç‰∫ÜÔºåÂ∞±Âï•‰πüÊâæ‰∏çÂà∞ÔºàÂï•‰πüÊâæ‰∏çÂà∞‰πãÂêéÔºåÂ∞±‰ºöÊää lastindex ÂèàÁΩÆ‰∏∫ 0Ôºâ ÂÆûÈôÖ‰∏äÊàëËßâÂæó js Â∫îËØ•Âú®‰ΩøÁî® test Êó∂ÔºåÂ±èËîΩÊéâg UI ÁæéÂ≠¶ÊàëÂèëÁé∞ UI Â∞±ÊòØË¶ÅÂåÄÁß∞ÊâçÂ•ΩÁúãÔºåÊØîÂ¶ÇË¶ÅÂùáÂåÄÁöÑÂπ≥Èì∫ÁïåÈù¢ÔºåÁïôË∂≥ÁºùÈöôÔºàpadding Âíå marginÔºâÔºåÂ∞±ÊòØÂ•ΩÁúãÁöÑÂÖ≥ÈîÆË¶ÅÁ¥†ÔºåÊå§Âú®‰∏ÄËµ∑Â∞±‰∏çÂ•ΩÁúã‰∫Ü„ÄÇ‰∫∫‰Ωì‰πüÊòØÂ¶ÇÊ≠§ÔºåÂèØ‰ª•ËØ¥ÂåÄÁß∞ÊòØ‰∏™ËØïÈáëÁü≥„ÄÇ Èõ™Á¢ßÂõæÊ†πÊçÆÈõ™Á¢ßÂõæ+background-position+Âõ∫ÂÆöÁöÑÂõæÁâáÂÆΩÈ´òÔºåÂèØ‰ª•‰ªéÈõ™Á¢ßÂõæ‰∏≠ÊäΩÂèñÊüê‰∏™ÂõæÁâá„ÄÇ ‰ª•‰∏ãÊù•Ëá™ chatgpt ÁöÑÂõûÁ≠îÔºàËæìÂÖ•ÔºöÈõ™Á¢ßÂõæÔºâÔºö Èõ™Á¢ßÂõæÔºàSpriteÔºâÊòØ‰∏ÄÁßçÂú®ÁΩëÈ°µËÆæËÆ°ÂíåÂºÄÂèë‰∏≠Â∏∏Áî®ÁöÑÊäÄÊúØÔºåÁî®‰∫éÂ∞ÜÂ§ö‰∏™Â∞èÂõæÊ†á„ÄÅÊåâÈíÆÊàñÂÖ∂‰ªñÂõæÂÉèÂÖÉÁ¥†ÂêàÂπ∂Âà∞‰∏ÄÂº†Â§ßÂõæ‰∏≠„ÄÇËøô‰∏™Â§ßÂõæË¢´Áß∞‰∏∫Èõ™Á¢ßÂõæÊàñÁ≤æÁÅµÂõæ„ÄÇ‰ΩøÁî®Èõ™Á¢ßÂõæÂèØ‰ª•ÂáèÂ∞ëÈ°µÈù¢Âä†ËΩΩÊó∂Èó¥ÔºåÂõ†‰∏∫Âè™ÈúÄË¶ÅÂä†ËΩΩ‰∏ÄÂº†Â§ßÂõæËÄå‰∏çÊòØÂ§öÂº†Â∞èÂõæ„ÄÇÂú®È°µÈù¢‰∏äÊòæÁ§∫‰∏çÂêåÁöÑÂõæÂÉèÂÖÉÁ¥†Êó∂ÔºåÂèØ‰ª•ÈÄöËøá CSS Êù•ÊéßÂà∂ÊòæÁ§∫ÁöÑ‰ΩçÁΩÆÂíåÂ∞∫ÂØ∏Ôºå‰ªéËÄåÂÆûÁé∞‰∏çÂêåÂÖÉÁ¥†ÁöÑÊòæÁ§∫„ÄÇ ÂàõÂª∫Èõ™Á¢ßÂõæÁöÑ‰∏ÄËà¨Ê≠•È™§Â¶Ç‰∏ãÔºö Êî∂ÈõÜÈúÄË¶ÅÂêàÂπ∂Âà∞Èõ™Á¢ßÂõæ‰∏≠ÁöÑÂ∞èÂõæÊ†áÊàñÂõæÂÉèÂÖÉÁ¥†„ÄÇ Â∞ÜËøô‰∫õÂ∞èÂõæÊ†áÊåâÁÖß‰∏ÄÂÆöÁöÑËßÑÂàôÊéíÂàóÂú®‰∏ÄÂº†Â§ßÂõæ‰∏äÔºåÈÄöÂ∏∏ÊòØÊ∞¥Âπ≥ÊàñÂûÇÁõ¥ÊéíÂàó„ÄÇ ‰ΩøÁî®ÂõæÂÉèÁºñËæëÂ∑•ÂÖ∑ÔºàÂ¶Ç Adobe Photoshop„ÄÅGIMP Á≠âÔºâË∞ÉÊï¥ÂõæÂÉèÂ§ßÂ∞èÂíå‰ΩçÁΩÆÔºåÁ°Æ‰øùÂÆÉ‰ª¨Ê≠£Á°ÆÂú∞ÂØπÈΩê„ÄÇ ‰øùÂ≠òÈõ™Á¢ßÂõæ‰∏∫‰∏ÄÂº†ÂõæÂÉèÊñá‰ª∂ÔºåÈÄöÂ∏∏ÊòØ PNG Ê†ºÂºè„ÄÇ Âú®ÁΩëÈ°µ‰∏≠‰ΩøÁî® CSS Êù•ÂºïÁî®Èõ™Á¢ßÂõæÔºåÂπ∂ÈÄöËøáËÆæÁΩÆËÉåÊôØ‰ΩçÁΩÆ„ÄÅÂ∞∫ÂØ∏Á≠âÂ±ûÊÄßÊù•ÊéßÂà∂ÊòæÁ§∫‰∏çÂêåÁöÑÂõæÂÉèÂÖÉÁ¥†„ÄÇ ‰∏ãÈù¢ÊòØ‰∏Ä‰∏™Á§∫‰æã CSS ‰ª£Á†ÅÔºåÂ±ïÁ§∫Â¶Ç‰Ωï‰ΩøÁî®Èõ™Á¢ßÂõæ‰∏≠ÁöÑÂõæÂÉèÂÖÉÁ¥†Ôºö 12345678910111213141516Copy code .icon &#123; background-image: url("sprites.png"); background-repeat: no-repeat;&#125;.icon-home &#123; background-position: 0 0; /* Èõ™Á¢ßÂõæ‰∏≠homeÂõæÊ†áÁöÑ‰ΩçÁΩÆ */ width: 32px; height: 32px;&#125;.icon-mail &#123; background-position: -32px 0; /* Èõ™Á¢ßÂõæ‰∏≠mailÂõæÊ†áÁöÑ‰ΩçÁΩÆ */ width: 32px; height: 32px;&#125; Âú®‰∏äËø∞Á§∫‰æã‰∏≠Ôºå.iconÁ±ªÊåáÂÆö‰∫Ü‰ΩøÁî®Èõ™Á¢ßÂõæ‰Ωú‰∏∫ËÉåÊôØÂõæÂÉèÔºåÂπ∂Á¶ÅÊ≠¢ÈáçÂ§çËÉåÊôØÂõæÂÉè„ÄÇ.icon-homeÂíå.icon-mailÁ±ªÂàÜÂà´Ë°®Á§∫‰∫Ü‰ΩøÁî®Èõ™Á¢ßÂõæ‰∏≠ÁöÑ home ÂõæÊ†áÂíå mail ÂõæÊ†á„ÄÇÈÄöËøáËÆæÁΩÆbackground-positionÂ±ûÊÄßÔºåÂèØ‰ª•ÊåáÂÆöÂú®Èõ™Á¢ßÂõæ‰∏≠ÁöÑ‰ΩçÁΩÆ„ÄÇÂêåÊó∂ÔºåÈÄöËøáËÆæÁΩÆ width Âíå height Â±ûÊÄßÔºåÂèØ‰ª•ÊéßÂà∂ÊòæÁ§∫ÁöÑÂ∞∫ÂØ∏„ÄÇ ‰ΩøÁî®Èõ™Á¢ßÂõæÂèØ‰ª•ÊèêÈ´òÁΩëÈ°µÂä†ËΩΩÈÄüÂ∫¶ÂíåÊÄßËÉΩÔºåÂáèÂ∞ë HTTP ËØ∑Ê±ÇÊ¨°Êï∞ÔºåÂπ∂‰∏îÂØπ‰∫éÁßªÂä®ËÆæÂ§áÂíå‰ΩéÂ∏¶ÂÆΩÁéØÂ¢ÉÂ∞§ÂÖ∂ÊúâÁõä„ÄÇ 2023-05-30Â¶Ç‰ΩïÁôΩÂ´ñÂà∞ÂÖçË¥πÁöÑ office ÂÆòÊñπËΩØ‰ª∂ÔºöWord„ÄÅExcel„ÄÅPointpot ÊúÄÂº∫ÂÖçË¥πÂÆâË£ÖÊïôÁ®ãÔºÅ | Èõ∂Â∫¶Ëß£ËØ¥ 2023-05-29ÁîµËÑë‰∏çÂ§üËΩªÂ∑ß‰æøÊê∫ÔºåÊâãÊú∫ÁöÑÁ≥ªÁªü‰∏çÂ§üÊúâÁîü‰∫ßÂäõÔºåÂØπ‰∫éÁºñÁ®ãÂºÄÂèëÊù•ËØ¥ÁîöËá≥ÈÉΩÊ≤°Êúâ chrome Ë∞ÉËØïÂ∑•ÂÖ∑ÔºåÂΩìÁÑ∂ÊâãÊú∫Â±èÂπïÂ§™Â∞è‰πüÊòØ‰∏™ÈóÆÈ¢òÔºå‰ΩÜÊàëËøòÊòØÊêû‰∫Ü‰∏™ aidlux Êù•ÊäòËÖæ‰∏ÄÁï™„ÄÇÊÉ≥Ë¶ÅÂú® aidlux ÈáåÈù¢Áî®‰∏äÁîµËÑëÁâàÁöÑ chromeÔºåÂ∞±Ë¶ÅÈÄöËøá xfce4 Êù•ËøêË°åÔºå‰∏ÄËøõÂéªÂ∞±ËÆ©ÈÄâÊòØ wayland ËøòÊòØ vnc ÊñπÂºèÔºåÈÇ£‰πàËøô‰∏§‰∏™ÊñπÂºèÊúâ‰ΩïÂå∫Âà´Âë¢Ôºü Wayland ‰∏é VNC Êúâ‰ªÄ‰πàÂå∫Âà´Âë¢Âª∫ËÆÆÂú®Âπ≥ÊùøÂíåÊâãÊú∫‰∏äÈù¢‰ΩøÁî® WaylandÔºåÂêØÂä®ÁöÑËøáÁ®ãÈúÄË¶Å‰∏ÄÁÇπÊó∂Èó¥Ôºå‰ΩÜÊòØÂêØÂä®ËøáÂêé‰∏çËøáÊòØ xfce Êú¨Ë∫´ËøòÊòØÈáåÈù¢ÁöÑÁ®ãÂ∫èËøêË°åÁöÑÈÄüÂ∫¶Êõ¥Âø´Ôºå‰ΩÜÊòØ wayland ‰πüÊúâ‰∏Ä‰∫õÁº∫ÁÇπÔºåÂ∞±ÊòØÊúâÈÉ®ÂàÜËæÉËÄÅÁöÑÂ∫îÁî®Á®ãÂ∫è‰∏çÊîØÊåÅÔºå‰æãÂ¶ÇË∞∑Ê≠åÊãºÈü≥ÈúÄË¶Å fcitx5 ‰ª•ÂêéÁöÑÁâàÊú¨„ÄÇ Â¶ÇÊûúÊòØÈÄöËøáÁîµËÑëÁ´ØÂéªËÆøÈóÆÔºåÂàô‰ΩøÁî® VNC ÁöÑÊñπÂºèÔºåÂõ†‰∏∫ÊµèËßàÂô®ÈúÄË¶ÅÁΩëÁªúÂçèËÆÆÂéªÊàñÁöÑÊ∏≤Êüì„ÄÇ VNC ÁöÑÈÄüÂ∫¶ËôΩÁÑ∂ÊÖ¢‰∏ÄÁÇπ,‰ΩÜÊòØÂÖºÂÆπÊÄßÊõ¥Â•ΩÔºåÂá†‰πéÊîØÊåÅÊâÄÊúâÁöÑ Linux Ê°åÈù¢ËΩØ‰ª∂„ÄÇ Ëá≥‰∫éÈÄâÊã© Wayland ËøòÊòØ VNCÔºåÂèØ‰ª•ÂÖàÂú® Wayland ‰∏≠ËØïËØï‰Ω†Ë¶ÅËøêË°åÁöÑÁ®ãÂ∫èÔºåÂ¶ÇÊûúÊ≤°ÊúâËøêË°åÊä•ÈîôÔºåÈó™ÈÄÄÁ≠âÊÉÖÂÜµÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•ÈÄâÊã© Wayland ÁöÑÊñπÂºèÔºåÂ¶ÇÊûúÊúâÂ∞±ÈúÄË¶ÅÈÄâÁî® VNC ÁöÑÊñπÂºè„ÄÇ ÂèÇËÄÉÔºöAidLux ‰∏≠Ê≠£Á°Æ‰ΩøÁî® Wayland ÁöÑÊñπÂºè - Áü•‰πé 2023-05-27‰∏ÄÁõ¥ÈÉΩÊÉ≥Êµã‰∏Ä‰∏ãÊñ∞‰π∞ÁöÑÁÅ´ÂΩ± t6a ÁöÑË∑ëÂàÜÔºåÊàëÊúãÂèãÂÜô‰∫Ü‰∏™Â•áÊÄ™ÁöÑÊµãËØï CPU ÁöÑÁ®ãÂ∫èÔºöÊúÄÂ∞èÁîüÊàêÊ†ë kruskal ÁÆóÊ≥ï js ÂÆûÁé∞ÔºåÊµãËØïÁªìÊûúÊòØÊèíÁîµÊ∫êÂºÄ balance Ê®°ÂºèÔºå118ms„ÄÇËøòË°å 2023-05-26ÊÄé‰πàÁî®ÊåâÈíÆÊéßÂà∂ÊªöÂä®ÊïàÊûúÔºà‰∫ßÂìÅÁªèÁêÜËØ¥Êüê‰∫õÁî®Êà∑Ê≤°ÊúâÈº†Ê†áÊªöËΩÆÔºâÔºåÂÖ∂ÂÆûË∑üÊªöËΩÆÁöÑ‰ª£Á†ÅÊòØ‰∏ÄÊ†∑ÁöÑÔºö 1targetElem.scrollLeft += evt.deltaY; // Êääevt.deltaYÊõøÊç¢ÊàêÊØèÊ¨°ÁÇπÂáªÊåâÈíÆÔºåË¶ÅÊªöÂä®ÁöÑË∑ùÁ¶ª 2023-05-24ÂÖ¨Âè∏È°πÁõÆÈÅáÂà∞‰∏Ä‰∏™Ë°®ÊÉÖÁ¨¶Âè∑ÂØºËá¥ÊâìÂºÄÂõæÈ°µÂ§±Ë¥•ÁöÑÈóÆÈ¢òÔºåÂéüÂõ†ÊòØËΩ¨Á†ÅÈîôËØØÔºö 1234svgStr.replace( /[^\x00-\x7f]/g, (s) =&gt; "&amp;#x" + s.codePointAt(0).toString(16) + ";"); Ê≠£Á°ÆÁöÑËΩ¨Á†ÅÂ∫îËØ•ÊòØËøôÊ†∑Ôºö 12345678export function unicodeEncode(s: string) &#123; const arr = Array.from(s); let res = ""; for (let i = 0; i &lt; arr.length; i++) &#123; res += "&amp;#x" + Number(arr[i].codePointAt(0)).toString(16) + ";"; &#125; return res;&#125; ËøôÈáåË¶ÅÊèê‰∏Ä‰∏ã‰∏§‰∏™ apiÔºöcharCodeAtÂíåcodePointAtÔºåÁî® codePointAt ÊâçËÉΩËß£ÊûêÂá∫Ê≠£Á°ÆÁöÑ unicode ÁºñÁ†ÅÔºåÂè¶Â§ñÂ∞±ÊòØÁî®Êï∞ÁªÑÊù•ÊâøËΩΩÂ≠óÁ¨¶‰∏≤ÔºåÊâçËÉΩËé∑ÂæóÊ≠£Á°ÆÁöÑÂ≠óÁ¨¶ÈïøÂ∫¶ÔºåÂê¶Âàô‰∏Ä‰∏™Ë°®ÊÉÖÁ¨¶Âè∑Â∞±‰ºöË¢´Âà§Êñ≠ÊàêÈïøÂ∫¶ÊòØ 2 12console.log("üòÅ".length); // 2console.log(Array.from("üòÅ").length); // 1 ÊúÄÂêéËØ¥‰∏Ä‰∏ãÔºåÂÖ∂ÂÆû‰∏çÁî®ËΩ¨Á†ÅÂ∞±ËÉΩËß£ÊûêÂá∫Ê≠£Á°ÆÁöÑ dom ‰∫ÜÔºö 1new DOMParser().parseFromString('&lt;a value="üòÅ"&gt;üòÅ&lt;/a&gt;', "text/xml"); 2023-05-20ÂæàÂ∞ëËá™Â∑±Êê≠Âª∫È°πÁõÆÔºåÊàëÂèëÁé∞ÊàëÂèØËÉΩËøûÊê≠Âª∫È°πÁõÆÈÉΩ‰∏çÊòØÂæàÁÜüÁªÉÔºåÊúÄËøëÊÉ≥Ëá™Â∑±ÂÅö‰∏Ä‰∏™ËßÜÈ¢ë appÔºåËßÜÈ¢ëËµÑÊ∫êÁî®Âä™Âä™ÁöÑÔºåÈÇ£‰πàÂ¶Ç‰ΩïÊê≠Âª∫‰∏Ä‰∏™ react+typescript+webpack ÁöÑÂ∫îÁî®Âë¢Ôºü Creating a React app with WebpackCreate a React and Typescript app with Webpack 2023-05-18ÂÆâÂçìÁ≥ªÁªüÂèØ‰ª•ÂÆâË£Ö linux Âï¶:aidluxÔºåÂêÑÂ§ßÂ∫îÁî®ÂïÜÂ∫óÈÉΩÊúâ‰∏ãËΩΩ„ÄÇÂÆâÂçìÂπ≥ÊùøÈÖçÂêàËøô‰∏™ appÔºåÁîü‰∫ßÂäõÁî© iPad Âá†Êù°Ë°óÂëÄÔºåÊàëËøôÊù°‰ø°ÊÅØÂ∞±ÊòØÁî® aidlux ÈáåÈù¢ÁöÑ vscode ÁºñËæëÂπ∂ÂèëÂ∏ÉÁöÑ„ÄÇ 2023-05-15ÊµãËØï replit+githubpagesÔºåÊØîËæÉÈöæÊêûÔºåreplit ÁöÑÊéßÂà∂Âè∞ÁéØÂ¢ÉÂπ∂ÈùûÂÆåÂÖ®ÂèØÁî®ÁöÑ linux ÁéØÂ¢ÉÔºåËøûÂÆâË£ÖËΩØ‰ª∂ÈÉΩ‰∏çËÆ©„ÄÇ Êúâ‰∫õÈìæÊé•ÊòØÂú®Êú¨È°µÊâìÂºÄÔºåÊúâ‰∫õÊòØÊñ∞ÂºÄ‰∏ÄÈ°µÔºåÊñ∞ÂºÄ‰∏ÄÈ°µÈúÄË¶ÅÁªôÊ†áÁ≠æÂ°´Â±ûÊÄßÔºötarget=&quot;_blank&quot; 2023-05-14‰πãÂâçÁúãÈõ∂Â∫¶Ëß£ËØ¥ÁöÑÊó∂ÂÄôÔºåÁªèÂ∏∏ÁúãÂà∞‰∏Ä‰∏™ËΩØ‰ª∂ÔºöIDMÔºå‰ªäÂ§©Êàë‰πü‰∏ãËΩΩ‰∫ÜËøô‰∏™ËΩØ‰ª∂Ôºå‰∏ãËΩΩÁΩëÂùÄÔºöhttps://www.internetdownloadmanager.cn/download ÊøÄÊ¥ªÊñπÊ≥ïÔºöhttps://www.ygxz.in/idea/1650/ ËÑöÊú¨Êàë‰πüÂ≠ò‰∫Ü‰∏Ä‰ªΩÔºöIDM ÊøÄÊ¥ªÂ∑•ÂÖ∑.cmd 2023-05-10express use nextÂâçÁ´ØÊê≠Âª∫Êú¨Âú∞ÂºÄÂèëÁéØÂ¢ÉÔºå‰∏ÄËà¨ÈÉΩÁî® node ÁöÑ express Ê°ÜÊû∂ÔºåÂÖ∂‰∏≠ app use ‰∏≠ÁöÑ next ÂáΩÊï∞ÁöÑÂê´‰πâÊòØÔºåÂΩìÂØπÂêå‰∏Ä‰∏™Ë∑ØÂæÑÂÆö‰πâ‰∫ÜÂ§ö‰∏™ÂõûË∞ÉÂáΩÊï∞ÔºåË¶ÅË∞ÉÁî® next()Êâç‰ºöÊâßË°å‰∏ã‰∏Ä‰∏™ÂõûË∞ÉÂáΩÊï∞„ÄÇ ÂèÇËÄÉÔºöWhat is the use of next() function in Express.js ? - GeeksforGeeks vscode ‰∏äÁßª‰∏ÄË°å‰ª£Á†ÅÁöÑÂø´Êç∑ÈîÆalt+up/down 2023-05-03ÊúÄËøëÂºÄÂßãÁî® rider ÂºÄÂèë unity Ê∏∏ÊàèÔºåÂæàÂ§öÁºñËæëÂô®ÁöÑ‰π†ÊÉØË∑ü vscode ‰∏ç‰∏ÄÊ†∑ÔºåÊØîÂ¶Ç vscode ÊâìÂºÄÊñá‰ª∂Â∑¶‰æßÁõÆÂΩïÊ†ë‰ºöËá™Âä®ÂÆö‰ΩçÂà∞Áõ∏Â∫îÁöÑÊñá‰ª∂ÔºåÊÑüËßâËøòÊòØÂæàÊñπ‰æøÁöÑÔºåÂú® rider ÂèØ‰ª•ËøõË°åÁõ∏Â∫îÁöÑËÆæÁΩÆÔºö 2023-05-02ÊúÄËøë‰π∞‰∫Ü‰∏ÄÂè∞ÁÅ´ÂΩ± t6a Á¨îËÆ∞Êú¨ÔºåÊÄß‰ª∑ÊØîÂæàÈ´òÔºåÈáçÊñ∞ÈÉ®ÁΩ≤ÂçöÂÆ¢ÁöÑÊó∂ÂÄôÈÅáÂà∞Êä•ÈîôÔºöbash: hexo: command not foundÔºåÈúÄË¶ÅÂÆâË£Öhexo-cliÔºåÊúÄÂ•ΩÊòØÂÖ®Â±ÄÔºönpm i hexo-cli -g 2023-04-28‰ª•Ââç‰∏ÄÁõ¥ÊòØÁî®‰∏Ä‰∏™ÂÖ¨ÂÖ±ÁöÑ ChatGPT Ë¥¶Âè∑ÔºåÁî±‰∫éÊØèÊ¨°Áî®ÈÉΩË¶ÅÁôªÂΩïÂæàÈ∫ªÁÉ¶Ôºå‰ªäÂ§©Áªà‰∫éËá™Â∑±ÂàõÂª∫‰∫Ü‰∏Ä‰∏™Ë¥¶Âè∑ÔºåÂàõÂª∫Ë¥¶Âè∑Êúâ‰∏§‰∏™ÂøÖË¶ÅÊù°‰ª∂Ôºö ÂõΩÂ§ñÊâãÊú∫Âè∑ ÁøªÂ¢ôÁöÑÊ¢ØÂ≠ê ÂõΩÂ§ñÊâãÊú∫Âè∑Êàë‰∏ÄÁõ¥Ê≤°ÂºÑËøáÔºåËøôÊ¨°‰π∞‰∫Ü‰∏Ä‰∏™ 2 ÁæéÂÖÉÁöÑÊúçÂä°Ôºöhttps://sms-activate.org/ 2023-04-21useEffect ÁöÑÂèòÈáèÁõëÂê¨Êúâ‰ªÄ‰πàÂùëÔºüuseEffect ÁöÑÂèòÈáèÁõëÂê¨ÊòØÁî®ÁöÑ Object.is()ÔºåÂØπ‰∫éÂØπË±°ÊòØÊ≤°Ê≥ïÊ∑±ÂÖ•ÂØπÊØîÁöÑÔºåÂè™ÊØîËæÉ‰∏§‰∏™ÂØπË±°ÁöÑÂú∞ÂùÄ ËØïÈ™å demoÔºöuseEffect - Replit 2023-04-18ÊúÄËøëÂÖª‰∫ÜÂ§öËÇâÔºåÂú®ÁúãÂ§öËÇâÁöÑÂÖªÊÆñÂ∏∏ËØÜÁöÑÊó∂ÂÄôÔºåÁúãÂà∞Â§öËÇâÂøÖÈ°ªË¶ÅÁÖßÁ¥´Â§ñÁ∫øËÄåÈùûÊôÆÈÄöÁöÑÈò≥ÂÖâÔºåÁâπÂà´ÊòØ‰∏çËÉΩÈöîÁùÄÁéªÁíÉÊôíÂ§™Èò≥ÔºåÂ∞±Âú®ÁΩë‰∏äÊêú‰∫Ü‰∏Ä‰∏ãÁéªÁíÉÈöîÁ¶ªÁ¥´Â§ñÁ∫øÔºåÁªìÊûúËøòÁúüÊ∂®Áü•ËØÜ‰∫ÜÔºö ÈÄèËøáÁ™óÊà∑ÁéªÁíÉÁÖßÂ∞ÑËøõÊù•ÁöÑÈò≥ÂÖâ‰ºöÊää‰Ω†ÊôíÈªë‰πàÔºü_‰∏≠ÂõΩÁªèÊµéÁΩë Á¥´Â§ñÁ∫ø-Áª¥Âü∫ÁôæÁßë scrollbar ÁöÑÁ†îÁ©∂chrome ÁöÑ scrollbar ÂèØÂÆöÂà∂ÊÄßÊØîËæÉÈ´òÔºö https://segmentfault.com/a/1190000012800450 firefox ÁöÑ scrollbar ËøûÂÆΩÂ∫¶ÈÉΩÊó†Ê≥ïÂÆöÂà∂ pxÔºö https://developer.mozilla.org/zh-CN/docs/Web/CSS/scrollbar-width Èº†Ê†áÊªöËΩÆÊ®™ÂêëÊªöÂä®Ôºöhttps://codepen.io/zxuqian/pen/KKWyxjaÔºåÂ∞±ÊòØÊäädeltaYÂä†Âà∞scrollLeft‰∏ä 2023-03-20‰∏∫‰ªÄ‰πàË¶Å‰øùÊåÅÈ•±Êª°ÁöÑÁ≤æÂäõÔºåÂõ†‰∏∫ÊàëÂèëÁé∞ÔºåÂú®Á≤æÁ•ûÁä∂ÊÄÅ‰∏çÂ•ΩÁöÑÊó∂ÂÄôÔºå‰∫∫Êõ¥Âä†ÂÆπÊòìÂ§±ÊéßÔºåÊØîÂ¶ÇÁ≤æÁ•ûÁä∂ÊÄÅ‰∏ç‰Ω≥ÁöÑÊó∂ÂÄôÔºå‰ºöÂéªÁé©Ê∏∏ÊàèÔºåÁúãÊäñÈü≥„ÄÇËÄåÊÉ≥Ë¶ÅÂ≠¶‰π†ÔºåÊàñËÄÖÂÅö‰∫õÊØîËæÉÂ§çÊùÇÔºåÊûØÁá•ÔºåÊúâÈöæÂ∫¶ÁöÑ‰∫ãÊÉÖÔºåÊòØÈúÄË¶ÅÊ∂àËÄóÂ§ßÈáèÁ≤æÂäõÁöÑÔºåËøô‰∫õ‰∫ãÂè™ËÉΩÂú®Á≤æÁ•ûÁä∂ÊÄÅÂ•ΩÁöÑÊó∂ÂÄôÊâçËÉΩÂÅöÂ•Ω„ÄÇ 2023-03-08ÊÄé‰πàËé∑Âèñ window ‰∏ãÁöÑ iframeÔºöwindow.frames ÂÆòÊñπÊñáÊ°£ÔºöWindow.frames ÊÄé‰πàÂà§Êñ≠ÂΩìÂâçÁöÑÊâßË°åÁéØÂ¢ÉÊòØ‰∏çÊòØÂú® iframe ÈáåÈù¢ÔºåÂ¶ÇÊûúÊòØÔºåÂàô console.log(window.frameElement) ‰∏ÄÂÆöÂèØ‰ª•ÊâìÂç∞Âá∫ÂΩìÂâç iframe ÁöÑ„ÄÇ 2023-03-02useRef ‰ªäÂ§©ÂèàÂ≠¶‰ºö‰∫Ü‰∏ÄÁÇπÔºåÂØπ‰∫éÈùûÂéüÁîüÁªÑ‰ª∂ÔºåÂøÖÈ°ªË¶ÅÂÜô useImperativeHandleÔºåÂê¶ÂàôÊãø‰∏çÂà∞‰∏úË•øÔºåÂéüÁîüÁªÑ‰ª∂Âàô‰∏çÁî®ÂÜôËøô‰∏™ÔºåÈªòËÆ§ÊãøÂà∞ÁöÑ ref.current Â∞±ÊòØ dom ÂØπË±° 2023-02-28‰∏ÄÁõ¥‰ª•Êù•ÈÉΩÂØπ useEffect Êúâ‰∏™ËØØËß£Ôºå‰ª•‰∏∫ÂÆÉÁöÑ‰ΩúÁî®ËåÉÂõ¥ÊòØÂÖ®Â±ÄÁöÑÔºåÊàëÁöÑÊÑèÊÄùÊòØÂú®ÁªÑ‰ª∂Â§ñÈÉ®Êîπ‰∫ÜÊüê‰∏™ÂèòÈáèÔºåÊàëÂèØ‰ª•Âú®ÁªÑ‰ª∂ÂÜÖÁõëÂê¨Âà∞ÔºåÂÆûÈôÖ‰∏äÊòØ‰∏çË°åÁöÑ„ÄÇ useEffect ÁöÑËß¶ÂèëÂâçÊèêÂøÖÈ°ªÊòØÁªÑ‰ª∂Ê≠£Âú® renderÔºåÂ¶ÇÊûúÁªÑ‰ª∂‰∏ç renderÔºåÊ†πÊú¨‰∏ç‰ºöËß¶Âèë ‰∏æ‰∏™‰æãÂ≠êÔºö 1234567891011export const globalData = &#123; data: &#123; a: 0 &#125; &#125;;export const App = () =&gt; &#123; useEffect(() =&gt; &#123; console.log("Ëß¶ÂèëÁõëÂê¨"); &#125;, [globalData.data]); return &lt;&gt;&lt;/&gt;;&#125;;setTimeout(() =&gt; &#123; console.log("Áî±ÊàëËß¶ÂèëÁöÑÁõëÂê¨"); globalData.data = &#123; a: 1 &#125;;&#125;, 1000); ‰ª•‰∏ä‰ª£Á†ÅÊòØ‰∏ç‰ºöËß¶ÂèëÁõëÂê¨ÁöÑÔºåÂõ†‰∏∫ÁªÑ‰ª∂Ê≤°Êúâ renderÔºå‰πüÂ∞±‰∏ç‰ºöÊâßË°å useEffect()ÂáΩÊï∞Ôºå‰πüÂ∞±‰∏ç‰ºöÂØπÊØîÂèòÈáèÔºåËøõÁõëÂê¨ÂáΩÊï∞„ÄÇÂÆÉ‰∏çÂÉèÊ∂àÊÅØÊÄªÁ∫øÂíå dom ‰∫ã‰ª∂ËøôÁßçÂÖ®Â±ÄÁöÑÁõëÂê¨ÔºåÂÆÉ‰ªÖÈôê‰∫éÁªÑ‰ª∂ render ÁöÑËøáÁ®ã‰∏≠ÁõëÂê¨ Â¶ÇÊûúË¶ÅÂÆûÁé∞ÂÖ®Â±ÄÁöÑÁõëÂê¨ÔºåÂ∞±Ë¶ÅËá™Â∑±ÂÆûÁé∞‰∏Ä‰∏™ useWatch ‰∫ÜÔºåËá™Â∑±ÂÆûÁé∞‰∏Ä‰∏™ useWatch ÊØîËæÉÂ§çÊùÇÔºåÂÖàÂüã‰∏™ÂùëÔºå‰ª•ÂêéÂÜçÂ°´„ÄÇ 2023-02-23Âàö commit ÁöÑ‰ª£Á†ÅÊÉ≥Êí§ÂõûÂà∞Â∑•‰ΩúÂå∫Ôºö 1git reset --soft HEAD ÊÉ≥‰∏ÄÊ≠•Âπ∂‰Ωú‰∏§Ê≠•ÔºåÂΩªÂ∫ïÊäπÈô§ÁóïËøπÔºö 1git reset --hard HEAD ÂØπ git ËøòÊòØ‰∏çÂ§üÁÜüÊÇâÔºå‰πãÂêéÊäΩÁ©∫ÂÜçÂ∑©Âõ∫‰∏Ä‰∏ã ‰∏§ÁßçÊñπÂºè‰∏çÊ∏ÖÈô§Êú¨Âú∞Êèê‰∫§ÂíåÊ∏ÖÈô§Êú¨Âú∞Êèê‰∫§ÁöÑÊñπÊ≥ï 1„ÄÅÂõûÈÄÄÂà∞‰∏äÊ¨°Êèê‰∫§Âπ∂Ê∏ÖÈô§Êú¨Âú∞Êèê‰∫§ÁöÑ‰ª£Á†Å 1git reset --hard HEAD^ 2„ÄÅÂõûÈÄÄÂà∞‰∏äÊ¨°Êèê‰∫§‰∏çÊ∏ÖÈô§Êú¨Âú∞Êèê‰∫§ÁöÑ‰ª£Á†Å 1git reset --soft HEAD~1 2023-02-14js ÊúÄÁÆÄÂçïÁöÑÊâìÂåÖÊòØÁî® rollup.jsÔºö 1rollup main.js --file bundle.js ÊâìÂåÖÂ∑•ÂÖ∑ rollup.js ÂÖ•Èó®ÊïôÁ®ã - ÈòÆ‰∏ÄÂ≥∞ÁöÑÁΩëÁªúÊó•Âøó ÊØî webpack ÁÆÄÂçïÊòìÁî® 2023-02-10ÊúÄËøëÊÉ≥Ëá™Â∑±ÂÅö‰∫õËΩØ‰ª∂ÁöÑÊÉ≥Ê≥ïË∂äÊù•Ë∂äÂº∫ÁÉàÔºåÊÑüËßâ‰∏ÄÁõ¥‰∏∫ÂÖ¨Âè∏ÊâìÂ∑•‰∏çÊòØÂá∫Ë∑ØÔºåÂøÖÈ°ªË¶ÅÂè¶ÂØªÂá∫Ë∑ØÔºö ‰∏ÄÊñπÈù¢ÊàëÂèØ‰ª•ÊääËá™Â∑±ÂçöÂÆ¢‰∏≠ÁöÑÁ≤æÂçéÈÉ®ÂàÜÂèëÂ∏ÉÂà∞ÂÖ∂‰ªñÁöÑÊµÅÈáèÂπ≥Âè∞Ëé∑ÂèñÊµÅÈáèÂíåÂÖ≥Ê≥®Ôºå‰ª•ÂèäËÆ§ËØÜÊõ¥Â§öÁöÑ‰∫∫ÔºåÂ¢ûÂä†Ëá™Â∑±ÁöÑÊú∫ÈÅáÔºåÂíåË°å‰∏öÊ∞õÂõ¥„ÄÇ ÊàëÂèØ‰ª•Ê®°‰ªøÂÖ∂‰ªñÁöÑÂ∑•ÂÖ∑Á±ªÁΩëÁ´ôÔºåËá™Â∑±ÂÆûÁé∞‰∏Ä‰∫õÁÆÄÂçïÁöÑÂ∞èÂ∑•ÂÖ∑ÔºåÁîöËá≥ÂΩìÂÅöÊúçÂä°ÂèëÂ∏ÉÂá∫ÂéªÔºåËµöÈí± ÁúãÂà∞Âá†‰∏™‰∏çÈîôÁöÑÁΩëÁ´ôÔºö http://www.atoolbox.net/ https://www.juhe.cn/ Êé•‰∏ãÊù•ÊàëÊâìÁÆóÁ†îÁ©∂‰∏Ä‰∏ãÊï∞Áã¨ÁöÑÁîüÊàêÔºåËá™Â∑±ÂÅö‰∏Ä‰∏™Êï∞Áã¨Â∞èÊ∏∏Êàè useContext ÁöÑ‰ΩøÁî®Áî®Ëµ∑Êù•ÂæàÁÆÄÂçïÂ∞±ÊòØ‰∏ÄÂè•Ôºö 1const context = useContext(xxxContext); ‰ΩÜÊòØÂáÜÂ§áËøô‰∏™ÁéØÂ¢ÉÂèòÈáèÁöÑÂÜôÊ≥ïÁ®çÂæÆÊúâÁÇπÂ§çÊùÇÔºö 1234// ÂÖàÂÆö‰πâ‰∏Ä‰∏™ÂÖ®Â±ÄÂèòÈáèexport const xxxContext = React.createContext &lt; xxxType &gt; &#123;&#125;;// ÁÑ∂ÂêéÁî®Ëøô‰∏™.ProviderÂåÖË£πËµ∑Êù•ÔºåÂÜç‰º†ÂÖ•‰∏Ä‰∏™value&lt;xxxContext.Provider value=&#123;&#123;&#125;&#125;&gt;...&lt;/xxxContext.Provider&gt;; 2023-02-09svg use ÂèØ‰ª•Áî®Êù•Â§çÂà∂‰∏Ä‰∏™ svg ÂÖÉÁ¥†Ôºö svg use AI Â≠¶‰π†Ôºöhttps://zhuanlan.zhihu.com/p/414450099 2023-02-08ÂàáËßíÊïàÊûúÔºö 1234567891011121314151617div &#123; width: 100px; height: 100px; background: #58a; background: linear-gradient(135deg, transparent 15px, red 0) top left, linear-gradient( -135deg, transparent 15px, yellow 0 ) top right, linear-gradient(-45deg, transparent 15px, green 0) bottom right, linear-gradient( 45deg, transparent 15px, blue 0 ) bottom left; background-size: 50% 50%; background-repeat: no-repeat;&#125; ÊïàÊûúÊºîÁ§∫ 2023-02-07‰∏ÄÊúà‰ªΩÁöÑÁõÆÊ†áÔºöÈáëÈì≤Èì≤‰πãÊàòÊâì‰∏äÂ§ßÂ∏àÊÆµ‰ΩçÔºåÂπ∂ÂÜô‰∏Ä‰ªΩÊ∏∏ÊàèÊîªÁï•ÔºåÂ∑≤ÁªèÂÆåÊàê‰∫Ü„ÄÇ2 Êúà‰ªΩÊàëÊâìÁÆóÁúãÂÆåËøôÊú¨„ÄäCSS Êè≠Áßò„ÄãÔºåÂõ†‰∏∫Â∑≤ÁªèÊãñ‰∫ÜÂæà‰πÖ‰∫ÜÔºåËôΩÁÑ∂ËØ¥ÂâçÈù¢ÁúãÁöÑ‰∏çÂ∞ëÂÜÖÂÆπÂ∑≤ÁªèÂøò‰∫ÜÔºå‰ΩÜÊòØÂÖàÂÆåÊï¥ÁöÑÁúãÂÆå‰∏ÄÈÅçÂÜçËØ¥„ÄÇ Êää‰∏Ä‰∏™ÂõæÁâáË£ÅÂâ™Âá∫Ëè±ÂΩ¢Ôºö 1clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%); ÊïàÊûúÊºîÁ§∫ 2023-01-30ÈÅáÂà∞‰∏Ä‰∏™cannot access &quot;xxx&quot; before initializationÁöÑÈóÆÈ¢òÔºåxxx ÊòØ‰∏Ä‰∏™ÊäΩË±°Á±ªÔºåÂ¶ÇÊûúËøô‰∏™ÊäΩË±°Á±ªÊ≤°Êúâ import ‰ªª‰ΩïÂÖ∂‰ªñÁöÑ‰∏úË•øÂ∫îËØ•‰∏ç‰ºöÊä•ÈîôÊâçÂØπÔºåÊâÄ‰ª•ÈóÆÈ¢òÊòØÂá∫Âú®ÂÆÉÁöÑÂºïÁî®‰∏ä„ÄÇÊúÄÂêéÊü•Âà∞ÊòØÂæ™ÁéØÂºïÁî®‰∫Ü„ÄÇ 2023-01-12‰ªäÊó©‰∏äÂ∞ùËØïÁªôÂ§öÁúã app ÂØºÂÖ• mobi Ê†ºÂºèÁöÑÁîµÂ≠ê‰π¶ÔºåÊâçÂèëÁé∞ mobi Ê†ºÂºèÂéüÊù•Á´üÊòØ kindle Ëá™Â∑±ÂÆ∂ÁöÑÊ†ºÂºèÔºå‰∏çËøá‰πüË¢´ÂêéÊù•ÁöÑ azw Á≥ªÂàóÊõø‰ª£‰∫ÜÔºåÁé∞Âú®ÈÉΩÊòØ azw3 Ê†ºÂºè„ÄÇ‰∫éÊòØÊàëÂè™Â•ΩËΩ¨Êàê epub Ê†ºÂºèÔºåÁÑ∂ÂêéÊàëÂèëÁé∞Â§öÁúã app ÁöÑÁúã‰π¶‰ΩìÈ™åÊØî kindle app ËøòÂ•Ω„ÄÇÂè™ËÉΩËØ¥ kindle ‰∏çÊÄùËøõÂèñÂêß„ÄÇËÄå‰∏î‰∫∫ÂÆ∂Â∑≤ÁªèÈÄÄÂá∫‰∫Ü‰∏≠ÂõΩÔºåÂè¶Â§ñÊàëÁöÑ kindle paper white3 Áî®‰∫Ü 9 Âπ¥‰πüÂú®ÂâçÂá†Êó•Áªà‰∫éÂØøÁªàÊ≠£ÂØù‰∫ÜÔºà‰º∞ËÆ°ÊòØ‰∏ªÊùøÂùè‰∫ÜÔºâÔºåÂè¶Â§ñ‰∏∫‰∫ÜË¥ØÂΩªÊàëÁöÑ‰∏Ä‰∏™ÊâãÊú∫‰∏ÄÂè∞ÁîµËÑëÁöÑÊûÅÁÆÄ‰∏ª‰πâÈ£éÊ†ºÔºå‰∏çÊâìÁÆó‰øÆÊàñËÄÖ‰π∞‰∏™Êñ∞ÁöÑ kindle ‰∫Ü„ÄÇ‰ª•ÂêéÈÉΩ‰∏ç‰ºöÂÜçÁî® kindleÔºåÁîµËÑë‰∏äÁúãÁîµÂ≠ê‰π¶Áî® calibreÔºåÊâãÊú∫‰∏äÁî®Â§öÁúã„ÄÇ 2023-01-10css Â¶Ç‰ΩïÁîüÊàê‰∏Ä‰∏™Ê§≠ÂúÜÔºü 1border-radius: 50%; Â¶Ç‰ΩïÁîüÊàê‰∏Ä‰∏™ÂçäÊ§≠ÂúÜÔºö 12border-radius: 50% / 100% 100% 0 0;border-radius: 100% 0 0 100% / 50%; Ëøô‰∏§ÁßçÈÉΩÊòØÁÆÄÂÜôÊ®°ÂºèÔºåÊØîÊñπËØ¥border-radius: 50% / 100% 100% 0 0;ÊòØborder-radius: 50% 50% 50% 50% / 100% 100% 0 0;ÁöÑÁÆÄÂÜôÔºåÊñúÊù†Âå∫ÂàÜÂÆΩÈ´ò ‰∏çËøáÔºåÁúüÊ≠£ÁÆÄÊ¥ÅÁöÑÊñπÊ≥ïËøòÊòØ‰ΩøÁî® border-radius Ëøô‰∏™ÁÆÄÂÜôÂ±ûÊÄßÔºåÂõ†‰∏∫Êàë‰ª¨ÂèØ‰ª•ÂêëÂÆÉ‰∏ÄÊ¨°ÊÄßÊèê‰æõÁî®Á©∫Ê†ºÂàÜÂºÄÁöÑÂ§ö‰∏™ÂÄº„ÄÇÂ¶ÇÊûúÊàë‰ª¨‰º†ÁªôÂÆÉÂõõ‰∏™ÂÄºÔºåËøôÂõõ‰∏™ÂÄºÂ∞±‰ºöË¢´ÂàÜÂà´‰ªéÂ∑¶‰∏äËßíÂºÄÂßã‰ª•È°∫Êó∂ÈíàÈ°∫Â∫èÂ∫îÁî®Âà∞ÂÖÉÁ¥†ÁöÑÂêÑ‰∏™ÊãêËßí„ÄÇÂ¶ÇÊûúÊàë‰ª¨Êèê‰æõÁöÑÂÄºÂ∞ë‰∫éÂõõ‰∏™ÔºåÂàôÂÆÉ‰ª¨‰ºö‰ª• CSS ÁöÑÂ∏∏ËßÑÊñπÂºèÈáçÂ§çÔºåÁ±ª‰ºº‰∫é borderwidth ÁöÑÂÄº„ÄÇÂ¶ÇÊûúÂè™Êèê‰æõ‰∫Ü‰∏â‰∏™ÂÄºÔºåÂàôÊÑèÂë≥ÁùÄÁ¨¨Âõõ‰∏™ÂÄº‰∏éÁ¨¨‰∫åÂÄºÁõ∏ÂêåÔºõÂ¶ÇÊûúÂè™Êúâ‰∏§‰∏™ÂÄºÔºåÂàôÊÑèÂë≥ÁùÄÁ¨¨‰∏â‰∏™ÂÄº‰∏éÁ¨¨‰∏Ä‰∏™Áõ∏Âêå„ÄÇ ÂõõÂàÜ‰πã‰∏ÄÊ§≠ÂúÜÔºö 1border-radius: 100% 0 0 0; 2023-01-09‰πãÂâçÁúãËøá‰∏ÄÁØáÊñáÁ´†ÔºåËÆ≤‰∏≠ÂõΩÁöÑÊØè‰∏™Êúù‰ª£Â∑Æ‰∏çÂ§öÈÉΩÊ¥ª‰∏çËøá 300 Âπ¥ÔºåÂõ†‰∏∫ÊåÅÁª≠‰∏çÊñ≠ÁöÑË¥´ÂØåÂàÜÂåñÔºàÂúüÂú∞ÂÖºÂπ∂ÔºâÔºåËÆ©Êï¥‰∏™Á§æ‰ºöÊ∞ë‰∏çËÅäÁîüÔºåÁ§æ‰ºöÂä®Ëç°ÔºåÈáçÊñ∞Ê¥óÁâå„ÄÇÁé∞Âú®ÊòØÂª∫ÂõΩ 74 Âë®Âπ¥Ôºå150 Âπ¥ÂêéËææÂà∞ÂΩìÊúùÁöÑÈ°∂Â≥∞Ôºå‰πüÂ∞±ÊòØ 2099 Âπ¥ÔºåÊàë‰ª¨Ëøô‰∏Ä‰ª£ËøòËÉΩÊ¥ªÁöÑÊØîËæÉÊªãÊ∂¶ÔºåÂêéÈù¢Âá†‰ª£Âü∫Êú¨‰∏äÊòØÊ¥ªÁöÑ‰∏çÂÉè‰∫∫Ê†∑‰∫Ü„ÄÇÊØè‰∏Ä‰ª£‰∫∫ÈÉΩÊúâÊØè‰∏Ä‰ª£‰∫∫ÁöÑÂÆøÂëΩ„ÄÇËøôÊòØÂéÜÂè≤ÁöÑËøõÁ®ã„ÄÇ 2023-01-08‰∏≠ÂçàÂêÉÈ•≠ÁöÑÊó∂ÂÄôÔºåËÆ®ËÆ∫Âà∞Êò•ËäÇÁöÑËΩ¶Á•®ÈóÆÈ¢òÔºåÁ™ÅÁÑ∂ÂèëÁé∞ÊàëÊ≤°ÊúâÂæàÂ•ΩÁöÑÂà©Áî®Âå∫Èó¥Êù•Ëß£ÂÜ≥ËΩ¶Á•®ÈóÆÈ¢òÔºå‰ºóÊâÄÂë®Áü•ÔºöÂå∫Èó¥ÈÄâÂæóË∂äÂ§ßÔºåÊîæÁöÑÁ•®Ë∂äÂ§öÔºåË∂äÂÆπÊòì‰π∞Âà∞Á•®„ÄÇÊàëÊä¢Âà∞ÁöÑÊòØ‰∏ÄÁ≠âÂ∫ßÔºå‰∏ÄÁ≠âÂ∫ßÊØî‰∫åÁ≠âÂ∫ßË¥µ‰∫Ü 200 ÂùóÔºåÂ¶ÇÊûúÊàëÂä†ÁÇπÂå∫Èó¥Êä¢‰∫åÁ≠âÂ∫ßÔºåËØ¥‰∏çÂÆöÊØîÊàë‰∏ÄÁ≠âÂ∫ßË¶Å‰æøÂÆú„ÄÇ‰ª•Âêé‰∏ÄÂÆöË¶ÅËÆ∞‰ΩèËøô‰∏ÄÁÇπÔºåÈ´òÈìÅÂÖ¨Âè∏ÊòØÂ∏åÊúõÊâÄÊúâ‰∫∫ÈÉΩ‰ªéÂßãÂèëÁ´ôÂÅöÂà∞ÁªàÁÇπÁ´ôÁöÑÔºåËøôÊ†∑ÂÆÉÊâçËÉΩËµöÂæóÊúÄÂ§öÔºåÊâÄ‰ª•ÊïÖÊÑèÊääÂå∫Èó¥Ë∂äÂ§ßÁöÑÁ•®ÂºÑÂæóË∂äÂ§öÔºåÊçÆËØ¥ÂßãÂèëÁ´ôÂà∞ÁªàÁÇπÁ´ôÁöÑÁ•®ÔºåÊòØÂÖ∂‰ªñÂå∫Èó¥ÁöÑ‰∏âÂÄç„ÄÇ 2023-01-07ÊÄé‰πàÈò≤Ê≠¢ÈáçÂ§çÊ∑ªÂä†Âêå‰∏Ä‰∏™‰∫ã‰ª∂ÂõûË∞ÉÂáΩÊï∞Ôºü Á≠îÊ°àÊòØÂú®ÊØèÊ¨°Ê∑ªÂä†ÂâçÈÉΩ off ÊéâÊóßÁöÑÔºå‰ΩÜÊòØ‰∏ÄÂÆöË¶ÅÊ≥®ÊÑèÔºåË¶ÅÊåáÂÆöÂõûË∞ÉÂáΩÊï∞Ôºå‰∏çÁÑ∂ÊâÄÊúâÁöÑ‰∫ã‰ª∂ÂõûË∞ÉÂáΩÊï∞ÈÉΩË¢´ÁßªÈô§‰∫ÜÔºàÂΩ±ÂìçÂà∞ÂÖ∂‰ªñÂú∞ÊñπÔºâ„ÄÇËÄå‰∏îÂè™ÈúÄË¶Å‰∏Ä‰∏™ off Â∞±ËÉΩÁßªÈô§Êéâ n ‰∏™ÈáçÂ§çÁöÑÔºö 1234for (let i = 0; i &lt; n; i++) &#123; $dom.on("click", func1);&#125;$dom.off("click", func1); Âè¶Â§ñ off Âíå one ÊòØÊúâÂå∫Âà´ÁöÑÔºåone Ê∑ªÂä†ÁöÑÂ§ö‰∏™ func1ÔºåÊâßË°åÂÆå‰∏Ä‰∏™ÂêéÊòØ‰∏ç‰ºöÂΩ±ÂìçÂà∞ÂÖ∂‰ªñÁöÑ one ÊâßË°å: 123for (let i = 0; i &lt; n; i++) &#123; $dom.one("click", func1);&#125; ËøôÊ†∑ÂÜôÂõûË∞ÉÂáΩÊï∞ËøòÊòØËÉΩÊâßË°å n Ê¨°Ôºå‰ΩÜ‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÂõûË∞ÉÂáΩÊï∞Âè™‰ºöÊâßË°å‰∏ÄÊ¨° 1234for (let i = 0; i &lt; n; i++) &#123; $dom.off("click", func1); $dom.on("click", func1);&#125; calibre ÂàÜ‰∫´ÁîµÂ≠ê‰π¶Âà∞ kindleÔºå‰π¶ÂêçËá™Âä®ÂèòÊãºÈü≥Ëß£ÂÜ≥ÂäûÊ≥ïÔºöhttps://bookfere.com/post/1042.html 2023-01-06Âπ¥Â∫¶ËÆ°ÂàíÂü∫Êú¨‰∏äÊòØËøôÊ†∑Ôºö ÊàíÊ∏∏ÊàèÔºåÁü≠ËßÜÈ¢ëÔºåÂ∞èÈªÑÁâá Áúã‰π¶ÔºåÁúãÈïøËßÜÈ¢ëÔºåÂ≠¶‰π†Êñ∞ÊäÄËÉΩ Â≠¶Ëã±ËØ≠ÔºåÊï∞Â≠¶ Ë¶ÅÁúãÁöÑ‰π¶ÊúâÂì™‰∫õÔºü‰ªäÂπ¥ÁöÑÁ¨¨‰∏ÄÊú¨‰π¶ÊòØÔºö„ÄäCSS Êè≠Áßò„Äã CSS Êè≠ÁßòËØª‰π¶Á¨îËÆ∞1234567background: repeating-linear-gradient( 60deg, red, blue 15px, green 0, yellow 30px); green 0 ÁöÑÊÑèÊÄùÊòØ‰ªÄ‰πàÔºü ‰∏∫‰∫ÜÈÅøÂÖçÊØèÊ¨°ÊîπÂä®Êù°Á∫πÂÆΩÂ∫¶Êó∂ÈÉΩË¶Å‰øÆÊîπ‰∏§‰∏™Êï∞Â≠óÔºåÊàë‰ª¨ÂèØ‰ª•ÂÜçÊ¨°‰ªéËßÑËåÉÈÇ£ÈáåÊâæÂà∞Êç∑ÂæÑ„ÄÇ‚ÄúÂ¶ÇÊûúÊüê‰∏™Ëâ≤Ê†áÁöÑ‰ΩçÁΩÆÂÄºÊØîÊï¥‰∏™ÂàóË°®‰∏≠Âú®ÂÆÉ‰πãÂâçÁöÑËâ≤Ê†áÁöÑ‰ΩçÁΩÆÂÄºÈÉΩË¶ÅÂ∞èÔºåÂàôËØ•Ëâ≤Ê†áÁöÑ‰ΩçÁΩÆÂÄº‰ºöË¢´ËÆæÁΩÆ‰∏∫ÂÆÉÂâçÈù¢ÊâÄÊúâËâ≤Ê†á‰ΩçÁΩÆÂÄºÁöÑÊúÄÂ§ßÂÄº„ÄÇ‚ÄùËøôÊÑèÂë≥ÁùÄÔºåÂ¶ÇÊûúÊàë‰ª¨ÊääÁ¨¨‰∫å‰∏™Ëâ≤Ê†áÁöÑ‰ΩçÁΩÆÂÄºËÆæÁΩÆ‰∏∫ 0ÔºåÈÇ£ÂÆÉÁöÑ‰ΩçÁΩÆÂ∞±ÊÄªÊòØ‰ºöË¢´ÊµèËßàÂô®Ë∞ÉÊï¥‰∏∫Ââç‰∏Ä‰∏™Ëâ≤Ê†áÁöÑ‰ΩçÁΩÆÂÄºÔºåËøô‰∏™ÁªìÊûúÊ≠£ÊòØÊàë‰ª¨ÊÉ≥Ë¶ÅÁöÑ„ÄÇ 2023-01-05ÂèëÁé∞ react ÈáåÈù¢Áî®‰∏ç‰∫Ü dispatchEventÔºåÊúâ‰∏™ÈúÄÊ±ÇÊòØÂØπËæìÂÖ•Ê°ÜÊåâ enter Ëß¶ÂèëË∑ü onBlur ‰∏ÄÊ†∑ÁöÑÊïàÊûúÔºåÊàëÂú® onKeyUp ÈáåÈù¢Ëøô‰πàÂÜôÔºö 12345onKeyUp=&#123;e =&gt; &#123; if(e.key === 'Enter')&#123; e.target.dispatchEvent(new Event('blur')); &#125;&#125;&#125; Ê†πÊú¨Ê≤°ÊïàÊûú Âè™Â•ΩÊîπÊàêËøôÊ†∑Ôºö 12345onKeyDown=&#123;e =&gt; &#123; if(e.key === 'Enter')&#123; e.currentTarget.blur(); &#125;&#125;&#125; target Âíå currentTarget ÁöÑÂå∫Âà´Ôºötarget ÊòØÊ≥®ÂÜå‰∫ã‰ª∂ÁöÑ domÔºå‰ΩÜ‰∏ç‰∏ÄÂÆöÊòØÁúüÊ≠£Ëß¶Âèë‰∫ã‰ª∂ÁöÑ domÔºåcurrentTarget ÊòØÁúüÊ≠£Ëß¶Âèë‰∫ã‰ª∂ÁöÑ dom„ÄÇÊúâ‰∏ÄÁßçÂæàÂ∏∏ËßÅÁöÑÂÅöÊ≥ïÊòØÂú®Á•ñÂÖàËäÇÁÇπ‰∏äÊ≥®ÂÜå‰∫ã‰ª∂ÔºåÁÑ∂ÂêéÂÜçÂú®‰∫ã‰ª∂ÈáåÈù¢ÂàÜËæ®ÂÖ∑‰ΩìÊòØÂì™‰∏™Â≠êËäÇÁÇπÔºåËøôÂ∞±Âè´Ôºö‰∫ã‰ª∂ÂßîÊâòÔºåÂèØ‰ª•ÊúâÊïàÂáèÂ∞ë‰∫ã‰ª∂Ê≥®ÂÜåÁöÑÊï∞Èáè 2023-01-03Êñ∞ÁöÑ‰∏ÄÂπ¥ÂèàÂºÄÂßã‰∫ÜÔºåÈ∫ªÊú®‰∫ÜÔºå‰ΩÜËøòÊòØÂØªÊ±ÇÁùÄÊîπÂèò„ÄÇÊàëË∑üÊàëÂ†ÇÂºüËØ¥‰∫Ü‰∏Ä‰∫õ‰∏úË•øÔºåÊàëËá™Â∑±ËßâÂæóÂæàÊúâÈÅìÁêÜÔºå‰æøÂÜôÂú®ËøôÈáåÂêßÔºö ÊÄªÁªìÔºöÊàëÁöÑÂ≠¶Ê†°ÁîüÊ∂ØÁÆóÊòØÊØîËæÉÊàêÂäüÁöÑÔºåÊàëÁöÑÈ´òËÄÉÂêéÁöÑ‰∫∫ÁîüÁÆóÊòØÊØîËæÉÂ§±Ë¥•ÁöÑÔºà‰∏ä‰∫ÜÂ•ΩÂ§ßÂ≠¶Ôºå‰ΩÜÊ≤°ÊúâÂä™ÂäõÔºåÂ∑•‰ΩúÊ≤°ÊúâÊâæÂ•ΩÔºâ Â≠¶Ê†°ÁîüÊ∂ØÁöÑÊàêÂäüÔºåÊàëÊÄªÁªì‰∏∫ÔºåËÇØÁ´û‰∫âÔºåÊúâÂÖàÂèë‰ºòÂäøÔºåÂè™Ë¶ÅÂÖ∑Â§áËøô‰∏§Ê†∑ÔºåÂç≥ÂèØÊàêÂäü„ÄÇÂõ†‰∏∫Â≠¶Ê†°ÈáåÈù¢ÁöÑÁõÆÊ†áÊòØ‰∏ÄËá¥ÁöÑÔºåÊ∏ÖÊô∞ÁöÑÔºåÊúâÂ≠¶Ê†°ÁöÑÂà∂Â∫¶ÁÆ°ÁùÄÔºåÂè™Ë¶ÅÊúâ‰∏ÄÂÆöÁöÑÂ§©ËµãÔºåÊúâÁ´û‰∫âÊÑèËØÜÔºåÊúâ‰ºòÂäøËÉΩÂ∞ùÂà∞ÁîúÂ§¥ÔºåÂ∞±‰ºöË∂äÊù•Ë∂ä‰ºòÁßÄ„ÄÇ È´òËÄÉÁªìÊùüÂêéÁöÑ‰∫∫ÁîüÔºåÂøÖÈ°ªËΩ¨Êç¢È©±Âä®Âäõ„ÄÇÂõ†‰∏∫Â§±Âéª‰∫ÜÂ≠¶Ê†°ÁöÑÁÆ°ÊùüÔºåÂíåÊ∏ÖÊô∞ÁöÑÁõÆÊ†á„ÄÇÂøÖÈ°ªË¶ÅËá™Â∑±ÁÆ°Ëá™Â∑±ÔºåËá™Â∑±ÁªôËá™Â∑±ÂÆöÁõÆÊ†á„ÄÇËÄåËøôÊúÄÂ•ΩÁöÑ‰∏ÄÁßçÊÉÖÂÜµÊòØÊúâËá™Â∑±ÊâÄÁÉ≠Áà±ÁöÑÈ¢ÜÂüüÂíå‰∫ã‰∏öÔºåÂÖ¥Ë∂£Áà±Â•Ω„ÄÇÂè™Ë¶ÅÊúâÔºåËøô‰πãÂêéÁöÑÊï¥‰∏™‰∫∫ÁîüÂ∞±ÂèØ‰ª•ÂæàÊàêÂäüÔºåÊ≤°ÊúâÂ∞±‰ºöÂæàÂ§±Ë¥•„ÄÇ‰∏Ä‰ªΩÁÉ≠Áà±ÁöÑ‰∫ã‰∏öÔºåÂøÖÈ°ªÂØπËá™Â∑±ÊúâÁùÄÁã¨ÁâπÁöÑÊÑè‰πâÔºåË∑üÂÖ∂‰ªñ‰∫ãÁöÑÂå∫Âà´ÂæàÊòéÊòæ„ÄÇÊØîÂ¶ÇÊàëÁâπÂà´ÂñúÊ¨¢ÁßëÂπªÔºåÂêëÂæÄÁßëÂπª‰∏≠ÁöÑÊú™Êù•‰∏ñÁïåÔºåÊàëÂØπ‰∫∫Á±ªÊÑèËØÜÁöÑÊï∞Â≠óÂåñÂæàÊÑüÂÖ¥Ë∂£Ôºå‰ΩÜËøô‰∏™Ëøá‰∫éÂâçÊ≤øÔºå‰∏çËÉΩÂíåÂΩì‰∏ãÁöÑ‰∫ãÁªìÂêà„ÄÇ ‰∏çÁÆ°ÊÄé‰πàËØ¥ÔºåÊàëËßâÂæóÊàëÊñ∞ÁöÑ‰∏ÄÂπ¥ÂøÖÈ°ªË¶ÅÊàíÁΩëÁªúÊ∏∏ÊàèÔºåÁü≠ËßÜÈ¢ë„ÄÇÂêåÊó∂Ë¶ÅÁúã‰π¶ÔºåÁúãÈïøËßÜÈ¢ë„ÄÇÂà´‰∫∫ÊàíÊØíÈÉΩÂèØ‰ª•ÊàêÂäüÔºåÊàëÊàí‰∏™Ëøô‰∏™ÊÄé‰πàÂ∞±‰∏çÂèØ‰ª•„ÄÇ CSS Ëß£ÂØÜËØª‰π¶Á¨îËÆ∞ÁõÆÂâçËøòÂú®ÁúãËÉåÊôØ‰∏éËæπÊ°ÜÔºå‰π¶‰∏≠ÊèêÂæóÊØîËæÉÂ§öÁöÑÊòØ DRYÔºàDo not Repeat YourselfÔºâÔºåÂ∞±ÊòØÂ∞ΩÈáèÂ∞ëÁöÑÂáèÂ∞ëÈáçÂ§çÔºåÂõ†‰∏∫ÈáçÂ§çÊÑèÂë≥ÁùÄÊîπÂä®‰∏çÊñπ‰æø„ÄÇ ‰π¶‰ºº‰πéÊòØÊåâ‰∏Ä‰∏™‰∏™ÈöæÈ¢òËøõË°åÁºñÊéíÁöÑÔºåÊØîÂ¶ÇÂçäÈÄèÊòéËæπÊ°ÜÔºåÂ§öÈáçËæπÊ°ÜÔºåÁÅµÊ¥ªËÉåÊôØÂÆö‰Ωç„ÄÇ 2022-12-21Â¶Ç‰ΩïÁªôÂ•≥ÊúãÂèãÊãçÁÖß ÊûÑÂõæÔºåÊãçÂÖ®Ë∫´ËøòÊòØ‰∏äÂçäË∫´ÔºåËøòÊòØÂ§¥È¢àÈÉ®ÔºåË¶ÅÊÉ≥Ê∏ÖÊ•ö ÊãçÂÖ®Ë∫´Â¶Ç‰ΩïÊòæËÖøÈïøÔºö ‰ΩéÊú∫‰Ωç+ÊääËÖøÊîæÂú®ÈïúÂ§¥ÂÅè‰∏ãÁöÑËæπÁºòÔºàÂéüÁêÜÊòØËøëÂ§ßËøúÂ∞èÔºåÂπøËßíÁï∏ÂèòÔºâ Â¶ÇÊûúÊòØÂùêÁùÄÁöÑÔºåÂ∞ΩÈáèËÆ©ËÖø‰º∏Âá∫Êù•ÔºåÁî®‰æßÈù¢ÂØπÁùÄÈïúÂ§¥ Ë°®ÊÉÖÔºå‰∏ÄÂÆöË¶ÅÊäìÊãçÂà∞Â•ΩÁöÑË°®ÊÉÖÔºåÁæéÁöÑË°®ÊÉÖÔºåËøáÊª§Êéâ‰∏çÂ•ΩÁöÑÔºå‰∏ëÁöÑ ËÑ∏Â∞èÔºöÊñúÂêë‰∏ä 45 Â∫¶ ÂÖâÁ∫øÔºåÂÖâÁ∫øÊòØÂê¶ÂÖÖË∂≥ÔºåÊòØË¶ÅÊãçÊ∏ÖÊô∞ÔºåËøòÊòØÊïÖÊÑèËÉåÂÖâÂèñÂâ™ÂΩ±„ÄÇÂÖâÁ∫øÁöÑÊñπÂêë ËÑ∏ÁôΩÔºöËÆ∞ÂæóÁÇπÂØπÁÑ¶Ê°ÜÊóÅËæπÁöÑÂ∞èÂ§™Èò≥Ë∞ÉÊï¥ÊõùÂÖâË°•ÂÅøÔºå‰æßÂÖâÔºå‰æßÈÄÜÂÖâ ÂêéÊúüÔºöÁ£®ÁöÆÔºåÁæéÁôΩÔºåËÉåÊôØËôöÂåñ 2022-12-14ÊêúÁ¥¢ÂºïÊìéÂ∞èÊäÄÂ∑ßÂä™Âä™ËßÜÈ¢ëÁöÑÊêúÁ¥¢‰ªéÊò®Â§©ÂºÄÂßãÂ∞±ÊåÇ‰∫ÜÔºåÈÅáÂà∞ËøôÁßçÊÉÖÂÜµÊàë‰ª¨ÊÄé‰πàÊêúÁ¥¢Âë¢ÔºüÂÖ∂ÂÆûÂèØ‰ª•Áî®Ë∞∑Ê≠åÁöÑÊêúÁ¥¢ÂºïÊìéÊù•ÂÆåÊàêËøô‰∏™ÈúÄÊ±ÇÔºö site:nunuyy5.org &quot;ÊñóÁΩóÂ§ßÈôÜ&quot; ËøòÊúâ‰∏Ä‰∏™Áî®Êù•Êâæ pdf ÊàñËÄÖÁßçÂ≠êÁöÑÊäÄÂ∑ßÔºö filetype:pdf &quot;Vue.jsËÆæËÆ°‰∏éÂÆûÁé∞&quot; 2022-12-12Ê∑±ÂÖ•ÂØπÊØîÂØπË±°ÊÄé‰πàÊ∑±ÂÖ•ÊØîËæÉ‰∏§‰∏™ÂØπË±°ÊòØÂê¶Áõ∏Á≠âÔºà‰∏çÁÆ°ÂºïÁî®ÊòØÂê¶Áõ∏Á≠âÔºåÂè™ÁúãÂÄºÔºâÔºåÊúÄÁÆÄÂçïÁöÑÂäûÊ≥ïÂ∞±ÊòØ‰ΩøÁî®JSON.stringify„ÄÇ ===ÂíåObject.is()Êúâ‰ªÄ‰πàÂå∫Âà´Ôºü 12345NaN === NaN; // falseObject.is(NaN, NaN); // true-0 === +0; // trueObject.is(-0, +0); // false ÊñáÊú¨Ê∫¢Âá∫Â∏∏Áî®Â§ÑÁêÜÊâãÊÆµ12345.ellipsis &#123; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;&#125; width 100%Âíå auto ÁöÑÂå∫Âà´difference between width auto and width 100 percent ÂÆûÈ™å:https://replit.com/@liuqinh2s1/css-textOverflow#src/App.tsx ‰∏Ä‰∏™ÂçïËØçÊòØ‰∏ç‰ºöÊç¢Ë°åÁöÑÂèëÁé∞Ë°åÂÜÖÂÖÉÁ¥†Â±ÖÁÑ∂‰∏ç‰ºöÊç¢Ë°åÔºåÂéüÊù•ÊòØÂõ†‰∏∫Ë¢´ÂΩìÊàê‰∏Ä‰∏™ÂçïËØç‰∫Ü ÂÆûÈ™åÔºöhttps://replit.com/@liuqinh2s1/cssTest2#src/App.tsx Áî®Ê†∑ÂºèÂèØ‰ª•ÊéßÂà∂ÊØè‰∏™Â≠óÊØçÊç¢Ë°åÔºö 12word-break: break-all;word-wrap: break-word; 2022-12-09Http ËØ∑Ê±ÇÁöÑÊï∞ÊçÆÊ†ºÂºèHttp ËØ∑Ê±Ç‰∏≠ÔºådataType Âíå ContentType ÁöÑÂå∫Âà´ http ÁöÑÂ§¥ÂÖ∂ÂÆûÊòØÂèØ‰ª•ÈöèÊÑè‰π¶ÂÜôÁöÑÔºåÂè™Ë¶ÅÊúçÂä°Âô®ËÉΩÈÄÇÈÖçÂ∞±Ë°åÔºåÂΩìÁÑ∂Â§ßÈÉ®ÂàÜÊòØÁ∫¶ÂÆöÁöÑ„ÄÇÊàëÂè™ÁúãÂà∞ Content-TypeÔºårequest Âíå response ÈÉΩÊúâÔºå‰ΩÜÊ≤°Êúâ dataType„ÄÇdataType Áî®‰∫éÂÆ¢Êà∑Á´ØÈÄöÁü•ÊúçÂä°Âô®ÔºåÂÆ¢Êà∑Á´ØÈúÄË¶Å‰ªÄ‰πàÁ±ªÂûãÁöÑËøîÂõûÊï∞ÊçÆ„ÄÇËØ¥ÊúâÁî®‰πüÊúâÁî®ÔºåËØ¥Ê≤°Áî®‰πüÊ≤°Âï•Áî®ÔºåÊúçÂä°Âô®‰ºöËøîÂõû‰ªÄ‰πàÁ±ªÂûãÁöÑÊï∞ÊçÆÔºåÂÆ¢Êà∑Á´ØËÇØÂÆöÊòØÁü•ÈÅìÁöÑÂïäÔºå‰∏ÄÂºÄÂßãÂ∞±Á∫¶ÂÆö‰∫Ü Â∏∏ËßÅÁöÑÊï∞ÊçÆÊ†ºÂºèÔºö application/json application/x-www-form-urlencoded flexÔºåflex-growÔºåflex-shrinkÔºåflex-basisËøô‰∏™‰∏úË•øÁöÑËÆ°ÁÆóÂÖ¨ÂºèÂÆòÁΩëÊ≤°ÊúâÂÖ¨Â∏ÉÔºåÂØºËá¥Âè™ËÉΩÊü•Âà´‰∫∫ÂÜôÁöÑËµÑÊñôÔºåÊàñËÄÖËá™Â∑±Êé®ÂØº„ÄÇÁªèËøáÂ§öÊ¨°ÂÆûÈ™åÂêéÔºåÁªìËÆ∫Â¶Ç‰∏ãÔºö grow ÁöÑËÆ°ÁÆóË∑üËá™Ë∫´ÂÆΩÈ´òÊó†ÂÖ≥ÔºåÁõ¥Êé•ÊåâÊØî‰æãÂàÜÈÖçÂâ©‰ΩôÁöÑÁ©∫Èó¥Ôºåshrink ÁöÑËÆ°ÁÆóÊòØË∑üËá™Ë∫´ÂÆΩÈ´òÊúâÂÖ≥ÁöÑÔºåÈúÄË¶ÅÊ†πÊçÆËá™Ë∫´ÂÆΩÈ´òÔºåÊåâÂä†ÊùÉÊØî‰æãÂπ≥ÊëäÔºàÁº©ÂáèÔºâË∂ÖÂá∫ÁöÑÁ©∫Èó¥„ÄÇ ÂÅáËÆæËÆ°ÁÆóÁöÑÊòØÊ∞¥Âπ≥ÊñπÂêëÁöÑ flexÔºö grow ÁöÑÁÆóÊ≥ïÂ¶Ç‰∏ãÔºö Âçï‰∏™ÂÖÉÁ¥†ÈúÄË¶Å grow ÁöÑÈáèÔºö(Âçï‰∏™Â≠êÂÖÉÁ¥† flex-grow/ÊÄªÁöÑ flex-grow)*(Áà∂ÂÆπÂô®ÂÆΩÂ∫¶-Â≠êÂÖÉÁ¥†ÂÆΩÂ∫¶‰πãÂíå) shrink ÁöÑÁÆóÊ≥ïÂ¶Ç‰∏ãÔºö ÂÅáËÆæ div1 ÊòØ 100px, flex-shrink:1Ôºõdiv2 ÊòØ 200px, flex-shrink:2Ôºõdiv3 ÊòØ 300px, flex-shrink: 3„ÄÇÂÆπÂô®ÂÆΩÂ∫¶ 400px div1 ÂÖÉÁ¥†ÈúÄË¶Å shrink ÁöÑÈáèÔºö(100*1)/(100*1+200*2+300*3)*(100+200+300-400) ‰πüÂ∞±ÊòØÂä†ÊùÉÊØî‰æãÔºåÈúÄË¶ÅÁî®Âà∞Ëá™Ë∫´ÁöÑÂÆΩÈ´ò flex-basis Â∞±ÊòØÂÆΩÈ´òÁöÑÊÑèÊÄùÔºå‰ΩÜÊØîÂÆΩÈ´ò‰ºòÂÖàÁ∫ßÈ´òÔºåÊØîÂ¶ÇÂÆö‰πâ‰∫Ü width: 100px; flex-basis: 0px;ÈÇ£‰πàÂ∞±ÊòØÊåâ 0 ÂéªËøõË°å flex ÁöÑ„ÄÇ ÂÆûÈ™åÂú∞ÂùÄÔºöhttps://replit.com/@liuqinh2s1/css-flex#src/App.tsx 2022-12-08react ÊÄé‰πàÂå∫ÂàÜÁà∂ÁªÑ‰ª∂ÂèëËµ∑ÁöÑÊ∏≤ÊüìÔºåËøòÊòØÂ≠êÁªÑ‰ª∂Ëá™Ë∫´ÂèëËµ∑ÁöÑÊ∏≤ÊüìÁî® react ÁöÑËøáÁ®ã‰∏≠ÈÅáÂà∞‰∏Ä‰∏™ÈúÄÊ±ÇÔºöÂ≠êÁªÑ‰ª∂Ê∏≤ÊüìÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÁü•ÈÅìÊòØÁà∂ÁªÑ‰ª∂ÂèëËµ∑ÁöÑÔºåËøòÊòØÂ≠êÁªÑ‰ª∂Ëá™Ë∫´ÂèëËµ∑ÁöÑÊ∏≤Êüì„ÄÇÂ¶ÇÊûúÊòØÁà∂ÁªÑ‰ª∂ÂèëËµ∑ÁöÑÔºåÂ∞±Áî®Áà∂ÁªÑ‰ª∂‰º†ËøáÊù•ÁöÑÊï∞ÊçÆÔºåÂ¶ÇÊûúÊòØÂ≠êÁªÑ‰ª∂ÂèëËµ∑ÁöÑÔºåÂ∞±Áî®Â≠êÁªÑ‰ª∂Ëá™Ë∫´ÁöÑÊï∞ÊçÆ„ÄÇ ÈÇ£‰πàÊÄé‰πàËææÂà∞Ëøô‰∏™ÁõÆÁöÑÂë¢ÔºåÊúâ‰∏§ÁßçÊñπÊ°àÔºö Ôºà1ÔºâÂ¢ûÂä†‰∏Ä‰∏™ÂèòÈáèxxxÊ†áÂøóÁà∂ÁªÑ‰ª∂ÁöÑÂà∑Êñ∞ÔºåÁÑ∂ÂêéÂ≠êÁªÑ‰ª∂ useEffect ÁõëÂê¨Ëøô‰∏™ÂèòÈáè ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123useEffect(() =&gt; &#123; setData(props.data);&#125;, [props.xxx]); // Á°Æ‰øùÊØèÊ¨°Áà∂ÁªÑ‰ª∂Ê∏≤ÊüìÁöÑÊó∂ÂÄôxxxË∑ü‰∏äÊ¨°‰∏çÂêå Ôºà2ÔºâËøòÊúâ‰∏Ä‰∏™ÊñπÊ°àÊòØ‰ΩøÁî®‰∏çÂêåÁöÑ key ÂéªÊ∏≤ÊüìÂ≠êÁªÑ‰ª∂ÔºàËøôÊ†∑Â∞±ËÉΩÂº∫Âà∂Âà∑Êñ∞Â≠êÁªÑ‰ª∂‰∫ÜÔºâ 1&lt;Child key=&#123;xxx&#125;&gt;&lt;/Child&gt; // Á°Æ‰øùÊØèÊ¨°Áà∂ÁªÑ‰ª∂Ê∏≤ÊüìÁöÑÊó∂ÂÄôxxxË∑ü‰∏äÊ¨°‰∏çÂêå Ëøô‰∏§ÁßçÂÅöÊ≥ïÔºåËøòÊúâÊú¨Ë¥®‰∏äÁöÑÂå∫Âà´ÔºåÂõ†‰∏∫Á¨¨‰∫åÁßçÊñπÊ≥ï‰ºöÂØºËá¥ react ÁöÑËôöÊãü dom ‰∏≠Áõ¥Êé•Âπ≤ÊéâÂ≠êÁªÑ‰ª∂Ôºà‰ª•ÂèäÂÆÉÁöÑÂ≠êËäÇÁÇπÔºâÔºåËøô‰ºöÂØºËá¥Êï¥‰∏™Â≠êËäÇÁÇπÂà∑Êñ∞ÔºåËÄåÁ¨¨‰∏ÄÁßçÊñπÊ°àÂàô‰∏ç‰ºöÔºåÁ¨¨‰∏ÄÁßçÊñπÊ°àÊØîËæÉÈ´òÊïà„ÄÇ ÊµãËØïÊ°à‰æãÔºöhttps://replit.com/@liuqinh2s1/whereIsRerenderComeFrom#src/Sub.tsx Â¶Ç‰ΩïÊâìÂåÖ chrome Êâ©Â±ïÁ®ãÂ∫èÂú® chrome Êâ©Â±ïÁ®ãÂ∫èÁÆ°ÁêÜ‰∏≠ÊâæÂà∞‰∫ÜÔºåÂºÄÂèëËÄÖÊ®°Âºè-&gt;ÊâìÂåÖÊâ©Â±ïÁ®ãÂ∫èÔºå‰ΩÜÊòØÊèêÁ§∫ÊàëÔºöÊâìÂåÖÊâ©Â±ïÁ®ãÂ∫èÈîôËØØ ÊåáÂÆöÊâ©Â±ïÁ®ãÂ∫èÁöÑÁßÅÊúâÂØÜÈí•Â∑≤Â≠òÂú®„ÄÇËØ∑ÈáçÂ§ç‰ΩøÁî®ËØ•ÂØÜÈí•ÔºåÊàñËÄÖÂÖàÂà†Èô§ÂÆÉ„ÄÇ ‰∏äÁΩëÊü•‰∫Ü‰∏Ä‰∏ãÔºåÈÉΩËØ¥Â∑≤ÁªèÊâìÂåÖËøá‰∫ÜÔºåË¶ÅÊàëÊâæÂà∞Á¨¨‰∏ÄÊ¨°ÊâìÂåÖÁöÑ‰ΩçÁΩÆÔºåÈ¨ºËÆ∞ÂæóÂïäÔºå‰ΩÜÊúÄÂêéËøòÊòØÂÄüÂä©‰∏ÄÂÆöÁöÑÊâãÊÆµÊâæÂà∞‰∫Ü„ÄÇÊâ©Â±ïÁ®ãÂ∫èÈÉΩÊúâËá™Â∑±ÁöÑ idÔºåÁÑ∂ÂêéÊàëÁî® everythingÔºà‰∏Ä‰∏™ÂæàÂ•ΩÁî®ÁöÑÊêúÊñá‰ª∂ËΩØ‰ª∂ÊîØÊåÅ Windows Á≥ªÁªüÔºâÊêúÁ¥¢‰∏Ä‰∏ãËøô‰∏™ idÔºåÂ±ÖÁÑ∂ÁúüÁöÑÊâæÂà∞‰∫ÜÔºåÊòØ‰∏™ÁõÆÂΩïÂêçÔºåËøòÂ•ΩÊàëÊ≤°ÊúâÊâãË¥±ÂéªÊîπÁõÆÂΩïÂêç„ÄÇ 2022-12-07Ê≤°ÊÉ≥Âà∞Áñ´ÊÉÖËØ¥ÊîæÂºÄÂ∞±ÊîæÂºÄ‰∫ÜÔºåÁé∞Âú®ÂºÄÂßãÂáÜÂ§á‰∏™‰∫∫Èò≤ÊéßÔºå‰ΩÜËçØÁâ©Âç¥‰π∞‰∏çÂà∞Ôºå‰ª•ÂâçÊ≤°ÊúâÂÅöÂáÜÂ§áÔºå‰ªéÂà´Â§ÑÊäÑ‰∫Ü‰∏™Ê∏ÖÂçïÔºö 1234567891011ÂâçÊúüÂêÉËøô‰∏™Ôºö1. ÂõõÂ≠£ÊäóÁóÖÊØíÂêàÂâÇ2. Â§çÊñπ‰∏ÄÊîØËíøÈ¢óÁ≤íÊµëË∫´ÁñºÂêÉÔºöÂ§çÊñπÊ∞®ÈÖöÁÉ∑ËÉ∫ËÉ∂ÂõäÂèëÁÉßÂêÉÔºö‰Ωé‰∫é38.5¬∞ÂêÉÔºö‰πôÁÉØÊ∞®Âü∫ÈÖöÁâáÈ´ò‰∫é38.5¬∞ÂêÉÔºöÂ∏ÉÊ¥õËä¨ÁºìÈáäËÉ∂ÂõäÂêéÊúüÂêÉÔºö1. ËøûËä±Ê∏ÖÁòüËÉ∂Âõä2. Ëí≤Âú∞ËìùÊ∂àÁÇéÁâáÂí≥ÂóΩÂêÉÔºöÊ∂àÁÇéÊ≠¢Âí≥Áâá 2022-12-06react Áà∂ÁªÑ‰ª∂Ë∞ÉÁî®Â≠êÁªÑ‰ª∂ÁöÑÂáΩÊï∞ÔºöuseImperativeHandle Â≠êÁªÑ‰ª∂Ôºö 1234567891011121314151617// ÂøÖÈ°ªÊòØ‰∏™ÂáΩÊï∞Ôºå‰∏îÂáΩÊï∞ÂèÇÊï∞ÊòØpropsÂíåreffunction children(props, ref) &#123; const func = () =&gt; &#123; console.log("ÊâßË°åfunc"); &#125;; // Áî®useImperativeHandleÊö¥Èú≤‰∏Ä‰∫õÂ§ñÈÉ®refËÉΩËÆøÈóÆÁöÑÂ±ûÊÄßÔºåÂøÖÈ°ªË¶ÅÂÜôËøô‰∏™Ôºå‰∏çÁÑ∂ref‰ªÄ‰πà‰πüÊãø‰∏çÂà∞ useImperativeHandle(ref, () =&gt; &#123; // ÈúÄË¶ÅÂ∞ÜÊö¥Èú≤ÁöÑÊé•Âè£ËøîÂõûÂá∫Âéª return &#123; xxx: () =&gt; &#123; func(); &#125;, &#125;; &#125;); return &lt;h1&gt;children&lt;/h1&gt;;&#125;export default forwardRef(children); Áà∂ÁªÑ‰ª∂Ôºö 123const childrenRef = useRef(null);childrenRef.current.xxx();return &lt;children ref=&#123;childrenRef&#125; /&gt;; ËØïÈ™åÂü∫Âú∞Ôºöreact-practice 2022-12-05css ‰∏§ÁßçÁõíÊ®°Âûã12box-sizing: border-box; // Ëøô‰∏™‰ºöÊääËæπÊ°ÜÁöÑÂÆΩÂ∫¶Ôºå‰ª•ÂèäpaddingËÆ°ÂÖ•widthÂíåheightbox-sizing: content-box; // Ëøô‰∏™‰∏ç‰ºöÊääËæπÊ°ÜÁöÑÂÆΩÂ∫¶Ôºå‰ª•ÂèäpaddingËÆ°ÂÖ•widthÂíåheightÔºå‰∏îËøô‰∏™ÊòØÈªòËÆ§ÂÄº Ê≥®ÊÑè margin Âú®‰∏§ÁßçÁõíÊ®°ÂûãÈÉΩÊòØ‰∏çËÆ°ÂÖ•ÂÆΩÈ´òÁöÑ react ÂèóÊéßÁªÑ‰ª∂ÂíåÈùûÂèóÊéßÁªÑ‰ª∂‰ΩøÁî® react ÁöÑËøáÁ®ã‰∏≠ÂèëÁé∞ÔºåÊúâÁöÑÊó∂ÂÄôÈúÄË¶ÅÂÜôÂæàÂ§öÁöÑÊõ¥Êñ∞‰ª£Á†ÅÔºåÊØîÂ¶Ç Input Ê†áÁ≠æÔºåÈúÄË¶ÅÂú® onBlur ÁöÑÊó∂ÂÄôÊõ¥Êñ∞ valueÔºåÈúÄË¶ÅÂú® onKeyUpÔºàÊåâ enterÔºâÁöÑÊó∂ÂÄôÊõ¥Êñ∞ valueÔºåÂ¶ÇÊ≠§‰ºöÈùûÂ∏∏È∫ªÁÉ¶ÔºåËøú‰∏çÂ¶Ç‰ª•ÂâçÁî® jquery ÁöÑÊó∂ÂÄôÔºåÁõ¥Êé•Ëé∑Âèñ dom ÁöÑÂÄº„ÄÇ Â¶ÇÊûúÂØπ‰∫é‰∏Ä‰∏™ÁªÑ‰ª∂ÔºåÊàë‰ª¨Áî® useState Êù•Â≠òÂÇ®Áä∂ÊÄÅÔºåÂπ∂Âú®ÊØè‰∏™Êõ¥Êñ∞‰∫ã‰ª∂‰∏≠Êõ¥Êñ∞ÂÄºÔºåËøôÁßçÊàë‰ª¨Âè´ÔºöÂèóÊéßÁªÑ‰ª∂ ËøòÊúâ‰∏ÄÁßçÂÜôÊ≥ïÊòØÔºåÁõ¥Êé•‰∏ç‰ΩøÁî® useStateÔºå‰πüÂ∞±‰∏çÁî®Êõ¥Êñ∞ÂÄºÔºåÈúÄË¶ÅÊãøÂÄºÁöÑÊó∂ÂÄôÔºåÁõ¥Êé•‰ªé dom Ëé∑ÂèñÔºàÊÄé‰πàËé∑Âèñ domÔºüÁî® useRefÔºâ„ÄÇ ÂÆòÊñπÊñáÊ°£Ôºöhttps://zh-hans.reactjs.org/docs/uncontrolled-components.html 2022-12-02react ÊÄé‰πàËé∑Âèñ childrenÔºåÊØîÂ¶Ç&lt;Button&gt;&lt;span&gt;AA&lt;/span&gt;&lt;/Button&gt; https://reactjs.org/docs/glossary.html#propschildren ‰ΩÜÈóÆÈ¢òÊù•‰∫ÜÔºåÊó¢ÁÑ∂ children Âç†‰∫Ü props ÁöÑ‰∏Ä‰∏™ÈîÆÔºåÂ¶ÇÊûúËøôÊ†∑ÂÜôÂë¢Ôºö&lt;Button children=&quot;BB&quot;&gt;&lt;span&gt;AA&lt;/span&gt;&lt;/Button&gt; Â¶ÇÊûúÊòØ ts ÁöÑËØù‰ºöÊä•ÈîôÔºö&#39;children&#39; are specified twice. The attribute named &#39;children&#39; will be overwritten. ÁÑ∂Âêé node ÊéßÂà∂Âè∞‰πü‰ºöÂèëÂá∫Ë≠¶ÂëäÔºå‰ΩÜ‰æùÊóßÊòØÂèØ‰ª•ËøêË°åÁöÑÔºå‰∏î children ÊúÄÁªàÁªìÊûú‰ºöÊòØÔºö&lt;span&gt;AA&lt;/span&gt; È°∫Â∏¶ËØ¥‰∏ÄÂè• replit.com ÊòØÁúüÂ•ΩÁî®ÂïäÔºåÊØî codepen Âº∫Â§™Â§ö‰∫Ü„ÄÇ 2022-12-01ÂÆâË£ÖÂÖçË¥πÁöÑÊ≠£ÁâàÁöÑÊøÄÊ¥ªÁöÑ officeÔºåÂÆòÊñπÊèê‰æõÁöÑÁôΩÂ´ñÊ∏†ÈÅìÔºö https://www.youtube.com/watch?v=VSjRx7Hoa60&amp;t=319s&amp;ab_channel=%E9%9B%B6%E5%BA%A6%E8%A7%A3%E8%AF%B4 2022-11-27Áî®‰∫Ü 7 Âπ¥ÁöÑ macbook pro A1398 Ê¨æÔºåÊúÄËøëÊÉ≥Êç¢‰∏™Â±èÂπï‰ª•ÂèäÈîÆÂ∏ΩÔºåF ÈîÆÂ∏ΩË¢´Á£®ÊéâÊºÜ‰∫Ü„ÄÇÂ∞ùËØïËá™Â∑±ÊãÜ‰∫Ü‰∏Ä‰∏ãÈîÆÂ∏ΩÔºåËøòÁúüÊòØÂ§çÊùÇÔºåÂºÄÊú∫ÈîÆÁöÑÈîÆÂ∏ΩÊîØÊû∂Â∑ÆÁÇπË£Ö‰∏çÂõûÂéª‰∫Ü„ÄÇ‰∏äÊ∑òÂÆùÊêú‰∫Ü‰∏Ä‰∏ã‰ª∑Ê†ºÔºåÂçï F ÈîÆÂ∏ΩÂíå‰∏ãÈù¢ÁöÑËΩØÂû´Â∞±Ë¶Å 20 ÂùóÔºåF ÈîÆÂ∏Ω+ÂºÄÊú∫ÈîÆÈîÆÂ∏ΩË¶Å 30ÔºåËÉ∂Ê∞¥Ë¶Å 5 Âùó„ÄÇ‰ΩÜÊòØ‰∏Ä‰∏™ÈîÆÁõòÂ∏¶ C Â£≥ÊÄªÊàêÊâç 130ÔºåÂä†‰∏äÊàëË£ÖÂõû F ÈîÆÂêéÔºåÂèëÁé∞Ëøô‰∏™ÈîÆÁöÑÊâãÊÑüÂíåÂÖ∂‰ªñÈîÆÂ±ÖÁÑ∂‰∏ç‰∏ÄÊ†∑„ÄÇ‰ªîÁªÜËØï‰∫Ü‰∏Ä‰∏ãÔºåF ÈîÆÁöÑÊâãÊÑüÊúÄËΩØÊ¶ªÔºåÊÑüËßâÂá†‰πéÂø´Ë¶ÅÂùè‰∫Ü„ÄÇÊçÆËØ¥Ë¶ÅÁªôËΩØÂû´‰∏ãÈù¢Ê∂ÇËÉ∂Ê∞¥Âõ∫ÂÆöÔºå‰∏çËøáÊàë‰πü‰∏çÊ∏ÖÊ•öÊòØ‰∏çÊòØÊ∂Ç‰∫ÜËÉ∂Ê∞¥ÔºåÊâãÊÑüÂ∞±Â•Ω‰∫ÜÔºåÊàñËÄÖÊç¢‰∫ÜËΩØÂû´Â∞±Â•Ω‰∫Ü„ÄÇ ËøòÊòØÊç¢ÈîÆÁõòÂêßÔºåÊúÄÁ®≥Â¶•ÁöÑÂÜ≥ÂÆö„ÄÇ 2022-11-26ÊúÄËøëÂèëÁé∞ surface ‰∏äÊé®ÈÄÅÁöÑ blogÔºåÂÜÖÂÆπÂ±ÖÁÑ∂ÊòØÁ©∫ÁöÑÔºåÁªèËøáË∞ÉÊü•ÂèëÁé∞ÔºåÊòØÁîüÊàêÁöÑ index.html ÂÜÖÂÆπ‰∏∫Á©∫ÔºåÂÜç‰∏äÁΩëÊü•ÂèëÁé∞‰∫ÜÂéüÊù•ÊòØ node ÁâàÊú¨Â§™È´òÔºåhexo ÁâàÊú¨Â§™‰ΩéÔºå‰∏çÂåπÈÖç„ÄÇÊàëÈÄâÊã©‰∫ÜÂçáÁ∫ß hexo Âà∞ 4.2.1„ÄÇ https://alanlee.fun/2021/02/28/hexo-empty-html/ ÂÖâÊîπ package.json ‰∏≠ÁöÑÁâàÊú¨Ëøò‰∏çÂ§üÔºåÁîüÊàêÁöÑÂÜÖÂÆπÊ†∑Âºè‰∏¢‰∫Ü„ÄÇÊâÄ‰ª•ÂÜ≥ÂÆöÁî® hexo ÂÆòÁΩëÊé®ËçêÁöÑÊñπÂºèÊù•Ëß£ÂÜ≥Ôºö 12345npm install hexo-cli -ghexo init blogcd blognpm installhexo server Âú® hexo init ÁöÑÊó∂ÂÄôÂèëÁé∞Ê≤°ÊúâÊùÉÈôêÂàõÂª∫Êñá‰ª∂Â§πÔºö 123456789101112$ hexo initINFO Cloning hexo-starter https://github.com/hexojs/hexo-starter.gitfatal: unable to access 'https://github.com/hexojs/hexo-starter.git/': Failed to connect to github.com port 443 after 21114 ms: Timed outWARN git clone failed. Copying data insteadFATAL &#123; err: [Error: EPERM: operation not permitted, mkdir 'C:\'] &#123; errno: -4048, code: 'EPERM', syscall: 'mkdir', path: 'C:\\' &#125;&#125; Something's wrong. Maybe you can find the solution here: %s http://hexo.io/docs/troubleshooting.html Âú®ÁΩë‰∏äÊü•‰∫Ü‰∏ÄÂúàÔºåÊ≤°ÊâæÂà∞ÂêàÈÄÇÁöÑÁ≠îÊ°àÔºå‰∏çËøáÊàëËá™Â∑±Áü•ÈÅìÈóÆÈ¢òÁöÑÂéüÂõ†ÔºåÂ∞±ÊòØÂõ†‰∏∫ÊùÉÈôê‰∏çÂ§üÈúÄË¶ÅÁî®ÁÆ°ÁêÜÂëòË∫´‰ªΩËøêË°å mkdir ËÄåÂ∑≤ÔºåÊàëËØïÁùÄ‰ª•ÁÆ°ÁêÜÂëòÊñπÂºèÂêØÂä® vscodeÔºåÊ≤°ÊÉ≥Âà∞ÁúüÁöÑÊàêÂäü‰∫ÜÔºå‰º∞ËÆ°ÊùÉÈôêÂêë‰∏ã‰º†ÈÄíÁªô‰∫Ü vscode ÁöÑ bashÔºåÁÑ∂ÂêéÂèà‰º†Áªô‰∫Ü bash ‰∏≠ËøêË°åÁöÑ hexoÔºå‰ª•ÂèäÁî± hexo ÂêØÂä®ÁöÑ mkdir„ÄÇ ‰ΩÜÊòØÂú®Áî®‰∫Ü hexo ÊúÄÊñ∞ÁâàÂêéÂêÑÁßçÈóÆÈ¢òÔºåËÄå‰∏î next Êñ∞Áâà‰∏ªÈ¢òÊàë‰πü‰∏çÂñúÊ¨¢Ôºå‰∏∫‰∫ÜÈÅøÂÖçÊäòËÖæÔºåËøòÊòØÂÜ≥ÂÆö‰øùÁïô hexo ÊóßÁâàÔºåÊää node ÂàáÂõû‰ΩéÁâàÊú¨Ôºö12.22.12„ÄÇ‰ΩøÁî® nvm ÂèØ‰ª•ÂæàÊñπ‰æøÁöÑÂàáÊç¢ÁâàÊú¨Ôºå‰∏ãËΩΩ node Á≠âÊìç‰Ωú„ÄÇ 2022-11-25ÂÆâË£Ö Android Â≠êÁ≥ªÁªüÔºöhttps://www.cnblogs.com/frank-link/p/16390714.html ‰ΩÜÊàëÂçáÁ∫ßÂà∞ win11 ÂêéÔºåÂÜçÁî®Ëøô‰∏™ÊñπÊ≥ïÂÆâË£ÖÁöÑÂÆâÂçìÂ≠êÁ≥ªÁªüÊúâÂæàÂ§ßÈóÆÈ¢òÔºå‰ªÄ‰πàÂ∫îÁî®ÈÉΩÊâì‰∏çÂºÄÔºåÂÆåÂÖ®‰∏çËÉΩÁî®„ÄÇÊàëÊç¢‰∫Ü‰∏ÄÁßçÂÆâË£ÖÊñπÂºèÔºåÁé∞Âú®Âø´ÁöÑÈ£ûËµ∑‰∫ÜÔºöhttps://www.sysceo.com/article-article_info-id-1854.html Áî®Ëøô‰∏™ 360 ÁöÑ win11 ÂÆâÂçìÂä©ÊâãÔºöhttps://m.xitongzhijia.net/soft/246638.html ÂÆâË£Ö linux Â≠êÁ≥ªÁªüÔºåÈÅáÂà∞ÂÜÖÊ†∏ÂçáÁ∫ßÁöÑÈóÆÈ¢òÔºå‰ªé WSL1 ÂçáÁ∫ßÂà∞ WSL2ÔºåÈúÄË¶Å‰∏ãËΩΩ‰∏Ä‰∏™ÂçáÁ∫ßÂÜÖÊ†∏ÁöÑÁ®ãÂ∫èÔºö https://github.com/microsoft/WSL/issues/5393 https://learn.microsoft.com/zh-cn/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package ‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi ÂÖ∂‰ªñÁõ∏ÂÖ≥ËµÑÊñôÔºö https://www.cnblogs.com/aedjesse/p/14085217.html https://cloud.tencent.com/developer/article/1632713 https://zhuanlan.zhihu.com/p/258563812 ÂÆâË£ÖÁöÑ kali linux ÊòØÊúÄÂ∞èÂûãÁöÑÔºåÂ¶ÇÊûúÊÉ≥Êâ©ÂÖÖÂ∑•ÂÖ∑Â∫ìÔºåÁúãËøôÈáåÔºö https://www.kali.org/docs/troubleshooting/common-minimum-setup/ 2022-11-24ÂÆâË£Ö win11 arm64 ‰ΩçÊàëÊãøÂà∞ÁöÑ surface pro x ÈªòËÆ§Ë£ÖÁöÑÊòØ win10Ôºå‰ΩÜÊòØ arm ÁâàÁöÑ win10 ‰∏çÊîØÊåÅ x64 Á®ãÂ∫èÔºåÂØºËá¥ÂæàÂ§öËΩØ‰ª∂ÈÉΩÊó†Ê≥ï‰ΩøÁî®ÔºåÁªèËøá‰∏ÄÁï™‰∏äÁΩëÊü•ÊâæÂèëÁé∞ win11 ÊòØÂèØ‰ª•ÊîØÊåÅ x64 Á®ãÂ∫èÁöÑÊ®°ÊãüÁöÑÔºåËÄå‰∏îËøòÊîØÊåÅÂÆâÂçìÊ®°ÊãüÔºåÁÆÄÁõ¥Â§™Ê£í„ÄÇÊêû‰∫Ü‰∏ÄÊôö‰∏äÁªà‰∫éÂÆâË£ÖÂ•Ω‰∫Ü win11ÔºåÊàëÊ≤°Êúâ‰ΩøÁî® U ÁõòÊù•ÂÆâË£ÖÔºåËÄåÊòØÁõ¥Êé•‰∏ãËΩΩ ISO Êñá‰ª∂ÔºåÁÑ∂ÂêéÁÇπÂáª setup.exe Áõ¥Êé•ÂÆâË£Ö„ÄÇÂÆâË£ÖÂÆåÂêéÔºåÂéüÂÖàÁöÑÁ®ãÂ∫èÂíåËÆæÁΩÆÂÖ®ÈÉΩÂú®ÔºåÈùûÂ∏∏ÁöÑÊñπ‰æøÔºàËøôÊ†∑ÈÉΩ‰∏çÁî®ÁÆ°È©±Âä®ÁöÑÈóÆÈ¢ò‰∫ÜÔºå‰∏ÄÁõ¥Âê¨ËØ¥ surface pro x ÁöÑÈ©±Âä®‰∏çÂ•ΩÊâæÔºâ„ÄÇ windows11 arm64 Áâà‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://next.itellyou.cn/ÔºåËøô‰πàÂ§öÂπ¥‰∏ÄÁõ¥ÊòØÂú®itellyou‰∏ãËΩΩÊ≠£ÁâàËΩØ‰ª∂ÁöÑÔºåÁúüÁöÑÈùûÂ∏∏Êñπ‰æø„ÄÇÂ¶ÇÊûúËßâÂæó‰∏ãËΩΩÊÖ¢ÔºåÂèØ‰ª•‰ΩøÁî®ËøÖÈõ∑„ÄÇ ÊøÄÊ¥ª jetbrains ÂÆ∂ÁöÑËΩØ‰ª∂ https://www.cnblogs.com/nihaorz/p/16517730.html https://www.binfoo.com/2820 Â§¥‰∏ÄÊ¨°ÂèëÁé∞ÊøÄÊ¥ªËøô‰πàÁÆÄÂçïÔºåÁúüÁöÑÂº∫ÁÉàÊé®Ëçê„ÄÇ Êìç‰ΩúÊ≠•È™§Ôºö ÊâìÂºÄÊøÄÊ¥ªÁ†¥Ëß£ÂÆòÊñπÁΩëÁ´ôÔºöhttps://search.censys.io/ ÊêúÁ¥¢Ê°ÜËæìÂÖ•Ôºöservices.http.response.headers.location: account.jetbrains.com/fls-auth„ÄÇ ÁÇπÂáªÊêúÁ¥¢ÔºåÂú®ËøîÂõûÁöÑÁªìÊûúÈöè‰æøÊâæ‰∏Ä‰∏™ÁÇπËøõÂéªÔºåÊü•ÊâæÂà∞ HTTP/302„ÄÇ Â§çÂà∂ÁΩëÂùÄÂà∞ JetbrainsÔºåÈÄâÊã©ËÆ∏ÂèØËØÅÊúçÂä°Âô®/License serverÔºåÁ≤òË¥¥ÂàöÂàöÂ§çÂà∂ÁöÑÁΩëÂùÄÔºåÊøÄÊ¥ª„ÄÇ Â¶ÇÊûúÂèëÁé∞ÊúçÂä°Âô®‰∏çÂèØÁî®ÔºåÂèØ‰ª•ÁªßÁª≠Â∞ùËØïÊõ¥Êç¢‰∏Ä‰∏™ËøõË°åÊøÄÊ¥ª„ÄÇ ÂèØ‰ª•ÊÑâÂø´ÁöÑÂºÄÂßãÁºñÁ®ã‰∫Ü 2022-11-23Êñ∞‰π∞‰∫Ü‰∏™ surface pro xÔºåÂèëÁé∞ windows ÂïÜÂ∫óÊåÇ‰ª£ÁêÜËÆøÈóÆ‰∏ç‰∫ÜÔºåËß£ÂÜ≥ÂäûÊ≥ïÔºö https://zhuanlan.zhihu.com/p/55906778 ‰∏çÁî®ÂÖ∂‰ªñËΩØ‰ª∂Ôºå‰ª•ÁÆ°ÁêÜÂëòÊùÉÈôêÂêØÂä® powershell Êï≤‰∏ãÈù¢ÂëΩ‰ª§Âç≥ÂèØÔºö 1foreach ($n in (get-appxpackage).packagefamilyname) &#123;checknetisolation loopbackexempt -a -n=&quot;$n&quot;&#125; Â¶ÇÊûúÂè™ÊÉ≥ÂØπÊüê‰∏™ÁâπÂÆö UWP Â∫îÁî®ËÆæÁΩÆ‰ª£ÁêÜÔºåÁî® $n=(get-appxpackage Â∫îÁî®ÂêçÁöÑÁã¨ÁâπÈÉ®ÂàÜÔºåÊØîÂ¶ÇÈÇÆ‰ª∂Â∫îÁî®ÊòØcommu).packagefamilyname | checknetisolation loopbackexempt -a -n=&quot;$n&quot; npm i ‰πãÂêéÈÅáÂà∞ hexo Êâæ‰∏çÂà∞ÁöÑÈóÆÈ¢òÔºöbash: hexo: command not found ÂÖ∂ÂÆûÂ∞±ÊòØÈúÄË¶ÅÂÖ®Â±ÄÂÆâË£Ö‰∏Ä‰∏ã hexoÔºönpm install -g hexo ËøòÂèØ‰ª•‰ΩøÁî® npx Êù•ÊâßË°åÔºåËøôÊ†∑Â∞±‰∏çÁî®ÂÖ®Â±ÄÂÆâË£Ö‰∫ÜÔºönpx hexoÔºånpx ‰ºöËá™Âä®‰∏ãËΩΩÁº∫Â§±ÁöÑÊ®°ÂùóÔºå‰ΩÜÊòØÁî®ÂÆåÂ∞±Âà†‰∫ÜÔºå‰∏ç‰ºöÁïô‰∏ãÁóïËøπÔºå‰∏ãÊ¨°ÂÜçÁî®ËøòÊòØË¶ÅËÅîÁΩë‰∏ãËΩΩËØ•Ê®°Âùó„ÄÇ 2022-11-22Â¶Ç‰ΩïÈÄöËøáÂ±ÄÂüüÁΩëÊääÁîµÂ≠ê‰π¶‰º†ËæìÂà∞ kindle Âë¢Ôºü https://www.bilibili.com/read/cv9457950 Á≠îÊ°àÊòØ‰ΩøÁî® calibreÔºåÈÄöËøáËøô‰∏™ËΩØ‰ª∂Êê≠Âª∫‰∏Ä‰∏™Â±ÄÂüüÁΩëÊúçÂä°Âô®ÔºåÁÑ∂ÂêéÁî® kindle ÁöÑÊµèËßàÂô®ÂäüËÉΩËÆøÈóÆÊúçÂä°Âô®ÁΩëÂùÄÔºåÂ∞±ÂèØ‰ª•‰∏ãËΩΩÁîµÂ≠ê‰π¶Âï¶ÔºåÈùûÂ∏∏ÁöÑÊñπ‰æøÂÆûÁî®„ÄÇÊàëÂéüÂÖà‰∏ÄÁõ¥ÊòØÈÄöËøáÂèëÈÄÅÂà∞ÈÇÆÁÆ±ÁöÑÊñπÂºèÊù•‰º†ËæìÁîµÂ≠ê‰π¶ÁöÑÔºåËøô‰∏™ÊòØË¶ÅËµ∞ÂÖ¨ÁΩëÁöÑÔºå‰ΩÜËøôÁßçÊñπÂºèÂØπÊñá‰ª∂Â§ßÂ∞èÊúâÈôêÂà∂ÔºåÂøÖÈ°ªË¶ÅÂ∞è‰∫é 50MÔºåËÄå‰∏î‰º†ËæìÈÄüÂ∫¶‰πüÂ§ß‰∏çÂ¶ÇÂ±ÄÂüüÁΩë„ÄÇ 2022-11-17js ‰∏≠??ÊòØ‰ªÄ‰πàË°®ËææÂºè 1alert(username ?? "Guest"); ËøôÈáåÁöÑÂèåÈóÆÂè∑Áß∞‰∏∫Á©∫ÂÄºÂêàÂπ∂ËøêÁÆóÁ¨¶ÔºåÂÆÉÊòØ ES2020 ÁöÑ‰∏Ä‰∏™Êñ∞ÁâπÊÄßÔºåÂÆÉÁöÑ‰ΩúÁî®ÊòØÂΩì‰∏Ä‰∏™Ë°®ËææÂºèÊòØ null ÊàñËÄÖ undefined Êó∂‰∏∫ÂèòÈáèËÆæÁΩÆ‰∏Ä‰∏™ÈªòËÆ§ÂÄº„ÄÇ ÊØî||Êõ¥Á≤æÁ°Æ‰∏ÄÁÇπ„ÄÇÂÉè&#39;&#39;Ôºå0ÔºåfalseËøô‰∫õÈÉΩÊòØÂÆûÈôÖÂÄº„ÄÇÊúâÁöÑÊó∂ÂÄôÊòØÂ∏åÊúõ‰ΩøÁî®Ëøô‰∫õÂÄºÁöÑ„ÄÇËøô‰∏™ËØ≠Ê≥ïÁ≥ñÁöÑ‰ΩúÁî®Ë∑üËá™Â∑±ÂÆö‰πâÁöÑ isUndef Â∑Æ‰∏çÂ§öÔºö 1alert(isUndef(username) ? "Guest" : username); Áªà‰∫éÂèØ‰ª•‰∏çÁî®Ëá™Â∑±ÂÆûÁé∞‰∏Ä‰∏™ÂáΩÊï∞Êù•ÂÅöËøô‰ª∂‰∫ã‰∫Ü„ÄÇ 2022-11-16trigger Âíå Eventjquery ÂÜôÊ≥ïÔºö 1$("xxx").trigger("blur"); ÂéüÁîü js ÂÜôÊ≥ïÔºö 1dom.dispatchEvent(new Event("blur")); 2022-11-15try catch ËÉΩÊçïËé∑ÂºÇÊ≠•ÁöÑÈîôËØØÂêóÔºåÁ≠îÊ°àÊòØ‰∏çËÉΩ„ÄÇ‰ΩÜÂ¶ÇÊûúÁî® await Â∞±ÂèØ‰ª•„ÄÇ ÂèÇËÄÉËµÑÊñôÔºöhttps://juejin.cn/post/6850418110907088910 ‰ª•‰∏ã‰ª£Á†ÅËÉΩÊçïËé∑Âà∞Ôºö 123456789101112async function f() &#123; // ÂºÇÊ≠•ÔºåÂæÆ‰ªªÂä° try &#123; await new Promise(() =&gt; &#123; throw new Error("gadsgsdg"); &#125;); &#125; catch (error) &#123; console.log(error); &#125;&#125;f(); ‰ª•‰∏ã‰ª£Á†Å‰∏çËÉΩÊçïËé∑Âà∞Ôºö 123456789101112async function f() &#123; // ÂºÇÊ≠•ÔºåÂæÆ‰ªªÂä° try &#123; new Promise(() =&gt; &#123; throw new Error("gadsgsdg"); &#125;); &#125; catch (error) &#123; console.log(error); &#125;&#125;f(); 2022-11-14‰∏ÄÁõ¥‰ª•Êù•ÈÉΩÂè™‰ºö import Âíå export ÁöÑËØ≠Ê≥ïÔºå‰ΩÜÊòØ‰∏ç‰ºö require ÁöÑ„ÄÇ‰ªäÂ§©Â≠¶‰π†‰∫Ü‰∏Ä‰∏ãÔºö 123456789101112// module.jsfunction test(str) &#123; console.log(str);&#125;module.exports = &#123; a: function () &#123; console.log("exports from module"); &#125;, test,&#125;; 12345// sample.jsvar obj = require("./module.js");obj.a(); // exports from modulelet &#123; test &#125; = require("./module.js");test("this is a test"); 2022-11-07clientHeightÊúÄËøë eda È°πÁõÆÂú®ËøõË°å‰∏§‰∏™ÈáçÊûÑÔºåÈáçÊûÑÂÆåÂ∞±ÊòØ 2.0 Áâà‰∫ÜÔºå‰∏Ä‰∏™ÊòØÂéüÁêÜÂõæÁöÑÊï∞ÊçÆÈ©±Âä®ÈáçÊûÑÔºå‰∏Ä‰∏™ÊòØ UI ÁöÑ react ÈáçÊûÑÔºåÊàëÊâìÁÆóÂÅö‰∏™ List ÁªÑ‰ª∂ÔºåÈúÄË¶Å‰∏äËôöÊãüÊªöÂä®„ÄÇ ÂÖàÊù•‰∫ÜËß£‰∏Ä‰∏ãÔºöclientHeight clientHeight = CSS height + CSS padding - Ê∞¥Âπ≥ÊªöÂä®Êù°È´òÂ∫¶ÔºàÂ¶ÇÊûúÂ≠òÂú®Ôºâ ËøûÁª≠ÁÇπÂáªÈº†Ê†áÊ¨°Êï∞Âú®ÂÜô onClick ‰∫ã‰ª∂ÁöÑÊó∂ÂÄôÔºåÂ≠¶Âà∞‰∏Ä‰∏™‰∏úË•øÔºöevent.detailÔºåËøô‰∏™ÊòØ‰∏™ number Á±ªÂûãÔºå‰ª£Ë°®ËøûÁª≠ÁÇπÂáªÈº†Ê†áÁöÑÊ¨°Êï∞ÔºåÂ≠¶‰π†ËµÑÊñôÂ¶Ç‰∏ãÔºö https://bobbyhadz.com/blog/react-double-click-event https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event 1234567891011121314151617181920const handleClick = (event) =&gt; &#123; console.log(event.detail); switch (event.detail) &#123; case 1: &#123; console.log("single click"); break; &#125; case 2: &#123; console.log("double click"); break; &#125; case 3: &#123; console.log("triple click"); break; &#125; default: &#123; break; &#125; &#125;&#125;; useState ÁöÑÂùë123456789101112131415161718192021222324import React, &#123; useState, useEffect &#125; from "https://esm.sh/react@18";import ReactDOM from "https://esm.sh/react-dom@18";const obj = &#123; text: "2" &#125;;const Hello = (&#123; props &#125;) =&gt; &#123; console.log("render"); const [bb, setBB] = useState(props); useEffect(() =&gt; &#123; // let one = JSON.parse(JSON.stringify(obj)) // one.text='3' // setBB(one); // ÂõûË∞ÉÂáΩÊï∞‰ºöË¢´reactË∞ÉÁî®Ôºåreact‰ºö‰º†ÂÖ•bbÁªôÂõûË∞ÉÂáΩÊï∞ setBB((obj) =&gt; &#123; if (bb === obj) &#123; console.log(true); &#125; obj.text = "3"; return obj; // ‰∏ç‰ºöÂºïËµ∑ÁªÑ‰ª∂Ê∏≤Êüì // return JSON.parse(JSON.stringify(obj)); // ‰ºöÂºïËµ∑ÁªÑ‰ª∂Ê∏≤Êüì &#125;); &#125;, []); return &lt;div&gt;&#123;bb.text&#125;&lt;/div&gt;;&#125;;const root = ReactDOM.createRoot(document.getElementById("root"));root.render(&lt;Hello props=&#123;obj&#125;&gt;&lt;/Hello&gt;); ËøêË°åÂú∞ÂùÄÔºöhttps://codepen.io/liuqinh2s/pen/eYKdqeo?editors=0010 Â¶ÇÊûú useState ‰º†ÂÖ•ÁöÑÂØπË±°ÁöÑÂºïÁî®Ê≤°ÊúâÂèëÁîüÂèòÂåñÔºåÂÆÉÂ∞±‰∏ç‰ºöÊõ¥Êñ∞„ÄÇÊâÄ‰ª•‰øÆÊîπÂØπË±°Â∞±Âè™ËÉΩÊ∑±Êã∑Ë¥ù‰∫Ü„ÄÇ 2022-11-06github Á™ÅÁÑ∂ÊäΩÈ£éÔºåpush ÁöÑÊó∂ÂÄôÊä•ÈîôÔºö 12345‚ûú blog git:(master) git pushkex_exchange_identification: read: Connection reset by peerfatal: Êó†Ê≥ïËØªÂèñËøúÁ®ã‰ªìÂ∫ì„ÄÇËØ∑Á°ÆËÆ§ÊÇ®ÊúâÊ≠£Á°ÆÁöÑËÆøÈóÆÊùÉÈôêÂπ∂‰∏î‰ªìÂ∫ìÂ≠òÂú®„ÄÇ ‰πãÂâç‰πüÈÅáÂà∞Ëøá‰∏ÄÊ¨°Ôºå‰∏ªË¶ÅÂèÇËÄÉËøô‰∏§ÁØáÊñáÁ´†Ôºö https://getiot.tech/github/github-errata-port-443-connection-refused.html https://www.jianshu.com/p/61b12cc1f818 ‰∏äÊ¨°ÊòØÊñ∞Âª∫‰∫Ü‰∏Ä‰∏™Êú¨Âú∞ÈÖçÁΩÆÊñá‰ª∂Ôºö~/.ssh/configÔºö 123Host github.comHostname ssh.github.comPort 443 ÂΩìÁÑ∂ËøôÊ¨°ÊòØÂÆÉËá™Â∑±ÂèàÂ•Ω‰∫Ü 2022-11-05WeakMapÔºåWeakSetÊòØ‰ªÄ‰πàÔºü ÂÆÉ‰ª¨ÁöÑÈîÆÈÉΩÂè™ËÉΩÊòØÂØπË±° ÈîÆÂ¶ÇÊûúÊ≤°ÊúâË¢´ÂºïÁî®ÁöÑËØùÔºå‰ºöË¢´ÂõûÊî∂ÔºàÂÆπÂô®Êú¨Ë∫´ÁöÑÂºïÁî®‰∏çÁÆóÔºâÔºåÈò≤Ê≠¢ÂÜÖÂ≠òÊ≥ÑÈú≤ ÈîÆÈÉΩ‰∏çÂèØÈÅçÂéÜÔºàÂõ†‰∏∫ÈöèÊó∂‰ºöË¢´ÂõûÊî∂Ôºâ 2022-11-02Âêå‰∫ãÂàÜ‰∫´‰∫Ü‰∏Ä‰∏™Ê°à‰æãÔºåËøîÂõûÁöÑÊòØÂÄºÁ±ªÂûãÔºå‰ΩÜ‰æùÊóßÂèØ‰ª•‰øÆÊîπÂ±ûÊÄßÔºö 1234567891011const lib = (() =&gt; &#123; const profile = &#123; version: "1.0.1", name: "clouser", &#125;; return &#123; get(key) &#123; return profile[key]; &#125;, &#125;;&#125;)(); ‰∏ä‰æã‰∏≠ÔºåÂ¶ÇÊûú‰∏çÂä®Â∑≤ÊúâÁöÑ‰ª£Á†ÅÔºåË¶Å‰øÆÊîπ profile ÁöÑ nameÔºåÊÄé‰πà‰øÆÊîπÔºü Â¢ûÈáè‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 12345678const a = Symbol(1);Object.defineProperty(Object.prototype, a, &#123; get() &#123; return this; &#125;,&#125;);const profile = lib.get(a);profile.name = "changed name"; ÈÄöËøáÂú® profile ÁöÑÂéüÂûãÈìæ‰∏äÂÆö‰πâ‰∏Ä‰∏™Â±ûÊÄßÔºåÁÑ∂ÂêéÂ±ûÊÄßÁöÑ get ÊñπÊ≥ï‰∏≠ËøîÂõû profile ÂØπË±°Êú¨Ë∫´„ÄÇ ‰øÆÂ§çËøô‰∏™ÊºèÊ¥ûÔºåÂèØ‰ª•ËøôÊ†∑Ôºö 1const profile = Object.create(null); ËøôÊ†∑Â∞±ËÆ© profile ÁöÑÂéüÂûãÊòØ null ‰∫ÜÔºåË¶ÅËÆ© profile ÁöÑÂéüÂûãÊòØ Object.prototype ÂàôËøôÊ†∑ÂÜôÔºöconst profile = Object.create(Object.prototype); 2022-10-27ÈÅáÂà∞‰∏Ä‰∏™ÊØîËæÉÈöæÁöÑÈ¢òÁõÆÔºåÁúã‰∫ÜÁ≠îÊ°àÊâçËß£Âá∫Êù•„ÄÇÂÖàÊòØÁúã‰∫ÜËÆ®ËÆ∫ÈáåÈù¢ÁöÑÊèêÁ§∫ËØ¥Áî®ÂâçÁºÄÂíå+ÂçïË∞ÉÈòüÂàóÔºå‰ΩÜÂÖ∂ÂÆûË∑üÂçïË∞ÉÈòüÂàóÊ≤°Âï•ÂÖ≥Á≥ªÔºåÊØïÁ´üÈòüÂàóÊú¨Ë∫´Â≠òÁöÑÊòØ‰∏ãÊ†á iÔºåÂç¥Ë¶ÅËΩ¨Êç¢Êàê preSum[i] ÂÜçÂéªËÆ®ËÆ∫ÂçïË∞ÉÊÄß„ÄÇËÄå‰∏îËøôÈ¢ò‰∏ÄÂÆöË¶ÅÁªèËøáÁ≤æÂ¶ôÁöÑÂàÜÊûêÊâçËÉΩÁª¥Êä§Â•ΩËøô‰∏™Êü•ËØ¢ÈòüÂàóÔºàÁî®‰∫éÊõø‰ª£Êö¥ÂäõËß£Ê≥ï‰∏≠ÁöÑÁ¨¨‰∫åÂ±Ç for Âæ™ÁéØÔºåÂáèÂ∞ëÊü•ÊâæËåÉÂõ¥ÔºâÔºåÊúÄÂêéÊâçÂãâÂº∫ÂèëÁé∞Ëøô‰∏™Êü•ËØ¢ÈòüÂàóÁ±ª‰ººÂçïË∞ÉÈòüÂàóÔºåÂ¶ÇÊûúÂÖàÁõ¥Êé•ÂÜôÂ•ΩÂçïË∞ÉÈòüÂàóÁöÑÊï∞ÊçÆÁªìÊûÑÂÜçÂéªËß£È¢òÔºåÊÄïÊòØÊ†πÊú¨Â∞±ÊÉ≥‰∏çÊ∏ÖÈ¢òÁõÆ‰∫Ü„ÄÇ Âè¶Â§ñÊó∂ÈöîÂ§öÂπ¥ÂêéÔºåÊàëÂèàËá™Â∑±ÊâãÂÜô‰∫ÜÂèåÈìæË°®Ôºå‰ΩÜÁî®Âú®ËøôÈ¢ò‰∏äÂ±ÖÁÑ∂ÂèçËÄåË∂ÖÊó∂‰∫ÜÔºàÁî® js Ëá™Â∏¶ÁöÑÊï∞ÁªÑ‰∏ç‰ºöË∂ÖÊó∂Ôºâ ÂèëÁé∞ÂéüÊù•ÊòØÂõ†‰∏∫ÊêúÁ¥¢ÁöÑÊó∂ÂÄôÔºåÂõ∫ÂÆö‰ªéÂâçÂæÄÂêéÊêúÂØºËá¥ÁöÑÔºå‰ΩÜÂÉèÂ§¥Â∞æÊìç‰ΩúÁöÑÊó∂ÂÄôÔºåÂ∫îËØ•Áõ¥Êé•ÊåáÂÆöËäÇÁÇπÊ†πÊú¨Â∞±‰∏çÁî®ÊêúÁ¥¢ÔºåËß£ÂÜ≥ÊéâËøô‰∏™ÈóÆÈ¢òÂêéÔºåÈÄüÂ∫¶ÈùûÂ∏∏Âø´‰∫Ü„ÄÇ 2022-10-26.then ÁöÑ‰ºòÂÖàÁ∫ßÊØî await È´òÔºåÊâÄ‰ª•ËøôÊ†∑ÂÜôÊòØÊúâÂå∫Âà´ÁöÑÔºö 12await func().then(); // ÂÖàÊâßË°å.then(await func()).then(); // ÂÖàÊâßË°åawait 2022-10-19AI ‰ΩúÁîªÁé∞Âú®ÂæàÁÅ´ÔºåÊàë‰πüÂ∞èÁé©‰∫Ü‰∏ÄÊääÔºöhttps://6pen.art/ AI ‰ΩúÁîªÁΩëÁ´ôÊî∂ÈõÜÔºöhttps://github.com/hua1995116/awesome-ai-painting 2022-10-17ÊÄé‰πàÈ™åËØÅÔºåÊµèËßàÂô®ÁöÑ localStorage ÊòØÂçï‰∏™Â≠óÊÆµÈôêÂà∂‰∏∫ 5MÔºåËøòÊòØÊï¥‰∏™ localStorage ÈôêÂà∂‰∏∫ 5M„ÄÇÂèØ‰ª•Ëá™Â∑±ÂÜô‰ª£Á†ÅÈ™åËØÅÔºö 123456789101112131415161718localStorage.setItem( "a", Array(5 * 1024 * 1024 - 1) .fill("0") .join("")); // ÈÄöËøálocalStorage.setItem( "a", Array(5 * 1024 * 1024) .fill("0") .join("")); // ‰∏çÈÄöËøálocalStorage.setItem( "aa", Array(5 * 1024 * 1024 - 1) .fill("0") .join("")); // ‰∏çÈÄöËøá ÊâæÂà∞Á©∫ÁöÑ tab ËæìÂÖ•‰∏äÈù¢ÁöÑ‰ª£Á†ÅÔºåÂÜçÊâæ‰∏™Êúâ localStorage ÁöÑÁΩëÁ´ôËæìÂÖ•‰∏äÈù¢ÁöÑ‰ª£Á†ÅÔºåÂæóÂà∞ÁöÑÈ™åËØÅÁªìÊûúÊòØÔºö Êúâ localStorage ÁöÑÁΩëÁ´ô tab ‰∏â‰∏™ÈÉΩÈÄö‰∏çËøáÔºåÁ©∫ÁöÑ tab ËÉΩÈÄöËøáÁ¨¨‰∏Ä‰∏™„ÄÇ Áî±Ê≠§ÂæóÂà∞ÁªìËÆ∫Ôºå5M ÁöÑÈôêÂà∂ÊòØÈíàÂØπÊï¥‰∏™ localStorage ËÄåË®ÄÁöÑÔºà‰∏çÊòØÂçï‰∏™Â≠óÊÆµÔºâÔºå‰∏îÊòØ key+valueÔºåËÄåÈùûÂçïÁ∫ØÁöÑ value„ÄÇ Âè¶Â§ñÊàë‰ª¨ËøòÈ°∫Â∏¶È™åËØÅ‰∫Ü js ÁöÑ&#39;0&#39;ÊòØ 1 Â≠óËäÇÂ§ßÂ∞è„ÄÇ 2022-10-13js ‰∏≠ÁöÑÂ≠óÁ¨¶ÈÉΩÊòØ‰∏§Â≠óËäÇÁöÑÔºåÊÄé‰πàÊü•Áúã‰∏Ä‰∏™Â≠óÁ¨¶ÁöÑÁºñÁ†ÅÂë¢ÔºåÁî®str.charCodeAt(0)Ôºå‰ªéÁºñÁ†ÅÂèòÂ≠óÁ¨¶Áî®ÔºöString.fromCharCode(code) 1234const code = "‰∏≠".charCodeAt(0);console.log(code, code.toString(16), escape("‰∏≠"), unescape("\u4E2D"));const str = String.fromCharCode(code);console.log(str); js Â≠óÁ¨¶ÁºñÁ†ÅÁöÑÊïÖ‰∫ãÔºöUnicode ‰∏é JavaScript ËØ¶Ëß£ - ÈòÆ‰∏ÄÂ≥∞ÁöÑÁΩëÁªúÊó•Âøó ‰ªÄ‰πàÊÉÖÂÜµ‰∏ã charCodeAt Âíå codePointAt ‰ºöÂæóÂà∞‰∏ç‰∏ÄÊ†∑ÁöÑÂÄºÂú® BMPÔºàÂü∫Êú¨Â§öÊñáÁßçÂπ≥Èù¢ÔºâÈáåÈù¢ÁöÑÂ≠óÁ¨¶Â∞±ÊòØ‰∏ÄÊ†∑ÁöÑÁªìÊûúÔºå‰∏çÂú® BMP ÈáåÈù¢Â∞±‰∏ç‰∏ÄÊ†∑ 2022-10-11Ê≠£ÂàôË°®ËææÂºè‰∏≠ÔºåÂúÜÊã¨Âè∑ÊòØÊçïËé∑ÈáåÈù¢ÁöÑÂåπÈÖçÈ°πÁöÑÊÑèÊÄùÔºåÈÇ£‰πàÊÄé‰πà‰∏çÊçïËé∑Âë¢ÔºüËøôÊ†∑ÂÜôÔºö 1(?:x) ÂÆòÊñπÊñáÊ°£ÔºöÊ≠£ÂàôË°®ËææÂºè 2022-10-10Êò®Â§©ÂÅö‰∫Ü‰∏ÄÈÅì leetcodeÔºåÊúÄÂêéÈúÄË¶ÅÁî® eval Êù•Ëß£ÊûêÂõõÂàôËøêÁÆóÔºö856. Êã¨Âè∑ÁöÑÂàÜÊï∞ ÈÇ£‰πàÊÄé‰πàÊâãÂÜô‰∏Ä‰∏™ÂõõÂàôËøêÁÆóËß£ÊûêÂô®Âë¢ÔºüÁ≠îÊ°àÊòØÈúÄË¶ÅÁî®Âà∞ ASTÔºåÂú®ÁΩë‰∏äÁúãÂà∞‰∏ÄÁØáÈùûÂ∏∏‰∏çÈîôÁöÑÊñáÁ´†ÔºöÂõõÂàôËøêÁÆóË°®ËææÂºèÂ¶Ç‰ΩïËΩ¨Êç¢Êàê ASTÔºåÁúãÂÆå‰πãÂêéÊÑüËßâÊàë‰πü‰ºö‰∫ÜÔºåËôΩÁÑ∂‰ª£Á†ÅÊØîËæÉÂ§öÔºå‰ΩÜÈùûÂ∏∏ÁÆÄÂçïÊòìÊáÇÔºåÂÄºÂæóÂ≠¶‰π†ÂÖ∂‰∏≠ÁöÑÁºñÁ®ãÊÄùÁª¥„ÄÇ Ëß£ÂÜ≥‰∫Ü‰∏ÄÈÅìÂä®ÊÄÅËßÑÂàíÈ¢òÔºöhttps://leetcode.cn/problems/minimum-swaps-to-make-sequences-increasing/ ‰∫ÜËß£‰∫Ü‰∏Ä‰∏ãwindow.parent 2022-09-21ÊãâËøúÁ´ØÂàÜÊîØ git ÂëΩ‰ª§Ôºö 12git fetch origingit checkout -b pro-ui/dev origin/pro-ui/dev Âà†Èô§Êú¨Âú∞ÂàÜÊîØ git ÂëΩ‰ª§Ôºö 1git branch -D pro-ui/dev 2022-09-15ÊúÄËøëÊÑüËßâËá™Â∑± git ÊñπÈù¢ÁöÑÁü•ËØÜËøòÊòØÊØîËæÉÂ∞ëÔºå‰ªäÂ§©ÁúãÂà∞‰∏Ä‰∏™--no-track ÂèÇÊï∞Ôºå‰∏çÊáÇ‰ªÄ‰πàÊÑèÊÄù„ÄÇ 121. ÂàõÂª∫Êñ∞ÂàÜÊîØ git checkout -b name/newbranch --no-track origin/pro-xxx/dev2. Âú®ËøúÁ´ØÂàõÂª∫Âπ∂Ë∑üË∏™ÂàÜÊîØ git push --set-upstream origin name/newbranch ‰∏ÄÂºÄÂßãÁåú--no-track ÊòØÈíàÂØπÂêéÈù¢ÈÇ£‰∏™ÂèÇÊï∞origin/pro-xxx/devÔºå‰ΩÜÊÄªÊÑüËßâÊ≤°Ë¶ÅÂøÖË¶Å‰∏çË∑üË∏™Ëøô‰∏™ÂàÜÊîØÂëÄÔºåÂ∫îËØ•ÊòØË¶ÅË∑üË∏™ÊâçÂØπ„ÄÇÂêéÊù•Êâç‰∫ÜËß£Âà∞Ôºå--no-track ÊòØÊåá‰∏çË∑üË∏™ÂΩìÂâçÊâÄÂú®ÂàÜÊîØÔºåËÄåÂéªË∑üË∏™origin/pro-xxx/devÔºåÂè¶Â§ñËøô‰∏™‰∏çÊòØËøúÁ´ØÁöÑÂàÜÊîØÔºåËÄåÊòØËøúÁ´ØÂàÜÊîØÂú®Êú¨Âú∞ÂØπÂ∫îÁöÑÂàÜÊîØÔºåÂõ†‰∏∫ÁªèËøáËØïÈ™åÔºåÈÄöËøáËøô‰∏™ÂàõÂª∫ÁöÑÂàÜÊîØÂπ∂‰∏çÊòØÊúÄÊñ∞ÁöÑ‰ª£Á†ÅÔºåÊâÄ‰ª•Âú®ÂàõÂª∫Êñ∞ÂàÜÊîØ‰πãÂâçÔºåÊúÄÂ•ΩÂÖàÊãâ‰∏Ä‰∏ãpro-xxx/devÁöÑ‰ª£Á†Å„ÄÇ Âú®‰∏çÂàáÊç¢ÂàÜÊîØÁöÑÊÉÖÂÜµ‰∏ãÔºåÊãâÊåáÂÆöËøúÁ´ØÂàÜÊîØÁöÑ‰ª£Á†ÅÂà∞Êú¨Âú∞ÊåáÂÆöÂàÜÊîØÔºö 1git pull origin pro-ui/dev:pro-ui/dev 2022-09-14ÂÖ≥‰∫é git Â∑•‰ΩúÊµÅÔºåÊàë‰ª¨Âõ¢ÈòüÊé®‰∫Ü‰∏Ä‰∏™Â∑•‰ΩúÊµÅÊñπÂºèÔºåÈááÁî®Ôºö Êñ∞Âª∫‰∏¥Êó∂ÂàÜÊîØ git rebase merge requestÁöÑÊñπÂºèËøõË°åÂºÄÂèë„ÄÇ ‰πãÂâç‰∏ÄÁõ¥ÈÉΩÊ≤°Áî®Ëøá git rebaseÔºà‰∏ç‰∫ÜËß£‰∏çÊï¢Áî®ÔºâÔºå‰ªäÂ§©ÊäΩÁ©∫Áúã‰∫ÜËøôÁØáÊñáÁ´†Ôºöhttps://morningspace.github.io/tech/git-merge-stories-6/ ÔºåÂØπ git rebase ÁÆóÊòØÂü∫Êú¨ÁêÜËß£‰∫Ü„ÄÇ 2022-09-06ÁúãÈõ∂Â∫¶Ëß£ËØ¥ÁöÑÊó∂ÂÄôÔºå‰ªñËÆ≤Âà∞‰∏Ä‰∏™ËØ≠Èü≥ËΩ¨ÊñáÂ≠óÁöÑÁΩëÁ´ôÔºåÊàëÁ™ÅÁÑ∂ÊÉ≥Ëµ∑Êù•ÂæÆ‰ø°Â•ΩÂÉèËá™Â∏¶‰∫Ü‰∏Ä‰∏™Ëøô‰∏™ÂäüËÉΩÔºå‰∫éÊòØËØï‰∫Ü‰∏Ä‰∏ãÔºåÁúüÁöÑÂæàÊñπ‰æøÔºåÂú®ËæìÂÖ•ËØ≠Èü≥ÁöÑÊó∂ÂÄôËØ¥ÂÆåËØùÂæÄÂè≥‰∏äÊªëÂä®Â∞±ËÉΩ‰ª•ÊñáÂ≠óÁöÑÂΩ¢ÂºèÂèëÈÄÅÂá∫Âéª‰∫Ü„ÄÇËÄå‰∏îÂæÆ‰ø°Â•ΩÂÉèËøòÊúâËá™Â∏¶ÁöÑÁøªËØëÔºåÂèØ‰ª•ÁøªËØëËã±ÊñáÔºåÈü©Êñá‰ªÄ‰πàÁöÑ„ÄÇÂæÆ‰ø°ÈÉΩËøô‰πàÊñπ‰æø‰∫ÜÔºåÈÇ£Â∞±Ê≤°ÊúâÂøÖË¶ÅÁî®ÂÖ∂‰ªñÁöÑÁΩëÁ´ôÂ∑•ÂÖ∑‰∫Ü„ÄÇ ÂÖ≥‰∫é git Â∑•‰Ωú‰π†ÊÉØÊúÄÂ•ΩÁöÑ‰π†ÊÉØÊòØÂºÄËá™Â∑±ÁöÑÂàÜÊîØÔºåÂêàÂπ∂Áî® merge request„ÄÇ Â¶ÇÊûúÁ°¨Ë¶ÅÂú® dev ÂàÜÊîØÂºÄÂèëÁöÑËØùÔºå‰∏ÄÂÆöË¶ÅË¥ØÂΩªËøúÁ´Ø‰ºòÂÖàÂéüÂàôÔºåÊØèÊ¨°ÂáÜÂ§áÊèê‰∫§Ëá™Â∑±ÁöÑ‰ª£Á†Å‰∫ÜÈÉΩÂÅöÂ¶Ç‰∏ãÊìç‰ΩúÔºö git stash git pull git stash pop Ëß£ÂÜ≥ÂèØËÉΩÂ≠òÂú®ÁöÑÂÜ≤Á™Å git commit git push È°∫‰æøËØ¥‰∏Ä‰∏ã git revert ‰ºö‰∫ßÁîü‰∏ÄÊù°Êñ∞ÁöÑÊèê‰∫§ËÆ∞ÂΩïÔºåÂ¶ÇÊûú‰∏çÊÉ≥‰∫ßÁîüÊèê‰∫§ËÆ∞ÂΩïÂ∞±Áî® git reset„ÄÇ ‰ªäÂ§©ÂèëÁîü‰∫Ü‰∏Ä‰∏™ÂêàÂπ∂‰∫ãÊïÖÔºåÊàëÂÖà git commitÔºåÁÑ∂Âêé pull ÂèëÁé∞ÊúâÂÜ≤Á™ÅÔºå‰ΩÜÁúãËµ∑Êù•ÂæàÂ•áÊÄ™ÔºàÂ§ö‰∫Ü 100 Â§ö‰∏™Êñá‰ª∂ÈúÄË¶ÅÊèê‰∫§ÔºâÔºåÊàëÂ∞±ÊÉ≥Âì™ÈáåÂá∫ÈóÆÈ¢ò‰∫ÜÔºåÂ∞± git revert ‰∫Ü‰∏Ä‰∏ãÔºåÁÑ∂ÂêéÂÜç git pullÔºågit cherry-pick ‰πãÂâçÁöÑ commitÔºåÁÑ∂Âêé git push„ÄÇÊúÄÁªàÂØºËá¥ÁöÑÁªìÊûúÊòØÂè¶‰∏Ä‰ΩçÂêå‰∫ãÂú® merge Êó∂Âà†Èô§‰∫ÜÊüê‰ΩçÂêå‰∫ãÁöÑ‰ª£Á†Å„ÄÇÊÄª‰πãËøôÂ•óÂÅöÊ≥ïÂæà‰∏çÂ•ΩÔºå‰ª•ÂêéËøòÊòØÁî®Âõû‰∏äÈù¢ÊèêÂà∞ÁöÑÊµÅÁ®ã„ÄÇ 2022-09-01ÂΩì cherry-pick ‰∫ßÁîüÂÜ≤Á™ÅÔºåÊÄé‰πàÈÄÄÂá∫ cherry-pickÔºü Á≠îÊ°àÊòØÁî®Ôºögit cherry-pick --abort cherry-pick ÁöÑÂèÇÊï∞Êå∫Â§öÁöÑÔºåÂèØ‰ª•Ëá™Â∑±Âú®ÂëΩ‰ª§Ë°åÁúã‰∏Ä‰∏ãÔºö 12345678910111213141516171819202122232425262728$ git cherry-pickusage: git cherry-pick [&lt;options&gt;] &lt;commit-ish&gt;... or: git cherry-pick &lt;subcommand&gt; --quit end revert or cherry-pick sequence --continue resume revert or cherry-pick sequence --abort cancel revert or cherry-pick sequence --skip skip current commit and continue --cleanup &lt;mode&gt; how to strip spaces and #comments from message -n, --no-commit don&apos;t automatically commit -e, --edit edit the commit message -s, --signoff add Signed-off-by: -m, --mainline &lt;parent-number&gt; select mainline parent --rerere-autoupdate update the index with reused conflict resolution if possible --strategy &lt;strategy&gt; merge strategy -X, --strategy-option &lt;option&gt; option for merge strategy -S, --gpg-sign[=&lt;key-id&gt;] GPG sign commit -x append commit name --ff allow fast-forward --allow-empty preserve initially empty commits --allow-empty-message allow commits with empty messages --keep-redundant-commits keep redundant, empty commits 2022-08-31git ÂêàÂπ∂ÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÊú¨Âú∞‰ª£Á†ÅËøáÊóßÔºàÊØîÂ¶ÇÊú¨Âú∞‰ª£Á†ÅÊòØ‰∏§‰∏™ÊúàÂâçÁöÑÔºâÔºåÂèØËÉΩ‰ºöÂèëÁîü‰∏Ä‰∫õÊÑèÊÉ≥‰∏çÂà∞ÁöÑÈóÆÈ¢òÔºåÂêàÂπ∂ÁöÑÊó∂ÂÄôÊäõÂºÉ‰∫ÜÁ∫ø‰∏äÂàÜÊîØÁöÑËÆ∏Â§ö‰ª£Á†ÅÂíåÊñá‰ª∂Ôºå‰ΩÜ commit ËÆ∞ÂΩïÈáåÈù¢Âç¥Ê≤°Êúâ‰ΩìÁé∞„ÄÇËøô‰∏™Êó∂ÂÄôÊÉ≥Ë¶Å revert ÂèëÁé∞Êä•Èîô‰∫ÜÔºö git revert is a merge but no -m Âõ†‰∏∫ÈúÄË¶ÅÂõûÊªöÁöÑ commit ÊòØ‰∏Ä‰∏™ merge Âä®‰ΩúÔºåÈúÄË¶ÅÊòæÁ§∫ÁªôÂá∫-mÔºàmainlineÔºâÈÄâÊã©ÂëäËØâ git ÂõûÊªöÂÖ∑‰ΩìÂì™‰∏Ä‰∏™ mainline„ÄÇ Ëß£ÂÜ≥ÂäûÊ≥ïÊúâ‰∏§ÁßçÔºå‰∏ÄÁßçÊòØ git reset Âà∞ÂêàÂπ∂ÂâçÔºåÁÑ∂Âêé force pushÔºàËøôÁßçÂäûÊ≥ïÁöÑÂ•ΩÂ§ÑÊòØ‰∏ç‰ºö‰∫ßÁîüÂ§ö‰ΩôÁöÑ commitÔºâÔºå‰ΩÜÂ¶ÇÊûúÂºÄ‰∫ÜÂàÜÊîØ‰øùÊä§ÔºåÊó†Ê≥ïÂº∫Êé®ÔºåÂ∞±Âè™Â•ΩÊç¢Âè¶‰∏ÄÁßçÂäûÊ≥ïÔºåËøòÊòØ git revertÔºå‰ΩÜË¶ÅÂ§öÂä†‰∏Ä‰∏™-m ÂèÇÊï∞Ôºöhttps://blog.csdn.net/yanlaifan/article/details/115761272 ÂÖàÁúãÁúãÁî®:git show commitHashÊü•Áúã merge ‰∫ÜÂì™‰∏§‰∏™ mainlineÔºåÁÑ∂ÂêéÊåáÂÆöÂõûÊªöÂà∞Âì™‰∏™ mainlineÔºö git revert commitHash -m 2ÔºåÂõûÊªöÂà∞Á¨¨‰∫å‰∏™ mainline„ÄÇ ËøôÊ†∑ÁöÑËØùÂ∞±ËÉΩÊàêÂäü revert ‰∫ÜÔºåËôΩÁÑ∂ÊâæÂõû‰∫Ü‰πãÂâç mainline2 ÁöÑ‰ª£Á†ÅÔºå‰ΩÜËøôÁßçÂÅöÊ≥ïÁöÑÁº∫ÁÇπÊòØ mainline1 Âíå mainline2 ÁöÑÊâÄÊúâ‰∏çÂêåÁöÑ‰ª£Á†ÅË°åÁöÑ commit ‰ø°ÊÅØÂÖ®ÈÉ®ÂèòÊàê revert Ëøô‰∏™ commit ÁöÑ‰ø°ÊÅØ‰∫Ü 2022-08-25 ÂéüÁêÜÔºöconst ÈôêÂÆöÂºïÁî®‰∏çÂèØÊõ¥ÊîπÔºåas const ÈôêÂÆöÂÜÖÂÆπ‰∏çÂèØÊõ¥ÊîπÔºåÂΩìÂÜÖÂÆπÂèØ‰ª•ÊîπÁöÑÊó∂ÂÄôÔºåÊòæÁÑ∂ typeof Êó†Ê≥ïÂáÜÁ°ÆÈôêÂÆöÔºàÂè™ËÉΩÈôêÂÆöÂà∞ string,number Ëøô‰∫õÈÄöÁî®ÁöÑÁ±ªÂûãÔºåÊ≤°ÂäûÊ≥ïÈôêÂÆöÂà∞&#39;a&#39;, 1 Ëøô‰∫õÂÖ∑‰ΩìÁöÑÂÄºÔºâÔºåÂΩìÂÜÖÂÆπ‰∏çÂèØÊîπ‰∫ÜÔºåËá™ÁÑ∂‰ºöÂ∏Æ‰Ω†Áº©ÂáèÂà∞ÂÖ∑‰ΩìÂÄº„ÄÇ typescript ÁöÑ‰∏Ä‰∫õÂ∏∏ËßÅÁî®Ê≥ïÔºö ‰ΩøÁî®Êï∞ÁªÑ‰∏≠ÈôêÂÆöÁöÑ string12let a = ["a", "b"] as const;let b: (typeof a)[number] = "c"; ‰∏äËø∞‰ª£Á†Å‰ºöÊä•ÈîôÔºåÂõ†‰∏∫ typeof a[number] ÈôêÂÆö‰∫Ü b ÁöÑÁ±ªÂûãÊòØ&#39;a&#39;|&#39;b&#39;Ôºåas constÊó¢ÂèØ‰ª•ËÆ© a ÊòØ readonly Á±ªÂûãÔºåÂèàÂèØ‰ª•ËÆ© typeof a[number] ‰ªé string Á±ªÂûãÁº©Á™ÑÂà∞ &#39;a&#39;|&#39;b&#39; typeof a Á±ªÂûãÊòØ readonly [&#39;a&#39;, &#39;b&#39;] ÂèØ‰ª•Â∞Ü‰∏äÈù¢ÁöÑ‰ª£Á†ÅÊîπÂÜô‰∏∫Ôºö 12let a: readonly ["a", "b"] = ["a", "b"];let b: (typeof a)[number] = "c"; ‰ΩÜËøô‰∏™Ë¶ÅÂÜô‰∏§ÈÅçÊï∞ÁªÑÔºåÁúãËµ∑Êù•‰∏çÂ§™Â•ΩÁúã ‰ΩøÁî®ÂØπË±°‰∏≠ÈôêÂÆöÁöÑ string12345let obj = &#123; a: "a", b: "b",&#125; as const;let b: Item&lt;typeof obj&gt; = "c"; ËøôÊ†∑ÂèØ‰ª•Ëé∑ÂèñÂØπË±°ÁöÑ valueÔºåÊØèÂ§ö‰∏ÄÂ±ÇÔºåÂ∞±ÂèØ‰ª•Â§öÂä†‰∏Ä‰∏™ Item„ÄÇ ÈÇ£ÊÄé‰πàËé∑ÂèñÂØπË±°ÁöÑ key Âë¢Ôºü‰ª£Á†ÅÂ¶Ç‰∏ãÔºökeyof typeof 12345678let obj = &#123; 'a': 'a', 'b': 'b' 'c': &#123; 'd': 'd' &#125;&#125; as const;let b: keyof typeof obj = 'd'; ËÄå‰∏îËøô‰∏™ÊòØ‰∏çÁî® as const ‰πüÂèØ‰ª•ÁöÑ ÈôêÂÆö‰∏Ä‰∏™ÂØπË±°ÁöÑ key ‰∏éÂè¶‰∏Ä‰∏™ÂØπË±°ÁöÑ key ÂÆåÂÖ®ÂåπÈÖç123456789101112const enum DOCTYPE &#123; DEVICE = 1, SYMBOL = 2,&#125;let a: Record&lt;DOCTYPE, string&gt; = &#123; [DOCTYPE.DEVICE]: "aaaa",&#125;; // ËøôÊ†∑ÂÜô‰ºöÊä•ÈîôÔºåÂ∞ë‰∫Ü‰∏Ä‰∏™ key„ÄÇlet b: Record&lt;DOCTYPE, string&gt; = &#123; [DOCTYPE.DEVICE]: "aaaa", [DOCTYPE.SYMBOL]: "aaaa",&#125;; // ËøôÊ†∑ÊâçÂØπ Ëøô‰∏™ Record ÁöÑ‰ΩúÁî®Â∞±ÊòØÊñ∞Âª∫‰∏Ä‰∏™ÂØπË±°ÔºåÂØπË±°ÁöÑ key ÂÆåÂÖ®Ê≤øÁî®ÊóßÂØπË±°ÁöÑ„ÄÇ Â¶ÇÊûú‰∏çÊÉ≥ÈôêÂÆöÂÆåÂÖ®‰∏ÄËá¥ÔºåË¶ÅÊÄé‰πàÂÜô12345678910const enum DOCTYPE &#123; DEVICE = 1, SYMBOL = 2,&#125;type aa = &#123; [key in keyof typeof DOCTYPE]?: string;&#125;;let a: aa = &#123; [DOCTYPE.DEVICE]: "aaaa",&#125;; Âè™ÈúÄË¶ÅÂú® key ÂêéÈù¢Âä†‰∏™ÈóÆÂè∑ÔºåÂ∞±Ë∑üÂÖ∂‰ªñÁöÑ‰ªªÊÑè key ‰∏ÄÊ†∑Â§ÑÁêÜÔºà‰ªäÂ§©Ë¢´Ëøô‰πà‰∏Ä‰∏™ÁÆÄÂçïÁöÑÈóÆÈ¢òÈöæ‰Ωè‰∫ÜÔºåËØ¥Êòé‰∏ç‰ºö‰∏æ‰∏ÄÂèç‰∏âÔºâ ÊÄé‰πàËé∑Âèñ enum ÁöÑ key Âíå value Á±ªÂûã1234567export const enum Direction &#123; a = "vertical", b = "horizontal",&#125;type k = keyof typeof Direction;type v = `$&#123;Direction&#125;`;type v1 = Item&lt;typeof Direction&gt;; // ËøôÊ†∑‰∏çË°åÔºåItemÂè™ËÉΩËé∑ÂèñÂØπË±°ÔºåÊï∞ÁªÑÔºåMapÔºåSetÁöÑÂÄºÁ±ªÂûã 2022-08-23Ê≤°‰ªÄ‰πàÁî®Ôºå‰ΩÜÁî®Ëµ∑Êù•ÂæàÁàΩÁöÑÂø´Êç∑ÈîÆÔºåVscode Ê∏ÖÈô§Ê≤°ÊúâÁî®Âà∞ÁöÑ import ËØ≠Âè•Ôºö Mac:option+shift+O windows:Alt+shift+O ËøôÊ†∑ÂÅöÈùûÂ∏∏Âç±Èô©ÔºåÊ∏ÖÁêÜÂÆåÊ≤°ÊúâÁî®Âà∞ÁöÑ import ÂêéÔºåÂèØËÉΩÊâìÁ†¥ÊüêÁßçÂæ™ÁéØÂºïÁî®ÁöÑÂ•áÂ¶ôÂπ≥Ë°°Ôºå‰ªéËÄåÂØºËá¥È°πÁõÆÊ†πÊú¨Ë∑ë‰∏çËµ∑Êù•„ÄÇÊâÄ‰ª•Ê∏ÖÁêÜÂÆåÂºïÁî®ÂêéÔºå‰∏ÄÂÆöË¶ÅËÆ∞ÂæóË∑ë‰∏Ä‰∏ãÈ°πÁõÆÔºåÁúãÊòØÂê¶ËÉΩË∑ëËµ∑Êù•ÔºåÂÜçÊèê‰∫§‰ª£Á†Å„ÄÇ È´òÂÜÖËÅöÔºå‰ΩéËÄ¶Âêà È´òÂÜÖËÅöÊòØÂáèÂ∞ë‰∫Ü‰ª£Á†ÅÈáèÔºåÂ¢ûÂä†Â§çÁî®ÔºåÈÅøÂÖçÊîπ‰∫ÜËøôÈáåËøòË¶ÅÊîπÈÇ£Èáå ‰ΩéËÄ¶ÂêàÊòØÂ¢ûÂä†‰∫Ü‰ª£Á†ÅÈáèÔºåÂáèÂ∞ëÂ§çÁî®ÔºåÈÅøÂÖçÊîπ‰∫ÜËøôÈáåÂç¥Âä®Âà∞‰∫ÜÈÇ£Èáå Êú¨Ë¥®‰∏äÈÉΩÊòØ‰∏∫‰∫ÜÂ∞ë‰øÆÊîπ‰ª£Á†ÅÔºåÂáèÂ∞ëÂ∑•‰ΩúÈáè 2022-08-01ÈáçÊñ∞ÂÅö‰∫Ü‰∏ÄÈÅçËøô‰∏™ CSS ÈÄâÊã©Âô®ËÆ≠ÁªÉÔºöCSS Speedrun | Test your CSS Skills Êúâ‰∫õÊàëËøòÊòØÁî®ÁöÑÊå∫Â∞ëÁöÑÔºåÊØîÂ¶Ç:nth-child(2n+3)Ôºåimg ~ pÔºåa + spanÔºå:enableÔºåÂπ≥Â∏∏Áî®ÁöÑÊúÄÂ§öÁöÑÂ∫îËØ•Â∞±ÊòØÂ±ûÊÄßÈÄâÊã©Âô®‰∫ÜÔºåÈÉΩËøòÊòØÈù†Âä†Â±ûÊÄßÊù•Ê†áËÆ∞ÁöÑ 2022-07-25HTTP3.0 Â±ÖÁÑ∂ÈÉΩÊúâ‰∫ÜÔºåËÄå‰∏îÂ±ÖÁÑ∂ÊîæÂºÉ‰∫Ü TCP ‰Ωú‰∏∫‰º†ËæìÂ±ÇÂçèËÆÆÔºöHTTP 3.0 ÂΩªÂ∫ïÊîæÂºÉ TCPÔºåTCP Âà∞Â∫ïÂÅöÈîô‰∫Ü‰ªÄ‰πàÔºü npm ÁöÑ‰æùËµñÁâàÊú¨ÈóÆÈ¢ò: ^Ôºå~Ôºå*‰ª•Âèä‰∏çÂ∏¶ÂâçÁºÄÁöÑÂå∫Âà´ ~‰ºöÂåπÈÖçÊúÄËøëÁöÑÂ∞èÁâàÊú¨‰æùËµñÂåÖÔºåÊØîÂ¶Ç~1.2.3 ‰ºöÂåπÈÖçÊâÄÊúâ 1.2.x ÁâàÊú¨Ôºå‰ΩÜÊòØ‰∏çÂåÖÊã¨ 1.3.0 ^‰ºöÂåπÈÖçÊúÄÊñ∞ÁöÑÂ§ßÁâàÊú¨‰æùËµñÂåÖÔºåÊØîÂ¶Ç^1.2.3 ‰ºöÂåπÈÖçÊâÄÊúâ 1.x.x ÁöÑÂåÖÔºåÂåÖÊã¨ 1.3.0Ôºå‰ΩÜÊòØ‰∏çÂåÖÊã¨ 2.0.0 ÂÜô*ÔºåËøôÊÑèÂë≥ÁùÄÂÆâË£ÖÊúÄÊñ∞ÁâàÊú¨ÁöÑ‰æùËµñÂåÖ ÁâàÊú¨Âè∑‰∏çÂ∏¶ÂâçÁºÄÔºåÂàôÂõ∫ÂÆöÂÆâË£ÖËøô‰∏™ÁâàÊú¨ ÊúÄÂêé package-lock.json ‰ºöÈîÅ‰ΩèÁâàÊú¨ÔºåÊâÄ‰ª•Â¶ÇÊûúÊÉ≥Ë¶ÅÈáçÊñ∞ÂÆâË£ÖÔºåË¶ÅÂà†ÊéâÈáåÈù¢ÁöÑÁõ∏ÂÖ≥ÈÖçÁΩÆ 2022-07-22ÁøªËá™Â∑±ÁöÑË±ÜÂàóÂèëÁé∞Êî∂Ëóè‰∫Ü 15 ÁØáÊñáÁ´†Ôºå‰ΩÜÊ≤°Âï•Âç∞Ë±°Ôºå‰∫éÊòØ‰∏Ä‰∏™‰∏Ä‰∏™ÊâìÂºÄÁúãÔºåÂÖ∂‰∏≠Êúâ‰∏ÄÁØáÊòØËÆ≤Ê∂àË¥πÂìÅÂë≥ÁöÑÔºå‰∏ÄÁõ¥ËßâÂæóËá™Â∑±Âú®Á©øË°£ÊâìÊâÆÊñπÈù¢Ê≥®ÊÑèÂæóÊØîËæÉÊôöÔºå‰∏äÈù¢Êé®ËçêÁöÑÂá†Ê¨æ‰∏úË•øÔºåÁúãËµ∑Êù•Ëøò‰∏çÈîôÔºåÂà∞Êó∂ÂÄôÊåë‰∏Ä‰∫õ‰π∞„ÄÇ Â§ßÂ≠¶ÂõõÂπ¥ÂøÖÂ§áÂçïÂìÅÊ∏ÖÂçï‚Äî‚ÄîÁî∑ÁîüÁØá Ê¥ªÂä®--CHH Á¨¨‰∏âÂ±äÊ°åÈù¢ Show Ê¥ªÂä® 2022-07-21Â∏ÆÁªÑÂëòËß£ÂÜ≥‰∏Ä‰∏™ tinymce.js Âú® nextjs ‰∏≠Êä•ÈîôÁöÑÈóÆÈ¢òÔºåÂéüÂõ†ÊòØ tinymc.js ‰∏≠‰ΩøÁî®‰∫Ü navigatorÔºåÊúçÂä°Á´ØÊ≤°ÊúâËøô‰∏™ÂØπË±°„ÄÇ nextjs ÈÅáÂà∞ÂøÖÈ°ªÂú®ÂÆ¢Êà∑Á´ØÊ∏≤ÊüìÁöÑÂÜÖÂÆπÔºåË¶ÅÊÄé‰πàÂäûÂë¢ÔºüÁ≠îÊ°àÊòØÂà§Êñ≠ÁéØÂ¢ÉÔºö 1234if(typeof window !== 'undefined')&#123; // ÊâßË°åÂøÖÈ°ªÂú®ÂÆ¢Êà∑Á´ØÊâßË°åÁöÑ‰ª£Á†Å require('tinymce')&#125; 2022-07-17Áå´Á†ÇË¶ÅÊÄé‰πàÈÄâÔºü‰ªäÂ§©ÂÅö‰∫Ü‰∏Ä‰∏ãÂäüËØæ È¶ñÂÖàË¶ÅÁü•ÈÅìÁå´Á†ÇÁöÑÂõõ‰∏™ÈáçË¶ÅÂ±ûÊÄßÔºö ÊòìÁªìÂùó Âê∏Âë≥ÔºåÈô§Ëá≠ Â∞òÂ∞ë ‰∏çÁ≤òÂ∫ïÔºå‰∏çÁ≤òÈì≤ ÁÑ∂ÂêéÊòØÁå´Á†ÇÂàÜÁ±ªÔºå‰∏ªË¶ÅÂàÜ‰∏∫ËøôÂõõÁ±ªÔºö ËÜ®Ê∂¶ÂúüÁå´Á†Ç ‰ºòÁÇπÔºöËÜ®Ê∂¶ÂúüÁå´Á†ÇÊòØÂéÜÂè≤ÊúÄÊÇ†‰πÖÁöÑÁå´Á†ÇÔºåÂú®ÁªìÂõ¢‰∏äÈù¢ÊúâÈùûÂ∏∏Âá∫Ëâ≤ÁöÑË°®Áé∞„ÄÇËÜ®Ê∂¶ÂúüÁå´Á†ÇÁöÑÂê∏Ê∞¥ÊÄßÊòØ‰∏çÈîôÁöÑÔºåÂèØ‰ª•Â∞ÜÁ≤™‰æøÈáåÁöÑÊ∞¥ÂàÜÂíåÂ∞øÊ∂≤ÂÆåÂÖ®Âê∏Êî∂ÔºåÂáùÁªìÊàê‰∏Ä‰∏™Â§ßÁ°¨Âõ¢ÔºåÊ∏ÖÁêÜËµ∑Êù•ÊØîËæÉÊñπ‰æøÔºåËÄå‰∏îÊØîËæÉÁ¨¶ÂêàÁå´Âí™Âú®ÈáéÂ§ñÁöÑÊÑüËßâÔºåÂØπÁå´Âí™ÁöÑËÑöÊÑü‰πüÊØîËæÉÂ•Ω„ÄÇ‰∏î‰æøÂÆú„ÄÇ Áº∫ÁÇπÔºö‰æøÂÆúÁöÑÁ≤âÂ∞òÁâπÂà´Â§ßÔºåÂπ∂‰∏î‰∏çËÉΩÂÜ≤ÂéïÊâÄ„ÄÇ ÊùæÊú®Áå´Á†Ç Ê∞¥Êô∂Áå´Á†Ç Ë±ÜËÖêÁå´Á†Ç ‰ºòÁÇπÔºöÂèØ‰ª•Áõ¥Êé•ÂÜ≤ÂéïÊâÄ Â¶ÇÊûú‰∏çËÄÉËôëÁõ¥Êé•ÂÜ≤ÂéïÊâÄÁöÑËØùÔºåËÇØÂÆöÊòØËÜ®Ê∂¶ÂúüÂíåÊ∑∑ÂêàÁå´Á†ÇÊúÄÂ•Ω„ÄÇ ÂèÇËÄÉËµÑÊñô Êñ∞ÊâãËÜ®Ê∂¶ÂúüÁå´Á†ÇÊé®ËçêÔºàÂê´ËØ¶ÁªÜÊ∏ÖÂçïÊîªÁï•Ôºâ 2022 Âπ¥Áå´Á†ÇÈÄâË¥≠Êé®ËçêÔºàËÜ®Ê∂¶Âúü„ÄÅË±ÜËÖêÁ†Ç„ÄÅÊ∑∑ÂêàÁ†ÇÔºâ- Áü•‰πé Á¨¨‰∫åÁØáÊñáÁ´†ÁöÑÊµãËØïÊâãÊ≥ïÊå∫ÊúâÊÑèÊÄùÁöÑ„ÄÇ 2022-07-06ÁõÆÂâç lceda ÁöÑÂéüÁêÜÂõæÂíåÈù¢ÊùøÈ°πÁõÆÈÉΩËøòÊòØÁî®ÁöÑ svg Êù•ÂÅöÁîªÂ∏ÉÔºå‰ΩÜÂØπ‰∫é svg ÁöÑÂæàÂ§ö‰∏úË•øÂÖ∂ÂÆûÊàëÂπ∂‰∏çÁÜüÊÇâÔºå‰ªäÂ§©Áúã‰∫Ü‰∏ÄÁØáÊñáÁ´†‰∫ÜËß£‰∫Ü‰∏Ä‰∏ã text Âíå tspan ÁöÑ dx Âíå dy ÁöÑÁî®Ê≥ïÔºö SVG ÊñáÊú¨Ôºà‰∏ÄÔºâtext„ÄÅtspan ÁöÑÂü∫Êú¨‰ΩøÁî® dx Âíå dy ÂèØ‰ª•ÊòØ‰∏Ä‰∏≤‰ª•Á©∫Ê†ºÂàÜÁïåÁöÑÊï∞Â≠óÔºåËøôÊ†∑Â∞±ÂèØ‰ª•ÂæÆË∞ÉÊØè‰∏™Â≠óÁ¨¶‰∫ÜÔºåÊØè‰∏™Êï∞Â≠ó‰ºöÂΩ±Âìç‰πãÂêéÁöÑÊâÄÊúâÂ≠óÁ¨¶ÔºåËÄå‰∏îÂ§ö‰∏™ tspan ÁöÑ dx Âíå dy Ââç‰∏Ä‰∏™ tspan ‰ºöÂΩ±ÂìçÂêéÈù¢ÁöÑ„ÄÇËøô‰∏™ËÆæËÆ°ÁúãËµ∑Êù•Ëøò‰∏çÈîô„ÄÇ 2022-07-05crypto.subtle Âú®‰∏çÂÆâÂÖ®ÁöÑ‰∏ä‰∏ãÊñá‰∏≠ÊòØ undefinedÔºåÊØîÂ¶ÇÂΩìÁΩëÁ´ôÊòØ http ÁöÑÊó∂ÂÄô„ÄÇ How to use SubtleCrypto in chrome (window.crypto.subtle is undefined) 2022-06-30textarea ‰∏≠Êåâ‰Ωè ctrlÔºåaltÔºåshift ‰ª•Âèä win ËøôÂá†‰∏™ÈîÆÔºåÂÜçÊåâ enterÔºåÊúâÁöÑËÉΩÊç¢Ë°åÊúâÁöÑ‰∏çËÉΩÔºö ËÉΩÊç¢Ë°åÁöÑÔºö shift ‰∏çËÉΩÊç¢Ë°åÁöÑÔºà‰ªÄ‰πàÈÉΩ‰∏çËß¶ÂèëÔºâÔºö ctrl alt win ÊÄé‰πàÊéßÂà∂ÂÖâÊ†á‰ΩçÁΩÆÔºöËÆ©ËæìÂÖ•Ê°ÜÁöÑ selectionStart Á≠â‰∫é selectionEnd 2022-06-23ÂºÇÊàñ‰∫§Êç¢12345function swapTwoNumber(a, b)&#123; a ^= b; b ^= a; a ^= b;&#125; ÂºÇÊàñ‰∫§Êç¢Âú®‰∫§Êç¢Âêå‰∏Ä‰∏™Êï∞ÔºàÂÜÖÂ≠òÂú∞ÂùÄÁõ∏ÂêåÔºåËÄåÈùû‰ªÖ‰ªÖÊï∞ÂÄºÁõ∏ÂêåÔºâÁöÑÊó∂ÂÄôÔºå‰ºöÊääËøô‰∏™Êï∞ÂèòÊàê 0ÔºåÁî±‰∫éÊâßË°åÁ¨¨‰∏ÄÊ≠•a ^= b;ÁöÑÊó∂ÂÄôÔºåÂ∑≤ÁªèËÆ© x ÂèòÊàê‰∫Ü 0ÔºåÊâÄ‰ª•ÂêéÈù¢ÂÜçÊâßË°åÂâ©‰∏ã‰∏§Ê≠•ÁöÑÊó∂ÂÄô‰πüÂèò‰∏çÂõûÊù•‰∫Ü„ÄÇ 2022-06-17ÂºπÊ°ÜÁ≠âÂæÖÁî®Êà∑‰∫§‰∫íÂ¶Ç‰ΩïÂÆûÁé∞ÔºöÂú®‰∏Ä‰∏™ÂºπÊ°ÜÁöÑÂõûË∞ÉÔºàÁî®Êà∑ÁÇπÂáªÊòØÊàñËÄÖÂê¶Ôºâ‰πãÂêéÊâçÊâßË°åÊé•‰∏ãÊù•ÁöÑÈÄªËæëÔºü Á≠îÊ°àÊòØÔºöÁî® Promise Â∞±ÂèØ‰ª•ÈòªÊñ≠‰ª£Á†ÅÊµÅÁ®ãÔºåÂºπÊ°Ü‰πãÂêéÁöÑÈÄªËæëÂøÖÈ°ªÁ≠âÂæÖÂºπÊ°ÜÁöÑÂõûË∞ÉÂáΩÊï∞‰∏≠ÁöÑ resolve Êàñ reject Ë¢´ÊâßË°åÔºåÊâçËÉΩÊé•ÁùÄÊâßË°åÔºåËÄåÂõûË∞ÉÂáΩÊï∞ÂàôÂøÖÈ°ªÁ≠âÂæÖÁî®Êà∑ÁöÑÁÇπÂáªÔºåËøôÊ†∑Â∞±ÂÆûÁé∞‰∫Ü‰∏Ä‰∏™Á≠âÂæÖÁî®Êà∑‰∫§‰∫íÁöÑÈÄªËæë„ÄÇ TS Ë°®Ëææ‰∏Ä‰∏™ÂØπË±°Á±ªÂûãTS Êàë‰∏ÄÁõ¥Áî®ÁöÑÊØîËæÉÂ∞ëÔºå‰πãÂâçËøòÊÉ≥‰∏Ä‰∏™ÂØπË±° key Âíå value ÈÉΩÊòØ stringÔºåÁî® ts ÊÄé‰πàË°®Á§∫Ôºölet v: {[key:string]:string} 2022-06-16Âú®‰ΩøÁî® HTMLInputElement.setSelectionRange()Êó∂ÂèëÁé∞‰∏Ä‰∏™ÈóÆÈ¢òÔºåË∂ÖÂá∫ input ÁöÑÂÆΩÂ∫¶ÁöÑ‰ΩçÁΩÆÊó†Ê≥ïË¢´ÂÆö‰ΩçÂà∞Ôºå‰πüÂ∞±ÊòØËØ¥ÂÆÉ‰∏ç‰ºöÊªöÂä®ÊñáÊú¨ÔºåÂ¶ÇÊûúÊÉ≥ÊªöÂä®Âà∞ÊåáÂÆö‰ΩçÁΩÆÊÄé‰πàÂäûÂë¢ÔºüÁõÆÂâçËøò‰∏çÁü•ÈÅìÊÄé‰πàËß£ÂÜ≥„ÄÇ 2022-06-15ÊúÄËøëÂ∑•‰ΩúÂæàÊùÇ‰π±Ôºå‰∫ãÊÉÖÂæàÂ§öÔºå‰ªäÂ§©‰∫ÜËß£‰∫Ü‰∏Ä‰∏ãÊñúÂàáÊòØ‰ªÄ‰πàÔºåÊàëÂéüÂÖà‰ª•‰∏∫ÊòØÂπ≥Áßª+ÊóãËΩ¨ÔºåÊ≤°ÊÉ≥Âà∞Ê†πÊú¨‰∏çÊòØÔºåÊñúÂàáÂÖ∂ÂÆûÊòØÂÄæÊñú„ÄÇÊúÄËøëÂêå‰∫ãÂú®ÂÅöÊñúÂàáÊ§≠ÂúÜÁöÑÂõõÁÇπÊéßÂà∂ÔºåËøôÊòØ‰ªñÂÜôÁöÑÂÖ≥‰∫éÂõæÂΩ¢ÂèòÊç¢ÁöÑÂü∫Á°ÄÁöÑÂçöÂÆ¢Ôºöhttps://zengxiaoluan.com/matrix-image „ÄÇ‰ªé‰ªäÂ§©ÂºÄÂßãÊâìÁÆóÊää‰πãÂâç wordpress Ë¢´Èªë‰∏¢Â§±ÁöÑÂçöÂÆ¢Ë°•‰∏ÄË°•‰∫ÜÔºå‰∏ªË¶ÅÊòØ‰∏Ä‰∫õÂâçÁ´ØÁöÑÈù¢ËØïËÄÉÂØüÁÇπ‰ª•ÂèäÂ∑•‰Ωú‰∏≠ÈÅáÂà∞ÁöÑÈóÆÈ¢òÂíåËß£ÂÜ≥ÊñπÊ°àÔºåÂ§ßÈÉ®ÂàÜÂèØËÉΩÈÉΩÊÉ≥‰∏çËµ∑Êù•‰∫ÜÔºåËÉΩË°•Â§öÂ∞ëÊòØÂ§öÂ∞ëÂêß„ÄÇÊµèËßàÂô®‰π¶Á≠æÂíåÊàëÊù•Á¨îËÆ∞ÈÉΩÊúâÁÇπ‰π±ÔºåÊúâÁ©∫‰πüË¶ÅÊï¥ÁêÜ‰∏Ä‰∏ã„ÄÇ 2022-06-12‰ªäÊó©‰∏ä‰∏ÄËµ∑Êù•ÂèëÁé∞ÊúçÂä°Âô®Â±ÖÁÑ∂Ëøû‰∏ç‰∏ä‰∫ÜÔºåËØï‰∫Ü‰∏Ä‰∏ãÂ±ÖÁÑ∂ ping ‰∏çÈÄö‰∫ÜÔºå‰º∞ËÆ°ÊòØËøô‰∏™ ip ÂèàË¢´Â¢ô‰∫Ü„ÄÇ‰∏∫‰∫ÜÂ∞ΩÂø´ÂºÑÂ•ΩÁøªÂ¢ôÁöÑÔºåÊàëËØï‰∫ÜÊúãÂèãÂèëÁªôÊàëÁöÑ clashX ‰ª•ÂèäÁøªÂ¢ôÈÖçÁΩÆÔºåÁúüÁöÑ‰∏çÈîôÔºåÈÄüÂ∫¶ÈùûÂ∏∏Âø´„ÄÇ ‰∏ªË¶ÅÂèÇËÄÉ‰∫ÜËøôÁØáÊñáÁ´†Ôºöhttps://github.com/Hackl0us/SS-Rule-Snippet Clash È°πÁõÆÂú∞ÂùÄÔºöhttps://github.com/Dreamacro/clash ClashX È°πÁõÆÂú∞ÂùÄÔºöhttps://github.com/yichengchen/clashX/ ClashX windows ‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://github.com/Fndroid/clash_for_windows_pkg/releases/tag/0.19.25 ClashX Pro macOS ‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://install.appcenter.ms/users/clashx/apps/clashx-pro/distribution_groups/public ClashX Android ‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://github.com/Kr328/ClashForAndroid/releases/tag/v2.5.9 Ë¥≠‰π∞ÈìæÊé•Ôºöhttps://portal.shadowsocks.nz/login Clash ÊñáÊ°£Ôºöhttps://lancellc.gitbook.io/clash/ ÂèëÁé∞‰øÆÊîπ ClashX ÁöÑÁ´ØÂè£‰∏çÁîüÊïàÔºåÂêéÊù•ÊâæÂà∞‰∫ÜÂéüÂõ†ÔºåÂéüÊù•ÂøÖÈ°ªË¶Å‰øÆÊîπ config.yaml Êñá‰ª∂ÊâçË°åÔºöhttps://github.com/yichengchen/clashX/#Advance ConfigÔºåÂÖ∂ÂÆûÈªòËÆ§ÈÖçÁΩÆÈáåÁöÑÊ≥®Èáä‰πüÂÜô‰∫ÜËøô‰∏™ÂùëÔºå‰ΩÜÊòØÊàëÁûé‰∫ÜÊ≤°ÁúãÂà∞Ôºö ÊàëÊòØÂú® github ÁöÑ issue ÈáåÈù¢ÊêúÂà∞ÁöÑÔºåÂèçÊ≠£‰∏á‰∫ãËß£ÂÜ≥‰∏ç‰∫ÜÊèê issue„ÄÇ 2022-06-11wordpress ÂçöÂÆ¢Ë¢´ÈªëÊúÄËøëÊÉ≥Êää wordpress ‰∏äÁöÑÊñáÁ´†ËøÅÁßªÂà∞ github.io„ÄÇ‰ªäÂ§©‰∏ÄÊâìÂºÄÊàëÁöÑ wordpress ÂçöÂÆ¢ÔºåÁ™ÅÁÑ∂Áõ¥Êé•Ë∑≥Âà∞ wordpress ÁöÑÂÆâË£ÖÁïåÈù¢ÔºåÊàëÊÑüËßâÊå∫Â•áÊÄ™ÁöÑÔºåÊúâÁßç‰∏çÂ•ΩÁöÑÈ¢ÑÊÑü„ÄÇÊâìÂºÄÊï∞ÊçÆÂ∫ì‰∏ÄÁúãÊûúÁÑ∂ÂèàË¢´Èªë‰∫ÜÔºåÈô§‰∫Ü wordpress Êï∞ÊçÆÂ∫ìÔºåÈ°∫Â∏¶ÂÖ∂‰ªñÂá†‰∏™ mysql ÁöÑÊï∞ÊçÆÂ∫ì‰πüË¢´Èªë‰∫Ü„ÄÇÂõ†‰∏∫ÊàëËøòÂú®ÊàëÊúçÂä°Âô®‰∏äË∑ëÁùÄÊàëËá™Â∑±ÂÜôÁöÑÈáèÂåñ‰∫§ÊòìÁöÑËÑöÊú¨Ôºåmysql ÁöÑÊüê‰∏™Êï∞ÊçÆÂ∫ìÈáåÈù¢ÊúâÂ∏ÅÂÆâÁöÑ api keyÔºåÂêìÂæóÊàëÁ´ãÈ©¨ÂéªÂ∏ÅÂÆâÂà† api„ÄÇÊàëÊãÖÂøÉÂèØËÉΩ linux ÊúçÂä°Âô®ÁöÑË¥¶Âè∑ÂØÜÁ†ÅÈÉΩË¢´Èªë‰∫ÜÔºåËÄå‰∏î‰πüÊúâÂèØËÉΩÂú®ÊàëÊúçÂä°Âô®Êîæ‰∫Ü‰ªÄ‰πàÂÖ∂‰ªñÂèØÊÄïÁöÑÁóÖÊØíÔºåÂπ≤ËÑÜËøòÊòØÈáçÁΩÆ‰∏Ä‰∏ãÊúçÂä°Âô®Ôºå‰ª•ÂèäÁõ∏ÂÖ≥ÁöÑÊâÄÊúâË¥¶Âè∑ÂØÜÁ†Å„ÄÇ ‰∏äÊ¨°ÊàëÁöÑ wordpress Ë¢´ÊîªÂáªËøòÊòØ 2016 Âπ¥ÁöÑ‰∫ã‰∫ÜÔºåÂΩìÊó∂ÊàëÊâçÊ≤°Áî®Âá†‰∏™ÊúàÔºåÂÜô‰∫ÜÂ§ßÊ¶Ç‰∏âÁØáÊñáÁ´†ÔºåÂ∞±Ë¢´Èªë‰∫ÜÔºåÂΩìÊó∂ÈªëÂÆ¢Áïô‰∏ãÊù•ÁöÑÊòØ‰∏™ QQÔºåËøôÊ¨°ÊòØ‰∏™ÊØîÁâπÂ∏ÅÂú∞ÂùÄÔºö 12345678readme:To recover your lost Database send 0.0115 Bitcoin (BTC) to our Bitcoin address: bc1qtr4px3ngv80tz2j9e49jxcmtqthfnw8xhux4as After this, contact us by email with your Server IP or Domain Name and a Proof of Payment (Payment ID). Your Database is downloaded and backed up on our servers. Backups that we have right now: chaobi, e_business, stock, wordpress. Any email without your server IP Address or Domain Name and a Proof of Payment together will be ignored. If we dont receive your payment in the next 10 Days, we will delete or leak your sensitive information.BTC_address:bc1qtr4px3ngv80tz2j9e49jxcmtqthfnw8xhux4asemail:support@dbrestore2022.to ÂèØÊÉúÊàëÂÜô‰∫ÜËøô‰πàÂ§öÊñáÁ´†ÈÉΩËøòÊ≤°ÊúâÂ§á‰ªΩ ÂäûÁêÜË∫´‰ªΩËØÅ‰ªäÂ§©È°∫Â∏¶ÊääË∫´‰ªΩËØÅÈáçÊñ∞Âäû‰∫Ü‰∏Ä‰∏ãÔºåÂäûÁêÜË∫´‰ªΩËØÅÂâçÈ¶ñÂÖàÈúÄË¶ÅÂéªÁÖßÁõ∏È¶ÜÁÖß‰∏ÄÂº†Ë∫´‰ªΩËØÅËØÅ‰ª∂ÁÖßÔºåÁÑ∂ÂêéÂÜçÂéªÊ¥æÂá∫ÊâÄÊà∑ÊîøÂÆ§ÂäûÁêÜ„ÄÇËØÅ‰ª∂ÁÖßÈúÄË¶Å‰∏ä‰º†Âà∞‰∏Ä‰∏™ÁÖßÁâáË¥®ÈáèÊ£ÄÊµãÁΩëÁ´ô‰∏äËøõË°åÊ†∏ÂØπÔºåÂπ∂‰∫ßÁîü‰∏Ä‰∏™ÁºñÂè∑„ÄÇÂéªÊà∑ÊîøÂÆ§ÁöÑÊó∂ÂÄôÊèê‰æõËøô‰∏™ÁºñÂè∑‰ªñ‰ª¨Â∞±ÂèØ‰ª•ÊâæÂà∞Ëøô‰∏™ÁÖßÁâá‰∫Ü„ÄÇ ÊàëÊòØÂú®Ê∑±Âú≥Êú¨Âú∞ÂÆù‰∏äÈù¢Êü•Âà∞ÂΩìÂú∞Ê¥æÂá∫ÊâÄÊà∑ÊîøÂÆ§ÁöÑÂú∞ÂùÄÁöÑÔºö http://m.bendibao.com/bsy616684.html ÊôØÁî∞ÁöÑÊà∑ÊîøÂÆ§Â∑≤Áªè‰ªéÂéüÊù•ÁöÑÂú∞ÊñπÊê¨Âà∞È¶ôËúúÊπñ‰∫ÜÔºåÂú®È´òÂæ∑Âú∞Âõæ‰∏äÂèØ‰ª•ÊêúÂæóÂà∞È¶ôËúúÊπñÁöÑÊà∑ÊîøÂÆ§Âú∞ÂùÄÔºöÁ¶èÁî∞ÂÖ¨ÂÆâÂàÜÂ±ÄÈ¶ôËúúÊπñÊà∑ÊîøÊúçÂä°‰∏≠ÂøÉÔºåÂè¶Â§ñ‰ªñ‰ª¨ÁöÑÂäûÂÖ¨Êó∂Èó¥‰πüÊîπ‰∫ÜÔºå‰∏ãÂçà 4 ÁÇπÂ∞±Êî∂Êëä‰∫Ü„ÄÇ 2022-06-10‰ªäÂ§©ÂèëÁé∞‰∏Ä‰∏™ bug Ë∑ü tagName ÊúâÂÖ≥ÔºåÂéüÂõ†ÊòØ document Ê≤°Êúâ tagNameÔºådocument.tagName ÊòØ undefinedÔºåÂØºËá¥‰ª£Á†ÅÊä•Èîô„ÄÇ toJSON()ÊñπÊ≥ï‰∏Ä‰∏™ÂØπË±°ÂÆö‰πâ‰∫Ü toJSON ÊñπÊ≥ïÁöÑËØùÔºåJSON.stringify Â∞±‰ºöÂéªË∞ÉÁî®Ëøô‰∏™ÊñπÊ≥ïÔºåËøîÂõûÂÆöÂà∂ÂåñÁöÑÂ≠óÁ¨¶‰∏≤„ÄÇ ÂÆòÊñπÊñáÊ°£Ôºöhttps://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify If an object being stringified has a property named toJSON whose value is a function, then the toJSON() method customizes JSON stringification behavior: instead of the object being serialized, the value returned by the toJSON() method when called will be serialized. JSON.stringify() calls toJSON with one parameter: if this object is a property value, the property name if it is in an array, the index in the array, as a string an empty string if JSON.stringify() was directly called on this object 1234567891011121314151617181920212223242526272829303132const bonnie = &#123; name: 'Bonnie Washington', age: 17, class: 'Year 5 Wisdom', isMonitor: false, toJSON: function(key) &#123; // Clone object to prevent accidentally performing modification on the original object const cloneObj = &#123; ...this &#125;; delete cloneObj.age; delete cloneObj.isMonitor; cloneObj.year = 5; cloneObj.class = 'Wisdom'; if (key) &#123; cloneObj.code = key; &#125; return cloneObj; &#125;&#125;JSON.stringify(bonnie);// Returns '&#123;"name":"Bonnie Washington","class":"Wisdom","year":5&#125;'const students = &#123;bonnie&#125;;JSON.stringify(students);// Returns '&#123;"bonnie":&#123;"name":"Bonnie Washington","class":"Wisdom","year":5,"code":"bonnie"&#125;&#125;'const monitorCandidate = [bonnie];JSON.stringify(monitorCandidate)// Returns '[&#123;"name":"Bonnie Washington","class":"Wisdom","year":5,"code":"0"&#125;]' Â§ßÂûãËΩØ‰ª∂ÁöÑËÆæËÆ°ÂæàÈáçË¶Å‰∏∫ EDA ÂÜô‰∫ÜÂø´‰∏âÂπ¥‰ª£Á†Å‰∫ÜÔºåÊàëÁöÑÊÑüËßâÂ∞±ÊòØÂØπ‰∫éÁ®çÂæÆÂ§çÊùÇ‰∏ÄÁÇπÁöÑËΩØ‰ª∂ÔºåËÆæËÆ°ÁúüÁöÑÂæàÈáçË¶Å„ÄÇÂú®Êñ∞Âä†Êüê‰∏™ÈúÄÊ±ÇÂêéÔºåÂèØËÉΩÂõ†‰∏∫‰∏çÂ•ΩÁöÑËÆæËÆ°‰∫ßÁîüÂæàÂ§ö bugÔºå‰πüÊúâÂèØËÉΩÂõ†‰∏∫ÂéüÂÖàÂ≠òÂú®ÁöÑ‰ª£Á†ÅËÆæËÆ°‰∏çÂêàÁêÜÔºåÂØºËá¥Êñ∞ÈúÄÊ±ÇÂæàÈöæÂÜôÔºåÂà∞Â§ÑÈÉΩË¶ÅÂüãÁÇπ„ÄÇ ÊàëÁöÑ leader ÂÜô‰∫ÜËøôÊÆµËØùÔºåÊàëËßâÂæóÂæàÂØπÔºö ÂæàÂ§öÁ≥üÁ≥ïÁöÑËÆæËÆ°Èö∂Â±û‰∫éÊüê‰∏™Êõ¥Â§ßÁöÑÁ≥üÁ≥ïËÆæËÆ°ÔºåËÄåËøô‰∏™Êõ¥Â§ßÁöÑÁ≥üÁ≥ïËÆæËÆ°ÂèØ‰ª•Ë¢´‰∏Ä‰∏§Ë°åÁ≤æÂ¶ôÁöÑ‰ª£Á†ÅÊï¥‰∏™‰ª£ÊõøÊéâÔºå‰Ω†Âú®Â±ÄÈÉ®‰ºòÂåñÂçäÂ§©ÊØ´Êó†ÊÑè‰πâ„ÄÇ 2019-02-27Java ÂèçÂ∞ÑÔºåÂèçÂ∞ÑÁöÑ‰ΩúÁî®ÂåÖÊã¨ÔºåÂú®ËøêË°åÊó∂Âà§Êñ≠‰∏Ä‰∏™ÂØπË±°ÊâÄÂ±ûÁöÑÁ±ªÔºåÁªôÊüê‰∏™Êú™Áü•ÁöÑÁ±ªÊñ∞Âª∫‰∏Ä‰∏™ÂØπË±°ÔºåËé∑Âèñ‰ªªÊÑè‰∏Ä‰∏™Á±ªÁöÑÊàêÂëòÂèòÈáèÂíåÊñπÊ≥ïÔºåÂπ∂Ë∞ÉÁî®„ÄÇÂ¶ÇÊûú‰Ω†ÊòØÂàùÂ≠¶ÂèçÂ∞ÑÔºåËøô‰πàËØ¥‰Ω†‰∏ÄÂÆö‰∏çÁü•ÈÅìÊàëÂú®ËØ¥‰ªÄ‰πà„ÄÇ‰ΩÜ‰∏æ‰∏™‰æãÂ≠êÂ∞±ÊØîËæÉÂÆπÊòìÁêÜËß£‰∫Ü„ÄÇÈÇ£Â∞±ÊòØÁî®ÈÖçÁΩÆÊñá‰ª∂Âä®ÊÄÅÊéßÂà∂Á®ãÂ∫èË¶ÅÂä†ËΩΩÁöÑÁ±ªÔºö ‰∏æ‰∏™‰æãÂ≠êÊàë‰ª¨ÁöÑÈ°πÁõÆÂ∫ïÂ±ÇÊúâÊó∂ÊòØÁî® mysqlÔºåÊúâÊó∂Áî® oracleÔºåÈúÄË¶ÅÂä®ÊÄÅÂú∞Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµÂä†ËΩΩÈ©±Âä®Á±ªÔºåËøô‰∏™Êó∂ÂÄôÂèçÂ∞ÑÂ∞±ÊúâÁî®‰∫ÜÔºåÂÅáËÆæ com.java.dbtest.myqlConnectionÔºåcom.java.dbtest.oracleConnection Ëøô‰∏§‰∏™Á±ªÊàë‰ª¨Ë¶ÅÁî®ÔºåËøôÊó∂ÂÄôÊàë‰ª¨ÁöÑÁ®ãÂ∫èÂ∞±ÂÜôÂæóÊØîËæÉÂä®ÊÄÅÂåñÔºåÈÄöËøá Class tc = Class.forName(&quot;com.java.dbtest.TestConnection&quot;);ÈÄöËøáÁ±ªÁöÑÂÖ®Á±ªÂêçËÆ© jvm Âú®ÊúçÂä°Âô®‰∏≠ÊâæÂà∞Âπ∂Âä†ËΩΩËøô‰∏™Á±ªÔºåËÄåÂ¶ÇÊûúÊòØ oracle Âàô‰º†ÂÖ•ÁöÑÂèÇÊï∞Â∞±ÂèòÊàêÂè¶‰∏Ä‰∏™‰∫Ü„ÄÇËøôÊó∂ÂÄôÂ∞±ÂèØ‰ª•ÁúãÂà∞ÂèçÂ∞ÑÁöÑÂ•ΩÂ§Ñ‰∫ÜÔºåËøô‰∏™Âä®ÊÄÅÊÄßÂ∞±‰ΩìÁé∞Âá∫ java ÁöÑÁâπÊÄß‰∫ÜÔºÅ‰∏æÂ§ö‰∏™‰æãÂ≠êÔºåÂ§ßÂÆ∂Â¶ÇÊûúÊé•Ëß¶Ëøá springÔºå‰ºöÂèëÁé∞ÂΩì‰Ω†ÈÖçÁΩÆÂêÑÁßçÂêÑÊ†∑ÁöÑ bean Êó∂ÔºåÊòØ‰ª•ÈÖçÁΩÆÊñá‰ª∂ÁöÑÂΩ¢ÂºèÈÖçÁΩÆÁöÑÔºå‰Ω†ÈúÄË¶ÅÁî®Âà∞Âì™‰∫õ bean Â∞±ÈÖçÂì™‰∫õÔºåspring ÂÆπÂô®Â∞±‰ºöÊ†πÊçÆ‰Ω†ÁöÑÈúÄÊ±ÇÂéªÂä®ÊÄÅÂä†ËΩΩÔºå‰Ω†ÁöÑÁ®ãÂ∫èÂ∞±ËÉΩÂÅ•Â£ÆÂú∞ËøêË°å„ÄÇ Âú®‰ΩøÁî® Python ÁöÑÊó∂ÂÄôÊàëÂ∞±ÈÄöËøáÁî®ÈÖçÁΩÆÊù•ÊéßÂà∂‰ª£Á†Å„ÄÇ‰ΩìÈ™åÈùûÂ∏∏Ê£í„ÄÇÂÖ∂ÂÆûÂèçÂ∞ÑÁöÑ‰ΩúÁî®Â∞±ÊòØÈÄöËøáÈÖçÁΩÆÊéßÂà∂‰ª£Á†Å„ÄÇ ÊòØÂê¶Ë¶Å‰º†Êï∞ÁªÑÈïøÂ∫¶ÁöÑÈóÆÈ¢òJava ‰∏≠Êï∞ÁªÑÊòØ‰∏Ä‰∏™ÂØπË±°ËÄåÈùûÂÉè C++‰∏ÄÊ†∑ÁöÑÂéüÂßãÁ±ªÂûãÔºåÊâÄ‰ª•ÂèØ‰ª•ÂØπÊï∞ÁªÑÊ±ÇÈïøÂ∫¶ÁöÑÊó∂ÂÄôÊòØËøô‰πàÂÜôÔºöarr.length()ÔºåËÄå C++ÂàôÊ≤°ÊúâËøô‰πàÊñπ‰æøÁöÑ‰∏úË•øÔºåÊâÄ‰ª•‰º†ÂèÇÁöÑÊó∂ÂÄôÔºåJava ÂèØ‰ª•‰∏ç‰º†Êï∞ÁªÑÈïøÂ∫¶ÔºåC++ÂøÖÈ°ªË¶Å‰º†Ôºö 1func(arr, lengthOfArr); spring bootÈöèÁùÄËÆ°ÁÆóÊú∫ÁöÑÂèëÂ±ïÔºåÂú®Â∫îÁî®Á®ãÂ∫èÂºÄÂèë‰∏≠ÔºåÂæàÂ§ö‰∏úË•øÈÉΩÊÖ¢ÊÖ¢Â∑•ÂÖ∑Âåñ‰∫ÜÔºåÂ§ßÈáèÁÆÄÂçïÈáçÂ§çÁöÑÂ∑•‰ΩúÁõ¥Êé•‰∫§ÁªôËÆ°ÁÆóÊú∫Â∞±Â•Ω‰∫ÜÔºåÁïôÁªô‰∫∫‰ª¨ÁöÑÂè™ÊòØ‰∏öÂä°ÈÄªËæëË∑üÊû∂ÊûÑË∞É‰ºò„ÄÇspring boot 2 Â∞±ÊòØ‰∏Ä‰∏™ÈùûÂ∏∏Â•ΩÁî®ÁöÑ Java web ÈõÜÊàêÊ°ÜÊû∂„ÄÇÂ≠¶‰π†ÊúÄÂ•ΩÁöÑÊñπÊ≥ïÂ∞±ÊòØÈÄöËøá ‰æãÂ≠ê Êù•È¢ÜÊÇüÂíå‰Ωì‰ºöÂà∞ÂÖ∂‰∏≠ÊäΩË±°ÁöÑÁü•ËØÜÔºàÂÖ±ÊÄßÔºâ„ÄÇÂØπ‰∫éÂ∑•ÂÖ∑ÁöÑ‰ΩøÁî®ÂàôÊõ¥Âä†Âº∫Ë∞ÉÂä®ÊâãÂÆûË∑µ„ÄÇ ÂÖàÂèÇËÄÉ‰∏Ä‰∏ãÁΩë‰∏äÁöÑËµÑÊñôÔºö Áü•‰πéÔºöSpring Boot Ë¶ÅÂ¶Ç‰ΩïÂ≠¶‰π†Ôºü bilibiliÔºö„ÄêËá™Áî®„ÄëÂ∞öÁ°ÖË∞∑ spring boot ÂÖ®Â•óËßÜÈ¢ëÊïôÁ®ã Á¨¨‰∏ÄÊ≠•Âø´ÈÄüÂÖ•Èó®Â¶ÇÊûúÂØπ spring boot ‰∏ÄÁÇπÈÉΩ‰∏ç‰∫ÜËß£ÁöÑËØùÔºåË¶ÅÂÖà‰∫ÜËß£‰∏Ä‰∏ã spring boot ÊòØ‰ªÄ‰πàÔºåÂÆÉÁöÑÂèëÂ±ïÂéÜÁ®ãÔºå‰ªéËÄåÂª∫Á´ãËµ∑‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂç∞Ë±°„ÄÇÂèØ‰ª•ÂÖàÁúã B Á´ôÁöÑÊïôÂ≠¶ËßÜÈ¢ëÁöÑÂâçÂá†‰∏™Ê¶ÇË¶Å‰ªãÁªçÁöÑËßÜÈ¢ë„ÄÇÁÑ∂ÂêéÂ§ßËá¥ÊµèËßà‰∏Ä‰∏ãÈúÄË¶ÅÂ≠¶‰π†ÁöÑÂÜÖÂÆπÔºå‰Ω†‰ºöÂèëÁé∞ÈÉΩÊòØÊåâÊ®°ÂùóÂàíÂàÜÁöÑÔºåÊØîÂ¶ÇÔºöÂ∑•Á®ãÈÖçÁΩÆ„ÄÅÊó•ÂøóÁÆ°ÁêÜ„ÄÅÊï∞ÊçÆÂ∫ì„ÄÅÁºìÂ≠òÁ≠âÁ≠â„ÄÇ Êúâ‰∫ÜÂ§ßÊ¶ÇÁöÑ‰∫ÜËß£ÔºåÂ∞±ÂèØ‰ª•Âä®ÊâãÂÜô‰∏Ä‰∏™hello world‰∫Ü„ÄÇ Spring Boot Âø´ÈÄüÂÖ•Èó® ‰ΩøÁî® Intellij ‰∏≠ÁöÑ Spring Initializr Êù•Âø´ÈÄüÊûÑÂª∫ Spring Boot/Cloud Â∑•Á®ã Áî±‰∫éÊàë‰ª•ÂâçÂÅöËøáspring+springMVC+mybatisÁöÑÈ°πÁõÆÔºåÊâÄ‰ª•Â≠¶‰π† springboot2 ÂØπÊàëÊù•ËØ¥ÊòØÊØîËæÉËΩªÊùæÁöÑ„ÄÇ ‰∏ÄËà¨Êù•ËØ¥ÂêéÁ´ØÈÉΩ‰ºöÁî®Âà∞Êï∞ÊçÆÂ∫ìÔºåÊâÄ‰ª•‰∏Ä‰∏™ÂÆåÊï¥ÁöÑ Hello World Á®ãÂ∫èÊÄé‰πàÂèØ‰ª•‰∏çÊé•ÈÄöÊï∞ÊçÆÂ∫ìÂë¢Ôºü Springboot Êï¥Âêà Mybatis ÁöÑÂÆåÊï¥ Web Ê°à‰æã ÁºñÁ®ãÊÄùÊÉ≥‰∏≠Êúâ‰∏ÄÊù°ÂæàÈáçË¶ÅÁöÑÂéüÂàôÂ∞±ÊòØÔºöÂ∞ΩÈáèÂ∞ëÁöÑÊîπÂä®Â∑≤ÊúâÁöÑ‰ª£Á†ÅÔºåÂéüÂõ†ÊúâÂæàÂ§öÔºåÊØîÂ¶ÇÊîπÂä®‰∏Ä‰∏™Ë¢´Â§öÂ§Ñ‰ΩøÁî®ÁöÑÂáΩÊï∞ÊúâÂèØËÉΩ‰ºöÂØπÂæàÂ§öÂú∞ÊñπÈÄ†ÊàêÂΩ±Âìç„ÄÇÊâÄ‰ª•Êàë‰ª¨Â∞±Ë¶Å Â∞ΩÈáèËÆ©Êàë‰ª¨ÁöÑ‰ª£Á†ÅÁÅµÊ¥ªËµ∑Êù•ÔºåÂèØÈáçÂ§çÁî®Ëµ∑Êù•ÔºåJava ÁöÑÂèçÂ∞ÑÂ∞±Ëµ∑Âà∞‰∫ÜËøô‰∏™‰ΩúÁî®ÔºåSpring Ê°ÜÊû∂ÊúÄÈáçË¶ÅÁöÑ‰ΩúÁî®Â∞±ÊòØËÆ©ÁÅµÊ¥ªÁöÑÈÉ®ÂàÜÂèòÊàêÈÖçÁΩÆÔºåÁ®ãÂ∫èÂä®ÊÄÅÂä†ËΩΩÈÖçÁΩÆÂ∞±ËÉΩÊîπÂèò‰ª£Á†ÅÁöÑË°å‰∏∫„ÄÇÂõûË∞É‰πüÂêåÊ†∑ÊòØÂú®Ë¥ØÂΩªËøô‰∏ÄÊÄùÊÉ≥„ÄÇÂèØÈáçÁî® ÊòØÁºñÁ®ãÊÄùÊÉ≥ÁöÑÁ≤æÈ´ì‰πã‰∏ÄÔºåÁîöËá≥ÊâÄÊúâÁöÑÊäΩË±°Â∞±ÈÉΩÊòØ‰∏∫‰∫ÜËøô‰∏ÄÁõÆÁöÑÔºåÊó†ËÆ∫ÊòØÂèòÈáè„ÄÅÂáΩÊï∞„ÄÅÂØπË±°„ÄÅÊï∞ÊçÆÁªìÊûÑ„ÄÅÂ∫ì„ÄÅAPIÈÉΩÊòØÊääÊ≠ªÁöÑ‰ª£Á†ÅÂèòÊàêÊ¥ªÁöÑÔºåÊää‰∏çËÉΩÈáçÂ§ç‰ΩøÁî®ÁöÑ‰ª£Á†ÅÂèòÊàêÂèØ‰ª•ÈáçÂ§ç‰ΩøÁî®ÁöÑ‰ª£Á†Å„ÄÇÈòøÈáåÂíåËöÇËöÅÂÖ´Ëç£ÂÖ´ËÄª ÈòøÈáåÂíåËöÇËöÅÂÖ´Ëç£ÂÖ´ËÄª‰ª•Âä®ÊâãÂÆûË∑µ‰∏∫Ëç£Ôºå‰ª•Âè™Áúã‰∏çÁªÉ‰∏∫ËÄª„ÄÇ ‰ª•ÊâìÂç∞Êó•Âøó‰∏∫Ëç£Ôºå‰ª•Âá∫Èîô‰∏çÊä•‰∏∫ËÄª„ÄÇ ‰ª•Â±ÄÈÉ®ÂèòÈáè‰∏∫Ëç£Ôºå‰ª•ÂÖ®Â±ÄÂèòÈáè‰∏∫ËÄª„ÄÇ ‰ª•ÂçïÂÖÉÊµãËØï‰∏∫Ëç£Ôºå‰ª•ÊâãÂ∑•ÊµãËØï‰∏∫ËÄª„ÄÇ ‰ª•‰ª£Á†ÅÈáçÁî®‰∏∫Ëç£Ôºå‰ª•Â§çÂà∂Á≤òË¥¥‰∏∫ËÄª„ÄÇ ‰ª•Â§öÊÄÅÂ∫îÁî®‰∏∫Ëç£Ôºå‰ª•ÂàÜÊîØÂà§Êñ≠‰∏∫ËÄª„ÄÇ ‰ª•ÂÆö‰πâÂ∏∏Èáè‰∏∫Ëç£Ôºå‰ª•È≠îÊ≥ïÊï∞Â≠ó‰∏∫ËÄª„ÄÇ ‰ª•ÊÄªÁªìÊÄùËÄÉ‰∏∫Ëç£Ôºå‰ª•‰∏çÊ±ÇÁîöËß£‰∏∫ËÄª„ÄÇ ‰ª•ÂèØÈÖçÁΩÆ‰∏∫Ëç£ Ôºå‰ª•Á°¨ÁºñÁ†Å‰∏∫ËÄª ‰ª•ÂèØ‰∫íÂ§á‰∏∫Ëç£ Ôºå‰ª•ÂçïÁÇπ‰∏∫ËÄª ‰ª•ÂèØÊó†Áä∂ÊÄÅ‰∏∫Ëç£ Ôºå‰ª•ÊúâÁä∂ÊÄÅ‰∏∫ËÄª ‰ª•ÂèØÈöè‰æøÈáçÂêØ‰∏∫Ëç£ Ôºå‰ª•‰∏çËÉΩËøÅÁßª‰∏∫ËÄª ‰ª•Êï¥‰Ωì‰∫§‰ªò‰∏∫Ëç£Ôºå‰ª•ÈÉ®ÂàÜ‰∫§‰ªò‰∏∫ËÄª ‰ª•Ê†áÂáÜÂåñ‰∏∫Ëç£Ôºå‰ª•ÁâπÊÆäÂåñ‰∏∫ËÄª ‰ª•Ëá™Âä®ÂåñËøêÁª¥‰∏∫Ëç£Ôºå‰ª•‰∫∫ËÇâÂåñËøêÁª¥‰∏∫ËÄª ‰ª•Êó†‰∫∫ÂÄºÂÆà‰∏∫Ëç£Ôºå‰ª•‰∫∫Â∑•ÂÄºÁè≠‰∏∫ËÄª 2019-02-20‰ªäÂ§©ËÅîÂêàÊü•ËØ¢‰∏Ä‰∏™ 40 ‰∏áÂíå 1 ‰∏áÁöÑË°®ÔºåÂèëÁé∞ÂºÑ‰∫ÜÁ¥¢ÂºïÈÉΩÊ≤°Âï•ÊïàÊûúÔºåÊúÄÂêéÂèëÁé∞ÊòØÂ≠óÁ¨¶ÈõÜ‰∏çÂêåÂØºËá¥ÁöÑ„ÄÇÊää‰∏§‰∏™Á¥¢ÂºïÁöÑÂ≠óÁ¨¶ÈõÜÂºÑÊàê‰∏ÄÊ†∑ÁöÑÂ∞±Ë°å‰∫Ü„ÄÇËøòÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÔºåmysql8 Ê≤°ÊúâÁºìÂ≠òÂØºËá¥Êü•ËØ¢ÂæàÊÖ¢Ôºåmysql5.7 ÊúâÁºìÂ≠òÁ¨¨‰∫åÊ¨°Êü•ËØ¢Âø´ÁöÑÈ£ûËµ∑„ÄÇËøòÊúâÂêå‰∏Ä‰∏™ËØ≠Âè• mysql8 Ëä±‰∫Ü 100 ÁßíÔºåmysql5.7 Âè™Ëä±‰∫Ü 10 ÁßíÔºåÂéüÂõ†ÂèØËÉΩÊòØÂØπËØ≠Âè•ÁöÑËß£Èáä‰∏ç‰∏ÄÊ†∑„ÄÇÂú®Â∞ÜÊï∞ÊçÆÂ∫ìÂØºÂÖ•Âà∞ mysql5.7 ÁöÑÊó∂ÂÄôÈÅáÂà∞‰∏Ä‰∏™ÈîôËØØÔºö2006: mysql server has gone away„ÄÇ‰ΩøÁî®Ôºöset global max_allowed_packet=268435456;Ëß£ÂÜ≥‰∫Ü„ÄÇÂ∫îËØ•ÊòØÂçïÁ¨î insert Â§™Â§ßÂØºËá¥ÁöÑÔºåÊääÈÖçÁΩÆËÆæÈ´ò‰∏ÄÁÇπÂ∞± OK ‰∫Ü„ÄÇ 2019-02-19‰ªäÂ§©Áªà‰∫éËß£ÂÜ≥‰∫Ü‰∏Ä‰∏™Âõ∞Êâ∞Êàë‰∏ÄÂπ¥‰πã‰πÖÁöÑÈóÆÈ¢òÔºåÁΩëÊòì‰∫ëÈü≥‰πêÂíåÁü•‰πéË¥¶Âè∑ÁöÑÁôªÈôÜÂºÇÂ∏∏„ÄÇÊàëÂØπÊØî‰∫Ü‰∏çÂêåÁöÑÁΩëÁªúÁéØÂ¢ÉÔºàIPÔºâÔºå‰∏çÂêåÁöÑË¥¶Âè∑ÔºàÂà´‰∫∫ÁöÑÁü•‰πéË¥¶Âè∑ÔºâÔºå‰∏çÂêåÁöÑÊµèËßàÂô®„ÄÇÁªÑÂêàÊµãËØïÊúÄÂêéÂèëÁé∞Êó¢‰∏çÊòØ IP ÁöÑÂçïÊñπÈù¢ÁöÑÈóÆÈ¢òÔºå‰πü‰∏çÊòØË¥¶Âè∑ÁöÑÂçïÊñπÈù¢ÈóÆÈ¢òÔºå‰πü‰∏çÊòØÊµèËßàÂô®ÁöÑÂçïÊñπÈù¢ÁöÑÈóÆÈ¢ò„ÄÇËÄåÂΩìÊàë‰ΩøÁî®Êó†ÁóïÊµèËßàÁöÑÊó∂ÂÄôÂπ∂Ê≤°Êúâ‰ªª‰ΩïÈóÆÈ¢òÔºåÊâÄ‰ª•Â∫îËØ•ÊòØ chrome ÊµèËßàÂô®ËÆ∞‰Ωè‰∫ÜÊüê‰∫õ‰∏úË•ø„ÄÇÊúÄÂêéÂèëÁé∞ÈóÆÈ¢òÂá∫Âú® chrome ÊµèËßàÂô®ÁöÑË¥¶Âè∑ÂêåÊ≠•‰∏äÔºåÂèØËÉΩÊòØÂõ†‰∏∫ÊàëÁöÑË∞∑Ê≠åË¥¶Âè∑Âú®ÂéÜÂè≤‰∏äÊõæËÆ∞ÂΩï‰∫Ü‰∏ÄÊ¨°Áü•‰πéÂºÇÂ∏∏ÁôªÈôÜÁöÑ cookieÔºåÊâÄ‰ª•‰πãÂêéÁöÑÊØè‰∏ÄÊ¨°ÁôªÈôÜÈÉΩ‰ΩøÁî®Ëøô‰∏™ cookieÔºåËÄå‰∏îÊ∏ÖÁ©∫ÈÉΩÊòØÊó†ÊïàÁöÑÔºåÂú®‰Ω†ÁôªÈôÜÁöÑÊó∂ÂÄôÂèà‰ºöÁªô‰Ω†Ëá™Âä®Ê∑ªÂä†„ÄÇ‰πãÂêéÊàëÂÖàÁôªÂá∫ chrome Ë¥¶Âè∑ÔºåÂπ∂ÂêåÊó∂Ê∏ÖÁ©∫ÊâÄÊúâÊï∞ÊçÆÔºåÁÑ∂ÂêéÂÜçÁôªÈôÜÁü•‰πéË¥¶Âè∑ÔºåÁÑ∂ÂêéÂÜçÁôªÈôÜ chrome Ë¥¶Âè∑ÂêåÊ≠•‰∏ÄÊ¨°Ê≠£Á°ÆÁöÑÁü•‰πéÁôªÈôÜ„ÄÇÈóÆÈ¢òÂ∞±ÂæóÂà∞‰∫ÜËß£ÂÜ≥„ÄÇ Áü•‰πéÈóÆÈ¢òÁöÑÊ†πÊ∫êÔºö https://jiasule.v2ex.com/t/533482 https://www.v2ex.com/t/521180 Á≠îÊ°àÂ∞±ÊòØÔºöÂèëÁé∞‰∏Ä‰∏™Âú®ÂºÄÂêØ IPFS ‰º¥‰æ£Êó∂ÔºåÁü•‰πéÁöÑÂ§ßÈÉ®ÂàÜÊé•Âè£ÈÉΩ‰ºöÊä•ËØ∑Ê±ÇÂèÇÊï∞ÂºÇÂ∏∏ÁöÑ BUG„ÄÇ„ÄÇ 2019-01-17‰∏Ä‰∏™Â•áÊÄ™ÁöÑÈóÆÈ¢òÔºåÊàëÈÖçÁΩÆÂ•Ω‰∫Ü github ÁöÑ ssh keyÔºå‰ΩÜÊØèÊ¨° push ÈÉΩË∑üÊàëÁ¥¢Ë¶ÅË¥¶Âè∑ÂØÜÁ†Å„ÄÇÂéüÂõ†ÊòØÊàë clone ÁöÑÊó∂ÂÄôÁî®ÁöÑ http Ê®°ÂºèÔºåÂú®È°πÁõÆÁöÑ.git/config ÈáåÈù¢ÂèØ‰ª•‰øÆÊîπÔºåÊîπ‰∏∫ ssh Ê®°ÂºèÂç≥ÂèØ„ÄÇÊÑüË∞¢ stackoverflow ÁöÑÂ∞èÂì•ÔºöWhy is Github asking for username/password when following the instructions on screen and pushing a new repo? 2018-11-28‰∏ÄÂàá‰∏∫‰∫ÜÂèØÈáçÁî®„ÄÇ ‰ª£Á†ÅÂÜôÂæóËÉΩÁúãÊáÇ‰æø‰∫éÁª¥Êä§ÔºåËøôÊ†∑‰ª£Á†ÅÂ∞±ËÉΩÊõ¥Èïø‰πÖÁöÑÂèØÈáçÁî®„ÄÇ ‰ª£Á†ÅÊ®°ÂùóÂåñÔºåÊòØ‰∏∫‰∫ÜÈôç‰ΩéËÄ¶ÂêàÔºåÂáèÂ∞ë‰æùËµñÔºåÊ®°ÂùóÂÜÖÈÉ®È´òÂÜÖËÅöÔºåÊ®°Âùó‰πãÈó¥‰ΩéËÄ¶ÂêàÔºåÊ®°ÂùóÂèØÈáçÁî®„ÄÇ Ê®°ÂùóÁöÑÁ≤íÂ∫¶Â∫îËØ•‰ª•ÈáçÁî®ÁöÑÁÅµÊ¥ªÊÄß‰∏∫ÊåáÂØºÂéüÂàôÔºå‰∏çËÉΩ‰∏ÄÂë≥ËøΩÊ±ÇÂ∞èÔºå‰ΩÜÂü∫Êú¨ÁöÑÂÆ¢ËßÇËßÑÂæãÊòØÔºöÊØîËæÉÂ∞èÁöÑÊ®°ÂùóÊõ¥ÁÅµÊ¥ªÔºåÊõ¥ÂÆπÊòìÈáçÁî®„ÄÇ ‰∏Ä‰∏™ËÆæËÆ°ËâØÂ•ΩÁöÑÊ®°ÂùóÁöÑÂÆ¢ËßÇÊ†áÂáÜÊòØÔºöÂèØ‰ª•ÈöèÊÑèÁªÑÂêàÔºåÂç≥ÊèíÂç≥Áî®„ÄÇ Â∞ÅË£ÖÊòØ‰∏∫‰∫ÜÊõ¥Â•ΩÁöÑÊää‰ª£Á†ÅÁöÑÊîπÂä®ÊéßÂà∂Âú®Ê®°ÂùóÂÜÖÈÉ®Ôºå‰ªéËÄåÂáèÂ∞ëÂ§ñÈÉ®ÁöÑÊîπÂä®ÈúÄÊ±Ç„ÄÇAPI Â∞ΩÈáè‰∏çÂèòÔºåÂØπÂ§ñÁöÑÊé•Âè£Â∞ΩÈáè‰∏çÂèò„ÄÇÁêÜËß£ Java ÁöÑ‰∏âÂ§ßÁâπÊÄß‰πãÂ∞ÅË£Ö ÁªßÊâøÂàôÊòØËµ§Ë£∏Ë£∏ÁöÑÂú®ÈáçÁî®‰ª£Á†Å„ÄÇ 2018-11-19Áúã‰∫ÜÊüê‰∫∫ÁöÑ spring boot ‰ª£Á†ÅÔºåÂèëÁé∞ÂêéÂè∞ÁöÑÈîôËØØÁ†ÅÂíåÈîôËØØ‰ø°ÊÅØÁÆ°ÁêÜÁöÑ‰∏Ä‰∏™‰ºòÈõÖÁöÑÂÅöÊ≥ïÔºö‰ΩøÁî®‰∏Ä‰∏™Êûö‰∏æÁ±ªÂ∞ÅË£ÖËøô‰∏§‰∏™Â±ûÊÄßÔºåÂπ∂‰ΩøÊûÑÈÄ†ÂáΩÊï∞ÁßÅÊúâÂåñ„ÄÇ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 12345678910111213141516171819202122232425262728293031323334353637383940public enum ExceptionMsg &#123; SUCCESS("000000", "Êìç‰ΩúÊàêÂäü"), FAILED("999999", "Êìç‰ΩúÂ§±Ë¥•"), ParamError("000001", "ÂèÇÊï∞ÈîôËØØÔºÅ"), LoginNameOrPassWordError("000100", "Áî®Êà∑ÂêçÊàñËÄÖÂØÜÁ†ÅÈîôËØØÔºÅ"), EmailUsed("000101", "ËØ•ÈÇÆÁÆ±Â∑≤Ë¢´Ê≥®ÂÜå"), UserNameUsed("000102", "ËØ•ÁôªÂΩïÂêçÁß∞Â∑≤Â≠òÂú®"), EmailNotRegister("000103", "ËØ•ÈÇÆÁÆ±Âú∞ÂùÄÊú™Ê≥®ÂÜå"), LinkOutdated("000104", "ËØ•ÈìæÊé•Â∑≤ËøáÊúüÔºåËØ∑ÈáçÊñ∞ËØ∑Ê±Ç"), PassWordError("000105", "ÂØÜÁ†ÅËæìÂÖ•ÈîôËØØ"), UserNameLengthLimit("000106", "Áî®Êà∑ÂêçÈïøÂ∫¶Ë∂ÖÈôê"), LoginNameNotExists("000107", "ËØ•Áî®Êà∑Êú™Ê≥®ÂÜå"), UserNameSame("000108", "Êñ∞Áî®Êà∑Âêç‰∏éÂéüÁî®Êà∑Âêç‰∏ÄËá¥"), FavoritesNameIsNull("000200", "Êî∂ËóèÂ§πÂêçÁß∞‰∏çËÉΩ‰∏∫Á©∫"), FavoritesNameUsed("000201", "Êî∂ËóèÂ§πÂêçÁß∞Â∑≤Ë¢´ÂàõÂª∫"), CollectExist("000300", "ËØ•ÊñáÁ´†Â∑≤Ë¢´Êî∂Ëóè"), FileEmpty("000400", "‰∏ä‰º†Êñá‰ª∂‰∏∫Á©∫"), LimitPictureSize("000401", "ÂõæÁâáÂ§ßÂ∞èÂøÖÈ°ªÂ∞è‰∫é2M"), LimitPictureType("000402", "ÂõæÁâáÊ†ºÂºèÂøÖÈ°ª‰∏∫'jpg'„ÄÅ'png'„ÄÅ'jpge'„ÄÅ'gif'„ÄÅ'bmp'"); private ExceptionMsg(String code, String msg) &#123; this.code = code; this.msg = msg; &#125; private String code; private String msg; public String getCode() &#123; return code; &#125; public String getMsg() &#123; return msg; &#125;&#125; 2018-11-03No programming language is perfect. There is not even a single best language; there are only languages well suited or perhaps poorly suited for particular purposes. Shell scripting hearkens back to the classic UNIX philosophy of breaking complex projects into simpler subtasks, of chaining together components and utilities. Unix ÁöÑÂì≤Â≠¶Â∞±ÊòØÂ∞ÜÂ§çÊùÇÁöÑ‰ªªÂä°ÊâìÁ†¥ÊàêÂ§ö‰∏™ÁÆÄÂçïÁöÑÂ∞è‰ªªÂä°ÔºåÁÑ∂ÂêéÊääÂ∑•‰ΩúÊµÅÊãºÊé•Ëµ∑Êù•„ÄÇÁîöËá≥Âú®ËÆæËÆ°ËΩØ‰ª∂ÂíåÂ∑•ÂÖ∑ÂûãÁöÑÁ®ãÂ∫èÊó∂‰πüÊòØÈÅµÂæ™ËøôÁßçÊÄùÊÉ≥ÔºåËøôÁßçÂÅöÊ≥ïÂØπÁ®ãÂ∫èÂëòÊù•ËØ¥ÊòØ‰∏ÄÁßçÁõ¥ËßâÔºåËøôÁßçÊÄùÊÉ≥Â∞±Ëï¥Âê´Âú®ÁºñÁ®ã‰∏≠Ôºå‰ΩÜÊôÆÈÄöÁî®Êà∑Âè™ÂñúÊ¨¢ÂÇªÁìúÂºèÊìç‰Ωú„ÄÇËÄå Windows ÂàôÂÄæÂêë‰∫éËøéÂêàÊôÆÈÄöÁî®Êà∑ÔºåÊâìÈÄ†ÈõÜÊàêÁéØÂ¢ÉÔºåÂ∞ΩÁÆ°ËÆ∏Â§öÈõÜÊàêÁéØÂ¢ÉÈÉΩÁî±‰∏çÂ∞ëÈáçÂ§çÁöÑÂ∞èËΩÆÂ≠êÁªÑÊàêÔºå‰ΩÜÊàë‰ª¨‰∏çÁº∫Á°¨ÁõòÁ©∫Èó¥ÂíåÂÜÖÂ≠òÁ©∫Èó¥„ÄÇ ËøêÁî®ÊäΩË±°ÊòØËµ∞Âêë‰ª£Á†Å‰ºòÂåñÁöÑÁ¨¨‰∏ÄÊ≠•„ÄÇÈù¢ÂêëÊé•Âè£ÁºñÁ®ã„ÄÇÈù¢ÂêëÊäΩË±°ÁºñÁ®ã„ÄÇ Ê∂àÈô§ÈáçÂ§çÈÉ®ÂàÜ„ÄÇ ‰ºòÁßÄËÆæËÆ°ÁöÑÊ†πÊú¨ÊòØÔºöÊ∂àÈô§ÈáçÂ§çÈÉ®ÂàÜÔºÅÔºàDRY = Don‚Äôt repeat yourselfÔºâ ÂõûË∞ÉÂíåÂ§öÊÄÅÈÉΩÊòØ‰∏∫‰∫ÜËß£ËÄ¶ÔºåÂÆûÁé∞Êõ¥Â•ΩÁöÑÊ®°ÂùóÂåñÔºåÂçáÁ∫ß‰ª£Á†ÅÊó∂ÂÄôÊîπÂä®Êõ¥Â∞ëÁöÑ‰ª£Á†Å ÊàëÂèëÁé∞ÊàëÂèñÊ∂à Home„ÄÅcatagories„ÄÅabout„ÄÅtags Á≠âÂéüÁîüÁõÆÂΩï‰πãÂêéÔºåÊâìÂºÄÂçöÂÆ¢ÁΩëÁ´ôÁöÑÈ¶ñÈ°µÔºåÊúâ‰∏™ÁÇπ‰ºöÂÅúÁïôÂú®Á¨¨‰∏Ä‰∏™ÁõÆÂΩï‰∏äÔºå‰πüÂ∞±ÊòØÁõÆÂâçÁöÑ‚Äú‰ø°ÊÅØÁßëÂ≠¶‚ÄùËøô‰∏™ÁõÆÂΩï‰∏ä„ÄÇÊâÄ‰ª•ÊàëÊÉ≥ÊÅ¢Â§çÈ¶ñÈ°µËøô‰∏™ÁõÆÂΩïÔºà‰πãÂâçÂèñÊ∂àËøô‰∏™ÁõÆÂΩïÊòØÂõ†‰∏∫ÁÇπÂáªÊàëÁöÑÂçöÂÆ¢ÂêçÔºå‰πüÂ∞±ÊòØÊàëÁöÑÁΩëÂêçÔºöliuqinh2s ÁöÑÊó∂ÂÄôÔºå‰ºöË∑≥ËΩ¨Âà∞È¶ñÈ°µÔºå‰πüÂ∞±ÊòØÁΩëÁ´ôÊ†πÁõÆÂΩïÔºåÊàë‰∏çÊÉ≥Êêû‰∏§‰∏™ÊúâÁõ∏Âêå‰ΩúÁî®ÁöÑÊåâÈíÆÔºå‰ΩÜÂÖ∂ÂÆûÊàëÈîô‰∫ÜÔºåÁî®Êà∑Âπ∂‰∏çÁü•ÈÅìÈÇ£‰∏™ÂèØ‰ª•ÁÇπÂáªÔºåÂ∞±ÂÉèÂÆâÂçìÁöÑ‰æßÊªëÂá∫ËèúÂçï‰∏ÄÊ†∑ÔºåÁî®Êà∑Âπ∂‰∏çÁü•ÈÅì‰æßÊªëÂèØ‰ª•Âá∫ËèúÂçïÔºåÊâÄ‰ª•ÊâçÈúÄË¶Å‰∏Ä‰∏™ËèúÂçïÊåâÈíÆÔºâÔºåÊÅ¢Â§çËøô‰∏™È¶ñÈ°µÁõÆÂΩïÊòØËÆæËÆ°‰∏äÁöÑÂøÖË¶Å„ÄÇ ËÆæËÆ°ÊÄùÁª¥Â∞±ÊòØË¶ÅÈù¢ÂêëÁî®Êà∑Ôºå‰∏çË¶Å‰ª•‰∏∫Áî®Êà∑Áü•ÈÅìÈÇ£‰∫õÈöêÂê´ÁöÑÂäüËÉΩÁÇπ„ÄÇ Ëâ≤ÂΩ©ÁöÑÊ¶ÇÂøµÔºöËâ≤ÂΩ©ÊòØÁâ©‰ΩìÂèëÂá∫ÊàñÂèçÂ∞ÑÁöÑÂÖâÂú®ËßÜËßâÁ≥ªÁªü‰∏≠ÁöÑÂΩ¢ÊàêÁöÑÂèçÂ∫îÔºåËøôÁßçÂèçÂ∫î‰Ωø‰∫∫‰ª¨Âæó‰ª•‰ªéËßÜËßâ‰∏äÂå∫ÂàÜÁâ©‰ΩìÁöÑÂ§ßÂ∞è„ÄÅÂΩ¢Áä∂„ÄÅÁªìÊûÑÂíåÂ±ûÊÄßÁ≠âÂ§ñÈÉ®ÁâπÂæÅ„ÄÇ Ëâ≤ÂΩ©ÁöÑ‰∏âÁâπÊÄßÔºö‰∫ÆÂ∫¶ LuminanceÔºåËâ≤Ë∞É HueÔºåÈ•±ÂíåÂ∫¶ SaturationÔºàËâ≤Ë∞ÉÁöÑÊ∑±ÊµÖÁ®ãÂ∫¶ÔºâÂêÑÁßçÂçïËâ≤ÂÖâÈ•±ÂíåÂ∫¶ÊúÄÈ´òÔºåÂçïËâ≤ÂÖâ‰∏≠Êé∫ÂÖ•ÁôΩÂÖâË∂äÂ§öÔºåÈ•±ÂíåÂ∫¶Ë∂ä‰ΩéÔºåÁôΩÂÖâÂç†ÁªùÂ§ßÈÉ®ÂàÜÊó∂ÔºåÈ•±ÂíåÂ∫¶Êé•Ëøë‰∫éÈõ∂ÔºåÁôΩÂÖâÁöÑÈ•±ÂíåÂ∫¶Á≠â‰∫éÈõ∂„ÄÇÊ≥®ÊÑèÂå∫ÂàÜ‰∫ÆÂ∫¶ÂíåÈ•±ÂíåÂ∫¶„ÄÇ Ëâ≤ÂΩ©Ê®°ÂûãÔºöRGBÔºåCMYKÔºàÈ¢úÊñôÁöÑ‰∏âÂéüËâ≤ÔºöC ÈùíÔºåM ÂìÅÔºåY ÈªÑÔºå+K ÈªëÔºåÂ∫îÁî®‰∫éÂç∞Âà∑Â∑•‰∏öÔºâ„ÄÇRGB ÊòØÂä†Ëâ≤Ê®°ÂûãÔºåCMYK ÊòØÂáèËâ≤Ê®°Âûã„ÄÇHSVÔºàH ÊòØËâ≤Áõ∏Âç≥Ëâ≤Ë∞ÉÔºåS ÊòØÈ•±ÂíåÂ∫¶ÔºàÂèñÂÄº 0~100%ÔºâÔºåV ÊòØ‰∫ÆÂ∫¶ÂÄº ValueÔºàÂèñÂÄº 0~100%ÔºâÔºâ„ÄÇYUV„ÄÇ ÂíåÂàÜÊ≤ªÁÆóÊ≥ïÊØîËæÉÁ±ª‰ººÔºå‰ΩÜ‰∏çÂêåÁöÑÊòØÂàÜÊ≤ªÁÆóÊ≥ïÊääÂéüÈóÆÈ¢òÂàíÂΩí‰∏∫Âá†‰∏™Áõ∏‰∫íÁã¨Á´ãÁöÑÂ≠êÈóÆÈ¢òÔºå‰ªéËÄå‰∏Ä‰∏ÄËß£ÂÜ≥ÔºåËÄåÂä®ÊÄÅËßÑÂàíÂàôÊòØÈíàÂØπÂ≠êÈóÆÈ¢òÊúâÈáçÂè†ÁöÑÊÉÖÂÜµÁöÑ‰∏ÄÁßçËß£ÂÜ≥ÊñπÊ°à„ÄÇ]]></content>
  </entry>
</search>
