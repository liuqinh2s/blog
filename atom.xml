<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liuqinh2s&#39; blog</title>
  
  <subtitle>Do something cool!</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://liuqinh2s.github.io/"/>
  <updated>2025-08-12T08:35:05.488Z</updated>
  <id>https://liuqinh2s.github.io/</id>
  
  <author>
    <name>liuqinh2s</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue 总结</title>
    <link href="https://liuqinh2s.github.io/2025/08/11/Vue%E6%80%BB%E7%BB%93/"/>
    <id>https://liuqinh2s.github.io/2025/08/11/Vue总结/</id>
    <published>2025-08-11T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Vue 也是比较常用的前端框架，我这篇文章尝试总结一下 Vue 的常用知识点&lt;/p&gt;
&lt;h2 id=&quot;声明式编程-组件式开发&quot;&gt;&lt;a href=&quot;#声明式编程-组件式开发&quot; class=&quot;headerlink&quot; title=&quot;声明式编程 +
        
      
    
    </summary>
    
    
      <category term="Vue" scheme="https://liuqinh2s.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>浏览器跨窗口通信总结</title>
    <link href="https://liuqinh2s.github.io/2025/07/24/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E7%AA%97%E5%8F%A3%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BB%93/"/>
    <id>https://liuqinh2s.github.io/2025/07/24/浏览器跨窗口通信总结/</id>
    <published>2025-07-24T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;window-postMessage-（通用跨域方案）&quot;&gt;&lt;a href=&quot;#window-postMessage-（通用跨域方案）&quot; class=&quot;headerlink&quot; title=&quot;window.postMessage()（通用跨域方案）&quot;&gt;&lt;/a&gt;window.postMessage()（通用跨域方案）&lt;/h2&gt;&lt;p&gt;通过获得目标窗口引用（如 window.open()返回对象、iframe.contentWindow 或 window.opener），发送可序列化数据。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 发送方&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; targetWindow = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.open(&lt;span class=&quot;string&quot;&gt;&#39;child.html&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;targetWindow.postMessage(&lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;https://example.com&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 接收方&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;message&#39;&lt;/span&gt;, (event)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(event.origin === &lt;span class=&quot;string&quot;&gt;&#39;https://example.com&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(event.data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;优势：支持跨域通信，安全性高（需验证 event.origin）。&lt;br&gt;局限：需预先建立窗口引用关系，无法广播消息。&lt;/p&gt;
    
    </summary>
    
    
      <category term="浏览器" scheme="https://liuqinh2s.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>常用 react hooks 总结</title>
    <link href="https://liuqinh2s.github.io/2025/07/21/%E5%B8%B8%E7%94%A8%20react%20hooks%20%E6%80%BB%E7%BB%93/"/>
    <id>https://liuqinh2s.github.io/2025/07/21/常用 react hooks 总结/</id>
    <published>2025-07-21T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近又开始面试了，然后发现基础还是不牢固，工作中用到的技术确实是比较有限的，平常还要多夯实基础，查漏补缺，不然面试的时候很多东西答不上来。今天面试官问 useCallback，我发现平常不用它，加上好久没复习，我已经全然不记得了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="react" scheme="https://liuqinh2s.github.io/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>我的互联网生活</title>
    <link href="https://liuqinh2s.github.io/2025/06/23/%E6%88%91%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E7%94%9F%E6%B4%BB/"/>
    <id>https://liuqinh2s.github.io/2025/06/23/我的互联网生活/</id>
    <published>2025-06-23T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;经常打开手机漫无目的的刷着算法推荐的东西，有的时候觉得太过无聊粗俗。还是得认真审视一下自己的信息源。另外就是博客，尤其是个人博客的流量实在太低了，约等于 0，我打算还是把每天写的东西同步到流量大的平台。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="https://liuqinh2s.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>重新整理博客</title>
    <link href="https://liuqinh2s.github.io/2024/11/12/%E9%87%8D%E6%96%B0%E6%95%B4%E7%90%86%E5%8D%9A%E5%AE%A2/"/>
    <id>https://liuqinh2s.github.io/2024/11/12/重新整理博客/</id>
    <published>2024-11-12T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录信息最好的方式还是日志，就是按时间编排的意思。检索的最好方式是搜索，统计归纳最好的方式是标签（目录是树状，而标签是网状）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="方法论" scheme="https://liuqinh2s.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
      <category term="观点" scheme="https://liuqinh2s.github.io/tags/%E8%A7%82%E7%82%B9/"/>
    
      <category term="做笔记" scheme="https://liuqinh2s.github.io/tags/%E5%81%9A%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>囚徒健身实践</title>
    <link href="https://liuqinh2s.github.io/2024/11/11/%E5%9B%9A%E5%BE%92%E5%81%A5%E8%BA%AB%E5%AE%9E%E8%B7%B5/"/>
    <id>https://liuqinh2s.github.io/2024/11/11/囚徒健身实践/</id>
    <published>2024-11-11T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;长期不运动的危害：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;筋膜粘连，肌肉活动受限，关节活动受限&lt;/li&gt;
&lt;li&gt;拮抗肌肉失衡，肌肉老损和退化，各处酸痛&lt;/li&gt;
&lt;li&gt;没有体能和力量&lt;/li&gt;
&lt;li&gt;很容易疲惫，精神萎靡&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;分三个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;体能（有氧：跑步，跳绳）&lt;/li&gt;
&lt;li&gt;身体灵活度，柔韧性（拉伸）&lt;/li&gt;
&lt;li&gt;力量&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="健身" scheme="https://liuqinh2s.github.io/tags/%E5%81%A5%E8%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>我对读书的看法</title>
    <link href="https://liuqinh2s.github.io/2024/08/26/%E6%88%91%E5%AF%B9%E8%AF%BB%E4%B9%A6%E7%9A%84%E7%9C%8B%E6%B3%95/"/>
    <id>https://liuqinh2s.github.io/2024/08/26/我对读书的看法/</id>
    <published>2024-08-26T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一直以来确实有点读书读傻了，如果我有小孩，我希望他价值观不要出问题。学校的价值观太有问题了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.xiaohongshu.com/explore/6670e747000000000e032612&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;清华录取通知书和一个亿，小朋友如何选？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1Gf421z7Px/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;高考失败=人生完蛋？复读考上交大，进入社会才发现学历只是一张纸，985 根本配不上学生的优秀&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;钱，财富那不是肮脏的东西。视金钱如粪是错的&lt;/li&gt;
&lt;li&gt;仁义礼智信，在贵族身上，那是大加成。在穷人身上，那是大枷锁。底层人敢闯敢拼低道德厚脸皮是大加成。&lt;/li&gt;
&lt;li&gt;社会是人跟人的社会。人际关系，比什么都重要。玩到极致，就是政治&lt;/li&gt;
&lt;li&gt;利益决定脑袋。也叫屁股决定脑袋。别人说什么都是站在自己的利益（或者志向）立场上说话的。&lt;/li&gt;
&lt;li&gt;高考是留给最底层孩子的通道。有实力的别去卷，或者花样卷。奶茶妹妹（刘强东老婆章泽天）健美操上清华，顾森（matrix67）信息竞赛银牌上北大，哪怕孙割（孙宇晨）也是自主招生加了分（虽然孙割分数并不低，离北大分数线还差几分）。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="观点" scheme="https://liuqinh2s.github.io/tags/%E8%A7%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>投资总结</title>
    <link href="https://liuqinh2s.github.io/2024/08/14/%E6%8A%95%E8%B5%84%E6%80%BB%E7%BB%93/"/>
    <id>https://liuqinh2s.github.io/2024/08/14/投资总结/</id>
    <published>2024-08-14T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;投资要做的是两方面的工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;价格低&lt;/li&gt;
&lt;li&gt;质量好&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你的投资标的，具备以上两个特征，那就可以赚到钱。这两个都做好了会不会亏钱，也会，因为很多人会受市场波动的影响，认为自己判断错了，从而割肉离场。所以优秀的投资人不光要学习基本的市场经济知识，还要有调查精神，还要有自信。&lt;/p&gt;
    
    </summary>
    
    
      <category term="投资" scheme="https://liuqinh2s.github.io/tags/%E6%8A%95%E8%B5%84/"/>
    
  </entry>
  
  <entry>
    <title>免费数字资源</title>
    <link href="https://liuqinh2s.github.io/2024/08/13/free-resource/"/>
    <id>https://liuqinh2s.github.io/2024/08/13/free-resource/</id>
    <published>2024-08-13T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;互联网时代发展到现在，什么都要收费了，而且不光要收费，使用体验还越来越差。比如听歌，看视频，往往都要下载好几个 APP，在好几个平台充会员。有没有什么办法可以免费获得这些资源呢？有的，下面分享一下我的经验。&lt;/p&gt;
    
    </summary>
    
    
      <category term="信息差" scheme="https://liuqinh2s.github.io/tags/%E4%BF%A1%E6%81%AF%E5%B7%AE/"/>
    
  </entry>
  
  <entry>
    <title>作品版权证券化</title>
    <link href="https://liuqinh2s.github.io/2024/08/03/%E4%BD%9C%E5%93%81%E7%89%88%E6%9D%83%E8%AF%81%E5%88%B8%E5%8C%96/"/>
    <id>https://liuqinh2s.github.io/2024/08/03/作品版权证券化/</id>
    <published>2024-08-03T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简单描述&quot;&gt;&lt;a href=&quot;#简单描述&quot; class=&quot;headerlink&quot; title=&quot;简单描述&quot;&gt;&lt;/a&gt;简单描述&lt;/h1&gt;&lt;p&gt;痛点描述：某人为了听某首喜爱的歌或观看喜爱的视频，给音乐，视频平台充了月会员，一个月后却听不了歌，甚至有些歌即便下载了还不让听。如果换做一本纸质书，我买了，就是我的，甚至我还可以借给别人看，所有权明明白白，我不是想听平台那么多歌，我就是想听我爱听的而已，很少的几首。所以能不能别再用租赁的形式听歌了！而且平台那么多，我甚至要充好几个平台，才能凑齐这些歌。&lt;/p&gt;
&lt;p&gt;把作品的版权上市证券化，举例：周杰伦的一首新歌，估值 500 万，上市分成 500 万股，每一股 1 块钱，但凡持有一股，即可听歌（观看权），但没有所有权（拿这首歌传播盈利）。所有持有者共同享受这首歌的收益。比如某个视频引用拿这首歌做 BGM，电视剧拿这首歌做片头曲等等，产生的收益按比例分红给所有持有者。建立一个平台，可以上架交易，平台不靠网易云音乐等收会员听歌的模式，而是靠交易手续费（比如千分之二的手续费）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="思考" scheme="https://liuqinh2s.github.io/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>星露谷物语</title>
    <link href="https://liuqinh2s.github.io/2024/08/03/%E6%98%9F%E9%9C%B2%E8%B0%B7%E7%89%A9%E8%AF%AD/"/>
    <id>https://liuqinh2s.github.io/2024/08/03/星露谷物语/</id>
    <published>2024-08-03T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近两年深度体验了一把星露谷物语，一直玩的是安卓版盗版的星露谷，上周末没忍住，终于还是买了 steam 上的正版星露谷物语，也算是向作者致敬，支持了一下作者。&lt;/p&gt;
&lt;p&gt;单机游戏玩通关了基本上就不会再想玩了，星露谷也一样。但玩下来之后发现，其实星露谷物语是个彩蛋类游戏，彩蛋实在是太多了，等待玩家去挖掘。&lt;/p&gt;
&lt;p&gt;我是一边看攻略一边玩的，基本上只有第一年累一点，第一年财富自由之后，后面就是开始搞各种乱七八糟的探索了。我是用上古水果酿酒实现财富自由的，这也是这个游戏最推荐的赚钱流派。&lt;/p&gt;
&lt;p&gt;下面按照我自己的理解写一下这个游戏的攻略：&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏" scheme="https://liuqinh2s.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript如何实现节流和防抖函数</title>
    <link href="https://liuqinh2s.github.io/2023/12/05/JavaScript%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0/"/>
    <id>https://liuqinh2s.github.io/2023/12/05/JavaScript如何实现节流和防抖函数/</id>
    <published>2023-12-05T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;节流：throttle&lt;br&gt;防抖：debounce&lt;/p&gt;
&lt;p&gt;这两个是 JavaScript 开发中两个经常需要用到的工具函数，主要用于解决性能问题。节流的意思是针对某函数的连续调用，在一定时间内每隔一小段时间调用一次目标函数；防抖的意思是针对某函数的连续调用，只在一小段时间间隔后执行最后一次调用。&lt;/p&gt;
&lt;p&gt;常用的场景有：浏览器高频 DOM 事件的回调函数，比如 scroll，mousemove，resize 等&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript的var,let,const的区别</title>
    <link href="https://liuqinh2s.github.io/2023/11/23/JavaScript%E7%9A%84var,let,const%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://liuqinh2s.github.io/2023/11/23/JavaScript的var,let,const的区别/</id>
    <published>2023-11-23T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先&lt;code&gt;var&lt;/code&gt;,&lt;code&gt;let&lt;/code&gt;,&lt;code&gt;const&lt;/code&gt;都是用于定义变量，这是它们的共同点，那么它们的区别呢？&lt;/p&gt;
&lt;p&gt;其实还可以什么都不用，直接给变量赋值，这样的话，就是赋值给了全局对象（在浏览器上就是 window 对象）:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.a);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>模拟实现JavaScript的bind方法</title>
    <link href="https://liuqinh2s.github.io/2023/11/22/%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84bind%E6%96%B9%E6%B3%95/"/>
    <id>https://liuqinh2s.github.io/2023/11/22/模拟实现JavaScript的bind方法/</id>
    <published>2023-11-22T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.487Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;bind 函数我们经常用到，主要用于换绑 this。其返回值是一个方法。此外我们还可以把一些参数固定下来，相当于封装了一个简易函数。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>模拟实现JavaScript的apply和call方法</title>
    <link href="https://liuqinh2s.github.io/2023/11/21/%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84apply%E5%92%8Ccall%E6%96%B9%E6%B3%95/"/>
    <id>https://liuqinh2s.github.io/2023/11/21/模拟实现JavaScript的apply和call方法/</id>
    <published>2023-11-21T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.487Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;apply 和 call 的相同点是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;都由一个函数调用&lt;/li&gt;
&lt;li&gt;第一个参数都是原函数的执行环境 this&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不同点是：&lt;/p&gt;
&lt;p&gt;apply 的第二个参数接收原函数的所有参数，而 call 从第二个参数开始跟原函数一样是打散的&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;F(arg1, arg2, ...)&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;F.apply(thisArg, [arg1, arg2, ...]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;F.call(thisArg, arg1, arg2, ...);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要特别注意的是，如果是在非严格模式下，thisArg 如果为 null 或 undefined，就会被替换成全局对象（在浏览器中是 window）；如果为原始值，就会被替换成原始值的的自动包装对象。&lt;/p&gt;
&lt;p&gt;严格模式下，thisArg 传什么就是什么。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript对象的继承有哪几种</title>
    <link href="https://liuqinh2s.github.io/2023/11/20/JavaScript%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%BB%A7%E6%89%BF%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D/"/>
    <id>https://liuqinh2s.github.io/2023/11/20/JavaScript对象的继承有哪几种/</id>
    <published>2023-11-20T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.487Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;javascript 高级程序设计中有写，对象的继承总共有六种:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原型链继承，子原型是父原型的一个实例&lt;/li&gt;
&lt;li&gt;借用构造函数继承，子构造函数调用父构造函数&lt;/li&gt;
&lt;li&gt;组合式继承(组合 1 和 2)&lt;/li&gt;
&lt;li&gt;原型式继承&lt;/li&gt;
&lt;li&gt;寄生式继承&lt;/li&gt;
&lt;li&gt;寄生式组合继承（组合 3 和 5）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://liuqinh2s.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>模拟实现JavaScript的new操作符</title>
    <link href="https://liuqinh2s.github.io/2023/11/20/%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84new%E6%93%8D%E4%BD%9C%E7%AC%A6/"/>
    <id>https://liuqinh2s.github.io/2023/11/20/模拟实现JavaScript的new操作符/</id>
    <published>2023-11-20T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.487Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript 的 new 操作符，操作对象是一个函数（箭头函数，async 函数除外），一般来说此函数我们不自己写 return，此时返回的是个默认的对象 this。&lt;/p&gt;
&lt;p&gt;如果自己写了返回，那么分两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;返回的是对象或者方法，就返回我们自己写的返回内容&lt;/li&gt;
&lt;li&gt;否则返回默认对象 this&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>策划一款游戏</title>
    <link href="https://liuqinh2s.github.io/2023/11/06/%E7%AD%96%E5%88%92%E4%B8%80%E6%AC%BE%E6%B8%B8%E6%88%8F/"/>
    <id>https://liuqinh2s.github.io/2023/11/06/策划一款游戏/</id>
    <published>2023-11-06T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.487Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近玩了
        
      
    
    </summary>
    
    
      <category term="游戏策划" scheme="https://liuqinh2s.github.io/tags/%E6%B8%B8%E6%88%8F%E7%AD%96%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>实现一个高效的deepClone</title>
    <link href="https://liuqinh2s.github.io/2023/11/01/%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84deepClone/"/>
    <id>https://liuqinh2s.github.io/2023/11/01/实现JavaScript的deepClone/</id>
    <published>2023-11-01T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.487Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;先来实现一个最简版的-deepClone&quot;&gt;&lt;a href=&quot;#先来实现一个最简版的-deepClone&quot; class=&quot;headerlink&quot; title=&quot;先来实现一个最简版的 deepClone&quot;&gt;&lt;/a&gt;先来实现一个最简版的 deepClone&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deepClone&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; obj == &lt;span class=&quot;string&quot;&gt;&quot;string&quot;&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; obj == &lt;span class=&quot;string&quot;&gt;&quot;boolean&quot;&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; obj == &lt;span class=&quot;string&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.isArray(obj)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; temp = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; obj.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      temp[i] = deepClone(obj[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; obj == &lt;span class=&quot;string&quot;&gt;&quot;object&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; temp = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(obj)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      temp[k] = deepClone(obj[k]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;迭代版本的-deepClone&quot;&gt;&lt;a href=&quot;#迭代版本的-deepClone&quot; class=&quot;headerlink&quot; title=&quot;迭代版本的 deepClone&quot;&gt;&lt;/a&gt;迭代版本的 deepClone&lt;/h2&gt;&lt;p&gt;最近 EDA 项目在解决一些性能上的问题，首当其冲的就是 deepClone，各种地方都在用，且十分卡性能。如何解决这个问题呢？&lt;/p&gt;
&lt;p&gt;由于我们项目中的 deepClone 是一个递归版本的 deepClone，所以应该可以通过把它改成迭代版的 deepClone 来提速。&lt;/p&gt;
&lt;p&gt;用栈来实现迭代。函数调用栈本身也是栈，但开销肯定比自己写的栈要大一些。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://liuqinh2s.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>一种速算</title>
    <link href="https://liuqinh2s.github.io/2023/10/30/%E4%B8%80%E7%A7%8D%E9%80%9F%E7%AE%97/"/>
    <id>https://liuqinh2s.github.io/2023/10/30/一种速算/</id>
    <published>2023-10-30T00:00:00.000Z</published>
    <updated>2025-08-12T08:35:05.487Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;以 5 结尾的数的平方，都有一个很好记的速算方式，就是前面的数乘以比它大一的数然后再拼接上 25，比如 $25\times 25$，就是 $2\times 3$ 等于 6，再拼接上 25，等于 625。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学" scheme="https://liuqinh2s.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
</feed>
