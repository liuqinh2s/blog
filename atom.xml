<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liuqinh2s&#39; blog</title>
  
  <subtitle>Do something cool!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liuqinh2s.xyz/"/>
  <updated>2024-03-23T05:51:36.125Z</updated>
  <id>https://liuqinh2s.xyz/</id>
  
  <author>
    <name>liuqinh2s</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript如何实现节流和防抖函数</title>
    <link href="https://liuqinh2s.xyz/2023/12/05/JavaScript%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0/"/>
    <id>https://liuqinh2s.xyz/2023/12/05/JavaScript如何实现节流和防抖函数/</id>
    <published>2023-12-05T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;节流：throttle&lt;br&gt;防抖：debounce&lt;/p&gt;
&lt;p&gt;这两个是 JavaScript 开发中两个经常需要用到的工具函数，主要用于解决性能问题。节流的意思是针对某函数的连续调用，在一定时间内每隔一小段时间调用一次目标函数；防抖的意思是针对某函数的连续调用，只在一小段时间间隔后执行最后一次调用。&lt;/p&gt;
&lt;p&gt;常用的场景有：浏览器高频 DOM 事件的回调函数，比如 scroll，mousemove，resize 等&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.xyz/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript的var,let,const的区别</title>
    <link href="https://liuqinh2s.xyz/2023/11/23/JavaScript%E7%9A%84var,let,const%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://liuqinh2s.xyz/2023/11/23/JavaScript的var,let,const的区别/</id>
    <published>2023-11-23T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先&lt;code&gt;var&lt;/code&gt;,&lt;code&gt;let&lt;/code&gt;,&lt;code&gt;const&lt;/code&gt;都是用于定义变量，这是它们的共同点，那么它们的区别呢？&lt;/p&gt;
&lt;p&gt;其实还可以什么都不用，直接给变量赋值，这样的话，就是赋值给了全局对象（在浏览器上就是 window 对象）:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.a);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.xyz/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>模拟实现JavaScript的bind方法</title>
    <link href="https://liuqinh2s.xyz/2023/11/22/%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84bind%E6%96%B9%E6%B3%95/"/>
    <id>https://liuqinh2s.xyz/2023/11/22/模拟实现JavaScript的bind方法/</id>
    <published>2023-11-22T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;bind 函数我们经常用到，主要用于换绑 this。其返回值是一个方法。此外我们还可以把一些参数固定下来，相当于封装了一个简易函数。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.xyz/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>模拟实现JavaScript的apply和call方法</title>
    <link href="https://liuqinh2s.xyz/2023/11/21/%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84apply%E5%92%8Ccall%E6%96%B9%E6%B3%95/"/>
    <id>https://liuqinh2s.xyz/2023/11/21/模拟实现JavaScript的apply和call方法/</id>
    <published>2023-11-21T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;apply 和 call 的相同点是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;都由一个函数调用&lt;/li&gt;
&lt;li&gt;第一个参数都是原函数的执行环境 this&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不同点是：&lt;/p&gt;
&lt;p&gt;apply 的第二个参数接收原函数的所有参数，而 call 从第二个参数开始跟原函数一样是打散的&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;F(arg1, arg2, ...)&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;F.apply(thisArg, [arg1, arg2, ...]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;F.call(thisArg, arg1, arg2, ...);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要特别注意的是，如果是在非严格模式下，thisArg 如果为 null 或 undefined，就会被替换成全局对象（在浏览器中是 window）；如果为原始值，就会被替换成原始值的的自动包装对象。&lt;/p&gt;
&lt;p&gt;严格模式下，thisArg 传什么就是什么。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.xyz/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript对象的继承有哪几种</title>
    <link href="https://liuqinh2s.xyz/2023/11/20/JavaScript%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%BB%A7%E6%89%BF%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D/"/>
    <id>https://liuqinh2s.xyz/2023/11/20/JavaScript对象的继承有哪几种/</id>
    <published>2023-11-20T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;javascript 高级程序设计中有写，对象的继承总共有六种:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原型链继承，子原型是父原型的一个实例&lt;/li&gt;
&lt;li&gt;借用构造函数继承，子构造函数调用父构造函数&lt;/li&gt;
&lt;li&gt;组合式继承(组合 1 和 2)&lt;/li&gt;
&lt;li&gt;原型式继承&lt;/li&gt;
&lt;li&gt;寄生式继承&lt;/li&gt;
&lt;li&gt;寄生式组合继承（组合 3 和 5）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://liuqinh2s.xyz/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>模拟实现JavaScript的new操作符</title>
    <link href="https://liuqinh2s.xyz/2023/11/20/%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84new%E6%93%8D%E4%BD%9C%E7%AC%A6/"/>
    <id>https://liuqinh2s.xyz/2023/11/20/模拟实现JavaScript的new操作符/</id>
    <published>2023-11-20T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript 的 new 操作符，操作对象是一个函数（箭头函数，async 函数除外），一般来说此函数我们不自己写 return，此时返回的是个默认的对象 this。&lt;/p&gt;
&lt;p&gt;如果自己写了返回，那么分两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;返回的是对象或者方法，就返回我们自己写的返回内容&lt;/li&gt;
&lt;li&gt;否则返回默认对象 this&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.xyz/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>策划一款游戏</title>
    <link href="https://liuqinh2s.xyz/2023/11/06/%E7%AD%96%E5%88%92%E4%B8%80%E6%AC%BE%E6%B8%B8%E6%88%8F/"/>
    <id>https://liuqinh2s.xyz/2023/11/06/策划一款游戏/</id>
    <published>2023-11-06T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近玩了
        
      
    
    </summary>
    
    
      <category term="游戏策划" scheme="https://liuqinh2s.xyz/tags/%E6%B8%B8%E6%88%8F%E7%AD%96%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>实现一个高效的deepClone</title>
    <link href="https://liuqinh2s.xyz/2023/11/01/%E5%AE%9E%E7%8E%B0JavaScript%E7%9A%84deepClone/"/>
    <id>https://liuqinh2s.xyz/2023/11/01/实现JavaScript的deepClone/</id>
    <published>2023-11-01T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;先来实现一个最简版的-deepClone&quot;&gt;&lt;a href=&quot;#先来实现一个最简版的-deepClone&quot; class=&quot;headerlink&quot; title=&quot;先来实现一个最简版的 deepClone&quot;&gt;&lt;/a&gt;先来实现一个最简版的 deepClone&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deepClone&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; obj == &lt;span class=&quot;string&quot;&gt;&quot;string&quot;&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; obj == &lt;span class=&quot;string&quot;&gt;&quot;boolean&quot;&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; obj == &lt;span class=&quot;string&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.isArray(obj)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; temp = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; obj.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      temp[i] = deepClone(obj[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; obj == &lt;span class=&quot;string&quot;&gt;&quot;object&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; temp = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(obj)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      temp[k] = deepClone(obj[k]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;迭代版本的-deepClone&quot;&gt;&lt;a href=&quot;#迭代版本的-deepClone&quot; class=&quot;headerlink&quot; title=&quot;迭代版本的 deepClone&quot;&gt;&lt;/a&gt;迭代版本的 deepClone&lt;/h2&gt;&lt;p&gt;最近 EDA 项目在解决一些性能上的问题，首当其冲的就是 deepClone，各种地方都在用，且十分卡性能。如何解决这个问题呢？&lt;/p&gt;
&lt;p&gt;由于我们项目中的 deepClone 是一个递归版本的 deepClone，所以应该可以通过把它改成迭代版的 deepClone 来提速。&lt;/p&gt;
&lt;p&gt;用栈来实现迭代。函数调用栈本身也是栈，但开销肯定比自己写的栈要大一些。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://liuqinh2s.xyz/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>一种速算</title>
    <link href="https://liuqinh2s.xyz/2023/10/30/%E4%B8%80%E7%A7%8D%E9%80%9F%E7%AE%97/"/>
    <id>https://liuqinh2s.xyz/2023/10/30/一种速算/</id>
    <published>2023-10-30T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;以 5 结尾的数的平方，都有一个很好记的速算方式，就是前面的数乘以比它大一的数然后再拼接上 25，比如 $25\times 25$，就是 $2\times 3$ 等于 6，再拼接上 25，等于 625。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学" scheme="https://liuqinh2s.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>重庆旅游攻略</title>
    <link href="https://liuqinh2s.xyz/2023/10/12/%E9%87%8D%E5%BA%86%E6%97%85%E6%B8%B8%E6%94%BB%E7%95%A5/"/>
    <id>https://liuqinh2s.xyz/2023/10/12/重庆旅游攻略/</id>
    <published>2023-10-12T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;景点推荐游玩时间：&lt;/p&gt;
&lt;p&gt;3 月-5 月以及 9 月~11 月（天气凉爽宜人）&lt;/p&gt;
&lt;p&gt;推荐路线及景点：&lt;/p&gt;
&lt;p&gt;Day1：解放碑—长江索道-洪崖洞&lt;/p&gt;
&lt;p&gt;Day2：磁器口—马房湾 66 号江湖菜-四川美术学院—南滨路&lt;/p&gt;
&lt;p&gt;Day3：李子坝—鹅岭二厂—南山一棵树&lt;/p&gt;
    
    </summary>
    
    
      <category term="攻略" scheme="https://liuqinh2s.xyz/tags/%E6%94%BB%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>手写优先队列</title>
    <link href="https://liuqinh2s.xyz/2023/10/09/%E6%89%8B%E5%86%99%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    <id>https://liuqinh2s.xyz/2023/10/09/手写优先队列/</id>
    <published>2023-10-09T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;优先队列一般是用堆来实现的，查询复杂度是 O(1)，插入和删除的复杂度是 O(logN)。堆结构就是一个完全二叉树，完全二叉树可以用数组实现。&lt;/p&gt;
&lt;p&gt;测试场景：&lt;a href=&quot;https://leetcode.cn/problems/kth-largest-element-in-an-array/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;215. 数组中的第 K 个最大元素&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://liuqinh2s.xyz/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Promise详解</title>
    <link href="https://liuqinh2s.xyz/2023/07/19/Promise%E8%AF%A6%E8%A7%A3/"/>
    <id>https://liuqinh2s.xyz/2023/07/19/Promise详解/</id>
    <published>2023-07-19T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;官方文档&quot;&gt;&lt;a href=&quot;#官方文档&quot; class=&quot;headerlink&quot; title=&quot;官方文档&quot;&gt;&lt;/a&gt;官方文档&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://promisesaplus.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Promise A+ 规范&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;async 函数&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://liuqinh2s.xyz/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>linux使用手册</title>
    <link href="https://liuqinh2s.xyz/2023/06/07/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://liuqinh2s.xyz/2023/06/07/linux使用手册/</id>
    <published>2023-06-07T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近买了一台服务器，太多 linux 命令要上网查询了，已经不适合记在札记里面（札记里面一般是记录比较杂的东西，篇幅尚不能形成文章），所以专门开了一篇文章来讲我在使用 linux 服务器遇到的问题，以及解决办法。&lt;/p&gt;
&lt;p&gt;首先要谈的是服务器安全问题&lt;/p&gt;
&lt;p&gt;以前搭 wordpress 博客的时候，被盗过两次，跟同事讨论了之后，发现可能是因为我使用了 root 账号远程登录，要论安全性的话，最好的方式是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;禁止 root 账号远程登录（那么别人想要登录，就只能猜你的账号名+密码，如果你开放了 root 登录，别人就只需要猜 root 密码）&lt;/li&gt;
&lt;li&gt;把 ssh 端口改为非 22 端口，那黑客想要破解，就需要猜端口&lt;/li&gt;
&lt;li&gt;普通账号不给 root 权限，这样即便普通账号被盗，情况也不算严重&lt;/li&gt;
&lt;li&gt;设置一个强的 root 密码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样一套组合拳打下来，黑客想要获取你服务器的最高权限，首先要知道你的 ssh 端口，然后要知道一对普通账号密码，最后要知道 root 的密码，才能最终获得最高权限。相比于只靠 root 密码的强度，安全了许多许多。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;发现一个问题是 FinalShell 不能直接编辑并保存文件了，应该是权限的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="服务器运维" scheme="https://liuqinh2s.xyz/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>AwesomeWeb项目</title>
    <link href="https://liuqinh2s.xyz/2023/05/22/AwesomeWeb%E9%A1%B9%E7%9B%AE/"/>
    <id>https://liuqinh2s.xyz/2023/05/22/AwesomeWeb项目/</id>
    <published>2023-05-22T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;github 仓库：&lt;a href=&quot;https://github.com/liuqinh2s/AwesomeWeb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;liuqinh2s/AwesomeWeb&lt;/a&gt;&lt;br&gt;项目展示：&lt;a href=&quot;https://replit.com/@liuqinh2s/AwesomeWeb?v=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;replit - AwesomeWeb&lt;/a&gt;&lt;br&gt;项目上线地址：&lt;a href=&quot;https://jujuxi.xyz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jujuxi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近想像洛雪音乐一样做一个免费的视频 app，主要学习对象是努努视频，说干就干，先看看努努用了哪些第三方 js 库，打开努努视频网站：nunuyy5.org，然后打开开发者工具，可以看到用了这些：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/video-dev/hls.js/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hls.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jquery.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jquery.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Novage/p2p-media-loader/tree/master&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;p2p-media-loader-core.min.js 和 p2p-media-loader-hlsjs.min.js&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="项目" scheme="https://liuqinh2s.xyz/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="前端" scheme="https://liuqinh2s.xyz/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>水贝买黄金攻略</title>
    <link href="https://liuqinh2s.xyz/2023/04/07/%E6%B0%B4%E8%B4%9D%E4%B9%B0%E9%BB%84%E9%87%91%E6%94%BB%E7%95%A5/"/>
    <id>https://liuqinh2s.xyz/2023/04/07/水贝买黄金攻略/</id>
    <published>2023-04-07T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;位置：坐地铁从田贝站出来，不要从水贝站出来，田贝站 F 口出来就是水贝万山&lt;/li&gt;
&lt;li&gt;店：零售店和批发展厅，人气最旺金展负一楼，宝刀不老水贝万山，价格最便宜丽铂飞（也叫新一佳）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="生活" scheme="https://liuqinh2s.xyz/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="理财" scheme="https://liuqinh2s.xyz/tags/%E7%90%86%E8%B4%A2/"/>
    
      <category term="攻略" scheme="https://liuqinh2s.xyz/tags/%E6%94%BB%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>Canvas 入门笔记</title>
    <link href="https://liuqinh2s.xyz/2023/02/18/Canvas%20%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://liuqinh2s.xyz/2023/02/18/Canvas 入门笔记/</id>
    <published>2023-02-18T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;默认大小：如果不设置宽高，canvas 的默认宽高是：&lt;code&gt;width: 300px; height: 150px;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;替换内容：与&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;元素不同，&lt;strong&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;元素需要结束标签&lt;code&gt;&amp;lt;/canvas&amp;gt;&lt;/code&gt;&lt;/strong&gt;，如果结束标签不存在，则文档的其余部分会被认为是替代内容，将不会显示出来。&lt;blockquote&gt;
&lt;p&gt;什么是替换内容，就是在某些东西加载不出来的时候（原因可能多种多样，比如浏览器太老不支持这个东西，比如网络不好加载不出），那么就给这些东西替换成其他内容，比如&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;标签就有 alt 属性用于在图片加载不出的时候显示文本。&lt;code&gt;canvas&lt;/code&gt;标签也有相应的措施，用法是：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stockGraph&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;150&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;150&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  current stock price: $3.15 +0.15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;clock&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;150&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;150&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;images/clock.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;150&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;150&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;渲染上下文（The rendering context）：常用的渲染上下文有 2D，3D。2d 写法如下:&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; canvas = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canvas.getContext) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; context = canvas.getContext(&lt;span class=&quot;string&quot;&gt;&quot;2d&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// drawing code here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// canvas-unsupported code here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Canvas" scheme="https://liuqinh2s.xyz/tags/Canvas/"/>
    
      <category term="学习笔记" scheme="https://liuqinh2s.xyz/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数独游戏制作过程记录</title>
    <link href="https://liuqinh2s.xyz/2023/02/10/%E6%95%B0%E7%8B%AC%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    <id>https://liuqinh2s.xyz/2023/02/10/数独游戏制作过程记录/</id>
    <published>2023-02-10T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;我打算自己做一个数独游戏，主要分为两步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;生成一个数独&lt;/li&gt;
&lt;li&gt;验证玩家填入的数字是否正确&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;生成一个数独可以有很省事的办法，就是直接从数独库中随机选一个（甚至可以直接把空白都给你挖好）。也可以用暴力方法（回溯法），一行一行去填，进行不下去就回溯到上一步。&lt;/p&gt;
&lt;p&gt;生成数独最高效的算法是：&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%88%9E%E8%B9%88%E9%93%BE&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;舞蹈链&lt;/strong&gt;&lt;/a&gt;，实际上舞蹈链是一种数据结构，是为了&lt;a href=&quot;https://zh.wikipedia.org/wiki/X%E7%AE%97%E6%B3%95&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;X 算法&lt;/strong&gt;&lt;/a&gt;而产生的，而 X 算法是用来解决一类问题：&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E7%B2%BE%E7%A1%AE%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;精确覆盖问题&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;插个题外话，我朋友说，东野圭吾的小说&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E5%AB%8C%E7%96%91%E7%8A%AFX%E7%9A%84%E7%8D%BB%E8%BA%AB&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《嫌疑犯 X 的献身》&lt;/a&gt;，的凶手就在研究这个问题，有兴趣可以顺带看看，这小说挺有名的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;精确覆盖问题是一个 NP 完全问题，NP 问题的概念我差不多忘光了，得重新看看&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="项目" scheme="https://liuqinh2s.xyz/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>border-radius详解</title>
    <link href="https://liuqinh2s.xyz/2023/02/09/border-radius%E8%AF%A6%E8%A7%A3/"/>
    <id>https://liuqinh2s.xyz/2023/02/09/border-radius详解/</id>
    <published>2023-02-09T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;看《CSS 解密》的时候遇到 border-radius 不是很懂，有个例子如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;border-radius: 100% 100% 0 0 / 100% 0 0 0; /* 左上角椭圆半径是半宽高 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;border-radius: 100% 0 0 0 / 100% 0 0 0; /* 左上角椭圆半径是全宽高 */&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;差别挺大的对吧，原因就是角与角之间出现了挤兑（或者说重叠），如果遇到了重叠怎么办呢？怎么表现呢？原理是什么？&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://liuqinh2s.xyz/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>AI时代来临，有哪些机遇我可以抓住？</title>
    <link href="https://liuqinh2s.xyz/2023/02/06/AI%E6%97%B6%E4%BB%A3%E6%9D%A5%E4%B8%B4%EF%BC%8C%E6%9C%89%E5%93%AA%E4%BA%9B%E6%9C%BA%E9%81%87%E6%88%91%E5%8F%AF%E4%BB%A5%E6%8A%93%E4%BD%8F%EF%BC%9F/"/>
    <id>https://liuqinh2s.xyz/2023/02/06/AI时代来临，有哪些机遇我可以抓住？/</id>
    <published>2023-02-06T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先什么是 AI 时代，我所认为的 AI 是可以让计算机产生的智力，像类似于人一样工作，做以前简单的逻辑无法完成的事情，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;识别图片里的文字&lt;/li&gt;
&lt;li&gt;识别图片里有没有猫&lt;/li&gt;
&lt;li&gt;自动驾驶，识别路况&lt;/li&gt;
&lt;li&gt;下棋，国际象棋，围棋，击败人类冠军&lt;/li&gt;
&lt;li&gt;AI 换脸，将图片和视频中的人脸换成另一个人的&lt;/li&gt;
&lt;li&gt;根据关键词，作画，写小说&lt;/li&gt;
&lt;li&gt;上网搜集资料整合出摘要&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上都是 AI 目前已经能完成的事情，传统的代码是无法完成以上这种复杂的工作的。我把传统代码无法完成，又有点类似人才能办到的混沌且复杂的事情（甚至带有一些创造力）称作 AI。AI 不是指像人一样能通用的处理任何智力问题，而是能一个一个攻克具体的智力问题，AI 能做到的事情已经越来越多。其产生的生产力是巨大的，并不比互联网时代低。&lt;/p&gt;
    
    </summary>
    
    
      <category term="总结" scheme="https://liuqinh2s.xyz/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>css居中的最佳实践</title>
    <link href="https://liuqinh2s.xyz/2022/12/13/css%E5%B1%85%E4%B8%AD%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <id>https://liuqinh2s.xyz/2022/12/13/css居中的最佳实践/</id>
    <published>2022-12-13T00:00:00.000Z</published>
    <updated>2024-03-23T05:51:36.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;居中是 css 中很重要的一个基础知识，主要分三个方向讨论：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;水平居中 or 垂直居中&lt;/li&gt;
&lt;li&gt;文本居中 or 容器居中（块级元素）&lt;/li&gt;
&lt;li&gt;设置父容器 or 设置自身 or 都需要设置&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://liuqinh2s.xyz/tags/css/"/>
    
      <category term="前端" scheme="https://liuqinh2s.xyz/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
